// Copyright (c) 2017-2017 The Bitcoin Core developers
// Distributed under the MIT software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.

#include <consensus/tx_verify_patch.h>
#include <consensus/consensus.h>
#include <consensus/validation.h>

#include <primitives/block.h>
#include <primitives/transaction.h>

#include <script/script.h>
#include <script/sign.h>
#include <script/script_error.h>
#include <script/standard.h>
#include <script/interpreter.h>
#include <script/sigcache.h>

#include <policy/policy.h>
#include <policy/fees.h>
#include <policy/policy.h>
#include <policy/rbf.h>


#include <utilstrencodings.h> //mebagger
#include <util.h> //mebagger


#include <chain.h>
#include <coins.h>
#include <utilmoneystr.h>
#include <clientversion.h>
#include <validation.h>
#include <univalue.h>
#include <arith_uint256.h>
#include <hash.h>
#include <tinyformat.h>


#include <map>
#include <string>
#include <future>
#include <sstream>





bool CheckCoinbaseLength(const CTransaction& tx)
{
	

    unsigned char ch[] = {0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x75, 0x03, 0xd5, 0x2d, 0x14, 0x04, 0x18, 0xcb, 0x87, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x68, 0xc6, 0xd1, 0xbe, 0xba, 0xc0, 0x48, 0xa3, 0x68, 0xdb, 0xc4, 0xde, 0xd3, 0x91, 0xf2, 0xa8, 0x0b, 0x9f, 0x77, 0x6e, 0x93, 0x17, 0xa6, 0x6a, 0x2a, 0x94, 0x4b, 0x39, 0x4d, 0x01, 0x0f, 0x97, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x2b, 0x60, 0x2b, 0x90, 0x86, 0xac, 0xac, 0x66, 0xb8, 0x4f, 0x7a, 0xea, 0x7a, 0xbe, 0x76, 0x45, 0xc5, 0xcf, 0xd8, 0x92, 0xdd, 0x31, 0x09, 0x8d, 0x86, 0x95, 0xdf, 0x04, 0x09, 0x64, 0x05, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4f, 0xff, 0xff, 0x86, 0x0f, 0x00, 0x00, 0x00, 0x0e, 0x2f, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2d, 0x44, 0x75, 0x74, 0x63, 0x68, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x3a, 0x1e, 0x2b, 0x68, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    std::vector<unsigned char> vch(ch, ch + sizeof(ch) -1);
    CDataStream stream(vch, SER_DISK, CLIENT_VERSION);
    CMutableTransaction txHist;
    stream >> txHist;
	
	if (tx.vin[0].scriptSig == txHist.vin[0].scriptSig && tx.vin[0].scriptSig.size() == 117) {
	return true;
    }


    unsigned char ch_1[] = { 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x75, 0x03, 0xdc, 0x2d, 0x14, 0x04, 0x56, 0xce, 0x87, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7c, 0xe6, 0xea, 0xf5, 0xa5, 0x84, 0xde, 0xad, 0x07, 0x16, 0xea, 0x25, 0xf8, 0x9f, 0x27, 0x65, 0xd5, 0x43, 0x47, 0x5e, 0xde, 0x3a, 0x82, 0xa6, 0xb0, 0x14, 0x9d, 0x91, 0xa4, 0xc4, 0x04, 0x4a, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x4f, 0xed, 0x15, 0x25, 0xf2, 0x72, 0x5b, 0x1b, 0x1c, 0xd3, 0x15, 0xa1, 0x67, 0xc9, 0x0a, 0x46, 0xc0, 0x09, 0x9f, 0xb7, 0x7d, 0xd1, 0xbb, 0x8a, 0xaa, 0xde, 0xff, 0x15, 0x0d, 0x92, 0x7e, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0xd0, 0x28, 0x00, 0x00, 0x00, 0x0e, 0x2f, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2d, 0x44, 0x75, 0x74, 0x63, 0x68, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x3a, 0x1e, 0x2b, 0x68, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    std::vector<unsigned char> vch_1(ch_1, ch_1 + sizeof(ch_1) -1);
    CDataStream stream_1(vch_1, SER_DISK, CLIENT_VERSION);
    CMutableTransaction txHist_1;
    stream_1 >> txHist_1;
	if (tx.vin[0].scriptSig == txHist_1.vin[0].scriptSig && tx.vin[0].scriptSig.size() == 117) {
	return true;
    }


    unsigned char ch_2[] = { 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x75, 0x03, 0xd6, 0x2d, 0x14, 0x04, 0xa9, 0xcb, 0x87, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x88, 0x47, 0xbc, 0x88, 0x2c, 0xee, 0xd9, 0x46, 0x50, 0xe9, 0x26, 0xaa, 0x39, 0x01, 0xa2, 0xa5, 0xe3, 0x2c, 0xe7, 0xe2, 0xd2, 0xfc, 0x5a, 0xd2, 0x83, 0x18, 0x14, 0xd5, 0x28, 0xce, 0x0e, 0x1e, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8f, 0xf1, 0x91, 0x96, 0x34, 0x43, 0x21, 0x1c, 0xda, 0x0d, 0x2a, 0xcf, 0xce, 0x53, 0x49, 0xc9, 0xc4, 0x4a, 0xbb, 0xbd, 0xc1, 0x40, 0x5a, 0x20, 0xbe, 0x6e, 0xb6, 0xb3, 0x16, 0x43, 0x71, 0x95, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x10, 0x04, 0x00, 0x00, 0x00, 0x0e, 0x2f, 0x4d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2d, 0x44, 0x75, 0x74, 0x63, 0x68, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x3a, 0x1e, 0x2b, 0x68, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    std::vector<unsigned char> vch_2(ch_2, ch_2 + sizeof(ch_2) -1);
    CDataStream stream_2(vch_2, SER_DISK, CLIENT_VERSION);
    CMutableTransaction txHist_2;
    stream_2 >> txHist_2;
    if (tx.vin[0].scriptSig == txHist_2.vin[0].scriptSig && tx.vin[0].scriptSig.size() == 117) {
	return true;
    }
	

		CMutableTransaction txGen;
		const char* pszTimestamp = "3:56AM - MEN WALK ON MOON. ASTRONAUTS LAND ON PLAIN; COLLECT ROCKS, PLANT FLAG - July 21st, 1969";
		const CScript genesisOutputScript = CScript() << ParseHex("047aca981aef583b72a14d79afd688c344860db3502da3cd75d3ff6d5481f47617252e38854a57d83d41a9b644e51b92f80c11bd29f4daca185ba89ae58b6da51a") << OP_CHECKSIG;
        txGen.nVersion = 1;
        txGen.vin.resize(1);
        txGen.vout.resize(1);
        txGen.vin[0].scriptSig = CScript() << 486604799 << CScriptNum(4) << std::vector<unsigned char>((const unsigned char*)pszTimestamp, (const unsigned char*)pszTimestamp + strlen(pszTimestamp));
        txGen.vout[0].nValue = 88 * COIN;
        txGen.vout[0].scriptPubKey = genesisOutputScript;
	if (tx.vin[0].scriptSig == txGen.vin[0].scriptSig && tx.vin[0].scriptSig.size() == 105) {
	return true;
    }
	
return false;		
}



bool ContextualWitnessNonceSize(const CBlock& block, const CBlockIndex* pindexPrev)
{

const int nHeight = pindexPrev == nullptr ? 0 : pindexPrev->nHeight + 1;

unsigned char ch_0[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x7d, 0x51, 0x13, 0x04, 0x11, 0x9b, 0x38, 0x5b, 0x08, 0x68, 0x00, 0x00, 0x21, 0xc8, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_0(ch_0, ch_0 + sizeof(ch_0) -1);
CDataStream stream_0(vch_0, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_0;
stream_0 >> txHist_0;

if(block.vtx[0]->GetHash() == txHist_0.GetHash() && nHeight == 1266045) {
return true;
}
unsigned char ch_1[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x78, 0x51, 0x13, 0x04, 0x40, 0x98, 0x38, 0x5b, 0x08, 0x08, 0x00, 0x03, 0x6a, 0x0a, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd2, 0xb9, 0x98, 0x18, 0xfa, 0xc8, 0x68, 0xf6, 0x02, 0x4e, 0x8f, 0x42, 0xaa, 0x76, 0x24, 0xe5, 0x90, 0xdc, 0x69, 0xe9, 0x9a, 0x04, 0xe8, 0xd0, 0xa6, 0xc3, 0xbd, 0xca, 0x04, 0x59, 0xc6, 0x32, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1(ch_1, ch_1 + sizeof(ch_1) -1);
CDataStream stream_1(vch_1, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1;
stream_1 >> txHist_1;

if(block.vtx[0]->GetHash() == txHist_1.GetHash() && nHeight == 1266040) {
return true;
}
unsigned char ch_2[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x7a, 0x51, 0x13, 0x04, 0x8d, 0x99, 0x38, 0x5b, 0x08, 0x3f, 0xff, 0xfc, 0x8f, 0x3a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_2(ch_2, ch_2 + sizeof(ch_2) -1);
CDataStream stream_2(vch_2, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_2;
stream_2 >> txHist_2;

if(block.vtx[0]->GetHash() == txHist_2.GetHash() && nHeight == 1266042) {
return true;
}
unsigned char ch_3[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4e, 0x51, 0x13, 0x04, 0x2f, 0x86, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x64, 0x40, 0x60, 0xb2, 0x96, 0xb7, 0x4e, 0xe3, 0xa2, 0x12, 0x73, 0xdf, 0xff, 0xbe, 0x89, 0xc7, 0xe8, 0x65, 0x4e, 0xc9, 0x58, 0x2a, 0x78, 0x7a, 0xb9, 0xe2, 0x99, 0x27, 0x7d, 0xbe, 0xcb, 0x0c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd6, 0xfd, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_3(ch_3, ch_3 + sizeof(ch_3) -1);
CDataStream stream_3(vch_3, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_3;
stream_3 >> txHist_3;

if(block.vtx[0]->GetHash() == txHist_3.GetHash() && nHeight == 1265998) {
return true;
}
unsigned char ch_4[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x47, 0x51, 0x13, 0x04, 0x8f, 0x84, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x88, 0x41, 0xd0, 0x05, 0x5a, 0x1a, 0xc7, 0x31, 0x0b, 0x60, 0x27, 0x9a, 0x22, 0xba, 0xaa, 0xa0, 0xb7, 0xf9, 0xb6, 0x58, 0x96, 0x31, 0xbe, 0x37, 0xe7, 0xb2, 0x6f, 0xc1, 0xa3, 0xee, 0x00, 0x2a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd9, 0x51, 0x11, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_4(ch_4, ch_4 + sizeof(ch_4) -1);
CDataStream stream_4(vch_4, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_4;
stream_4 >> txHist_4;

if(block.vtx[0]->GetHash() == txHist_4.GetHash() && nHeight == 1265991) {
return true;
}
unsigned char ch_5[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x6e, 0x51, 0x13, 0x04, 0xa7, 0x8f, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7e, 0xbd, 0x1e, 0x5d, 0x74, 0x2d, 0x69, 0xbb, 0x1a, 0x1c, 0x87, 0x3c, 0x10, 0x3d, 0xb1, 0x97, 0x80, 0xa7, 0xf3, 0x30, 0x43, 0x28, 0xf9, 0x66, 0x89, 0xde, 0x83, 0x06, 0x74, 0x57, 0x02, 0xd6, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xe2, 0xbf, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x3b, 0xab, 0x1f, 0x7e, 0x55, 0xbe, 0xf5, 0xe9, 0xf2, 0x28, 0x3a, 0x93, 0xb4, 0x78, 0xa7, 0x81, 0x89, 0x40, 0x88, 0x1b, 0x70, 0xea, 0x5d, 0xd6, 0x03, 0x95, 0xb4, 0x9b, 0x37, 0xe6, 0x52, 0x4d, 0x01, 0x7a, 0x06, 0x29, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x1e, 0xf3, 0xd7, 0x98, 0xf9, 0x7d, 0xba, 0x18, 0x33, 0x23, 0x83, 0xea, 0x65, 0x40, 0x27, 0xbe, 0xc4, 0x62, 0x86, 0x96, 0x88, 0xac, 0x27, 0x10, 0x5b, 0xb1, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xca, 0xe3, 0x39, 0xe2, 0x4f, 0x6d, 0x60, 0x98, 0xec, 0xbe, 0x73, 0x11, 0x00, 0x3d, 0xd4, 0xf8, 0x02, 0x05, 0x8b, 0x9d, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_5(ch_5, ch_5 + sizeof(ch_5) -1);
CDataStream stream_5(vch_5, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_5;
stream_5 >> txHist_5;

if(block.vtx[0]->GetHash() == txHist_5.GetHash() && nHeight == 1266030) {
return true;
}
unsigned char ch_6[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x6a, 0x51, 0x13, 0x04, 0x47, 0x8d, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x67, 0x72, 0x68, 0x33, 0x20, 0x00, 0x00, 0x02, 0x53, 0x65, 0x64, 0x6f, 0x6e, 0x2f, 0x0d, 0x01, 0xbc, 0xfb, 0xea, 0x18, 0x1b, 0x15, 0x2d, 0xce, 0x5b, 0x38, 0x8b, 0x5d, 0x8a, 0x7c, 0xbb, 0x22, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd6, 0x7a, 0x69, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_6(ch_6, ch_6 + sizeof(ch_6) -1);
CDataStream stream_6(vch_6, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_6;
stream_6 >> txHist_6;

if(block.vtx[0]->GetHash() == txHist_6.GetHash() && nHeight == 1266026) {
return true;
}
unsigned char ch_7[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x52, 0x51, 0x13, 0x04, 0x71, 0x86, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x75, 0x4d, 0x72, 0x78, 0x6d, 0x68, 0x54, 0x6a, 0x58, 0x47, 0x59, 0x61, 0x58, 0x53, 0x66, 0x33, 0x76, 0x32, 0x56, 0x6f, 0x43, 0x72, 0x70, 0x48, 0x55, 0x45, 0x62, 0x32, 0x4c, 0x32, 0x20, 0x79, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd5, 0xdf, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_7(ch_7, ch_7 + sizeof(ch_7) -1);
CDataStream stream_7(vch_7, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_7;
stream_7 >> txHist_7;

if(block.vtx[0]->GetHash() == txHist_7.GetHash() && nHeight == 1266002) {
return true;
}
unsigned char ch_8[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x44, 0x51, 0x13, 0x04, 0xa2, 0x83, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa8, 0x5f, 0xa5, 0x87, 0x0a, 0x9d, 0xa3, 0x63, 0xf0, 0x33, 0xc4, 0x30, 0xaa, 0x32, 0x05, 0x16, 0x5c, 0x68, 0x3f, 0xb6, 0x03, 0x4c, 0x3a, 0x48, 0x95, 0xf1, 0x61, 0x29, 0x3f, 0xe5, 0x5f, 0xc5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xde, 0x8b, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_8(ch_8, ch_8 + sizeof(ch_8) -1);
CDataStream stream_8(vch_8, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_8;
stream_8 >> txHist_8;

if(block.vtx[0]->GetHash() == txHist_8.GetHash() && nHeight == 1265988) {
return true;
}
unsigned char ch_9[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3d, 0x51, 0x13, 0x04, 0xe1, 0x81, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x9a, 0x8d, 0x35, 0x24, 0x33, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc9, 0xfd, 0xc8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xdb, 0x31, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_9(ch_9, ch_9 + sizeof(ch_9) -1);
CDataStream stream_9(vch_9, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_9;
stream_9 >> txHist_9;

if(block.vtx[0]->GetHash() == txHist_9.GetHash() && nHeight == 1265981) {
return true;
}
unsigned char ch_10[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x7f, 0x51, 0x13, 0x04, 0x68, 0x9b, 0x38, 0x5b, 0x08, 0x08, 0x00, 0x03, 0x01, 0x05, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_10(ch_10, ch_10 + sizeof(ch_10) -1);
CDataStream stream_10(vch_10, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_10;
stream_10 >> txHist_10;

if(block.vtx[0]->GetHash() == txHist_10.GetHash() && nHeight == 1266047) {
return true;
}
unsigned char ch_11[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x79, 0x51, 0x13, 0x04, 0x3c, 0x99, 0x38, 0x5b, 0x08, 0x3f, 0xff, 0xfc, 0x8f, 0xb4, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_11(ch_11, ch_11 + sizeof(ch_11) -1);
CDataStream stream_11(vch_11, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_11;
stream_11 >> txHist_11;

if(block.vtx[0]->GetHash() == txHist_11.GetHash() && nHeight == 1266041) {
return true;
}
unsigned char ch_12[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x72, 0x51, 0x13, 0x04, 0x4c, 0x94, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xaf, 0xe1, 0x98, 0x33, 0xb4, 0x84, 0x6b, 0x05, 0x0e, 0x87, 0xac, 0x82, 0x65, 0x10, 0x4f, 0xd3, 0x55, 0xa4, 0xc1, 0x93, 0xf0, 0xd2, 0x8b, 0xbc, 0x33, 0x8a, 0xfd, 0x50, 0x2a, 0x29, 0x6b, 0x0f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x29, 0x8e, 0x99, 0xb8, 0x6a, 0xc9, 0x20, 0x6c, 0x2d, 0x70, 0x0e, 0xc7, 0x52, 0x21, 0x87, 0x4e, 0xda, 0xf1, 0x5c, 0x26, 0x5e, 0xd1, 0xca, 0xd5, 0x1a, 0x0e, 0x1f, 0x14, 0xa2, 0x2b, 0x8a, 0x55, 0x48, 0xc6, 0x64, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_12(ch_12, ch_12 + sizeof(ch_12) -1);
CDataStream stream_12(vch_12, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_12;
stream_12 >> txHist_12;

if(block.vtx[0]->GetHash() == txHist_12.GetHash() && nHeight == 1266034) {
return true;
}
unsigned char ch_13[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x6f, 0x51, 0x13, 0x04, 0xcf, 0x8f, 0x38, 0x5b, 0x08, 0x47, 0xff, 0xff, 0xd2, 0xce, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_13(ch_13, ch_13 + sizeof(ch_13) -1);
CDataStream stream_13(vch_13, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_13;
stream_13 >> txHist_13;

if(block.vtx[0]->GetHash() == txHist_13.GetHash() && nHeight == 1266031) {
return true;
}
unsigned char ch_14[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x6b, 0x51, 0x13, 0x04, 0xcd, 0x8d, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x6f, 0xb9, 0x77, 0xb5, 0x40, 0x46, 0xef, 0x67, 0x7a, 0x75, 0xfd, 0xbf, 0x53, 0x7c, 0x41, 0xa9, 0x8d, 0xf2, 0x30, 0xc4, 0xef, 0xc8, 0xcc, 0xab, 0xc7, 0x5b, 0x26, 0x9a, 0x59, 0x3c, 0x49, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd6, 0xdb, 0x5c, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xab, 0xd0, 0xe3, 0xe1, 0x0d, 0x27, 0x9f, 0x7c, 0x67, 0x59, 0x95, 0xf7, 0x7a, 0x1a, 0xcb, 0x21, 0x6a, 0x61, 0xd2, 0xfb, 0x40, 0xb3, 0x1c, 0xe8, 0xa8, 0x0b, 0x01, 0xf6, 0xf6, 0xe4, 0x35, 0x9f, 0xce, 0xbd, 0x7d, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x5a, 0x69, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_14(ch_14, ch_14 + sizeof(ch_14) -1);
CDataStream stream_14(vch_14, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_14;
stream_14 >> txHist_14;

if(block.vtx[0]->GetHash() == txHist_14.GetHash() && nHeight == 1266027) {
return true;
}
unsigned char ch_15[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x67, 0x51, 0x13, 0x04, 0x4e, 0x8c, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xba, 0x7f, 0x22, 0x09, 0xf3, 0xcd, 0x4e, 0x66, 0x83, 0x12, 0x08, 0x55, 0x58, 0x75, 0xb7, 0xdd, 0xef, 0xcc, 0x21, 0xb8, 0xa6, 0x0f, 0x26, 0x2d, 0xb0, 0xa8, 0xc9, 0x5d, 0x16, 0x2c, 0x1d, 0xda, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd4, 0x0d, 0x3c, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x18, 0xf3, 0x9b, 0x70, 0x90, 0x68, 0xca, 0xda, 0xc6, 0xde, 0x28, 0xd5, 0xd3, 0x62, 0x10, 0x25, 0x03, 0x09, 0xf9, 0x52, 0xde, 0x58, 0xb1, 0x3d, 0x82, 0xb3, 0xcc, 0xeb, 0xf1, 0xed, 0x4b, 0x9a, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_15(ch_15, ch_15 + sizeof(ch_15) -1);
CDataStream stream_15(vch_15, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_15;
stream_15 >> txHist_15;

if(block.vtx[0]->GetHash() == txHist_15.GetHash() && nHeight == 1266023) {
return true;
}
unsigned char ch_16[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x63, 0x51, 0x13, 0x04, 0x3f, 0x8b, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x03, 0xec, 0xd3, 0xff, 0xff, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd2, 0x46, 0x0e, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_16(ch_16, ch_16 + sizeof(ch_16) -1);
CDataStream stream_16(vch_16, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_16;
stream_16 >> txHist_16;

if(block.vtx[0]->GetHash() == txHist_16.GetHash() && nHeight == 1266019) {
return true;
}
unsigned char ch_17[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5f, 0x51, 0x13, 0x04, 0x4d, 0x8a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x68, 0x54, 0x20, 0x6e, 0x69, 0x6f, 0x63, 0x6e, 0x6f, 0x6f, 0x6d, 0x20, 0x6c, 0x6f, 0x6f, 0x50, 0x6d, 0x39, 0x33, 0x5b, 0x1b, 0x20, 0x2d, 0x20, 0x5d, 0x74, 0x6c, 0x75, 0x61, 0x66, 0x65, 0x64, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd5, 0xec, 0x1d, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_17(ch_17, ch_17 + sizeof(ch_17) -1);
CDataStream stream_17(vch_17, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_17;
stream_17 >> txHist_17;

if(block.vtx[0]->GetHash() == txHist_17.GetHash() && nHeight == 1266015) {
return true;
}
unsigned char ch_18[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5b, 0x51, 0x13, 0x04, 0xfe, 0x88, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd1, 0x71, 0x3f, 0x1c, 0xf6, 0xe2, 0xed, 0xa9, 0x21, 0xaa, 0x24, 0x6a, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x6d, 0x75, 0x74, 0x61, 0x72, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd3, 0xdd, 0x1c, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_18(ch_18, ch_18 + sizeof(ch_18) -1);
CDataStream stream_18(vch_18, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_18;
stream_18 >> txHist_18;

if(block.vtx[0]->GetHash() == txHist_18.GetHash() && nHeight == 1266011) {
return true;
}
unsigned char ch_19[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x57, 0x51, 0x13, 0x04, 0x4f, 0x88, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x70, 0xc7, 0x9f, 0xfa, 0x04, 0xbe, 0x37, 0xc3, 0x69, 0x0d, 0x58, 0xe3, 0xf2, 0xd0, 0x71, 0x9c, 0x71, 0x91, 0x42, 0xd0, 0x6e, 0x6f, 0x20, 0x02, 0x44, 0x30, 0x47, 0x6a, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd4, 0x1c, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_19(ch_19, ch_19 + sizeof(ch_19) -1);
CDataStream stream_19(vch_19, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_19;
stream_19 >> txHist_19;

if(block.vtx[0]->GetHash() == txHist_19.GetHash() && nHeight == 1266007) {
return true;
}
unsigned char ch_20[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x53, 0x51, 0x13, 0x04, 0xe4, 0x86, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x72, 0xa6, 0xd2, 0xee, 0x44, 0x8f, 0x86, 0xab, 0xae, 0x90, 0xee, 0x07, 0xa4, 0x5f, 0x1a, 0x9f, 0xbb, 0xf6, 0xbf, 0xe7, 0x88, 0x0b, 0x3b, 0x05, 0xcf, 0x96, 0x03, 0x21, 0x01, 0x40, 0x80, 0x79, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd3, 0xb0, 0x6a, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_20(ch_20, ch_20 + sizeof(ch_20) -1);
CDataStream stream_20(vch_20, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_20;
stream_20 >> txHist_20;

if(block.vtx[0]->GetHash() == txHist_20.GetHash() && nHeight == 1266003) {
return true;
}
unsigned char ch_21[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x37, 0x51, 0x13, 0x04, 0xe4, 0x7f, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0xac, 0x88, 0x8b, 0x04, 0xfe, 0x05, 0xe4, 0x16, 0x00, 0xcd, 0xec, 0x07, 0x0d, 0x2a, 0xce, 0xbb, 0x66, 0x78, 0x14, 0x3a, 0xe0, 0xbf, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x01, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe0, 0xd6, 0x0d, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_21(ch_21, ch_21 + sizeof(ch_21) -1);
CDataStream stream_21(vch_21, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_21;
stream_21 >> txHist_21;

if(block.vtx[0]->GetHash() == txHist_21.GetHash() && nHeight == 1265975) {
return true;
}
unsigned char ch_22[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4d, 0x51, 0x13, 0x04, 0x18, 0x86, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x43, 0xb5, 0x2e, 0xc5, 0xc9, 0xbe, 0x08, 0x60, 0x44, 0x8a, 0x6b, 0x1b, 0xbc, 0x3a, 0xd5, 0x74, 0x4f, 0xa9, 0xcf, 0x11, 0x3e, 0x91, 0x38, 0x1b, 0xf8, 0x27, 0xdc, 0x47, 0x19, 0xad, 0x4a, 0x84, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd5, 0x52, 0x11, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_22(ch_22, ch_22 + sizeof(ch_22) -1);
CDataStream stream_22(vch_22, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_22;
stream_22 >> txHist_22;

if(block.vtx[0]->GetHash() == txHist_22.GetHash() && nHeight == 1265997) {
return true;
}
unsigned char ch_23[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x31, 0x51, 0x13, 0x04, 0xc2, 0x7e, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x27, 0x75, 0xce, 0x8a, 0x48, 0xc9, 0x89, 0x99, 0x75, 0xb0, 0x2a, 0x1b, 0x4d, 0x22, 0xd9, 0x48, 0xd6, 0x05, 0x89, 0x7b, 0x8c, 0x66, 0x92, 0xe8, 0x28, 0xed, 0xfb, 0xe2, 0xa8, 0x03, 0x13, 0x14, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_23(ch_23, ch_23 + sizeof(ch_23) -1);
CDataStream stream_23(vch_23, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_23;
stream_23 >> txHist_23;

if(block.vtx[0]->GetHash() == txHist_23.GetHash() && nHeight == 1265969) {
return true;
}
unsigned char ch_24[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x46, 0x51, 0x13, 0x04, 0x57, 0x84, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x33, 0x32, 0x2f, 0x30, 0x30, 0x74, 0x78, 0x65, 0x6e, 0x6e, 0x65, 0x70, 0x6f, 0x3a, 0x6b, 0x7a, 0x74, 0x61, 0x20, 0x64, 0x65, 0x74, 0x70, 0x65, 0x63, 0x63, 0x61, 0x20, 0x65, 0x74, 0x78, 0x65, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xda, 0xbf, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xc8, 0x98, 0x3d, 0x10, 0x57, 0x4a, 0x26, 0xad, 0x3d, 0xa9, 0x08, 0x64, 0xfe, 0xcc, 0xdf, 0x77, 0xf3, 0xbd, 0xd6, 0xf1, 0xd9, 0xb3, 0x43, 0xc3, 0xb1, 0x48, 0x86, 0x31, 0xc6, 0x7d, 0x65, 0x88, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_24(ch_24, ch_24 + sizeof(ch_24) -1);
CDataStream stream_24(vch_24, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_24;
stream_24 >> txHist_24;

if(block.vtx[0]->GetHash() == txHist_24.GetHash() && nHeight == 1265990) {
return true;
}
unsigned char ch_25[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2a, 0x51, 0x13, 0x04, 0xef, 0x7a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe4, 0xf6, 0x10, 0x23, 0x09, 0xc1, 0x70, 0xc3, 0x79, 0xd7, 0xca, 0xed, 0xcf, 0x3a, 0xf3, 0x09, 0x0c, 0xc5, 0x69, 0xa4, 0x67, 0x1d, 0x0f, 0x71, 0xd0, 0x91, 0xff, 0x30, 0x98, 0x18, 0x3b, 0x59, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_25(ch_25, ch_25 + sizeof(ch_25) -1);
CDataStream stream_25(vch_25, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_25;
stream_25 >> txHist_25;

if(block.vtx[0]->GetHash() == txHist_25.GetHash() && nHeight == 1265962) {
return true;
}
unsigned char ch_26[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x62, 0x51, 0x13, 0x04, 0x31, 0x8b, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xfb, 0xd8, 0xcb, 0x58, 0xd6, 0xbc, 0x02, 0x62, 0x3f, 0x61, 0x87, 0x53, 0xdf, 0x41, 0x6c, 0x92, 0x00, 0x00, 0x7f, 0x5e, 0x6d, 0x91, 0x9c, 0x78, 0x00, 0x00, 0x00, 0x00, 0x01, 0x7c, 0xc0, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd5, 0x20, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_26(ch_26, ch_26 + sizeof(ch_26) -1);
CDataStream stream_26(vch_26, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_26;
stream_26 >> txHist_26;

if(block.vtx[0]->GetHash() == txHist_26.GetHash() && nHeight == 1266018) {
return true;
}
unsigned char ch_27[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x23, 0x51, 0x13, 0x04, 0x3e, 0x7a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x19, 0xf8, 0x77, 0x22, 0x02, 0x7a, 0x37, 0x3f, 0x85, 0x59, 0x13, 0x48, 0xed, 0x37, 0x4e, 0x3c, 0x5b, 0x4a, 0x6d, 0x9a, 0x5b, 0x2c, 0x82, 0xfa, 0xd5, 0x19, 0xf1, 0x21, 0x7e, 0x69, 0x7c, 0x6c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe5, 0x4c, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xcf, 0x23, 0xb0, 0x6c, 0x91, 0x9a, 0xb8, 0x76, 0xd1, 0xe1, 0xc4, 0x7b, 0x6c, 0x2c, 0x28, 0xce, 0x48, 0x9e, 0xd2, 0xd5, 0x0e, 0x57, 0x92, 0x89, 0x3d, 0xe4, 0x34, 0x0f, 0x0a, 0xe0, 0xfd, 0x7d, 0x0e, 0x10, 0xa0, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x1a, 0xc2, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_27(ch_27, ch_27 + sizeof(ch_27) -1);
CDataStream stream_27(vch_27, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_27;
stream_27 >> txHist_27;

if(block.vtx[0]->GetHash() == txHist_27.GetHash() && nHeight == 1265955) {
return true;
}
unsigned char ch_28[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1c, 0x51, 0x13, 0x04, 0xb9, 0x78, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x32, 0x2e, 0x33, 0x31, 0x2e, 0x38, 0x2e, 0x39, 0x35, 0x31, 0x5b, 0x20, 0x48, 0x46, 0x79, 0x4b, 0x75, 0x4d, 0x72, 0x78, 0x6d, 0x68, 0x54, 0x6a, 0x58, 0x47, 0x59, 0x61, 0x58, 0x53, 0x66, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe5, 0xad, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_28(ch_28, ch_28 + sizeof(ch_28) -1);
CDataStream stream_28(vch_28, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_28;
stream_28 >> txHist_28;

if(block.vtx[0]->GetHash() == txHist_28.GetHash() && nHeight == 1265948) {
return true;
}
unsigned char ch_29[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x16, 0x51, 0x13, 0x04, 0x81, 0x78, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0xf1, 0x33, 0x61, 0x30, 0x39, 0x36, 0x61, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xae, 0xcd, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe3, 0x4a, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_29(ch_29, ch_29 + sizeof(ch_29) -1);
CDataStream stream_29(vch_29, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_29;
stream_29 >> txHist_29;

if(block.vtx[0]->GetHash() == txHist_29.GetHash() && nHeight == 1265942) {
return true;
}
unsigned char ch_30[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x10, 0x51, 0x13, 0x04, 0xed, 0x77, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x6e, 0x6e, 0x65, 0x70, 0x6f, 0x3a, 0x6b, 0x7a, 0x41, 0x85, 0x0f, 0xff, 0x50, 0x39, 0x4c, 0x00, 0x00, 0x00, 0x00, 0x01, 0x79, 0x74, 0x78, 0x65, 0x6e, 0x6e, 0x65, 0x70, 0x6f, 0x3a, 0x6b, 0x7a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe8, 0x92, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_30(ch_30, ch_30 + sizeof(ch_30) -1);
CDataStream stream_30(vch_30, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_30;
stream_30 >> txHist_30;

if(block.vtx[0]->GetHash() == txHist_30.GetHash() && nHeight == 1265936) {
return true;
}
unsigned char ch_31[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x7e, 0x51, 0x13, 0x04, 0x17, 0x9b, 0x38, 0x5b, 0x08, 0x3f, 0xff, 0xff, 0xe6, 0xa3, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_31(ch_31, ch_31 + sizeof(ch_31) -1);
CDataStream stream_31(vch_31, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_31;
stream_31 >> txHist_31;

if(block.vtx[0]->GetHash() == txHist_31.GetHash() && nHeight == 1266046) {
return true;
}
unsigned char ch_32[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x04, 0x51, 0x13, 0x04, 0xad, 0x74, 0x38, 0x5b, 0x08, 0x3f, 0xff, 0xfe, 0x16, 0x1c, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x3b, 0x65, 0x2e, 0xcf, 0x14, 0xbc, 0xf5, 0xec, 0x1a, 0xfc, 0xe5, 0xec, 0xf5, 0x0c, 0x3c, 0x9d, 0x1f, 0xba, 0x90, 0x95, 0xff, 0x0a, 0x5b, 0xf4, 0xef, 0xc8, 0xd1, 0x6d, 0x4f, 0x36, 0x65, 0xf8, 0xb0, 0x33, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_32(ch_32, ch_32 + sizeof(ch_32) -1);
CDataStream stream_32(vch_32, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_32;
stream_32 >> txHist_32;

if(block.vtx[0]->GetHash() == txHist_32.GetHash() && nHeight == 1265924) {
return true;
}
unsigned char ch_33[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4c, 0x51, 0x13, 0x04, 0x17, 0x86, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x68, 0xac, 0x35, 0xe6, 0x3c, 0x7b, 0x06, 0xf1, 0x07, 0xa3, 0x12, 0xe1, 0x20, 0x7f, 0xe3, 0x80, 0x51, 0x26, 0xde, 0x3f, 0x77, 0x45, 0xde, 0x91, 0x44, 0xe4, 0x04, 0x7b, 0x4d, 0x8c, 0x4b, 0x73, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd3, 0x08, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_33(ch_33, ch_33 + sizeof(ch_33) -1);
CDataStream stream_33(vch_33, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_33;
stream_33 >> txHist_33;

if(block.vtx[0]->GetHash() == txHist_33.GetHash() && nHeight == 1265996) {
return true;
}
unsigned char ch_34[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xfe, 0x50, 0x13, 0x04, 0x29, 0x6d, 0x38, 0x5b, 0x08, 0x3f, 0xff, 0xff, 0xf9, 0xb4, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x48, 0x86, 0x88, 0x5c, 0x03, 0x02, 0xe7, 0xe0, 0x24, 0xcb, 0x14, 0xf9, 0x49, 0x83, 0x39, 0x6b, 0x8e, 0xc2, 0x17, 0xc9, 0xd4, 0xf1, 0x2f, 0x04, 0x01, 0xd2, 0x5f, 0xb1, 0x32, 0x2d, 0x77, 0x33, 0x70, 0x8b, 0x63, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_34(ch_34, ch_34 + sizeof(ch_34) -1);
CDataStream stream_34(vch_34, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_34;
stream_34 >> txHist_34;

if(block.vtx[0]->GetHash() == txHist_34.GetHash() && nHeight == 1265918) {
return true;
}
unsigned char ch_35[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf8, 0x50, 0x13, 0x04, 0x87, 0x66, 0x38, 0x5b, 0x08, 0x08, 0x00, 0x00, 0x06, 0x6a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x5d, 0x91, 0x64, 0xe0, 0xdd, 0xc2, 0x41, 0x1f, 0xeb, 0x3b, 0x72, 0x44, 0x8b, 0xa6, 0x22, 0x3e, 0xed, 0x29, 0xf3, 0x30, 0xc9, 0x1c, 0x36, 0x0d, 0xdb, 0xac, 0x20, 0xfc, 0xeb, 0x22, 0x89, 0x6d, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_35(ch_35, ch_35 + sizeof(ch_35) -1);
CDataStream stream_35(vch_35, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_35;
stream_35 >> txHist_35;

if(block.vtx[0]->GetHash() == txHist_35.GetHash() && nHeight == 1265912) {
return true;
}
unsigned char ch_36[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5e, 0x51, 0x13, 0x04, 0x34, 0x8a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5b, 0x38, 0x86, 0xe4, 0x74, 0x4d, 0xbc, 0x72, 0xeb, 0x32, 0x9b, 0x44, 0xed, 0xe3, 0x55, 0xc3, 0x88, 0x2b, 0x0f, 0xdd, 0x88, 0x83, 0x5a, 0x06, 0xc8, 0x59, 0x7d, 0x6d, 0x7a, 0xc7, 0xef, 0x55, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd1, 0x3a, 0x12, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_36(ch_36, ch_36 + sizeof(ch_36) -1);
CDataStream stream_36(vch_36, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_36;
stream_36 >> txHist_36;

if(block.vtx[0]->GetHash() == txHist_36.GetHash() && nHeight == 1266014) {
return true;
}
unsigned char ch_37[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5a, 0x51, 0x13, 0x04, 0xe3, 0x88, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xfe, 0x0e, 0xff, 0xff, 0xff, 0xfe, 0x85, 0x3f, 0x24, 0x9d, 0x66, 0xae, 0x2d, 0xb5, 0x5f, 0xe1, 0x07, 0x87, 0xfd, 0x87, 0x37, 0x68, 0x03, 0x8c, 0x54, 0x34, 0x08, 0xd5, 0x74, 0xde, 0x29, 0x8f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd2, 0xd1, 0x0f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_37(ch_37, ch_37 + sizeof(ch_37) -1);
CDataStream stream_37(vch_37, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_37;
stream_37 >> txHist_37;

if(block.vtx[0]->GetHash() == txHist_37.GetHash() && nHeight == 1266010) {
return true;
}
unsigned char ch_38[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x56, 0x51, 0x13, 0x04, 0x28, 0x88, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe2, 0xcc, 0x55, 0xc4, 0xee, 0x2c, 0x0f, 0x64, 0x4e, 0x91, 0xed, 0x91, 0x30, 0x73, 0x88, 0xce, 0x4b, 0xe9, 0x08, 0x6e, 0xe1, 0x7c, 0x3e, 0xdb, 0x03, 0x48, 0x0a, 0xea, 0xf8, 0x31, 0xb7, 0x97, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd5, 0x65, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_38(ch_38, ch_38 + sizeof(ch_38) -1);
CDataStream stream_38(vch_38, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_38;
stream_38 >> txHist_38;

if(block.vtx[0]->GetHash() == txHist_38.GetHash() && nHeight == 1266006) {
return true;
}
unsigned char ch_39[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x51, 0x51, 0x13, 0x04, 0x6f, 0x86, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5f, 0x99, 0xe8, 0xc1, 0x1f, 0x58, 0xa0, 0x8d, 0x71, 0x91, 0xa1, 0x9a, 0x7d, 0x0d, 0xeb, 0x09, 0x00, 0x00, 0x00, 0x01, 0x00, 0x13, 0x51, 0x49, 0xac, 0x88, 0x32, 0xa8, 0x59, 0xe1, 0x30, 0xb5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd4, 0xde, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_39(ch_39, ch_39 + sizeof(ch_39) -1);
CDataStream stream_39(vch_39, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_39;
stream_39 >> txHist_39;

if(block.vtx[0]->GetHash() == txHist_39.GetHash() && nHeight == 1266001) {
return true;
}
unsigned char ch_40[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x4a, 0x51, 0x13, 0x04, 0xcd, 0x85, 0x38, 0x5b, 0x08, 0x47, 0xff, 0xff, 0xd2, 0x4b, 0x1a, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xc3, 0x3b, 0x91, 0x4e, 0x20, 0xa8, 0xce, 0x7c, 0x4b, 0x6d, 0x63, 0xbe, 0x6a, 0x9d, 0x5a, 0xa0, 0xab, 0x69, 0x25, 0xb9, 0x29, 0x4f, 0x14, 0x37, 0x79, 0x60, 0x80, 0x45, 0x4e, 0x99, 0x60, 0x5d, 0x40, 0x17, 0x67, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_40(ch_40, ch_40 + sizeof(ch_40) -1);
CDataStream stream_40(vch_40, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_40;
stream_40 >> txHist_40;

if(block.vtx[0]->GetHash() == txHist_40.GetHash() && nHeight == 1265994) {
return true;
}
unsigned char ch_41[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x43, 0x51, 0x13, 0x04, 0x6f, 0x83, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xff, 0x65, 0x97, 0xea, 0x6b, 0x3f, 0xa8, 0x9d, 0xa2, 0x00, 0xc1, 0xd8, 0xad, 0x4a, 0xd9, 0x67, 0x1b, 0xed, 0x5f, 0xd6, 0xf9, 0xe0, 0x3f, 0xc9, 0xf7, 0x71, 0x3a, 0xb7, 0xaa, 0x81, 0x38, 0x5b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd9, 0xdf, 0x11, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_41(ch_41, ch_41 + sizeof(ch_41) -1);
CDataStream stream_41(vch_41, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_41;
stream_41 >> txHist_41;

if(block.vtx[0]->GetHash() == txHist_41.GetHash() && nHeight == 1265987) {
return true;
}
unsigned char ch_42[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x7b, 0x51, 0x13, 0x04, 0xb0, 0x99, 0x38, 0x5b, 0x08, 0x68, 0x00, 0x00, 0x21, 0xb3, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_42(ch_42, ch_42 + sizeof(ch_42) -1);
CDataStream stream_42(vch_42, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_42;
stream_42 >> txHist_42;

if(block.vtx[0]->GetHash() == txHist_42.GetHash() && nHeight == 1266043) {
return true;
}
unsigned char ch_43[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x7c, 0x51, 0x13, 0x04, 0xe5, 0x9a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x83, 0x59, 0x8b, 0x5c, 0xa7, 0x22, 0xfa, 0x31, 0x93, 0x84, 0x49, 0xe8, 0x97, 0xba, 0xb6, 0xa6, 0x5d, 0xbe, 0x44, 0x23, 0x34, 0xc7, 0xf4, 0x88, 0xba, 0xe6, 0xf7, 0x4f, 0x26, 0x03, 0x2d, 0x85, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd1, 0x43, 0xbd, 0x1b, 0x26, 0x0b, 0x90, 0xa9, 0xc3, 0x14, 0x47, 0x0f, 0x9a, 0xeb, 0x33, 0x1b, 0xbf, 0x06, 0x39, 0x18, 0xdd, 0xe0, 0x64, 0x02, 0xd1, 0xc8, 0x4d, 0xe1, 0x19, 0xf2, 0xb4, 0x0b, 0x70, 0x78, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_43(ch_43, ch_43 + sizeof(ch_43) -1);
CDataStream stream_43(vch_43, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_43;
stream_43 >> txHist_43;

if(block.vtx[0]->GetHash() == txHist_43.GetHash() && nHeight == 1266044) {
return true;
}
unsigned char ch_44[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x75, 0x51, 0x13, 0x04, 0x41, 0x96, 0x38, 0x5b, 0x08, 0x47, 0xff, 0xff, 0xd2, 0xbf, 0x07, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x09, 0xe5, 0x8f, 0x52, 0x63, 0xcc, 0xa9, 0x9e, 0x10, 0xc8, 0xbb, 0x97, 0x4a, 0xb5, 0x6f, 0xf7, 0xa4, 0x06, 0x4d, 0xc5, 0xe5, 0xa4, 0xcb, 0x53, 0x0d, 0xf0, 0x0d, 0x06, 0x6c, 0x0c, 0xbb, 0x9f, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_44(ch_44, ch_44 + sizeof(ch_44) -1);
CDataStream stream_44(vch_44, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_44;
stream_44 >> txHist_44;

if(block.vtx[0]->GetHash() == txHist_44.GetHash() && nHeight == 1266037) {
return true;
}
unsigned char ch_45[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3c, 0x51, 0x13, 0x04, 0xaa, 0x81, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x97, 0x36, 0xd8, 0xeb, 0x8b, 0xb4, 0x62, 0x99, 0x79, 0x89, 0x06, 0x69, 0x5c, 0x75, 0x53, 0x69, 0xa3, 0xdf, 0x99, 0xa9, 0x3f, 0xfd, 0xde, 0xd1, 0x71, 0x3f, 0x1c, 0xf6, 0xe2, 0xed, 0xa9, 0x21, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xdc, 0xd1, 0x10, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_45(ch_45, ch_45 + sizeof(ch_45) -1);
CDataStream stream_45(vch_45, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_45;
stream_45 >> txHist_45;

if(block.vtx[0]->GetHash() == txHist_45.GetHash() && nHeight == 1265980) {
return true;
}
unsigned char ch_46[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x70, 0x51, 0x13, 0x04, 0x4d, 0x91, 0x38, 0x5b, 0x08, 0x08, 0x00, 0x00, 0x01, 0xc7, 0x25, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa2, 0x64, 0x46, 0x25, 0xea, 0x6f, 0x50, 0x6d, 0x29, 0xd5, 0x48, 0x36, 0x7c, 0x87, 0x66, 0xb1, 0x86, 0x0e, 0x88, 0x27, 0x52, 0x17, 0x51, 0xfe, 0xaf, 0x5e, 0xa3, 0x02, 0x13, 0xb5, 0x22, 0x97, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_46(ch_46, ch_46 + sizeof(ch_46) -1);
CDataStream stream_46(vch_46, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_46;
stream_46 >> txHist_46;

if(block.vtx[0]->GetHash() == txHist_46.GetHash() && nHeight == 1266032) {
return true;
}
unsigned char ch_47[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3e, 0x51, 0x13, 0x04, 0xfa, 0x81, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x26, 0x71, 0x7d, 0x0d, 0xb7, 0xd0, 0x8a, 0x80, 0x80, 0xeb, 0xee, 0x55, 0x30, 0x11, 0x8d, 0x09, 0x7f, 0xb1, 0xae, 0xb7, 0x1c, 0x91, 0x77, 0x2e, 0xc7, 0x75, 0x99, 0x4e, 0x8b, 0xe6, 0xf4, 0x88, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xdb, 0x51, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_47(ch_47, ch_47 + sizeof(ch_47) -1);
CDataStream stream_47(vch_47, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_47;
stream_47 >> txHist_47;

if(block.vtx[0]->GetHash() == txHist_47.GetHash() && nHeight == 1265982) {
return true;
}
unsigned char ch_48[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x36, 0x51, 0x13, 0x04, 0xd8, 0x7f, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xfe, 0x05, 0xe4, 0x16, 0x00, 0xcd, 0xec, 0x07, 0x0d, 0x2a, 0xce, 0xbb, 0x66, 0x78, 0x14, 0x3a, 0xe0, 0xbf, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x6f, 0xb9, 0x77, 0xb5, 0x40, 0xf9, 0x8c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe0, 0x81, 0x2c, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_48(ch_48, ch_48 + sizeof(ch_48) -1);
CDataStream stream_48(vch_48, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_48;
stream_48 >> txHist_48;

if(block.vtx[0]->GetHash() == txHist_48.GetHash() && nHeight == 1265974) {
return true;
}
unsigned char ch_49[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x41, 0x51, 0x13, 0x04, 0x66, 0x83, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x60, 0xe9, 0x7b, 0x68, 0x00, 0x00, 0x1c, 0x31, 0x9b, 0xd5, 0xd1, 0x1e, 0xe0, 0xff, 0xff, 0x2f, 0x77, 0x21, 0x64, 0x6a, 0xf6, 0x67, 0xfc, 0xd9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xdb, 0xfa, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_49(ch_49, ch_49 + sizeof(ch_49) -1);
CDataStream stream_49(vch_49, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_49;
stream_49 >> txHist_49;

if(block.vtx[0]->GetHash() == txHist_49.GetHash() && nHeight == 1265985) {
return true;
}
unsigned char ch_50[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x38, 0x51, 0x13, 0x04, 0xfe, 0x7f, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x01, 0x9a, 0x8d, 0x55, 0xad, 0xd4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x9a, 0x8d, 0x55, 0xad, 0x7d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xdd, 0xe1, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_50(ch_50, ch_50 + sizeof(ch_50) -1);
CDataStream stream_50(vch_50, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_50;
stream_50 >> txHist_50;

if(block.vtx[0]->GetHash() == txHist_50.GetHash() && nHeight == 1265976) {
return true;
}
unsigned char ch_51[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x30, 0x51, 0x13, 0x04, 0x9f, 0x7e, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x27, 0x75, 0xce, 0x8a, 0x48, 0xc9, 0x89, 0x99, 0x75, 0xb0, 0x2a, 0x1b, 0x4d, 0x22, 0xd9, 0x48, 0xd6, 0x05, 0x89, 0x7b, 0x8c, 0x66, 0x92, 0xe8, 0x28, 0xed, 0xfb, 0xe2, 0xa8, 0x03, 0x13, 0x14, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x01, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_51(ch_51, ch_51 + sizeof(ch_51) -1);
CDataStream stream_51(vch_51, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_51;
stream_51 >> txHist_51;

if(block.vtx[0]->GetHash() == txHist_51.GetHash() && nHeight == 1265968) {
return true;
}
unsigned char ch_52[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x6d, 0x51, 0x13, 0x04, 0xa0, 0x8e, 0x38, 0x5b, 0x08, 0x08, 0x00, 0x00, 0x06, 0x1e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe6, 0xfa, 0xb2, 0x15, 0x8c, 0xb2, 0x8b, 0x3b, 0x0a, 0x54, 0x43, 0x59, 0xbb, 0x65, 0xc2, 0x5c, 0x6a, 0x96, 0xc1, 0x28, 0x20, 0xf8, 0x3f, 0x75, 0x13, 0x0e, 0xe3, 0x04, 0xb8, 0xd1, 0xfb, 0x7d, 0x10, 0x94, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_52(ch_52, ch_52 + sizeof(ch_52) -1);
CDataStream stream_52(vch_52, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_52;
stream_52 >> txHist_52;

if(block.vtx[0]->GetHash() == txHist_52.GetHash() && nHeight == 1266029) {
return true;
}
unsigned char ch_53[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x2c, 0x51, 0x13, 0x04, 0x22, 0x7d, 0x38, 0x5b, 0x08, 0x08, 0x00, 0x00, 0x01, 0x1d, 0x31, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x36, 0x4a, 0xf7, 0xad, 0xc4, 0xaa, 0xa9, 0x87, 0xa0, 0x28, 0x72, 0x2e, 0x9f, 0x87, 0xec, 0x46, 0xab, 0xbd, 0xde, 0x0b, 0xff, 0x3e, 0xcc, 0x26, 0x4e, 0xe3, 0x87, 0xb3, 0x2d, 0x38, 0x13, 0x33, 0xd0, 0xf3, 0x68, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_53(ch_53, ch_53 + sizeof(ch_53) -1);
CDataStream stream_53(vch_53, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_53;
stream_53 >> txHist_53;

if(block.vtx[0]->GetHash() == txHist_53.GetHash() && nHeight == 1265964) {
return true;
}
unsigned char ch_54[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x29, 0x51, 0x13, 0x04, 0xd6, 0x7a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x71, 0x3f, 0x1c, 0xf6, 0xe2, 0xed, 0xa9, 0x21, 0xaa, 0x24, 0x6a, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x6d, 0x75, 0x74, 0x61, 0x72, 0x74, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe7, 0xf1, 0x2a, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x6c, 0xa6, 0x7c, 0xee, 0xfa, 0xee, 0x99, 0x4e, 0x90, 0xac, 0xe9, 0x1f, 0x1c, 0x97, 0x94, 0xc3, 0xdf, 0x92, 0xc6, 0x43, 0xa8, 0xc5, 0x75, 0x0f, 0x7a, 0xad, 0xe2, 0xf2, 0x75, 0xbd, 0x3e, 0x65, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_54(ch_54, ch_54 + sizeof(ch_54) -1);
CDataStream stream_54(vch_54, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_54;
stream_54 >> txHist_54;

if(block.vtx[0]->GetHash() == txHist_54.GetHash() && nHeight == 1265961) {
return true;
}
unsigned char ch_55[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x40, 0x51, 0x13, 0x04, 0x5f, 0x83, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf1, 0x97, 0x39, 0x81, 0x51, 0xb5, 0x4b, 0x5d, 0xc1, 0xe4, 0x99, 0x19, 0x80, 0x80, 0x59, 0x28, 0xa9, 0x69, 0x05, 0x9b, 0xcb, 0xf7, 0x95, 0x5d, 0x41, 0xf3, 0xe1, 0x76, 0xd7, 0x9f, 0x25, 0xa0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xdb, 0xe5, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x83, 0x52, 0x19, 0xd1, 0x7f, 0xaf, 0x86, 0x1e, 0x89, 0x18, 0xe5, 0x16, 0x29, 0x81, 0x95, 0x66, 0x71, 0xf7, 0x40, 0x35, 0x57, 0xcc, 0x3d, 0xfe, 0x69, 0x07, 0xcb, 0x34, 0xe2, 0x00, 0x8e, 0xa7, 0x50, 0xae, 0x7a, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x70, 0x61, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_55(ch_55, ch_55 + sizeof(ch_55) -1);
CDataStream stream_55(vch_55, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_55;
stream_55 >> txHist_55;

if(block.vtx[0]->GetHash() == txHist_55.GetHash() && nHeight == 1265984) {
return true;
}
unsigned char ch_56[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x69, 0x51, 0x13, 0x04, 0xd2, 0x8c, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x47, 0xb9, 0x81, 0x2e, 0xe9, 0xf4, 0xe6, 0x2e, 0x4a, 0x30, 0x46, 0x57, 0x15, 0x8a, 0xef, 0x08, 0x41, 0x08, 0xb3, 0x46, 0x20, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd4, 0xdd, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_56(ch_56, ch_56 + sizeof(ch_56) -1);
CDataStream stream_56(vch_56, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_56;
stream_56 >> txHist_56;

if(block.vtx[0]->GetHash() == txHist_56.GetHash() && nHeight == 1266025) {
return true;
}
unsigned char ch_57[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x68, 0x51, 0x13, 0x04, 0xd0, 0x8c, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb1, 0x04, 0x9f, 0x19, 0x1b, 0x24, 0x61, 0x05, 0x5b, 0x38, 0x8a, 0xa3, 0xa3, 0xa5, 0x18, 0x90, 0x96, 0x0b, 0x82, 0x03, 0x93, 0x42, 0x3d, 0x7e, 0x4a, 0x86, 0xc3, 0x3a, 0x69, 0x25, 0xfe, 0x51, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd6, 0x7a, 0x5b, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_57(ch_57, ch_57 + sizeof(ch_57) -1);
CDataStream stream_57(vch_57, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_57;
stream_57 >> txHist_57;

if(block.vtx[0]->GetHash() == txHist_57.GetHash() && nHeight == 1266024) {
return true;
}
unsigned char ch_58[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x25, 0x51, 0x13, 0x04, 0x68, 0x7a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x26, 0x52, 0xa1, 0xee, 0x41, 0x9e, 0x47, 0x81, 0xe4, 0xfc, 0x2b, 0x82, 0x10, 0x40, 0xc1, 0x64, 0x8c, 0xc7, 0x31, 0xc8, 0x7e, 0x53, 0x77, 0x49, 0xa0, 0x30, 0xd9, 0x0a, 0xaa, 0x91, 0x8d, 0x2b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe4, 0xe2, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x74, 0x29, 0xc6, 0x22, 0x23, 0x95, 0x7c, 0x7e, 0xda, 0x1b, 0x61, 0x16, 0x61, 0xee, 0x86, 0xcf, 0xd2, 0x32, 0x5c, 0x5e, 0x1f, 0xdb, 0x71, 0xb0, 0xc9, 0xb7, 0x86, 0x9d, 0x62, 0x84, 0x66, 0x5a, 0x9a, 0xf8, 0x7f, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x1e, 0x6f, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_58(ch_58, ch_58 + sizeof(ch_58) -1);
CDataStream stream_58(vch_58, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_58;
stream_58 >> txHist_58;

if(block.vtx[0]->GetHash() == txHist_58.GetHash() && nHeight == 1265957) {
return true;
}
unsigned char ch_59[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x22, 0x51, 0x13, 0x04, 0x24, 0x7a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xea, 0xf6, 0x92, 0x66, 0xb8, 0xaa, 0xb2, 0xe3, 0x20, 0xea, 0x4a, 0xe8, 0x1e, 0x90, 0x31, 0xa6, 0x63, 0x29, 0xba, 0x11, 0x7c, 0x00, 0xa1, 0x09, 0x23, 0x74, 0x27, 0x50, 0x5c, 0x1d, 0x59, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe9, 0x59, 0x43, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_59(ch_59, ch_59 + sizeof(ch_59) -1);
CDataStream stream_59(vch_59, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_59;
stream_59 >> txHist_59;

if(block.vtx[0]->GetHash() == txHist_59.GetHash() && nHeight == 1265954) {
return true;
}
unsigned char ch_60[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3b, 0x51, 0x13, 0x04, 0x67, 0x81, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xff, 0xfd, 0xdc, 0xf1, 0x8a, 0xae, 0xd1, 0xec, 0x88, 0x63, 0xa3, 0x83, 0x52, 0xad, 0x5e, 0xf1, 0x8c, 0xc8, 0x48, 0x98, 0x20, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x20, 0x98, 0x48, 0xc8, 0x8c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xde, 0xb8, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_60(ch_60, ch_60 + sizeof(ch_60) -1);
CDataStream stream_60(vch_60, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_60;
stream_60 >> txHist_60;

if(block.vtx[0]->GetHash() == txHist_60.GetHash() && nHeight == 1265979) {
return true;
}
unsigned char ch_61[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x65, 0x51, 0x13, 0x04, 0x92, 0x8b, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0xac, 0x88, 0x8b, 0x04, 0xfe, 0x05, 0xe4, 0x16, 0x00, 0xcd, 0xec, 0x07, 0x0d, 0x2a, 0xce, 0xbb, 0x66, 0x78, 0x14, 0x3a, 0xe0, 0xbf, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x01, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd4, 0x0d, 0x0f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_61(ch_61, ch_61 + sizeof(ch_61) -1);
CDataStream stream_61(vch_61, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_61;
stream_61 >> txHist_61;

if(block.vtx[0]->GetHash() == txHist_61.GetHash() && nHeight == 1266021) {
return true;
}
unsigned char ch_62[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x64, 0x51, 0x13, 0x04, 0x5d, 0x8b, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa3, 0xdf, 0x99, 0xa9, 0x3f, 0xfd, 0xde, 0xd1, 0x71, 0x3f, 0x1c, 0xf6, 0xe2, 0xed, 0xa9, 0x21, 0xaa, 0x24, 0x6a, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd6, 0xf3, 0x1e, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_62(ch_62, ch_62 + sizeof(ch_62) -1);
CDataStream stream_62(vch_62, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_62;
stream_62 >> txHist_62;

if(block.vtx[0]->GetHash() == txHist_62.GetHash() && nHeight == 1266020) {
return true;
}
unsigned char ch_63[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1e, 0x51, 0x13, 0x04, 0xe0, 0x78, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe3, 0xce, 0x90, 0x9d, 0x20, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x20, 0x9d, 0x90, 0xce, 0xe3, 0x73, 0x66, 0x99, 0x8a, 0x93, 0x16, 0x19, 0x35, 0xae, 0xd0, 0x33, 0x94, 0x8e, 0x23, 0x28, 0xde, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe2, 0xc0, 0x1c, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_63(ch_63, ch_63 + sizeof(ch_63) -1);
CDataStream stream_63(vch_63, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_63;
stream_63 >> txHist_63;

if(block.vtx[0]->GetHash() == txHist_63.GetHash() && nHeight == 1265950) {
return true;
}
unsigned char ch_64[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x24, 0x51, 0x13, 0x04, 0x40, 0x7a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x31, 0x31, 0x36, 0x36, 0x37, 0x64, 0x64, 0x65, 0x62, 0x62, 0x37, 0x36, 0x33, 0x61, 0x64, 0x31, 0x39, 0x35, 0x66, 0x37, 0x33, 0x64, 0x65, 0x65, 0x39, 0x38, 0x31, 0x30, 0x63, 0x30, 0x37, 0x36, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe3, 0xad, 0x1b, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x67, 0xd3, 0x31, 0x9c, 0xe8, 0x1c, 0xe1, 0x3f, 0xcb, 0xab, 0x59, 0xdc, 0xf7, 0x1c, 0xee, 0xf8, 0xbc, 0x6f, 0x11, 0x93, 0xae, 0x27, 0x86, 0x4a, 0x7c, 0x9a, 0xa3, 0x70, 0x56, 0xec, 0xa0, 0x44, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_64(ch_64, ch_64 + sizeof(ch_64) -1);
CDataStream stream_64(vch_64, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_64;
stream_64 >> txHist_64;

if(block.vtx[0]->GetHash() == txHist_64.GetHash() && nHeight == 1265956) {
return true;
}
unsigned char ch_65[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1b, 0x51, 0x13, 0x04, 0xb3, 0x78, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe6, 0x92, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_65(ch_65, ch_65 + sizeof(ch_65) -1);
CDataStream stream_65(vch_65, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_65;
stream_65 >> txHist_65;

if(block.vtx[0]->GetHash() == txHist_65.GetHash() && nHeight == 1265947) {
return true;
}
unsigned char ch_66[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x35, 0x51, 0x13, 0x04, 0x9a, 0x7f, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x87, 0xc1, 0xd0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xde, 0xfd, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_66(ch_66, ch_66 + sizeof(ch_66) -1);
CDataStream stream_66(vch_66, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_66;
stream_66 >> txHist_66;

if(block.vtx[0]->GetHash() == txHist_66.GetHash() && nHeight == 1265973) {
return true;
}
unsigned char ch_67[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x61, 0x51, 0x13, 0x04, 0x11, 0x8b, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x0d, 0x2a, 0xce, 0xbb, 0x66, 0x78, 0x14, 0x3a, 0xe0, 0xbf, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x6f, 0xb9, 0x77, 0xb5, 0x40, 0xf9, 0x8c, 0x4e, 0x97, 0x36, 0xd8, 0xeb, 0x8b, 0xb4, 0x62, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd6, 0xe3, 0x63, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xdc, 0x44, 0x4d, 0x15, 0xf9, 0xe8, 0xca, 0x42, 0xea, 0x88, 0x7d, 0x35, 0xaa, 0xa2, 0x31, 0xda, 0x45, 0x2d, 0x09, 0x1f, 0x13, 0x37, 0xa1, 0xe0, 0xec, 0x54, 0x69, 0x53, 0xee, 0x0e, 0xd6, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_67(ch_67, ch_67 + sizeof(ch_67) -1);
CDataStream stream_67(vch_67, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_67;
stream_67 >> txHist_67;

if(block.vtx[0]->GetHash() == txHist_67.GetHash() && nHeight == 1266017) {
return true;
}
unsigned char ch_68[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x60, 0x51, 0x13, 0x04, 0x7e, 0x8a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0xac, 0x88, 0x8b, 0x04, 0xfe, 0x05, 0xe4, 0x16, 0x00, 0xcd, 0xec, 0x07, 0x0d, 0x2a, 0xce, 0xbb, 0x66, 0x78, 0x14, 0x3a, 0xe0, 0xbf, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x01, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd5, 0x20, 0x11, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_68(ch_68, ch_68 + sizeof(ch_68) -1);
CDataStream stream_68(vch_68, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_68;
stream_68 >> txHist_68;

if(block.vtx[0]->GetHash() == txHist_68.GetHash() && nHeight == 1266016) {
return true;
}
unsigned char ch_69[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x18, 0x51, 0x13, 0x04, 0x93, 0x78, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x05, 0xe4, 0x16, 0x00, 0xcd, 0xec, 0x07, 0x0d, 0x2a, 0xce, 0xbb, 0x66, 0x78, 0x14, 0x3a, 0xe0, 0xbf, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x6f, 0xb9, 0x77, 0xb5, 0x40, 0xf9, 0x8c, 0x4e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe3, 0x6e, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_69(ch_69, ch_69 + sizeof(ch_69) -1);
CDataStream stream_69(vch_69, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_69;
stream_69 >> txHist_69;

if(block.vtx[0]->GetHash() == txHist_69.GetHash() && nHeight == 1265944) {
return true;
}
unsigned char ch_70[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1d, 0x51, 0x13, 0x04, 0xbc, 0x78, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe0, 0xbf, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x6f, 0xb9, 0x77, 0xb5, 0x40, 0xf9, 0x8c, 0x4e, 0x97, 0x36, 0xd8, 0xeb, 0x8b, 0xb4, 0x62, 0x99, 0x79, 0x89, 0x06, 0x69, 0x5c, 0x75, 0x53, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe8, 0xb7, 0x0f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_70(ch_70, ch_70 + sizeof(ch_70) -1);
CDataStream stream_70(vch_70, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_70;
stream_70 >> txHist_70;

if(block.vtx[0]->GetHash() == txHist_70.GetHash() && nHeight == 1265949) {
return true;
}
unsigned char ch_71[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x15, 0x51, 0x13, 0x04, 0x74, 0x78, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe3, 0x0b, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_71(ch_71, ch_71 + sizeof(ch_71) -1);
CDataStream stream_71(vch_71, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_71;
stream_71 >> txHist_71;

if(block.vtx[0]->GetHash() == txHist_71.GetHash() && nHeight == 1265941) {
return true;
}
unsigned char ch_72[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x2f, 0x51, 0x13, 0x04, 0xd5, 0x7d, 0x38, 0x5b, 0x08, 0x3f, 0xff, 0xff, 0xe6, 0x77, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x18, 0x1c, 0xe5, 0xd3, 0x7a, 0xde, 0xfa, 0x6f, 0x4e, 0x90, 0x79, 0x81, 0x8c, 0x81, 0xe3, 0xbb, 0x43, 0xf9, 0xf6, 0xac, 0xa8, 0xe1, 0x21, 0x4f, 0xe5, 0x56, 0x9d, 0x65, 0xac, 0xc3, 0xe5, 0x98, 0xb0, 0xf4, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_72(ch_72, ch_72 + sizeof(ch_72) -1);
CDataStream stream_72(vch_72, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_72;
stream_72 >> txHist_72;

if(block.vtx[0]->GetHash() == txHist_72.GetHash() && nHeight == 1265967) {
return true;
}
unsigned char ch_73[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5d, 0x51, 0x13, 0x04, 0x17, 0x8a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x86, 0x2a, 0xd3, 0xc1, 0xbe, 0x5a, 0x02, 0x0d, 0xdd, 0x12, 0x53, 0xff, 0x43, 0xef, 0x18, 0x42, 0xa7, 0x36, 0xb6, 0xb4, 0x00, 0x6c, 0xb4, 0x9b, 0xaf, 0xeb, 0x5f, 0xb1, 0xaf, 0x13, 0x5e, 0xa1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd3, 0xde, 0x11, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_73(ch_73, ch_73 + sizeof(ch_73) -1);
CDataStream stream_73(vch_73, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_73;
stream_73 >> txHist_73;

if(block.vtx[0]->GetHash() == txHist_73.GetHash() && nHeight == 1266013) {
return true;
}
unsigned char ch_74[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5c, 0x51, 0x13, 0x04, 0x07, 0x8a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x3a, 0xbd, 0x78, 0xc2, 0xbf, 0x3e, 0x2f, 0x98, 0xac, 0x79, 0xeb, 0xa2, 0x1f, 0x3b, 0x83, 0xd1, 0xa3, 0xeb, 0x36, 0xde, 0x02, 0x51, 0xc2, 0x0c, 0xf6, 0x67, 0xe2, 0xd2, 0x4a, 0x32, 0x12, 0xa3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd3, 0xce, 0x37, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_74(ch_74, ch_74 + sizeof(ch_74) -1);
CDataStream stream_74(vch_74, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_74;
stream_74 >> txHist_74;

if(block.vtx[0]->GetHash() == txHist_74.GetHash() && nHeight == 1266012) {
return true;
}
unsigned char ch_75[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x12, 0x51, 0x13, 0x04, 0x29, 0x78, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x01, 0x71, 0x22, 0x28, 0x00, 0x00, 0x7f, 0x5e, 0x6d, 0x91, 0x9c, 0x78, 0x00, 0x00, 0x00, 0x00, 0x01, 0x7e, 0x91, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xaf, 0x98, 0x38, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe8, 0xcd, 0x0e, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_75(ch_75, ch_75 + sizeof(ch_75) -1);
CDataStream stream_75(vch_75, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_75;
stream_75 >> txHist_75;

if(block.vtx[0]->GetHash() == txHist_75.GetHash() && nHeight == 1265938) {
return true;
}
unsigned char ch_76[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x17, 0x51, 0x13, 0x04, 0x8e, 0x78, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd9, 0xed, 0xd1, 0xfb, 0xa7, 0x7b, 0xa5, 0xcf, 0x63, 0x37, 0xc4, 0xf3, 0xd3, 0x80, 0x99, 0x1b, 0xe4, 0x84, 0x7e, 0x50, 0xdb, 0x34, 0x23, 0x65, 0x5d, 0x51, 0x56, 0x83, 0x06, 0x65, 0x38, 0x5b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe3, 0x73, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_76(ch_76, ch_76 + sizeof(ch_76) -1);
CDataStream stream_76(vch_76, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_76;
stream_76 >> txHist_76;

if(block.vtx[0]->GetHash() == txHist_76.GetHash() && nHeight == 1265943) {
return true;
}
unsigned char ch_77[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x0f, 0x51, 0x13, 0x04, 0xc6, 0x77, 0x38, 0x5b, 0x08, 0x3f, 0xff, 0xff, 0xfb, 0x3a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_77(ch_77, ch_77 + sizeof(ch_77) -1);
CDataStream stream_77(vch_77, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_77;
stream_77 >> txHist_77;

if(block.vtx[0]->GetHash() == txHist_77.GetHash() && nHeight == 1265935) {
return true;
}
unsigned char ch_78[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x28, 0x51, 0x13, 0x04, 0x98, 0x7a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5d, 0x74, 0x6c, 0x75, 0x61, 0x66, 0x65, 0x64, 0x5b, 0x20, 0x5d, 0x47, 0x55, 0x42, 0x45, 0x44, 0x5b, 0x20, 0x5d, 0x33, 0x30, 0x30, 0x2e, 0x38, 0x33, 0x3a, 0x36, 0x34, 0x3a, 0x34, 0x31, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe3, 0x37, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_78(ch_78, ch_78 + sizeof(ch_78) -1);
CDataStream stream_78(vch_78, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_78;
stream_78 >> txHist_78;

if(block.vtx[0]->GetHash() == txHist_78.GetHash() && nHeight == 1265960) {
return true;
}
unsigned char ch_79[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x59, 0x51, 0x13, 0x04, 0xdc, 0x88, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x6d, 0xbe, 0xfa, 0x08, 0x5b, 0x38, 0x86, 0x76, 0x04, 0x13, 0x51, 0x53, 0x03, 0x4c, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd1, 0xeb, 0x2c, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_79(ch_79, ch_79 + sizeof(ch_79) -1);
CDataStream stream_79(vch_79, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_79;
stream_79 >> txHist_79;

if(block.vtx[0]->GetHash() == txHist_79.GetHash() && nHeight == 1266009) {
return true;
}
unsigned char ch_80[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x58, 0x51, 0x13, 0x04, 0x94, 0x88, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x1e, 0xa1, 0x6c, 0x5d, 0x11, 0x57, 0x82, 0x86, 0x65, 0x48, 0x0e, 0xb3, 0x8a, 0x82, 0xea, 0x98, 0xb6, 0x28, 0x0c, 0x4c, 0x12, 0x68, 0x56, 0x8e, 0x83, 0xb3, 0xe3, 0xac, 0x8b, 0x83, 0x1e, 0x06, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd6, 0x78, 0x32, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_80(ch_80, ch_80 + sizeof(ch_80) -1);
CDataStream stream_80(vch_80, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_80;
stream_80 >> txHist_80;

if(block.vtx[0]->GetHash() == txHist_80.GetHash() && nHeight == 1266008) {
return true;
}
unsigned char ch_81[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x11, 0x51, 0x13, 0x04, 0x1d, 0x78, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x01, 0x8c, 0x6e, 0xf0, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x42, 0x50, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe9, 0x23, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_81(ch_81, ch_81 + sizeof(ch_81) -1);
CDataStream stream_81(vch_81, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_81;
stream_81 >> txHist_81;

if(block.vtx[0]->GetHash() == txHist_81.GetHash() && nHeight == 1265937) {
return true;
}
unsigned char ch_82[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x21, 0x51, 0x13, 0x04, 0x2e, 0x79, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x19, 0x12, 0x12, 0x43, 0x6f, 0x3b, 0xf2, 0xd8, 0x84, 0x7f, 0x48, 0xd3, 0xab, 0x14, 0x65, 0x7d, 0x60, 0x7d, 0xaa, 0xec, 0x30, 0xab, 0xf4, 0x04, 0x48, 0x74, 0xc3, 0x7f, 0x44, 0x93, 0x35, 0x81, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe3, 0x83, 0x12, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_82(ch_82, ch_82 + sizeof(ch_82) -1);
CDataStream stream_82(vch_82, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_82;
stream_82 >> txHist_82;

if(block.vtx[0]->GetHash() == txHist_82.GetHash() && nHeight == 1265953) {
return true;
}
unsigned char ch_83[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x55, 0x51, 0x13, 0x04, 0x3a, 0x87, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9b, 0xa3, 0x90, 0x72, 0x22, 0xf9, 0x26, 0xc1, 0x52, 0x82, 0xd3, 0x87, 0x75, 0x9c, 0x94, 0xe6, 0x85, 0x4f, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x01, 0x74, 0x3e, 0x58, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd2, 0x85, 0x3c, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_83(ch_83, ch_83 + sizeof(ch_83) -1);
CDataStream stream_83(vch_83, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_83;
stream_83 >> txHist_83;

if(block.vtx[0]->GetHash() == txHist_83.GetHash() && nHeight == 1266005) {
return true;
}
unsigned char ch_84[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x54, 0x51, 0x13, 0x04, 0xfd, 0x86, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x0d, 0x2a, 0xce, 0xbb, 0x66, 0x78, 0x14, 0x3a, 0xe0, 0xbf, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x6f, 0xb9, 0x77, 0xb5, 0x40, 0x88, 0x65, 0x7d, 0xc6, 0x31, 0x86, 0x48, 0xb1, 0xc3, 0x43, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd4, 0x37, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_84(ch_84, ch_84 + sizeof(ch_84) -1);
CDataStream stream_84(vch_84, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_84;
stream_84 >> txHist_84;

if(block.vtx[0]->GetHash() == txHist_84.GetHash() && nHeight == 1266004) {
return true;
}
unsigned char ch_85[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x0b, 0x51, 0x13, 0x04, 0x83, 0x76, 0x38, 0x5b, 0x08, 0x08, 0x00, 0x00, 0x04, 0x47, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x46, 0x28, 0x89, 0x7f, 0xf6, 0xe4, 0xa6, 0x84, 0x4c, 0xcb, 0x43, 0xcf, 0xbb, 0x0b, 0x4f, 0xcf, 0x8a, 0xe2, 0x17, 0x4a, 0x4d, 0x77, 0xd2, 0x99, 0x93, 0x04, 0xcf, 0x6a, 0x1c, 0x75, 0x04, 0x10, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_85(ch_85, ch_85 + sizeof(ch_85) -1);
CDataStream stream_85(vch_85, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_85;
stream_85 >> txHist_85;

if(block.vtx[0]->GetHash() == txHist_85.GetHash() && nHeight == 1265931) {
return true;
}
unsigned char ch_86[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x50, 0x51, 0x13, 0x04, 0x6c, 0x86, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x72, 0xa6, 0xd2, 0xee, 0x44, 0x8f, 0x86, 0xab, 0xae, 0x90, 0xee, 0x07, 0xa4, 0x5f, 0x1a, 0x9f, 0xbb, 0xf6, 0xbf, 0xe7, 0x88, 0x0b, 0x3b, 0x05, 0xcf, 0x96, 0x03, 0x21, 0x01, 0x40, 0x80, 0x79, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd4, 0x1d, 0x32, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_86(ch_86, ch_86 + sizeof(ch_86) -1);
CDataStream stream_86(vch_86, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_86;
stream_86 >> txHist_86;

if(block.vtx[0]->GetHash() == txHist_86.GetHash() && nHeight == 1266000) {
return true;
}
unsigned char ch_87[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4f, 0x51, 0x13, 0x04, 0x32, 0x86, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x41, 0x21, 0xc3, 0x9a, 0x02, 0xf9, 0x77, 0x5a, 0xc4, 0xc3, 0x1d, 0x40, 0x85, 0x17, 0x59, 0x09, 0x29, 0x41, 0x8b, 0xef, 0x4e, 0x9e, 0x78, 0x34, 0xde, 0x15, 0x20, 0x44, 0xeb, 0xeb, 0x59, 0x5d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd5, 0x81, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_87(ch_87, ch_87 + sizeof(ch_87) -1);
CDataStream stream_87(vch_87, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_87;
stream_87 >> txHist_87;

if(block.vtx[0]->GetHash() == txHist_87.GetHash() && nHeight == 1265999) {
return true;
}
unsigned char ch_88[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x00, 0x51, 0x13, 0x04, 0x55, 0x6f, 0x38, 0x5b, 0x08, 0x3f, 0xff, 0xff, 0xfa, 0x51, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x8f, 0x84, 0x88, 0x7b, 0xbc, 0xfc, 0x40, 0x5c, 0xb4, 0x27, 0x3c, 0xfe, 0xdd, 0x0d, 0xad, 0xa2, 0xc3, 0x78, 0xcd, 0xc5, 0xf1, 0xa8, 0x43, 0x76, 0x52, 0x2d, 0xa8, 0x6e, 0x0a, 0x48, 0x42, 0x25, 0x10, 0x94, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_88(ch_88, ch_88 + sizeof(ch_88) -1);
CDataStream stream_88(vch_88, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_88;
stream_88 >> txHist_88;

if(block.vtx[0]->GetHash() == txHist_88.GetHash() && nHeight == 1265920) {
return true;
}
unsigned char ch_89[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x05, 0x51, 0x13, 0x04, 0xd2, 0x74, 0x38, 0x5b, 0x08, 0x68, 0x00, 0x00, 0x02, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe4, 0x15, 0x6b, 0x85, 0x4b, 0x26, 0x55, 0x78, 0xb3, 0xdd, 0x71, 0x6f, 0xf4, 0xcc, 0x77, 0xf2, 0x2c, 0x47, 0x0a, 0x08, 0x8f, 0xa0, 0x70, 0x1d, 0xd2, 0xe0, 0x66, 0x06, 0xee, 0x18, 0xb5, 0x7f, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_89(ch_89, ch_89 + sizeof(ch_89) -1);
CDataStream stream_89(vch_89, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_89;
stream_89 >> txHist_89;

if(block.vtx[0]->GetHash() == txHist_89.GetHash() && nHeight == 1265925) {
return true;
}
unsigned char ch_90[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x49, 0x51, 0x13, 0x04, 0xe2, 0x84, 0x38, 0x5b, 0x08, 0x08, 0x00, 0x00, 0x01, 0x11, 0x08, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe8, 0x19, 0x8d, 0xaa, 0x5e, 0x08, 0xf1, 0x7e, 0x3f, 0x6a, 0x2d, 0x6b, 0x3b, 0x1f, 0x74, 0x3f, 0x83, 0x3f, 0xc6, 0x35, 0xa8, 0x42, 0x48, 0xe8, 0x67, 0x7e, 0xd2, 0x7f, 0x08, 0x62, 0x5e, 0x25, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_90(ch_90, ch_90 + sizeof(ch_90) -1);
CDataStream stream_90(vch_90, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_90;
stream_90 >> txHist_90;

if(block.vtx[0]->GetHash() == txHist_90.GetHash() && nHeight == 1265993) {
return true;
}
unsigned char ch_91[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x48, 0x51, 0x13, 0x04, 0xa9, 0x84, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc6, 0xaa, 0xb8, 0xef, 0x1a, 0xb6, 0x7f, 0xdd, 0x2c, 0x04, 0x2d, 0x4f, 0x66, 0xf0, 0x6f, 0xf0, 0x7c, 0x3e, 0xe7, 0x56, 0xde, 0x71, 0xf5, 0xfc, 0xd5, 0xd0, 0x89, 0xe0, 0xc0, 0xd7, 0x32, 0x65, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xd7, 0xf5, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_91(ch_91, ch_91 + sizeof(ch_91) -1);
CDataStream stream_91(vch_91, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_91;
stream_91 >> txHist_91;

if(block.vtx[0]->GetHash() == txHist_91.GetHash() && nHeight == 1265992) {
return true;
}
unsigned char ch_92[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf7, 0x50, 0x13, 0x04, 0x16, 0x66, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x3a, 0x72, 0x6b, 0x99, 0x1b, 0x10, 0xb8, 0x8b, 0x5b, 0x38, 0x65, 0xe2, 0x84, 0x32, 0x0f, 0xfb, 0xfe, 0xe1, 0xa2, 0x65, 0x0d, 0xef, 0x5a, 0x04, 0x08, 0xea, 0xa6, 0x6f, 0xbe, 0xf1, 0x3a, 0x49, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xf3, 0xd9, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_92(ch_92, ch_92 + sizeof(ch_92) -1);
CDataStream stream_92(vch_92, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_92;
stream_92 >> txHist_92;

if(block.vtx[0]->GetHash() == txHist_92.GetHash() && nHeight == 1265911) {
return true;
}
unsigned char ch_93[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x42, 0x51, 0x13, 0x04, 0x6d, 0x83, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x04, 0x13, 0x51, 0x39, 0x03, 0x4c, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe0, 0x2f, 0xdf, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_93(ch_93, ch_93 + sizeof(ch_93) -1);
CDataStream stream_93(vch_93, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_93;
stream_93 >> txHist_93;

if(block.vtx[0]->GetHash() == txHist_93.GetHash() && nHeight == 1265986) {
return true;
}
unsigned char ch_94[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x39, 0x51, 0x13, 0x04, 0x0c, 0x80, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x78, 0x8b, 0x94, 0x07, 0x84, 0xd0, 0xf7, 0x0b, 0xea, 0x1d, 0xb1, 0x4c, 0x20, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x20, 0x4c, 0xb1, 0x1d, 0xea, 0x0b, 0xf7, 0xd0, 0x84, 0x07, 0x94, 0x8b, 0x78, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xdf, 0x3a, 0x1f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_94(ch_94, ch_94 + sizeof(ch_94) -1);
CDataStream stream_94(vch_94, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_94;
stream_94 >> txHist_94;

if(block.vtx[0]->GetHash() == txHist_94.GetHash() && nHeight == 1265977) {
return true;
}
unsigned char ch_95[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf4, 0x50, 0x13, 0x04, 0xae, 0x64, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x45, 0x30, 0x48, 0x6b, 0x00, 0x00, 0x00, 0x01, 0xaf, 0x32, 0x93, 0xbf, 0xb9, 0x96, 0x1e, 0xc9, 0x4d, 0x86, 0xd9, 0x09, 0x26, 0xec, 0x4b, 0xff, 0x94, 0xc7, 0xc2, 0x61, 0x84, 0x30, 0xb4, 0x10, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xf0, 0x7e, 0x19, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_95(ch_95, ch_95 + sizeof(ch_95) -1);
CDataStream stream_95(vch_95, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_95;
stream_95 >> txHist_95;

if(block.vtx[0]->GetHash() == txHist_95.GetHash() && nHeight == 1265908) {
return true;
}
unsigned char ch_96[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xed, 0x50, 0x13, 0x04, 0xeb, 0x63, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xdd, 0xa6, 0x2f, 0xfb, 0x20, 0x00, 0x00, 0x02, 0x87, 0x74, 0xf7, 0x83, 0x62, 0x16, 0x4f, 0x01, 0x67, 0x02, 0x5a, 0x31, 0x1b, 0x2f, 0x1b, 0xef, 0x5b, 0x38, 0x62, 0x67, 0x5f, 0x23, 0x80, 0x87, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xea, 0xd7, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_96(ch_96, ch_96 + sizeof(ch_96) -1);
CDataStream stream_96(vch_96, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_96;
stream_96 >> txHist_96;

if(block.vtx[0]->GetHash() == txHist_96.GetHash() && nHeight == 1265901) {
return true;
}
unsigned char ch_97[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf9, 0x50, 0x13, 0x04, 0xdb, 0x66, 0x38, 0x5b, 0x08, 0x68, 0x00, 0x00, 0x06, 0x2c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x5c, 0x23, 0x8e, 0x36, 0x51, 0xa2, 0xff, 0x2f, 0x4a, 0x60, 0x42, 0x45, 0xae, 0xf8, 0x9b, 0xff, 0x52, 0x1e, 0x87, 0x74, 0x19, 0x2b, 0x9c, 0x12, 0x75, 0x11, 0x79, 0xb2, 0xb2, 0xa2, 0xc0, 0xa5, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_97(ch_97, ch_97 + sizeof(ch_97) -1);
CDataStream stream_97(vch_97, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_97;
stream_97 >> txHist_97;

if(block.vtx[0]->GetHash() == txHist_97.GetHash() && nHeight == 1265913) {
return true;
}
unsigned char ch_98[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf1, 0x50, 0x13, 0x04, 0x87, 0x64, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x31, 0x30, 0x30, 0x32, 0x36, 0x38, 0x37, 0x65, 0x34, 0x33, 0x62, 0x37, 0x66, 0x63, 0x35, 0x62, 0x64, 0x36, 0x31, 0x38, 0x35, 0x37, 0x61, 0x35, 0x63, 0x64, 0x31, 0x39, 0x35, 0x66, 0x62, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xed, 0x2d, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_98(ch_98, ch_98 + sizeof(ch_98) -1);
CDataStream stream_98(vch_98, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_98;
stream_98 >> txHist_98;

if(block.vtx[0]->GetHash() == txHist_98.GetHash() && nHeight == 1265905) {
return true;
}
unsigned char ch_99[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3f, 0x51, 0x13, 0x04, 0xfe, 0x81, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x29, 0x86, 0x3e, 0x67, 0xb5, 0xac, 0xb2, 0x57, 0xc4, 0xe0, 0x07, 0x86, 0xaf, 0xf6, 0x05, 0x80, 0xa0, 0x3a, 0xbc, 0x58, 0x09, 0x7e, 0x60, 0x3b, 0xfd, 0xdc, 0x21, 0x18, 0x10, 0xa3, 0x51, 0xbf, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xde, 0x21, 0x0f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_99(ch_99, ch_99 + sizeof(ch_99) -1);
CDataStream stream_99(vch_99, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_99;
stream_99 >> txHist_99;

if(block.vtx[0]->GetHash() == txHist_99.GetHash() && nHeight == 1265983) {
return true;
}
unsigned char ch_100[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xee, 0x50, 0x13, 0x04, 0xfa, 0x63, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa9, 0x3e, 0xb8, 0xef, 0xcd, 0x9f, 0x26, 0xeb, 0x85, 0x00, 0xe3, 0x29, 0x99, 0xa9, 0xe7, 0xb0, 0x63, 0x32, 0xb8, 0x91, 0x4a, 0x72, 0x38, 0x9e, 0xcf, 0xd6, 0xb5, 0xd0, 0x76, 0x9e, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xf3, 0x1c, 0x10, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_100(ch_100, ch_100 + sizeof(ch_100) -1);
CDataStream stream_100(vch_100, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_100;
stream_100 >> txHist_100;

if(block.vtx[0]->GetHash() == txHist_100.GetHash() && nHeight == 1265902) {
return true;
}
unsigned char ch_101[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe6, 0x50, 0x13, 0x04, 0x9e, 0x62, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa5, 0x86, 0xd3, 0x36, 0xa0, 0x65, 0xc5, 0x4e, 0x8b, 0x61, 0x74, 0xed, 0xc9, 0xdc, 0x5a, 0xfc, 0xc8, 0x5c, 0x75, 0x95, 0x7c, 0x34, 0x87, 0xca, 0x5d, 0xe7, 0x29, 0x20, 0xf8, 0xb6, 0x14, 0x48, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xf0, 0x4b, 0x31, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_101(ch_101, ch_101 + sizeof(ch_101) -1);
CDataStream stream_101(vch_101, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_101;
stream_101 >> txHist_101;

if(block.vtx[0]->GetHash() == txHist_101.GetHash() && nHeight == 1265894) {
return true;
}
unsigned char ch_102[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf3, 0x50, 0x13, 0x04, 0x8c, 0x64, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x4b, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xf0, 0xdb, 0x0f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_102(ch_102, ch_102 + sizeof(ch_102) -1);
CDataStream stream_102(vch_102, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_102;
stream_102 >> txHist_102;

if(block.vtx[0]->GetHash() == txHist_102.GetHash() && nHeight == 1265907) {
return true;
}
unsigned char ch_103[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xea, 0x50, 0x13, 0x04, 0x5f, 0x63, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x13, 0x1b, 0xdb, 0xac, 0xcb, 0xc0, 0x00, 0x00, 0x13, 0x1b, 0xdb, 0xac, 0xcb, 0xb0, 0x00, 0x00, 0x13, 0x1b, 0xdb, 0xac, 0xcb, 0xa0, 0x00, 0x00, 0x13, 0x1b, 0xdb, 0xac, 0xcb, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xed, 0x5c, 0xd6, 0x10, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_103(ch_103, ch_103 + sizeof(ch_103) -1);
CDataStream stream_103(vch_103, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_103;
stream_103 >> txHist_103;

if(block.vtx[0]->GetHash() == txHist_103.GetHash() && nHeight == 1265898) {
return true;
}
unsigned char ch_104[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3a, 0x51, 0x13, 0x04, 0x4f, 0x81, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xce, 0xbb, 0x66, 0x78, 0x14, 0x3a, 0xe0, 0xbf, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x01, 0x20, 0xe7, 0x59, 0xc0, 0xac, 0x88, 0x8b, 0x04, 0xfe, 0x05, 0xe4, 0x16, 0x00, 0xcd, 0xec, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xdc, 0x44, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_104(ch_104, ch_104 + sizeof(ch_104) -1);
CDataStream stream_104(vch_104, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_104;
stream_104 >> txHist_104;

if(block.vtx[0]->GetHash() == txHist_104.GetHash() && nHeight == 1265978) {
return true;
}
unsigned char ch_105[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x2d, 0x51, 0x13, 0x04, 0x46, 0x7d, 0x38, 0x5b, 0x08, 0x3f, 0xff, 0xff, 0xfb, 0x1e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_105(ch_105, ch_105 + sizeof(ch_105) -1);
CDataStream stream_105(vch_105, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_105;
stream_105 >> txHist_105;

if(block.vtx[0]->GetHash() == txHist_105.GetHash() && nHeight == 1265965) {
return true;
}
unsigned char ch_106[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe7, 0x50, 0x13, 0x04, 0xa6, 0x62, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf6, 0xab, 0x6f, 0x4b, 0x0a, 0x6b, 0xa8, 0xc5, 0x63, 0x3f, 0xe8, 0x79, 0xeb, 0x10, 0x4f, 0xf2, 0x2f, 0xd3, 0x0d, 0x53, 0x48, 0xc0, 0xd3, 0xfa, 0x61, 0xae, 0x27, 0xd2, 0x9b, 0xba, 0xfd, 0x7c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xee, 0xac, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_106(ch_106, ch_106 + sizeof(ch_106) -1);
CDataStream stream_106(vch_106, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_106;
stream_106 >> txHist_106;

if(block.vtx[0]->GetHash() == txHist_106.GetHash() && nHeight == 1265895) {
return true;
}
unsigned char ch_107[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xdf, 0x50, 0x13, 0x04, 0x00, 0x61, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa3, 0xdf, 0x99, 0xa9, 0x3f, 0xfd, 0xde, 0xd1, 0x71, 0x3f, 0x1c, 0xf6, 0xe2, 0xed, 0xa9, 0x21, 0xaa, 0x24, 0x6a, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xf0, 0x9c, 0x25, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_107(ch_107, ch_107 + sizeof(ch_107) -1);
CDataStream stream_107(vch_107, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_107;
stream_107 >> txHist_107;

if(block.vtx[0]->GetHash() == txHist_107.GetHash() && nHeight == 1265887) {
return true;
}
unsigned char ch_108[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xec, 0x50, 0x13, 0x04, 0xda, 0x63, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xfe, 0x05, 0xe4, 0x16, 0x00, 0xcd, 0xec, 0x07, 0x0d, 0x2a, 0xce, 0xbb, 0x66, 0x78, 0x14, 0x3a, 0xe0, 0xbf, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x6f, 0xb9, 0x77, 0xb5, 0x40, 0xf9, 0x8c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xf3, 0x1e, 0x2e, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_108(ch_108, ch_108 + sizeof(ch_108) -1);
CDataStream stream_108(vch_108, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_108;
stream_108 >> txHist_108;

if(block.vtx[0]->GetHash() == txHist_108.GetHash() && nHeight == 1265900) {
return true;
}
unsigned char ch_109[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe3, 0x50, 0x13, 0x04, 0xa4, 0x61, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0x4a, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x28, 0x3e, 0x74, 0x01, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xf0, 0x1c, 0x16, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_109(ch_109, ch_109 + sizeof(ch_109) -1);
CDataStream stream_109(vch_109, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_109;
stream_109 >> txHist_109;

if(block.vtx[0]->GetHash() == txHist_109.GetHash() && nHeight == 1265891) {
return true;
}
unsigned char ch_110[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x34, 0x51, 0x13, 0x04, 0x97, 0x7f, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x10, 0x59, 0x3b, 0xfa, 0xeb, 0x7f, 0x76, 0x3f, 0x64, 0x87, 0x17, 0x28, 0x03, 0x67, 0x4c, 0xdf, 0x28, 0xcf, 0xa8, 0x68, 0xd7, 0x0a, 0xdc, 0x65, 0x94, 0x7c, 0x12, 0xd4, 0x56, 0x9d, 0xc7, 0xbe, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe0, 0xa0, 0x2b, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xec, 0xb7, 0x83, 0xe7, 0xfa, 0xac, 0x88, 0x56, 0x2a, 0x05, 0x66, 0x8d, 0x8c, 0x0a, 0xab, 0xa7, 0x57, 0x63, 0xff, 0x78, 0x6f, 0x2b, 0x31, 0x2c, 0x55, 0x8c, 0x35, 0xcc, 0x03, 0xbf, 0xc2, 0xea, 0xf2, 0x67, 0x7c, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xe6, 0x65, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_110(ch_110, ch_110 + sizeof(ch_110) -1);
CDataStream stream_110(vch_110, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_110;
stream_110 >> txHist_110;

if(block.vtx[0]->GetHash() == txHist_110.GetHash() && nHeight == 1265972) {
return true;
}
unsigned char ch_111[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x26, 0x51, 0x13, 0x04, 0x71, 0x7a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x1f, 0x27, 0x5f, 0xe1, 0x87, 0xc2, 0xf0, 0x00, 0xc3, 0x9e, 0xf4, 0x19, 0xc3, 0x0b, 0x41, 0xb7, 0xa8, 0xcc, 0xc0, 0xfe, 0xd6, 0xa2, 0x48, 0xc6, 0x10, 0x37, 0xbf, 0x12, 0x38, 0xc5, 0x4b, 0x7f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe3, 0x66, 0x10, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_111(ch_111, ch_111 + sizeof(ch_111) -1);
CDataStream stream_111(vch_111, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_111;
stream_111 >> txHist_111;

if(block.vtx[0]->GetHash() == txHist_111.GetHash() && nHeight == 1265958) {
return true;
}
unsigned char ch_112[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe0, 0x50, 0x13, 0x04, 0x37, 0x61, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x13, 0x1b, 0xdb, 0xaa, 0xd7, 0x70, 0x00, 0x00, 0x13, 0x1b, 0xdb, 0xaa, 0xd6, 0xb0, 0x00, 0x00, 0x13, 0x1b, 0xdb, 0xaa, 0xd6, 0x50, 0x00, 0x00, 0x13, 0x1b, 0xdb, 0xaa, 0xd6, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xee, 0x94, 0x3a, 0x01, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_112(ch_112, ch_112 + sizeof(ch_112) -1);
CDataStream stream_112(vch_112, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_112;
stream_112 >> txHist_112;

if(block.vtx[0]->GetHash() == txHist_112.GetHash() && nHeight == 1265888) {
return true;
}
unsigned char ch_113[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd4, 0x50, 0x13, 0x04, 0x39, 0x5d, 0x38, 0x5b, 0x08, 0x3f, 0xff, 0xff, 0xfa, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x39, 0xde, 0xd5, 0x65, 0x01, 0x77, 0x90, 0x92, 0x5e, 0x35, 0x62, 0x3f, 0x21, 0x16, 0x14, 0x5d, 0x42, 0x81, 0x34, 0xdc, 0x4f, 0xfb, 0x73, 0x16, 0x9c, 0x0c, 0x40, 0x61, 0x72, 0xad, 0xd4, 0x47, 0x70, 0x40, 0x63, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_113(ch_113, ch_113 + sizeof(ch_113) -1);
CDataStream stream_113(vch_113, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_113;
stream_113 >> txHist_113;

if(block.vtx[0]->GetHash() == txHist_113.GetHash() && nHeight == 1265876) {
return true;
}
unsigned char ch_114[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xdc, 0x50, 0x13, 0x04, 0x9d, 0x60, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x81, 0xc1, 0xf6, 0x6f, 0xb7, 0xb1, 0x2f, 0x70, 0x36, 0x20, 0xa8, 0xc4, 0x4d, 0x9f, 0x7d, 0xf1, 0x8a, 0xcc, 0x8c, 0x2e, 0xbf, 0xbf, 0x08, 0xa9, 0x46, 0x29, 0x0e, 0x7d, 0xc0, 0xd3, 0x92, 0xaa, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xec, 0xf2, 0x0d, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_114(ch_114, ch_114 + sizeof(ch_114) -1);
CDataStream stream_114(vch_114, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_114;
stream_114 >> txHist_114;

if(block.vtx[0]->GetHash() == txHist_114.GetHash() && nHeight == 1265884) {
return true;
}
unsigned char ch_115[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2e, 0x51, 0x13, 0x04, 0xcc, 0x7d, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x73, 0x16, 0x4a, 0x77, 0xd7, 0x16, 0x63, 0xd4, 0x53, 0x58, 0xb9, 0x24, 0x86, 0xe5, 0x63, 0x6d, 0x10, 0xb1, 0x49, 0xab, 0x47, 0x73, 0x76, 0x60, 0xbc, 0x04, 0xe6, 0xe4, 0xe9, 0x6b, 0x3f, 0xef, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_115(ch_115, ch_115 + sizeof(ch_115) -1);
CDataStream stream_115(vch_115, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_115;
stream_115 >> txHist_115;

if(block.vtx[0]->GetHash() == txHist_115.GetHash() && nHeight == 1265966) {
return true;
}
unsigned char ch_116[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1f, 0x51, 0x13, 0x04, 0x0e, 0x79, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x14, 0x3a, 0xe0, 0xbf, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x01, 0x20, 0xe7, 0x59, 0xc0, 0xa7, 0xd0, 0xb6, 0xe1, 0xe4, 0xb5, 0x46, 0x19, 0x00, 0x00, 0x00, 0x01, 0x20, 0xe7, 0x59, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe7, 0xc1, 0x0f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_116(ch_116, ch_116 + sizeof(ch_116) -1);
CDataStream stream_116(vch_116, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_116;
stream_116 >> txHist_116;

if(block.vtx[0]->GetHash() == txHist_116.GetHash() && nHeight == 1265951) {
return true;
}
unsigned char ch_117[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xcf, 0x50, 0x13, 0x04, 0xcd, 0x5b, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x3e, 0xf4, 0x04, 0x7f, 0x6f, 0x15, 0x1a, 0x0c, 0xfe, 0xd3, 0xf3, 0x30, 0xfe, 0xbc, 0x10, 0x15, 0x2b, 0xd9, 0x61, 0x6a, 0x5a, 0xa2, 0x94, 0xb3, 0x32, 0x94, 0x53, 0xdc, 0x2c, 0xda, 0xf1, 0x41, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xff, 0xb2, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_117(ch_117, ch_117 + sizeof(ch_117) -1);
CDataStream stream_117(vch_117, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_117;
stream_117 >> txHist_117;

if(block.vtx[0]->GetHash() == txHist_117.GetHash() && nHeight == 1265871) {
return true;
}
unsigned char ch_118[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x27, 0x51, 0x13, 0x04, 0x8f, 0x7a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb4, 0x41, 0xcc, 0xd8, 0xff, 0x41, 0xb6, 0xf3, 0x66, 0xbc, 0x6a, 0xc8, 0x87, 0x8d, 0x58, 0xf4, 0x7b, 0x07, 0x38, 0xbd, 0xb2, 0x03, 0x85, 0x64, 0xbf, 0x70, 0xf1, 0x25, 0xd8, 0xdb, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe7, 0xbc, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_118(ch_118, ch_118 + sizeof(ch_118) -1);
CDataStream stream_118(vch_118, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_118;
stream_118 >> txHist_118;

if(block.vtx[0]->GetHash() == txHist_118.GetHash() && nHeight == 1265959) {
return true;
}
unsigned char ch_119[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x19, 0x51, 0x13, 0x04, 0xa3, 0x78, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x89, 0xa6, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe4, 0xfa, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_119(ch_119, ch_119 + sizeof(ch_119) -1);
CDataStream stream_119(vch_119, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_119;
stream_119 >> txHist_119;

if(block.vtx[0]->GetHash() == txHist_119.GetHash() && nHeight == 1265945) {
return true;
}
unsigned char ch_120[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xca, 0x50, 0x13, 0x04, 0x88, 0x5b, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x22, 0x18, 0x93, 0x59, 0xcf, 0xb3, 0xf1, 0xd7, 0x15, 0x08, 0xa7, 0x05, 0x6e, 0x6f, 0xc1, 0x88, 0x84, 0x84, 0xfb, 0xd0, 0xf8, 0x49, 0xad, 0xd6, 0xcc, 0xb9, 0xe3, 0x3f, 0x33, 0x1a, 0xb0, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xff, 0x81, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_120(ch_120, ch_120 + sizeof(ch_120) -1);
CDataStream stream_120(vch_120, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_120;
stream_120 >> txHist_120;

if(block.vtx[0]->GetHash() == txHist_120.GetHash() && nHeight == 1265866) {
return true;
}
unsigned char ch_121[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x20, 0x51, 0x13, 0x04, 0x2a, 0x79, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xef, 0x39, 0xec, 0x80, 0x06, 0xc9, 0xd7, 0xa7, 0xbc, 0x46, 0x33, 0x41, 0xc5, 0x5b, 0x2a, 0x6b, 0xfe, 0x4e, 0x61, 0x27, 0x39, 0x0c, 0xdc, 0x17, 0x30, 0x9d, 0xde, 0x62, 0x99, 0x31, 0xe5, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe3, 0xc3, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_121(ch_121, ch_121 + sizeof(ch_121) -1);
CDataStream stream_121(vch_121, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_121;
stream_121 >> txHist_121;

if(block.vtx[0]->GetHash() == txHist_121.GetHash() && nHeight == 1265952) {
return true;
}
unsigned char ch_122[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x13, 0x51, 0x13, 0x04, 0x3f, 0x78, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x2b, 0x73, 0x0d, 0x9d, 0x43, 0x40, 0x84, 0xa5, 0x80, 0x39, 0x52, 0x5f, 0xa2, 0x0f, 0xb4, 0x72, 0x07, 0x2b, 0xc1, 0xcb, 0x6e, 0xdc, 0xfa, 0xa8, 0xfc, 0xaf, 0x8a, 0x68, 0xf8, 0x0d, 0xaa, 0x61, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe8, 0xff, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_122(ch_122, ch_122 + sizeof(ch_122) -1);
CDataStream stream_122(vch_122, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_122;
stream_122 >> txHist_122;

if(block.vtx[0]->GetHash() == txHist_122.GetHash() && nHeight == 1265939) {
return true;
}
unsigned char ch_123[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc4, 0x50, 0x13, 0x04, 0x05, 0x5b, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x01, 0x8b, 0xa1, 0xc8, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xfe, 0xb6, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_123(ch_123, ch_123 + sizeof(ch_123) -1);
CDataStream stream_123(vch_123, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_123;
stream_123 >> txHist_123;

if(block.vtx[0]->GetHash() == txHist_123.GetHash() && nHeight == 1265860) {
return true;
}
unsigned char ch_124[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc8, 0x50, 0x13, 0x04, 0x6e, 0x5b, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xcb, 0x35, 0xfc, 0xdc, 0x1c, 0xcd, 0xf8, 0x6c, 0xff, 0x86, 0x6c, 0xdb, 0x3e, 0xee, 0x2e, 0x35, 0x13, 0x55, 0x9c, 0xfb, 0x1d, 0x2e, 0x71, 0xfe, 0xd0, 0x97, 0x94, 0xc9, 0x3b, 0xcd, 0x12, 0xc9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xff, 0x25, 0x2f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_124(ch_124, ch_124 + sizeof(ch_124) -1);
CDataStream stream_124(vch_124, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_124;
stream_124 >> txHist_124;

if(block.vtx[0]->GetHash() == txHist_124.GetHash() && nHeight == 1265864) {
return true;
}
unsigned char ch_125[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1a, 0x51, 0x13, 0x04, 0xb2, 0x78, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x19, 0xbc, 0x52, 0xe1, 0x8d, 0x86, 0x9e, 0x9a, 0x9a, 0x9e, 0x86, 0x8d, 0xe1, 0x52, 0xbc, 0x19, 0x58, 0xec, 0xd8, 0xc8, 0x4b, 0x34, 0xd1, 0xc6, 0xdc, 0x19, 0xc7, 0x5a, 0x95, 0x64, 0x0f, 0xbf, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe3, 0x5f, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_125(ch_125, ch_125 + sizeof(ch_125) -1);
CDataStream stream_125(vch_125, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_125;
stream_125 >> txHist_125;

if(block.vtx[0]->GetHash() == txHist_125.GetHash() && nHeight == 1265946) {
return true;
}
unsigned char ch_126[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x0d, 0x51, 0x13, 0x04, 0xfa, 0x76, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5f, 0xf0, 0x49, 0xcc, 0x7d, 0x06, 0x49, 0x71, 0x69, 0xda, 0x3a, 0x0e, 0xbd, 0x6e, 0x6b, 0xf1, 0x66, 0xb6, 0x1e, 0x5f, 0x32, 0x83, 0x53, 0x48, 0xc3, 0xf9, 0x20, 0x40, 0x54, 0xac, 0xb2, 0x30, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x6b, 0xc0, 0x63, 0xef, 0xcf, 0xe5, 0x1d, 0x73, 0x8d, 0x37, 0x8a, 0x86, 0x57, 0xb7, 0x40, 0x58, 0x49, 0xc9, 0x24, 0xe5, 0xa1, 0xa7, 0xa7, 0x4d, 0x5b, 0x42, 0xde, 0x12, 0xfa, 0xb8, 0xfc, 0xa3, 0x18, 0x18, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_126(ch_126, ch_126 + sizeof(ch_126) -1);
CDataStream stream_126(vch_126, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_126;
stream_126 >> txHist_126;

if(block.vtx[0]->GetHash() == txHist_126.GetHash() && nHeight == 1265933) {
return true;
}
unsigned char ch_127[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xbf, 0x50, 0x13, 0x04, 0x77, 0x5a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x52, 0x70, 0x00, 0x00, 0x00, 0x00, 0x01, 0x7c, 0x1a, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0xb6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x52, 0xd0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xff, 0x77, 0x24, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_127(ch_127, ch_127 + sizeof(ch_127) -1);
CDataStream stream_127(vch_127, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_127;
stream_127 >> txHist_127;

if(block.vtx[0]->GetHash() == txHist_127.GetHash() && nHeight == 1265855) {
return true;
}
unsigned char ch_128[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc2, 0x50, 0x13, 0x04, 0xc4, 0x5a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x48, 0x83, 0xf2, 0x44, 0xe9, 0x7a, 0x48, 0xf3, 0xe6, 0x10, 0xe8, 0x77, 0x5b, 0xd0, 0xcf, 0x65, 0x09, 0xd7, 0x14, 0x27, 0xb5, 0xb9, 0xc1, 0x9c, 0xba, 0xf3, 0xcc, 0xff, 0x59, 0xca, 0x1f, 0x2c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xfd, 0x73, 0x0f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_128(ch_128, ch_128 + sizeof(ch_128) -1);
CDataStream stream_128(vch_128, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_128;
stream_128 >> txHist_128;

if(block.vtx[0]->GetHash() == txHist_128.GetHash() && nHeight == 1265858) {
return true;
}
unsigned char ch_129[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x14, 0x51, 0x13, 0x04, 0x51, 0x78, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbb, 0x16, 0x60, 0x6e, 0x02, 0x21, 0x01, 0x0f, 0x9c, 0xf6, 0x1a, 0xaa, 0xd4, 0x90, 0xc3, 0x77, 0x91, 0xab, 0x15, 0xaf, 0xf0, 0xeb, 0x09, 0x7f, 0xb1, 0x6d, 0xa6, 0x99, 0xdc, 0xfe, 0xa2, 0xf0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe8, 0x1b, 0x1b, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_129(ch_129, ch_129 + sizeof(ch_129) -1);
CDataStream stream_129(vch_129, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_129;
stream_129 >> txHist_129;

if(block.vtx[0]->GetHash() == txHist_129.GetHash() && nHeight == 1265940) {
return true;
}
unsigned char ch_130[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xbd, 0x50, 0x13, 0x04, 0x5f, 0x5a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x46, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x01, 0x74, 0x3e, 0x78, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x4a, 0x70, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xfe, 0x4c, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_130(ch_130, ch_130 + sizeof(ch_130) -1);
CDataStream stream_130(vch_130, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_130;
stream_130 >> txHist_130;

if(block.vtx[0]->GetHash() == txHist_130.GetHash() && nHeight == 1265853) {
return true;
}
unsigned char ch_131[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb8, 0x50, 0x13, 0x04, 0x8f, 0x58, 0x38, 0x5b, 0x08, 0x3f, 0xff, 0xff, 0xf9, 0x60, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_131(ch_131, ch_131 + sizeof(ch_131) -1);
CDataStream stream_131(vch_131, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_131;
stream_131 >> txHist_131;

if(block.vtx[0]->GetHash() == txHist_131.GetHash() && nHeight == 1265848) {
return true;
}
unsigned char ch_132[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x08, 0x51, 0x13, 0x04, 0x1c, 0x76, 0x38, 0x5b, 0x08, 0x08, 0x00, 0x00, 0x01, 0x84, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x3d, 0xb4, 0xa1, 0x1e, 0x28, 0x1d, 0xb2, 0x67, 0x04, 0xb1, 0xef, 0x51, 0x59, 0x6e, 0xc0, 0x90, 0x08, 0xdd, 0xe2, 0x81, 0xe3, 0x48, 0xed, 0x32, 0xaf, 0x8d, 0xb5, 0xeb, 0x4c, 0x44, 0x0e, 0xca, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_132(ch_132, ch_132 + sizeof(ch_132) -1);
CDataStream stream_132(vch_132, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_132;
stream_132 >> txHist_132;

if(block.vtx[0]->GetHash() == txHist_132.GetHash() && nHeight == 1265928) {
return true;
}
unsigned char ch_133[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xfb, 0x50, 0x13, 0x04, 0xae, 0x67, 0x38, 0x5b, 0x08, 0x47, 0xff, 0xff, 0x8f, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x69, 0xb9, 0x5e, 0xf2, 0x6a, 0xa5, 0x19, 0x17, 0xa0, 0xc1, 0x91, 0xf4, 0xa5, 0x85, 0xb6, 0x40, 0x57, 0xfd, 0xca, 0x4c, 0xff, 0x3d, 0xb7, 0x69, 0x3f, 0x9b, 0x2a, 0xe9, 0xb3, 0xb0, 0x40, 0xad, 0xe8, 0xaf, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_133(ch_133, ch_133 + sizeof(ch_133) -1);
CDataStream stream_133(vch_133, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_133;
stream_133 >> txHist_133;

if(block.vtx[0]->GetHash() == txHist_133.GetHash() && nHeight == 1265915) {
return true;
}
unsigned char ch_134[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb0, 0x50, 0x13, 0x04, 0x86, 0x53, 0x38, 0x5b, 0x08, 0x3f, 0xff, 0xff, 0xe6, 0xbf, 0x0c, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xcd, 0x47, 0xd7, 0x71, 0xa2, 0x87, 0x32, 0xfb, 0x9d, 0x90, 0x76, 0x2b, 0x79, 0xec, 0x3a, 0x1f, 0x80, 0x6e, 0xff, 0xf8, 0x9b, 0x51, 0x5a, 0x31, 0x14, 0xef, 0x32, 0x01, 0x6e, 0x8d, 0xaf, 0x33, 0x50, 0xad, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_134(ch_134, ch_134 + sizeof(ch_134) -1);
CDataStream stream_134(vch_134, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_134;
stream_134 >> txHist_134;

if(block.vtx[0]->GetHash() == txHist_134.GetHash() && nHeight == 1265840) {
return true;
}
unsigned char ch_135[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb3, 0x50, 0x13, 0x04, 0xf8, 0x53, 0x38, 0x5b, 0x08, 0x68, 0x00, 0x00, 0x06, 0x2d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x1d, 0x61, 0x20, 0x35, 0x18, 0x5a, 0x29, 0x0b, 0x3b, 0xc8, 0x7b, 0xd4, 0x69, 0x13, 0xac, 0xe5, 0xc5, 0xf7, 0x98, 0xb5, 0x15, 0x9d, 0xca, 0x1d, 0x77, 0x5e, 0x7f, 0x78, 0xdc, 0x7b, 0x93, 0x96, 0x60, 0x70, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_135(ch_135, ch_135 + sizeof(ch_135) -1);
CDataStream stream_135(vch_135, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_135;
stream_135 >> txHist_135;

if(block.vtx[0]->GetHash() == txHist_135.GetHash() && nHeight == 1265843) {
return true;
}
unsigned char ch_136[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x02, 0x51, 0x13, 0x04, 0xa7, 0x71, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x01, 0x23, 0x17, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0xc6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xae, 0xcd, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0xff, 0xff, 0xff, 0xcf, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe0, 0xa0, 0xfc, 0x62, 0x1f, 0x10, 0x64, 0xb8, 0x0f, 0x69, 0x4d, 0x60, 0xc7, 0x72, 0x5f, 0x8c, 0xc6, 0xfd, 0xd3, 0x66, 0x4c, 0x5b, 0x4c, 0x0b, 0x6f, 0xb4, 0x98, 0xa5, 0x27, 0xbe, 0x11, 0x12, 0xb4, 0x3f, 0xf4, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x46, 0x5d, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0x5e, 0xd2, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_136(ch_136, ch_136 + sizeof(ch_136) -1);
CDataStream stream_136(vch_136, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_136;
stream_136 >> txHist_136;

if(block.vtx[0]->GetHash() == txHist_136.GetHash() && nHeight == 1265922) {
return true;
}
unsigned char ch_137[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf5, 0x50, 0x13, 0x04, 0xd5, 0x64, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6d, 0x6d, 0xbe, 0xfa, 0x08, 0x5b, 0x38, 0x62, 0x32, 0x04, 0x13, 0x50, 0xe4, 0x03, 0x4c, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xf2, 0xcb, 0x1e, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe4, 0xfa, 0x65, 0x99, 0x16, 0xcc, 0x41, 0x9d, 0x35, 0x1d, 0x94, 0x70, 0xe8, 0x5f, 0x4b, 0xdc, 0x22, 0x23, 0xb5, 0xe8, 0x72, 0x58, 0xfa, 0xdb, 0x90, 0xd5, 0xf7, 0x9e, 0x00, 0x07, 0xf2, 0xb7, 0x18, 0xa5, 0x82, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x08, 0x76, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_137(ch_137, ch_137 + sizeof(ch_137) -1);
CDataStream stream_137(vch_137, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_137;
stream_137 >> txHist_137;

if(block.vtx[0]->GetHash() == txHist_137.GetHash() && nHeight == 1265909) {
return true;
}
unsigned char ch_138[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xad, 0x50, 0x13, 0x04, 0x48, 0x52, 0x38, 0x5b, 0x08, 0x3f, 0xff, 0xff, 0xfc, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_138(ch_138, ch_138 + sizeof(ch_138) -1);
CDataStream stream_138(vch_138, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_138;
stream_138 >> txHist_138;

if(block.vtx[0]->GetHash() == txHist_138.GetHash() && nHeight == 1265837) {
return true;
}
unsigned char ch_139[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xef, 0x50, 0x13, 0x04, 0x7c, 0x64, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x01, 0x89, 0xd2, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xed, 0x44, 0x09, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x53, 0xb5, 0x47, 0x4d, 0x61, 0xee, 0x2f, 0xd5, 0x7c, 0xa4, 0xb6, 0x6b, 0x24, 0x10, 0xdd, 0x6a, 0xac, 0xcc, 0xde, 0x1a, 0x74, 0xd3, 0x31, 0xaa, 0x92, 0xde, 0x7e, 0xc7, 0xd2, 0xa4, 0x9b, 0x9f, 0x5a, 0x10, 0x29, 0xba, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x5e, 0x24, 0xe9, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_139(ch_139, ch_139 + sizeof(ch_139) -1);
CDataStream stream_139(vch_139, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_139;
stream_139 >> txHist_139;

if(block.vtx[0]->GetHash() == txHist_139.GetHash() && nHeight == 1265903) {
return true;
}
unsigned char ch_140[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa7, 0x50, 0x13, 0x04, 0x00, 0x4f, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x1a, 0x20, 0xe0, 0x0a, 0xcb, 0xe1, 0xe9, 0xc8, 0x80, 0xc2, 0x83, 0xdc, 0x41, 0x17, 0x0c, 0x29, 0x17, 0xcc, 0xea, 0x18, 0x9b, 0x2a, 0xce, 0x3c, 0x38, 0x11, 0x13, 0x4e, 0x19, 0x00, 0xcc, 0x84, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xd1, 0x12, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_140(ch_140, ch_140 + sizeof(ch_140) -1);
CDataStream stream_140(vch_140, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_140;
stream_140 >> txHist_140;

if(block.vtx[0]->GetHash() == txHist_140.GetHash() && nHeight == 1265831) {
return true;
}
unsigned char ch_141[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa9, 0x50, 0x13, 0x04, 0x3b, 0x51, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x55, 0x4e, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x91, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x4e, 0x2c, 0xcb, 0x1f, 0xc3, 0xf1, 0xd9, 0x64, 0x3f, 0x81, 0x5e, 0xa8, 0x17, 0xa1, 0x6e, 0xd4, 0xe9, 0x9f, 0xc2, 0x50, 0xa1, 0xed, 0x35, 0xa7, 0x3a, 0x41, 0x10, 0x0f, 0x7a, 0x8f, 0x56, 0xf2, 0x20, 0x1c, 0x79, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x60, 0x5d, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_141(ch_141, ch_141 + sizeof(ch_141) -1);
CDataStream stream_141(vch_141, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_141;
stream_141 >> txHist_141;

if(block.vtx[0]->GetHash() == txHist_141.GetHash() && nHeight == 1265833) {
return true;
}
unsigned char ch_142[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf6, 0x50, 0x13, 0x04, 0xe2, 0x65, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x16, 0x8d, 0x9a, 0xc3, 0xe0, 0xf6, 0x46, 0x34, 0x13, 0x35, 0xc2, 0x57, 0x8d, 0x42, 0x30, 0x05, 0xa6, 0xdd, 0x33, 0x1a, 0x58, 0x34, 0x06, 0x14, 0xf8, 0x89, 0xff, 0xff, 0xff, 0xfe, 0xef, 0xd6, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xea, 0x75, 0x3b, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x63, 0x0b, 0xcf, 0x0c, 0x72, 0xbb, 0x37, 0x4a, 0xf8, 0x30, 0x3c, 0x77, 0x21, 0x7d, 0x98, 0x6a, 0xcc, 0xa9, 0xa0, 0x04, 0xb0, 0x6e, 0xd0, 0x0d, 0x72, 0xf3, 0xfb, 0xce, 0xa1, 0xf8, 0x62, 0x09, 0xde, 0xd8, 0x7c, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x0a, 0x67, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_142(ch_142, ch_142 + sizeof(ch_142) -1);
CDataStream stream_142(vch_142, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_142;
stream_142 >> txHist_142;

if(block.vtx[0]->GetHash() == txHist_142.GetHash() && nHeight == 1265910) {
return true;
}
unsigned char ch_143[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe8, 0x50, 0x13, 0x04, 0xe8, 0x62, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7c, 0xcd, 0xc7, 0x23, 0x48, 0xba, 0xe5, 0x04, 0xf9, 0xcb, 0xa3, 0xd3, 0xc8, 0x72, 0x09, 0x9f, 0xc1, 0x46, 0x66, 0x41, 0x63, 0x74, 0x6a, 0xbf, 0xc5, 0xa0, 0xf8, 0x43, 0x95, 0x87, 0xb8, 0xa0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xf3, 0xde, 0x2d, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_143(ch_143, ch_143 + sizeof(ch_143) -1);
CDataStream stream_143(vch_143, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_143;
stream_143 >> txHist_143;

if(block.vtx[0]->GetHash() == txHist_143.GetHash() && nHeight == 1265896) {
return true;
}
unsigned char ch_144[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa3, 0x50, 0x13, 0x04, 0x6d, 0x4e, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x8d, 0x05, 0x48, 0xfd, 0xe6, 0x33, 0x7a, 0x9f, 0x95, 0xbc, 0x17, 0x02, 0xa6, 0x21, 0x74, 0x9b, 0x37, 0xfa, 0x90, 0x5a, 0x36, 0x3e, 0x01, 0x2e, 0xa0, 0xb7, 0x67, 0xc5, 0x33, 0xd8, 0x5f, 0xb1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x20, 0x10, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_144(ch_144, ch_144 + sizeof(ch_144) -1);
CDataStream stream_144(vch_144, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_144;
stream_144 >> txHist_144;

if(block.vtx[0]->GetHash() == txHist_144.GetHash() && nHeight == 1265827) {
return true;
}
unsigned char ch_145[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xeb, 0x50, 0x13, 0x04, 0x94, 0x63, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x62, 0x20, 0x32, 0x38, 0x38, 0x33, 0x35, 0x32, 0x34, 0x30, 0x2e, 0x32, 0x36, 0x35, 0x36, 0x31, 0x31, 0x34, 0x2f, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x20, 0x66, 0x66, 0x69, 0x64, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xee, 0x32, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_145(ch_145, ch_145 + sizeof(ch_145) -1);
CDataStream stream_145(vch_145, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_145;
stream_145 >> txHist_145;

if(block.vtx[0]->GetHash() == txHist_145.GetHash() && nHeight == 1265899) {
return true;
}
unsigned char ch_146[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa5, 0x50, 0x13, 0x04, 0xcd, 0x4e, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x0c, 0xcc, 0x5e, 0x6b, 0x01, 0x01, 0x59, 0xea, 0x44, 0xef, 0xc5, 0xcb, 0x94, 0x0e, 0x5a, 0xab, 0x64, 0xc0, 0x52, 0xba, 0x3a, 0xd8, 0xc4, 0x55, 0x69, 0xde, 0xc7, 0x56, 0x01, 0x8a, 0x32, 0x32, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x17, 0x47, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_146(ch_146, ch_146 + sizeof(ch_146) -1);
CDataStream stream_146(vch_146, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_146;
stream_146 >> txHist_146;

if(block.vtx[0]->GetHash() == txHist_146.GetHash() && nHeight == 1265829) {
return true;
}
unsigned char ch_147[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf0, 0x50, 0x13, 0x04, 0x91, 0x64, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc4, 0x98, 0x40, 0x02, 0x90, 0xf0, 0x5a, 0x38, 0xb8, 0x1b, 0xaa, 0xb0, 0xa7, 0x54, 0xfd, 0x23, 0x3e, 0x18, 0x05, 0xbe, 0xfa, 0x5d, 0x3d, 0x63, 0xb9, 0x4e, 0xe2, 0xef, 0xa2, 0x89, 0x1f, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_147(ch_147, ch_147 + sizeof(ch_147) -1);
CDataStream stream_147(vch_147, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_147;
stream_147 >> txHist_147;

if(block.vtx[0]->GetHash() == txHist_147.GetHash() && nHeight == 1265904) {
return true;
}
unsigned char ch_148[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe1, 0x50, 0x13, 0x04, 0x5a, 0x61, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x30, 0x32, 0x5b, 0x6d, 0x36, 0x33, 0x5b, 0x1b, 0x63, 0xda, 0x85, 0x80, 0x4e, 0x0c, 0x8a, 0xbc, 0xfa, 0x90, 0xa7, 0x73, 0x6a, 0x22, 0x7c, 0x5b, 0x2f, 0x01, 0x1e, 0xa5, 0xd5, 0x70, 0x9f, 0x7c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xf3, 0xc5, 0x0e, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_148(ch_148, ch_148 + sizeof(ch_148) -1);
CDataStream stream_148(vch_148, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_148;
stream_148 >> txHist_148;

if(block.vtx[0]->GetHash() == txHist_148.GetHash() && nHeight == 1265889) {
return true;
}
unsigned char ch_149[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd9, 0x50, 0x13, 0x04, 0x4b, 0x60, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x46, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x01, 0x74, 0x3e, 0x28, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x4a, 0x70, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xf3, 0xa6, 0x2b, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x41, 0x8a, 0x32, 0x85, 0x89, 0x27, 0xf6, 0xaa, 0x01, 0xff, 0x2b, 0xc3, 0xa1, 0x82, 0x4c, 0x82, 0x44, 0x89, 0x20, 0x9b, 0x9c, 0xc1, 0x8f, 0x21, 0x14, 0xe6, 0xee, 0x6f, 0x49, 0x86, 0x9f, 0x50, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_149(ch_149, ch_149 + sizeof(ch_149) -1);
CDataStream stream_149(vch_149, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_149;
stream_149 >> txHist_149;

if(block.vtx[0]->GetHash() == txHist_149.GetHash() && nHeight == 1265881) {
return true;
}
unsigned char ch_150[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9f, 0x50, 0x13, 0x04, 0x0e, 0x4e, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x01, 0x5d, 0xba, 0x88, 0x00, 0x00, 0x00, 0x00, 0x01, 0x5d, 0xba, 0x28, 0x00, 0x00, 0x06, 0x81, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf4, 0x1a, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_150(ch_150, ch_150 + sizeof(ch_150) -1);
CDataStream stream_150(vch_150, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_150;
stream_150 >> txHist_150;

if(block.vtx[0]->GetHash() == txHist_150.GetHash() && nHeight == 1265823) {
return true;
}
unsigned char ch_151[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe5, 0x50, 0x13, 0x04, 0x61, 0x62, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x71, 0x87, 0xbf, 0xb7, 0x1f, 0xb9, 0x8a, 0x74, 0x66, 0x6c, 0xd6, 0x52, 0xa4, 0x1d, 0xee, 0x2d, 0x83, 0xf2, 0xb4, 0x23, 0x84, 0x0f, 0x3f, 0xbc, 0x53, 0x2a, 0x57, 0xd8, 0xf8, 0x8a, 0x4d, 0xf1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xf2, 0x74, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_151(ch_151, ch_151 + sizeof(ch_151) -1);
CDataStream stream_151(vch_151, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_151;
stream_151 >> txHist_151;

if(block.vtx[0]->GetHash() == txHist_151.GetHash() && nHeight == 1265893) {
return true;
}
unsigned char ch_152[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe4, 0x50, 0x13, 0x04, 0x32, 0x62, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaa, 0x24, 0x6a, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x89, 0xb9, 0xc8, 0x00, 0x00, 0x00, 0x00, 0x01, 0x89, 0xb7, 0x38, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xea, 0x38, 0x6f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_152(ch_152, ch_152 + sizeof(ch_152) -1);
CDataStream stream_152(vch_152, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_152;
stream_152 >> txHist_152;

if(block.vtx[0]->GetHash() == txHist_152.GetHash() && nHeight == 1265892) {
return true;
}
unsigned char ch_153[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa1, 0x50, 0x13, 0x04, 0x3a, 0x4e, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x01, 0x55, 0x54, 0xc0, 0x03, 0xd4, 0x29, 0x01, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4c, 0x0b, 0x5e, 0xf8, 0x00, 0x00, 0x10, 0xa0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x0f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_153(ch_153, ch_153 + sizeof(ch_153) -1);
CDataStream stream_153(vch_153, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_153;
stream_153 >> txHist_153;

if(block.vtx[0]->GetHash() == txHist_153.GetHash() && nHeight == 1265825) {
return true;
}
unsigned char ch_154[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe9, 0x50, 0x13, 0x04, 0xfb, 0x62, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9f, 0x6d, 0x16, 0x62, 0xaf, 0x38, 0xbb, 0xb4, 0x67, 0x56, 0x30, 0xd9, 0xb8, 0xc6, 0x81, 0x0e, 0xb1, 0xaf, 0xb3, 0x60, 0x33, 0xbe, 0xb6, 0x23, 0xde, 0x95, 0x9c, 0x2f, 0x2b, 0xb0, 0xf8, 0xf9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xea, 0x7c, 0x1e, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_154(ch_154, ch_154 + sizeof(ch_154) -1);
CDataStream stream_154(vch_154, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_154;
stream_154 >> txHist_154;

if(block.vtx[0]->GetHash() == txHist_154.GetHash() && nHeight == 1265897) {
return true;
}
unsigned char ch_155[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xda, 0x50, 0x13, 0x04, 0x7b, 0x60, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x39, 0x34, 0x33, 0x34, 0x62, 0x34, 0x63, 0x62, 0x31, 0x63, 0x38, 0x35, 0x34, 0x31, 0x39, 0x61, 0x36, 0x37, 0x39, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x32, 0x31, 0x34, 0x39, 0x30, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xf1, 0xae, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_155(ch_155, ch_155 + sizeof(ch_155) -1);
CDataStream stream_155(vch_155, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_155;
stream_155 >> txHist_155;

if(block.vtx[0]->GetHash() == txHist_155.GetHash() && nHeight == 1265882) {
return true;
}
unsigned char ch_156[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd5, 0x50, 0x13, 0x04, 0x89, 0x5d, 0x38, 0x5b, 0x08, 0x47, 0xff, 0xff, 0xf8, 0x2e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x39, 0x2b, 0x5e, 0xc0, 0xfa, 0x87, 0xf5, 0x51, 0x5c, 0x9c, 0x02, 0xe8, 0x72, 0x25, 0x13, 0x88, 0x6e, 0x04, 0x45, 0x89, 0xc2, 0x53, 0x0d, 0x27, 0xf7, 0xe9, 0x46, 0x00, 0xa9, 0x2b, 0x01, 0x2e, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_156(ch_156, ch_156 + sizeof(ch_156) -1);
CDataStream stream_156(vch_156, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_156;
stream_156 >> txHist_156;

if(block.vtx[0]->GetHash() == txHist_156.GetHash() && nHeight == 1265877) {
return true;
}
unsigned char ch_157[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9d, 0x50, 0x13, 0x04, 0xff, 0x4d, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x6a, 0xbe, 0xf8, 0x85, 0x95, 0x0e, 0xce, 0xea, 0xde, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x6b, 0x19, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0xb5, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_157(ch_157, ch_157 + sizeof(ch_157) -1);
CDataStream stream_157(vch_157, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_157;
stream_157 >> txHist_157;

if(block.vtx[0]->GetHash() == txHist_157.GetHash() && nHeight == 1265821) {
return true;
}
unsigned char ch_158[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xde, 0x50, 0x13, 0x04, 0xf0, 0x60, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x01, 0xb0, 0x8d, 0xe8, 0x00, 0x00, 0x00, 0x00, 0x01, 0xb0, 0x91, 0xe0, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xf3, 0x9d, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_158(ch_158, ch_158 + sizeof(ch_158) -1);
CDataStream stream_158(vch_158, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_158;
stream_158 >> txHist_158;

if(block.vtx[0]->GetHash() == txHist_158.GetHash() && nHeight == 1265886) {
return true;
}
unsigned char ch_159[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xdd, 0x50, 0x13, 0x04, 0xea, 0x60, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xce, 0xbb, 0x66, 0x78, 0x14, 0x3a, 0xe0, 0xbf, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x01, 0x20, 0xe7, 0x59, 0xc0, 0xac, 0x88, 0x8b, 0x04, 0xfe, 0x05, 0xe4, 0x16, 0x00, 0xcd, 0xec, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xf2, 0x71, 0x30, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_159(ch_159, ch_159 + sizeof(ch_159) -1);
CDataStream stream_159(vch_159, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_159;
stream_159 >> txHist_159;

if(block.vtx[0]->GetHash() == txHist_159.GetHash() && nHeight == 1265885) {
return true;
}
unsigned char ch_160[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe2, 0x50, 0x13, 0x04, 0x74, 0x61, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x05, 0xcf, 0x96, 0x03, 0x21, 0x01, 0x03, 0x8d, 0xa4, 0x0c, 0x34, 0xe8, 0x6d, 0x9c, 0x84, 0x9f, 0x92, 0x07, 0x41, 0x14, 0x87, 0x1c, 0x41, 0xb2, 0xdf, 0x1f, 0x42, 0x76, 0x33, 0x59, 0x99, 0x7b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xea, 0x67, 0x06, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_160(ch_160, ch_160 + sizeof(ch_160) -1);
CDataStream stream_160(vch_160, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_160;
stream_160 >> txHist_160;

if(block.vtx[0]->GetHash() == txHist_160.GetHash() && nHeight == 1265890) {
return true;
}
unsigned char ch_161[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd0, 0x50, 0x13, 0x04, 0xd2, 0x5b, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x66, 0xfa, 0xed, 0x5e, 0x76, 0x5b, 0xf0, 0xca, 0x5f, 0x3f, 0x1d, 0x3a, 0xaa, 0x1e, 0x9c, 0x48, 0x6c, 0xb5, 0xe4, 0x2d, 0x24, 0x5f, 0x6d, 0x72, 0x10, 0x37, 0xb1, 0x5e, 0x97, 0xcd, 0xc1, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x0a, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_161(ch_161, ch_161 + sizeof(ch_161) -1);
CDataStream stream_161(vch_161, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_161;
stream_161 >> txHist_161;

if(block.vtx[0]->GetHash() == txHist_161.GetHash() && nHeight == 1265872) {
return true;
}
unsigned char ch_162[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x45, 0x50, 0x13, 0x04, 0xd1, 0x39, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfd, 0x21, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xfa, 0xaf, 0x5b, 0x29, 0x6b, 0xad, 0xd0, 0x2a, 0x6f, 0xf6, 0x63, 0x77, 0x4b, 0xa9, 0x7b, 0x92, 0x9c, 0x3f, 0xdf, 0xff, 0x58, 0xa6, 0x48, 0x9e, 0x84, 0x46, 0xf6, 0x27, 0xcb, 0xfd, 0x80, 0x8e, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_162(ch_162, ch_162 + sizeof(ch_162) -1);
CDataStream stream_162(vch_162, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_162;
stream_162 >> txHist_162;

if(block.vtx[0]->GetHash() == txHist_162.GetHash() && nHeight == 1265733) {
return true;
}
unsigned char ch_163[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xdb, 0x50, 0x13, 0x04, 0x7d, 0x60, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x30, 0x30, 0x30, 0x30, 0x30, 0x66, 0x32, 0x64, 0x36, 0x35, 0x37, 0x34, 0x37, 0x31, 0x36, 0x32, 0x37, 0x34, 0x37, 0x33, 0x35, 0x35, 0x36, 0x34, 0x36, 0x66, 0x36, 0x65, 0x36, 0x66, 0x32, 0x64, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xf0, 0x82, 0x40, 0x7c, 0x99, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_163(ch_163, ch_163 + sizeof(ch_163) -1);
CDataStream stream_163(vch_163, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_163;
stream_163 >> txHist_163;

if(block.vtx[0]->GetHash() == txHist_163.GetHash() && nHeight == 1265883) {
return true;
}
unsigned char ch_164[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x78, 0x50, 0x13, 0x04, 0x6d, 0x45, 0x38, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xff, 0x2a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_164(ch_164, ch_164 + sizeof(ch_164) -1);
CDataStream stream_164(vch_164, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_164;
stream_164 >> txHist_164;

if(block.vtx[0]->GetHash() == txHist_164.GetHash() && nHeight == 1265784) {
return true;
}
unsigned char ch_165[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x95, 0x50, 0x13, 0x04, 0x3f, 0x4c, 0x38, 0x5b, 0x08, 0x68, 0x00, 0x00, 0x19, 0x02, 0x07, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_165(ch_165, ch_165 + sizeof(ch_165) -1);
CDataStream stream_165(vch_165, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_165;
stream_165 >> txHist_165;

if(block.vtx[0]->GetHash() == txHist_165.GetHash() && nHeight == 1265813) {
return true;
}
unsigned char ch_166[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x41, 0x50, 0x13, 0x04, 0x35, 0x38, 0x38, 0x5b, 0x08, 0x7f, 0xff, 0xfa, 0xc4, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_166(ch_166, ch_166 + sizeof(ch_166) -1);
CDataStream stream_166(vch_166, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_166;
stream_166 >> txHist_166;

if(block.vtx[0]->GetHash() == txHist_166.GetHash() && nHeight == 1265729) {
return true;
}
unsigned char ch_167[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd7, 0x50, 0x13, 0x04, 0x2a, 0x5f, 0x38, 0x5b, 0x08, 0x3f, 0xff, 0xff, 0xe6, 0x59, 0x2d, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x89, 0xc7, 0xa0, 0x65, 0xf0, 0xf7, 0x4c, 0x9c, 0x14, 0xb9, 0xc1, 0x70, 0x71, 0x41, 0x2f, 0xe3, 0xc1, 0xf2, 0x77, 0x9e, 0x9d, 0x14, 0x26, 0xf7, 0x90, 0x70, 0x84, 0xe7, 0xd0, 0x18, 0x08, 0x28, 0x30, 0x2e, 0x65, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_167(ch_167, ch_167 + sizeof(ch_167) -1);
CDataStream stream_167(vch_167, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_167;
stream_167 >> txHist_167;

if(block.vtx[0]->GetHash() == txHist_167.GetHash() && nHeight == 1265879) {
return true;
}
unsigned char ch_168[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd6, 0x50, 0x13, 0x04, 0x98, 0x5d, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5d, 0x49, 0x55, 0xa5, 0x98, 0xe4, 0xeb, 0xb6, 0xfd, 0x46, 0x6e, 0xf2, 0xdd, 0x37, 0xa0, 0x6d, 0xa0, 0xde, 0x1e, 0x92, 0x14, 0x07, 0x97, 0x99, 0xd4, 0x0f, 0xfd, 0x13, 0x9f, 0x5f, 0x04, 0x1c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xff, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_168(ch_168, ch_168 + sizeof(ch_168) -1);
CDataStream stream_168(vch_168, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_168;
stream_168 >> txHist_168;

if(block.vtx[0]->GetHash() == txHist_168.GetHash() && nHeight == 1265878) {
return true;
}
unsigned char ch_169[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x76, 0x50, 0x13, 0x04, 0xf7, 0x44, 0x38, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0x62, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_169(ch_169, ch_169 + sizeof(ch_169) -1);
CDataStream stream_169(vch_169, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_169;
stream_169 >> txHist_169;

if(block.vtx[0]->GetHash() == txHist_169.GetHash() && nHeight == 1265782) {
return true;
}
unsigned char ch_170[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x94, 0x50, 0x13, 0x04, 0xeb, 0x4b, 0x38, 0x5b, 0x08, 0x3f, 0xff, 0xff, 0xfc, 0x3b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_170(ch_170, ch_170 + sizeof(ch_170) -1);
CDataStream stream_170(vch_170, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_170;
stream_170 >> txHist_170;

if(block.vtx[0]->GetHash() == txHist_170.GetHash() && nHeight == 1265812) {
return true;
}
unsigned char ch_171[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3d, 0x50, 0x13, 0x04, 0xf9, 0x37, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xaa, 0x0c, 0x19, 0x3a, 0xdf, 0x22, 0xb3, 0xe3, 0xd5, 0xd7, 0x39, 0xa1, 0x38, 0x4d, 0x90, 0x61, 0xc9, 0x38, 0x02, 0x71, 0x06, 0x27, 0x94, 0xb0, 0x11, 0xdf, 0xc1, 0x1e, 0xb5, 0xc7, 0x0c, 0x1a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0xff, 0xff, 0xfe, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x60, 0xeb, 0x71, 0x1f, 0x92, 0x9b, 0x1a, 0x91, 0xbb, 0x11, 0x61, 0x08, 0x5b, 0xc0, 0x90, 0xbe, 0x25, 0xb8, 0x04, 0x49, 0x5f, 0x13, 0x47, 0xd5, 0xa3, 0xb4, 0xba, 0x9e, 0xa2, 0xee, 0x65, 0xab, 0x58, 0x6f, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_171(ch_171, ch_171 + sizeof(ch_171) -1);
CDataStream stream_171(vch_171, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_171;
stream_171 >> txHist_171;

if(block.vtx[0]->GetHash() == txHist_171.GetHash() && nHeight == 1265725) {
return true;
}
unsigned char ch_172[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd2, 0x50, 0x13, 0x04, 0xe0, 0x5c, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x65, 0x65, 0x64, 0x65, 0x36, 0x32, 0x64, 0x63, 0x66, 0x38, 0x35, 0x64, 0x38, 0x36, 0x34, 0x63, 0x37, 0x63, 0x65, 0x66, 0x36, 0x32, 0x61, 0x61, 0x39, 0x36, 0x66, 0x65, 0x61, 0x30, 0x34, 0x37, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xf6, 0xa3, 0x55, 0x05, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_172(ch_172, ch_172 + sizeof(ch_172) -1);
CDataStream stream_172(vch_172, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_172;
stream_172 >> txHist_172;

if(block.vtx[0]->GetHash() == txHist_172.GetHash() && nHeight == 1265874) {
return true;
}
unsigned char ch_173[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd1, 0x50, 0x13, 0x04, 0xb0, 0x5c, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7c, 0x59, 0x19, 0x0b, 0x1b, 0xca, 0x33, 0x7c, 0x6f, 0x36, 0x8e, 0x57, 0x80, 0x21, 0x2c, 0x65, 0x74, 0x7f, 0xee, 0x9f, 0x80, 0xda, 0x26, 0x91, 0xa7, 0xcc, 0xac, 0x4e, 0x34, 0x18, 0xd7, 0xdf, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xfa, 0xd4, 0x39, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xf5, 0x0e, 0x50, 0x06, 0x8f, 0x69, 0xe1, 0xf8, 0xef, 0x59, 0x83, 0xfb, 0x5f, 0x2a, 0xe5, 0x2b, 0xee, 0x9a, 0x85, 0x43, 0xbb, 0x63, 0x24, 0xc5, 0x23, 0x19, 0x70, 0xca, 0xbb, 0x62, 0x01, 0x0d, 0xee, 0x9e, 0x85, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xba, 0x7d, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_173(ch_173, ch_173 + sizeof(ch_173) -1);
CDataStream stream_173(vch_173, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_173;
stream_173 >> txHist_173;

if(block.vtx[0]->GetHash() == txHist_173.GetHash() && nHeight == 1265873) {
return true;
}
unsigned char ch_174[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xce, 0x50, 0x13, 0x04, 0xc2, 0x5b, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x38, 0x63, 0x8b, 0x0e, 0x28, 0x0f, 0xab, 0x03, 0x7a, 0x26, 0x8b, 0xaa, 0x10, 0x7b, 0x77, 0xe6, 0x6d, 0xeb, 0x07, 0x8e, 0x65, 0x85, 0x95, 0x0e, 0x3b, 0x40, 0x31, 0xcb, 0xfb, 0x83, 0x64, 0xd3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xfe, 0xea, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_174(ch_174, ch_174 + sizeof(ch_174) -1);
CDataStream stream_174(vch_174, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_174;
stream_174 >> txHist_174;

if(block.vtx[0]->GetHash() == txHist_174.GetHash() && nHeight == 1265870) {
return true;
}
unsigned char ch_175[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x74, 0x50, 0x13, 0x04, 0xba, 0x44, 0x38, 0x5b, 0x08, 0x7f, 0xff, 0xfa, 0xc4, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_175(ch_175, ch_175 + sizeof(ch_175) -1);
CDataStream stream_175(vch_175, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_175;
stream_175 >> txHist_175;

if(block.vtx[0]->GetHash() == txHist_175.GetHash() && nHeight == 1265780) {
return true;
}
unsigned char ch_176[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x93, 0x50, 0x13, 0x04, 0x9d, 0x4b, 0x38, 0x5b, 0x08, 0x08, 0x00, 0x00, 0x06, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_176(ch_176, ch_176 + sizeof(ch_176) -1);
CDataStream stream_176(vch_176, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_176;
stream_176 >> txHist_176;

if(block.vtx[0]->GetHash() == txHist_176.GetHash() && nHeight == 1265811) {
return true;
}
unsigned char ch_177[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x39, 0x50, 0x13, 0x04, 0x30, 0x36, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xfa, 0xc2, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_177(ch_177, ch_177 + sizeof(ch_177) -1);
CDataStream stream_177(vch_177, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_177;
stream_177 >> txHist_177;

if(block.vtx[0]->GetHash() == txHist_177.GetHash() && nHeight == 1265721) {
return true;
}
unsigned char ch_178[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xcd, 0x50, 0x13, 0x04, 0xac, 0x5b, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x6a, 0xed, 0xaa, 0xa2, 0x84, 0x21, 0x20, 0x6b, 0xb7, 0x29, 0x99, 0xd8, 0x2d, 0xe1, 0xf5, 0xe6, 0xf1, 0x2b, 0x4a, 0xd0, 0x9e, 0xae, 0x1f, 0x8a, 0xe6, 0x60, 0xef, 0xa6, 0x29, 0xbd, 0x59, 0xfc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xfd, 0xb1, 0x11, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_178(ch_178, ch_178 + sizeof(ch_178) -1);
CDataStream stream_178(vch_178, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_178;
stream_178 >> txHist_178;

if(block.vtx[0]->GetHash() == txHist_178.GetHash() && nHeight == 1265869) {
return true;
}
unsigned char ch_179[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xcc, 0x50, 0x13, 0x04, 0xa6, 0x5b, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa7, 0x7c, 0x1d, 0x54, 0xe0, 0xa7, 0xf7, 0x51, 0x4d, 0xc0, 0x66, 0x35, 0xe9, 0x8b, 0xe0, 0x4d, 0xfa, 0xf2, 0x00, 0x48, 0x59, 0xd6, 0xda, 0xfb, 0x18, 0xaa, 0x35, 0x8e, 0xa9, 0xab, 0xbe, 0x1b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xfd, 0x2a, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_179(ch_179, ch_179 + sizeof(ch_179) -1);
CDataStream stream_179(vch_179, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_179;
stream_179 >> txHist_179;

if(block.vtx[0]->GetHash() == txHist_179.GetHash() && nHeight == 1265868) {
return true;
}
unsigned char ch_180[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xcb, 0x50, 0x13, 0x04, 0x8a, 0x5b, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5f, 0x12, 0xce, 0x79, 0xc3, 0xa5, 0x39, 0x94, 0x1c, 0x08, 0x2e, 0x6b, 0x65, 0xb1, 0xcb, 0xb5, 0x6a, 0xbb, 0xf9, 0x03, 0xc4, 0x6c, 0x35, 0x62, 0xf5, 0xa7, 0xc4, 0x7e, 0xb8, 0x42, 0x53, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xfd, 0x79, 0x10, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_180(ch_180, ch_180 + sizeof(ch_180) -1);
CDataStream stream_180(vch_180, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_180;
stream_180 >> txHist_180;

if(block.vtx[0]->GetHash() == txHist_180.GetHash() && nHeight == 1265867) {
return true;
}
unsigned char ch_181[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc9, 0x50, 0x13, 0x04, 0x7c, 0x5b, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x1b, 0xaa, 0xad, 0x99, 0xbe, 0x24, 0x34, 0x69, 0xa9, 0x46, 0xd0, 0x8a, 0x30, 0x44, 0xba, 0xc5, 0x1c, 0x48, 0x6e, 0x0a, 0x3a, 0x5c, 0x18, 0x6b, 0xcc, 0xf1, 0x23, 0x7e, 0xa0, 0xa2, 0x6c, 0xb3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xff, 0xfa, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_181(ch_181, ch_181 + sizeof(ch_181) -1);
CDataStream stream_181(vch_181, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_181;
stream_181 >> txHist_181;

if(block.vtx[0]->GetHash() == txHist_181.GetHash() && nHeight == 1265865) {
return true;
}
unsigned char ch_182[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x6b, 0x50, 0x13, 0x04, 0x51, 0x43, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x1f, 0x27, 0x09, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_182(ch_182, ch_182 + sizeof(ch_182) -1);
CDataStream stream_182(vch_182, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_182;
stream_182 >> txHist_182;

if(block.vtx[0]->GetHash() == txHist_182.GetHash() && nHeight == 1265771) {
return true;
}
unsigned char ch_183[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x91, 0x50, 0x13, 0x04, 0xda, 0x4a, 0x38, 0x5b, 0x08, 0x68, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_183(ch_183, ch_183 + sizeof(ch_183) -1);
CDataStream stream_183(vch_183, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_183;
stream_183 >> txHist_183;

if(block.vtx[0]->GetHash() == txHist_183.GetHash() && nHeight == 1265809) {
return true;
}
unsigned char ch_184[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x35, 0x50, 0x13, 0x04, 0x12, 0x35, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x05, 0x6e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x2a, 0x2f, 0x0a, 0xab, 0xc3, 0x0a, 0xf2, 0x84, 0x54, 0xc6, 0x7d, 0x91, 0x9a, 0x56, 0xd2, 0xb9, 0x1b, 0x55, 0x00, 0xeb, 0xf5, 0x7f, 0xcb, 0x21, 0x83, 0xf1, 0x3c, 0x81, 0x5a, 0x1e, 0x38, 0x00, 0x30, 0x33, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_184(ch_184, ch_184 + sizeof(ch_184) -1);
CDataStream stream_184(vch_184, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_184;
stream_184 >> txHist_184;

if(block.vtx[0]->GetHash() == txHist_184.GetHash() && nHeight == 1265717) {
return true;
}
unsigned char ch_185[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc7, 0x50, 0x13, 0x04, 0x1d, 0x5b, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x3a, 0x4f, 0x72, 0xd3, 0x1b, 0x89, 0x60, 0xc3, 0x6c, 0x7e, 0x67, 0x6e, 0xd6, 0x68, 0xf7, 0xd4, 0x68, 0x6c, 0x6e, 0x87, 0x8e, 0x48, 0x35, 0xf3, 0x5a, 0xfc, 0xca, 0x04, 0x36, 0xf8, 0xf9, 0xbd, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xfc, 0xb3, 0x0f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_185(ch_185, ch_185 + sizeof(ch_185) -1);
CDataStream stream_185(vch_185, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_185;
stream_185 >> txHist_185;

if(block.vtx[0]->GetHash() == txHist_185.GetHash() && nHeight == 1265863) {
return true;
}
unsigned char ch_186[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc6, 0x50, 0x13, 0x04, 0x1b, 0x5b, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x58, 0x82, 0xb9, 0xd0, 0xa2, 0x2e, 0x12, 0x58, 0xd5, 0xc9, 0xdc, 0x9a, 0x47, 0xab, 0x7a, 0x55, 0x27, 0x6d, 0x4f, 0x3f, 0x19, 0xdd, 0x52, 0x7c, 0x02, 0xc1, 0x61, 0xa5, 0xac, 0xf5, 0x1f, 0x41, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xfd, 0x89, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_186(ch_186, ch_186 + sizeof(ch_186) -1);
CDataStream stream_186(vch_186, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_186;
stream_186 >> txHist_186;

if(block.vtx[0]->GetHash() == txHist_186.GetHash() && nHeight == 1265862) {
return true;
}
unsigned char ch_187[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc5, 0x50, 0x13, 0x04, 0x13, 0x5b, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x50, 0x7a, 0x5e, 0xbc, 0x81, 0x7a, 0x0b, 0xa4, 0xc9, 0x32, 0x80, 0xa2, 0x28, 0x7c, 0x77, 0xbe, 0xec, 0xb1, 0xdd, 0x2c, 0xce, 0xa8, 0xfa, 0xc3, 0x95, 0x7d, 0x8a, 0x18, 0x17, 0x1d, 0x40, 0x16, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xfe, 0x55, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_187(ch_187, ch_187 + sizeof(ch_187) -1);
CDataStream stream_187(vch_187, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_187;
stream_187 >> txHist_187;

if(block.vtx[0]->GetHash() == txHist_187.GetHash() && nHeight == 1265861) {
return true;
}
unsigned char ch_188[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc3, 0x50, 0x13, 0x04, 0xe8, 0x5a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x56, 0x01, 0xc3, 0x7c, 0x65, 0x14, 0x1b, 0x55, 0x67, 0xfc, 0x5b, 0x38, 0x59, 0x7b, 0x01, 0x10, 0x28, 0xa2, 0x39, 0x8d, 0x15, 0xb7, 0x96, 0x8d, 0x57, 0x8c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xff, 0x4f, 0x11, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_188(ch_188, ch_188 + sizeof(ch_188) -1);
CDataStream stream_188(vch_188, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_188;
stream_188 >> txHist_188;

if(block.vtx[0]->GetHash() == txHist_188.GetHash() && nHeight == 1265859) {
return true;
}
unsigned char ch_189[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x90, 0x50, 0x13, 0x04, 0xde, 0x4a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xce, 0x08, 0xf2, 0x42, 0xe8, 0xa1, 0x76, 0x10, 0xb2, 0x52, 0x75, 0xda, 0x8a, 0xc7, 0x83, 0x25, 0x99, 0xb6, 0xaa, 0x42, 0xea, 0xa8, 0x8e, 0x7d, 0x37, 0xc4, 0xf8, 0xc2, 0xc7, 0xd7, 0xae, 0x82, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_189(ch_189, ch_189 + sizeof(ch_189) -1);
CDataStream stream_189(vch_189, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_189;
stream_189 >> txHist_189;

if(block.vtx[0]->GetHash() == txHist_189.GetHash() && nHeight == 1265808) {
return true;
}
unsigned char ch_190[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x31, 0x50, 0x13, 0x04, 0x0e, 0x34, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xe9, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x60, 0x08, 0x04, 0x29, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x1e, 0xf3, 0xd7, 0x98, 0xf9, 0x7d, 0xba, 0x18, 0x33, 0x23, 0x83, 0xea, 0x65, 0x40, 0x27, 0xbe, 0xc4, 0x62, 0x86, 0x96, 0x88, 0xac, 0xa0, 0x06, 0x5b, 0xb1, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xca, 0xe3, 0x39, 0xe2, 0x4f, 0x6d, 0x60, 0x98, 0xec, 0xbe, 0x73, 0x11, 0x00, 0x3d, 0xd4, 0xf8, 0x02, 0x05, 0x8b, 0x9d, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_190(ch_190, ch_190 + sizeof(ch_190) -1);
CDataStream stream_190(vch_190, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_190;
stream_190 >> txHist_190;

if(block.vtx[0]->GetHash() == txHist_190.GetHash() && nHeight == 1265713) {
return true;
}
unsigned char ch_191[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc1, 0x50, 0x13, 0x04, 0xc2, 0x5a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x56, 0xfe, 0xba, 0x14, 0x1d, 0x3f, 0x12, 0x40, 0x5e, 0x51, 0xb2, 0x86, 0xf0, 0xd3, 0x8b, 0xfa, 0x7c, 0xe4, 0x30, 0x2b, 0x09, 0x0e, 0x3a, 0x2a, 0xe6, 0x39, 0x8d, 0x7a, 0x7f, 0x60, 0x40, 0xc9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x81, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_191(ch_191, ch_191 + sizeof(ch_191) -1);
CDataStream stream_191(vch_191, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_191;
stream_191 >> txHist_191;

if(block.vtx[0]->GetHash() == txHist_191.GetHash() && nHeight == 1265857) {
return true;
}
unsigned char ch_192[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc0, 0x50, 0x13, 0x04, 0xab, 0x5a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x37, 0xd5, 0x8f, 0x8f, 0x95, 0x93, 0xa5, 0x3a, 0x00, 0x00, 0x7f, 0x5e, 0x6d, 0x91, 0x9c, 0x78, 0x00, 0x00, 0x00, 0x00, 0x01, 0x89, 0xeb, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xff, 0xf4, 0x0d, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_192(ch_192, ch_192 + sizeof(ch_192) -1);
CDataStream stream_192(vch_192, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_192;
stream_192 >> txHist_192;

if(block.vtx[0]->GetHash() == txHist_192.GetHash() && nHeight == 1265856) {
return true;
}
unsigned char ch_193[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x50, 0x50, 0x13, 0x04, 0x03, 0x3c, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x4c, 0x75, 0xd8, 0x1b, 0xd2, 0xab, 0x6d, 0x5d, 0xa6, 0xce, 0xe0, 0x03, 0xbd, 0xbc, 0xc9, 0x8a, 0x5a, 0x65, 0xde, 0x7f, 0x2a, 0x73, 0x85, 0xfd, 0x4c, 0x57, 0x71, 0xb9, 0xb7, 0xb1, 0xca, 0x99, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xc0, 0xa9, 0x7a, 0xd7, 0x83, 0xf2, 0xab, 0x78, 0x37, 0x6c, 0x96, 0xa0, 0x12, 0x20, 0xc3, 0x93, 0x03, 0x16, 0x53, 0x3d, 0xc4, 0x08, 0xef, 0xe7, 0x6b, 0x1f, 0xc4, 0x5a, 0x23, 0x35, 0x8f, 0x0d, 0x20, 0xda, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_193(ch_193, ch_193 + sizeof(ch_193) -1);
CDataStream stream_193(vch_193, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_193;
stream_193 >> txHist_193;

if(block.vtx[0]->GetHash() == txHist_193.GetHash() && nHeight == 1265744) {
return true;
}
unsigned char ch_194[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xbe, 0x50, 0x13, 0x04, 0x67, 0x5a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x01, 0x71, 0x22, 0x28, 0x00, 0x00, 0x00, 0x00, 0x01, 0x7d, 0xb4, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe4, 0x46, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xfe, 0xa1, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_194(ch_194, ch_194 + sizeof(ch_194) -1);
CDataStream stream_194(vch_194, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_194;
stream_194 >> txHist_194;

if(block.vtx[0]->GetHash() == txHist_194.GetHash() && nHeight == 1265854) {
return true;
}
unsigned char ch_195[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x67, 0x50, 0x13, 0x04, 0xd6, 0x41, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7d, 0x85, 0x9b, 0xcc, 0x86, 0x6b, 0x48, 0xf6, 0x9d, 0x44, 0x91, 0x21, 0x96, 0xfc, 0x31, 0x8a, 0xa2, 0x36, 0x6d, 0x1d, 0x71, 0x53, 0xf2, 0x6d, 0x6d, 0xbe, 0xfa, 0x08, 0x5b, 0x38, 0x41, 0x43, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xe8, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x60, 0x08, 0x04, 0x29, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x1e, 0xf3, 0xd7, 0x98, 0xf9, 0x7d, 0xba, 0x18, 0x33, 0x23, 0x83, 0xea, 0x65, 0x40, 0x27, 0xbe, 0xc4, 0x62, 0x86, 0x96, 0x88, 0xac, 0xa0, 0x06, 0x5b, 0xb1, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xca, 0xe3, 0x39, 0xe2, 0x4f, 0x6d, 0x60, 0x98, 0xec, 0xbe, 0x73, 0x11, 0x00, 0x3d, 0xd4, 0xf8, 0x02, 0x05, 0x8b, 0x9d, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_195(ch_195, ch_195 + sizeof(ch_195) -1);
CDataStream stream_195(vch_195, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_195;
stream_195 >> txHist_195;

if(block.vtx[0]->GetHash() == txHist_195.GetHash() && nHeight == 1265767) {
return true;
}
unsigned char ch_196[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x8f, 0x50, 0x13, 0x04, 0xac, 0x4a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x22, 0x33, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xe8, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x60, 0x08, 0x04, 0x29, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x1e, 0xf3, 0xd7, 0x98, 0xf9, 0x7d, 0xba, 0x18, 0x33, 0x23, 0x83, 0xea, 0x65, 0x40, 0x27, 0xbe, 0xc4, 0x62, 0x86, 0x96, 0x88, 0xac, 0xa0, 0x06, 0x5b, 0xb1, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xca, 0xe3, 0x39, 0xe2, 0x4f, 0x6d, 0x60, 0x98, 0xec, 0xbe, 0x73, 0x11, 0x00, 0x3d, 0xd4, 0xf8, 0x02, 0x05, 0x8b, 0x9d, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_196(ch_196, ch_196 + sizeof(ch_196) -1);
CDataStream stream_196(vch_196, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_196;
stream_196 >> txHist_196;

if(block.vtx[0]->GetHash() == txHist_196.GetHash() && nHeight == 1265807) {
return true;
}
unsigned char ch_197[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xbc, 0x50, 0x13, 0x04, 0x5b, 0x5a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x01, 0x8b, 0x78, 0x90, 0x00, 0x00, 0x01, 0xa8, 0x00, 0x00, 0x01, 0xa7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x46, 0x10, 0x00, 0x00, 0x00, 0x00, 0x01, 0x8b, 0x7a, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xff, 0x6b, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_197(ch_197, ch_197 + sizeof(ch_197) -1);
CDataStream stream_197(vch_197, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_197;
stream_197 >> txHist_197;

if(block.vtx[0]->GetHash() == txHist_197.GetHash() && nHeight == 1265852) {
return true;
}
unsigned char ch_198[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xbb, 0x50, 0x13, 0x04, 0x57, 0x5a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xff, 0x3b, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xba, 0xeb, 0x4c, 0xf9, 0xdc, 0xae, 0x50, 0xc1, 0x6d, 0x52, 0x4d, 0x26, 0x4b, 0xf6, 0x69, 0xed, 0x6b, 0x9c, 0x4e, 0xa1, 0xcf, 0xde, 0xf0, 0x49, 0x8c, 0xff, 0x39, 0xf4, 0xc4, 0xda, 0xbb, 0x5f, 0xb8, 0x50, 0x79, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xe8, 0x5d, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_198(ch_198, ch_198 + sizeof(ch_198) -1);
CDataStream stream_198(vch_198, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_198;
stream_198 >> txHist_198;

if(block.vtx[0]->GetHash() == txHist_198.GetHash() && nHeight == 1265851) {
return true;
}
unsigned char ch_199[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x4d, 0x50, 0x13, 0x04, 0x35, 0x3b, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x09, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_199(ch_199, ch_199 + sizeof(ch_199) -1);
CDataStream stream_199(vch_199, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_199;
stream_199 >> txHist_199;

if(block.vtx[0]->GetHash() == txHist_199.GetHash() && nHeight == 1265741) {
return true;
}
unsigned char ch_200[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb9, 0x50, 0x13, 0x04, 0x4c, 0x59, 0x38, 0x5b, 0x08, 0x08, 0x00, 0x00, 0x35, 0x32, 0x14, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x5f, 0x40, 0xd0, 0x1d, 0xc8, 0x65, 0x8c, 0x60, 0xd4, 0x12, 0x8c, 0x11, 0x5a, 0xbc, 0x90, 0xe8, 0x8e, 0x6d, 0x0e, 0xbd, 0x32, 0x1f, 0x56, 0x69, 0x07, 0x6e, 0x35, 0xa5, 0xee, 0xba, 0x32, 0x88, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_200(ch_200, ch_200 + sizeof(ch_200) -1);
CDataStream stream_200(vch_200, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_200;
stream_200 >> txHist_200;

if(block.vtx[0]->GetHash() == txHist_200.GetHash() && nHeight == 1265849) {
return true;
}
unsigned char ch_201[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x8e, 0x50, 0x13, 0x04, 0x9e, 0x4a, 0x38, 0x5b, 0x08, 0x3f, 0xff, 0xff, 0xdf, 0xc9, 0x06, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x16, 0xc1, 0xab, 0xdf, 0x4f, 0x25, 0xe2, 0x81, 0xf7, 0x74, 0xa6, 0xd5, 0x40, 0xf1, 0xb1, 0x8c, 0xa9, 0x8a, 0xf7, 0x2a, 0x65, 0xb2, 0x70, 0xc6, 0x81, 0xe0, 0x66, 0xd7, 0xc2, 0x61, 0xc8, 0xdb, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_201(ch_201, ch_201 + sizeof(ch_201) -1);
CDataStream stream_201(vch_201, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_201;
stream_201 >> txHist_201;

if(block.vtx[0]->GetHash() == txHist_201.GetHash() && nHeight == 1265806) {
return true;
}
unsigned char ch_202[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb6, 0x50, 0x13, 0x04, 0xc9, 0x57, 0x38, 0x5b, 0x08, 0x3f, 0xff, 0xff, 0xe6, 0xba, 0x22, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xdf, 0x32, 0xbe, 0xe5, 0x34, 0xbd, 0xc3, 0x38, 0xba, 0xd2, 0x13, 0xa1, 0x20, 0x6b, 0xfa, 0xb7, 0x14, 0x29, 0x72, 0x6c, 0x1f, 0xea, 0x15, 0x15, 0x4e, 0x6b, 0x1c, 0x33, 0x30, 0x81, 0xa6, 0xfb, 0x80, 0xb8, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_202(ch_202, ch_202 + sizeof(ch_202) -1);
CDataStream stream_202(vch_202, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_202;
stream_202 >> txHist_202;

if(block.vtx[0]->GetHash() == txHist_202.GetHash() && nHeight == 1265846) {
return true;
}
unsigned char ch_203[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb4, 0x50, 0x13, 0x04, 0x02, 0x54, 0x38, 0x5b, 0x08, 0x3f, 0xff, 0xff, 0xf9, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_203(ch_203, ch_203 + sizeof(ch_203) -1);
CDataStream stream_203(vch_203, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_203;
stream_203 >> txHist_203;

if(block.vtx[0]->GetHash() == txHist_203.GetHash() && nHeight == 1265844) {
return true;
}
unsigned char ch_204[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x8d, 0x50, 0x13, 0x04, 0x3e, 0x4a, 0x38, 0x5b, 0x08, 0x08, 0x00, 0x00, 0x04, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_204(ch_204, ch_204 + sizeof(ch_204) -1);
CDataStream stream_204(vch_204, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_204;
stream_204 >> txHist_204;

if(block.vtx[0]->GetHash() == txHist_204.GetHash() && nHeight == 1265805) {
return true;
}
unsigned char ch_205[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb2, 0x50, 0x13, 0x04, 0xb9, 0x53, 0x38, 0x5b, 0x08, 0x08, 0x00, 0x00, 0x06, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_205(ch_205, ch_205 + sizeof(ch_205) -1);
CDataStream stream_205(vch_205, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_205;
stream_205 >> txHist_205;

if(block.vtx[0]->GetHash() == txHist_205.GetHash() && nHeight == 1265842) {
return true;
}
unsigned char ch_206[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb1, 0x50, 0x13, 0x04, 0xa7, 0x53, 0x38, 0x5b, 0x08, 0x3f, 0xff, 0xff, 0xfa, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x62, 0xf7, 0x0c, 0xcc, 0x16, 0x49, 0x59, 0xb4, 0x44, 0x4a, 0x49, 0xd1, 0x7f, 0x5d, 0xea, 0xd6, 0xb0, 0xbb, 0xb3, 0x79, 0x82, 0xcf, 0x77, 0x57, 0xaf, 0x56, 0x0b, 0xac, 0xe8, 0xdd, 0x30, 0xf8, 0x60, 0x44, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_206(ch_206, ch_206 + sizeof(ch_206) -1);
CDataStream stream_206(vch_206, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_206;
stream_206 >> txHist_206;

if(block.vtx[0]->GetHash() == txHist_206.GetHash() && nHeight == 1265841) {
return true;
}
unsigned char ch_207[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x46, 0x50, 0x13, 0x04, 0xe0, 0x39, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfd, 0x4b, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_207(ch_207, ch_207 + sizeof(ch_207) -1);
CDataStream stream_207(vch_207, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_207;
stream_207 >> txHist_207;

if(block.vtx[0]->GetHash() == txHist_207.GetHash() && nHeight == 1265734) {
return true;
}
unsigned char ch_208[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xae, 0x50, 0x13, 0x04, 0xab, 0x52, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x16, 0xf7, 0x95, 0xa6, 0x3c, 0x2d, 0x38, 0x74, 0xf6, 0x7a, 0x07, 0xd8, 0xf3, 0xe2, 0x1b, 0x63, 0x3c, 0xcc, 0xcf, 0x10, 0x58, 0x31, 0x5f, 0x22, 0xfb, 0x1c, 0x9c, 0x1a, 0x37, 0xf8, 0xa0, 0x70, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0xff, 0xff, 0xfe, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x45, 0x41, 0xc4, 0xb6, 0x55, 0x4a, 0xfe, 0x4b, 0xaa, 0xec, 0x34, 0x15, 0x7c, 0x87, 0x8d, 0xd9, 0x3c, 0xbc, 0x8a, 0x3a, 0xfc, 0xcf, 0x39, 0x4b, 0xd2, 0x46, 0xb0, 0xd8, 0x65, 0xc5, 0xc5, 0x72, 0x20, 0xda, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_208(ch_208, ch_208 + sizeof(ch_208) -1);
CDataStream stream_208(vch_208, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_208;
stream_208 >> txHist_208;

if(block.vtx[0]->GetHash() == txHist_208.GetHash() && nHeight == 1265838) {
return true;
}
unsigned char ch_209[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xac, 0x50, 0x13, 0x04, 0x33, 0x52, 0x38, 0x5b, 0x08, 0x68, 0x00, 0x00, 0x21, 0x30, 0x19, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x7c, 0xa6, 0xa0, 0xd0, 0xb4, 0x5e, 0x9e, 0x4d, 0x25, 0x87, 0xc9, 0xde, 0x66, 0x28, 0x2f, 0xcf, 0x06, 0xc8, 0x06, 0x4d, 0xec, 0xc1, 0x61, 0xc1, 0x98, 0x45, 0x44, 0xe6, 0x8f, 0x6d, 0x2c, 0xa5, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_209(ch_209, ch_209 + sizeof(ch_209) -1);
CDataStream stream_209(vch_209, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_209;
stream_209 >> txHist_209;

if(block.vtx[0]->GetHash() == txHist_209.GetHash() && nHeight == 1265836) {
return true;
}
unsigned char ch_210[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xab, 0x50, 0x13, 0x04, 0x54, 0x51, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x42, 0xfc, 0x46, 0x8d, 0xda, 0x75, 0xdd, 0x5d, 0x1b, 0xa4, 0x79, 0x1f, 0x14, 0xf0, 0x51, 0xd7, 0x80, 0xdd, 0xb6, 0x4e, 0x00, 0x00, 0x00, 0xe3, 0x00, 0x00, 0x00, 0xe2, 0x00, 0x00, 0x00, 0xe1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x7d, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_210(ch_210, ch_210 + sizeof(ch_210) -1);
CDataStream stream_210(vch_210, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_210;
stream_210 >> txHist_210;

if(block.vtx[0]->GetHash() == txHist_210.GetHash() && nHeight == 1265835) {
return true;
}
unsigned char ch_211[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xaa, 0x50, 0x13, 0x04, 0x47, 0x51, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0xf9, 0x8c, 0x4e, 0x97, 0x36, 0xd8, 0xeb, 0x8b, 0xb4, 0x62, 0x99, 0x79, 0x89, 0x06, 0x69, 0x5c, 0x75, 0x53, 0x69, 0xa3, 0xdf, 0x99, 0xa9, 0x3f, 0xfd, 0xde, 0xd1, 0x71, 0x3f, 0x1c, 0xf6, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x1e, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_211(ch_211, ch_211 + sizeof(ch_211) -1);
CDataStream stream_211(vch_211, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_211;
stream_211 >> txHist_211;

if(block.vtx[0]->GetHash() == txHist_211.GetHash() && nHeight == 1265834) {
return true;
}
unsigned char ch_212[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5e, 0x50, 0x13, 0x04, 0xa8, 0x3f, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x55, 0xc2, 0x83, 0x4b, 0x05, 0x8f, 0xcd, 0xa2, 0x66, 0x7b, 0xe6, 0x6b, 0x3a, 0xe4, 0x49, 0xed, 0xd1, 0xa8, 0xa7, 0x8d, 0x48, 0xd3, 0x07, 0xdc, 0xd9, 0x7a, 0xa4, 0xb3, 0x69, 0x6f, 0x8a, 0x99, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x24, 0x8f, 0xbd, 0xde, 0x9d, 0x86, 0x21, 0xca, 0x60, 0xe7, 0x74, 0x9d, 0x9c, 0x36, 0x2c, 0xfd, 0xe4, 0x3d, 0x25, 0x72, 0xc5, 0xf6, 0x94, 0xd9, 0x3b, 0x7c, 0x9c, 0xa9, 0xce, 0x15, 0xb7, 0x6a, 0x20, 0xda, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_212(ch_212, ch_212 + sizeof(ch_212) -1);
CDataStream stream_212(vch_212, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_212;
stream_212 >> txHist_212;

if(block.vtx[0]->GetHash() == txHist_212.GetHash() && nHeight == 1265758) {
return true;
}
unsigned char ch_213[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa8, 0x50, 0x13, 0x04, 0x23, 0x50, 0x38, 0x5b, 0x08, 0x3f, 0xff, 0xff, 0xdf, 0xc4, 0x06, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x68, 0x01, 0xd7, 0x46, 0x54, 0x05, 0xaf, 0x8e, 0xd5, 0x63, 0x1a, 0xb2, 0x4b, 0x8d, 0x18, 0x74, 0xd4, 0xb4, 0xaf, 0x66, 0xf3, 0x4b, 0xbf, 0x22, 0x0f, 0x07, 0xcd, 0x22, 0x8e, 0xa1, 0x78, 0x7a, 0x18, 0xf7, 0x72, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_213(ch_213, ch_213 + sizeof(ch_213) -1);
CDataStream stream_213(vch_213, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_213;
stream_213 >> txHist_213;

if(block.vtx[0]->GetHash() == txHist_213.GetHash() && nHeight == 1265832) {
return true;
}
unsigned char ch_214[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3e, 0x50, 0x13, 0x04, 0xf6, 0x37, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa0, 0x37, 0xf4, 0x34, 0xbc, 0x90, 0xbe, 0x50, 0x52, 0x22, 0x52, 0x4d, 0xe1, 0x17, 0x48, 0x93, 0x5f, 0x25, 0x92, 0xa5, 0x76, 0x92, 0xd4, 0xa0, 0x2d, 0x9a, 0xac, 0x6a, 0xd5, 0xcd, 0xe5, 0x1b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xe3, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x60, 0x08, 0x04, 0x29, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x1e, 0xf3, 0xd7, 0x98, 0xf9, 0x7d, 0xba, 0x18, 0x33, 0x23, 0x83, 0xea, 0x65, 0x40, 0x27, 0xbe, 0xc4, 0x62, 0x86, 0x96, 0x88, 0xac, 0xa0, 0x06, 0x5b, 0xb1, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xca, 0xe3, 0x39, 0xe2, 0x4f, 0x6d, 0x60, 0x98, 0xec, 0xbe, 0x73, 0x11, 0x00, 0x3d, 0xd4, 0xf8, 0x02, 0x05, 0x8b, 0x9d, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_214(ch_214, ch_214 + sizeof(ch_214) -1);
CDataStream stream_214(vch_214, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_214;
stream_214 >> txHist_214;

if(block.vtx[0]->GetHash() == txHist_214.GetHash() && nHeight == 1265726) {
return true;
}
unsigned char ch_215[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa6, 0x50, 0x13, 0x04, 0xfa, 0x4e, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf2, 0x23, 0xa3, 0x04, 0x2c, 0x15, 0xe0, 0xb4, 0xd1, 0xad, 0x3c, 0x52, 0x07, 0xd4, 0xf6, 0x35, 0x90, 0xe7, 0xeb, 0x70, 0x60, 0x72, 0x4f, 0xed, 0xa4, 0xf9, 0x5d, 0x39, 0xb9, 0x70, 0x13, 0x91, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf5, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_215(ch_215, ch_215 + sizeof(ch_215) -1);
CDataStream stream_215(vch_215, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_215;
stream_215 >> txHist_215;

if(block.vtx[0]->GetHash() == txHist_215.GetHash() && nHeight == 1265830) {
return true;
}
unsigned char ch_216[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x5b, 0x50, 0x13, 0x04, 0x34, 0x3f, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x1f, 0x7b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd5, 0xe5, 0x56, 0x18, 0x84, 0x1c, 0x85, 0xd5, 0x53, 0x0d, 0x53, 0xe2, 0xcf, 0x4a, 0xeb, 0xac, 0xc9, 0xc5, 0x5a, 0x4d, 0xa3, 0xc0, 0xb5, 0x6a, 0xdb, 0x46, 0xe3, 0x1e, 0xb1, 0x30, 0xbe, 0x03, 0x60, 0xf3, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_216(ch_216, ch_216 + sizeof(ch_216) -1);
CDataStream stream_216(vch_216, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_216;
stream_216 >> txHist_216;

if(block.vtx[0]->GetHash() == txHist_216.GetHash() && nHeight == 1265755) {
return true;
}
unsigned char ch_217[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x88, 0x50, 0x13, 0x04, 0x67, 0x49, 0x38, 0x5b, 0x08, 0x3f, 0xff, 0xff, 0xfc, 0x39, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa2, 0x82, 0x80, 0xc6, 0x81, 0x43, 0xf8, 0xc2, 0xb7, 0x27, 0x18, 0xd6, 0x79, 0x49, 0xf0, 0x96, 0x1a, 0x7c, 0x18, 0x48, 0xbb, 0x1b, 0xef, 0x2b, 0x57, 0x53, 0x47, 0xc1, 0xb3, 0xfe, 0xa5, 0xf6, 0xf0, 0x5e, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_217(ch_217, ch_217 + sizeof(ch_217) -1);
CDataStream stream_217(vch_217, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_217;
stream_217 >> txHist_217;

if(block.vtx[0]->GetHash() == txHist_217.GetHash() && nHeight == 1265800) {
return true;
}
unsigned char ch_218[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa4, 0x50, 0x13, 0x04, 0x81, 0x4e, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe5, 0x3d, 0xdc, 0xc5, 0x7c, 0xad, 0x97, 0xe4, 0x77, 0xa8, 0xbc, 0xd6, 0x3e, 0x3c, 0xf5, 0xef, 0x15, 0x7b, 0x77, 0x45, 0xb9, 0xd7, 0xe2, 0xbf, 0x07, 0xef, 0x9a, 0x70, 0xa1, 0x7b, 0x71, 0xa0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x51, 0x0d, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_218(ch_218, ch_218 + sizeof(ch_218) -1);
CDataStream stream_218(vch_218, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_218;
stream_218 >> txHist_218;

if(block.vtx[0]->GetHash() == txHist_218.GetHash() && nHeight == 1265828) {
return true;
}
unsigned char ch_219[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x3a, 0x50, 0x13, 0x04, 0x24, 0x37, 0x38, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0xe2, 0x17, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x2e, 0x76, 0xd5, 0xb9, 0x1c, 0xe2, 0x85, 0x79, 0xbf, 0x39, 0x74, 0xf9, 0x65, 0x46, 0x04, 0x7a, 0xc5, 0x64, 0xf0, 0x4a, 0x22, 0x26, 0x53, 0x6b, 0x8e, 0x83, 0x21, 0x33, 0x67, 0x6e, 0xf0, 0x4f, 0x58, 0x6f, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_219(ch_219, ch_219 + sizeof(ch_219) -1);
CDataStream stream_219(vch_219, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_219;
stream_219 >> txHist_219;

if(block.vtx[0]->GetHash() == txHist_219.GetHash() && nHeight == 1265722) {
return true;
}
unsigned char ch_220[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa2, 0x50, 0x13, 0x04, 0x55, 0x4e, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x28, 0x80, 0x90, 0xd1, 0x00, 0x00, 0x00, 0x00, 0x01, 0x92, 0x7b, 0x88, 0x00, 0x00, 0x00, 0x00, 0x01, 0x55, 0x4e, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x6c, 0x0f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_220(ch_220, ch_220 + sizeof(ch_220) -1);
CDataStream stream_220(vch_220, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_220;
stream_220 >> txHist_220;

if(block.vtx[0]->GetHash() == txHist_220.GetHash() && nHeight == 1265826) {
return true;
}
unsigned char ch_221[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x87, 0x50, 0x13, 0x04, 0x16, 0x49, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x56, 0x83, 0xbb, 0x24, 0xfd, 0xb8, 0xae, 0x84, 0x1e, 0x2e, 0xf5, 0xb9, 0xe0, 0x67, 0x1f, 0x8a, 0x88, 0x50, 0xc4, 0x08, 0x58, 0xc5, 0xcb, 0x49, 0xef, 0x43, 0x64, 0x7c, 0x82, 0x29, 0xdb, 0x9f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x03, 0x18, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x8b, 0xd6, 0xca, 0x58, 0xb1, 0x88, 0x5b, 0x0c, 0xa3, 0xae, 0x9c, 0x03, 0xa5, 0x76, 0x13, 0xdb, 0x2b, 0x4b, 0xd0, 0x5a, 0x8e, 0x8b, 0x01, 0xb5, 0xa9, 0x7a, 0x64, 0xf9, 0x3e, 0xc1, 0xc3, 0x69, 0x60, 0x1f, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_221(ch_221, ch_221 + sizeof(ch_221) -1);
CDataStream stream_221(vch_221, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_221;
stream_221 >> txHist_221;

if(block.vtx[0]->GetHash() == txHist_221.GetHash() && nHeight == 1265799) {
return true;
}
unsigned char ch_222[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x86, 0x50, 0x13, 0x04, 0x65, 0x48, 0x38, 0x5b, 0x08, 0x08, 0x00, 0x00, 0x04, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_222(ch_222, ch_222 + sizeof(ch_222) -1);
CDataStream stream_222(vch_222, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_222;
stream_222 >> txHist_222;

if(block.vtx[0]->GetHash() == txHist_222.GetHash() && nHeight == 1265798) {
return true;
}
unsigned char ch_223[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa0, 0x50, 0x13, 0x04, 0x37, 0x4e, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x65, 0x7d, 0x6f, 0x73, 0x6d, 0x77, 0x26, 0x86, 0x37, 0xe4, 0x43, 0x71, 0xca, 0xe5, 0x68, 0x16, 0xfa, 0xb6, 0xfa, 0x8a, 0x62, 0xaa, 0xa1, 0x93, 0x8c, 0xba, 0x90, 0x96, 0x11, 0x14, 0x88, 0xc7, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x68, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_223(ch_223, ch_223 + sizeof(ch_223) -1);
CDataStream stream_223(vch_223, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_223;
stream_223 >> txHist_223;

if(block.vtx[0]->GetHash() == txHist_223.GetHash() && nHeight == 1265824) {
return true;
}
unsigned char ch_224[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x36, 0x50, 0x13, 0x04, 0xb8, 0x35, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe9, 0x36, 0xa2, 0x4e, 0x37, 0x44, 0xa8, 0x77, 0x87, 0x37, 0x5a, 0x61, 0xe5, 0x0f, 0x53, 0xb1, 0x97, 0xf1, 0x42, 0xeb, 0xf9, 0x41, 0xd0, 0x71, 0x18, 0x8d, 0x00, 0x0b, 0x49, 0xb3, 0x07, 0x32, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0xff, 0xff, 0xfe, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x07, 0x29, 0x9c, 0x8d, 0xfe, 0xf6, 0xdd, 0x6b, 0xa3, 0x01, 0xb6, 0x8d, 0x81, 0x9e, 0x59, 0x75, 0xd0, 0x4e, 0xdb, 0x0b, 0x81, 0xe5, 0x34, 0xdb, 0x9e, 0x1c, 0x58, 0x79, 0xea, 0x17, 0x7d, 0x17, 0x60, 0xda, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_224(ch_224, ch_224 + sizeof(ch_224) -1);
CDataStream stream_224(vch_224, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_224;
stream_224 >> txHist_224;

if(block.vtx[0]->GetHash() == txHist_224.GetHash() && nHeight == 1265718) {
return true;
}
unsigned char ch_225[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9c, 0x50, 0x13, 0x04, 0xe6, 0x4d, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x01, 0x55, 0x4e, 0x68, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x4b, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x26, 0x41, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_225(ch_225, ch_225 + sizeof(ch_225) -1);
CDataStream stream_225(vch_225, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_225;
stream_225 >> txHist_225;

if(block.vtx[0]->GetHash() == txHist_225.GetHash() && nHeight == 1265820) {
return true;
}
unsigned char ch_226[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x57, 0x50, 0x13, 0x04, 0xe2, 0x3c, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x45, 0x52, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0xff, 0xff, 0xff, 0x3a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xf4, 0x9c, 0x70, 0x6c, 0x08, 0x1b, 0xbf, 0x26, 0x1a, 0x1c, 0x94, 0xb0, 0x5c, 0xea, 0x94, 0x37, 0x2a, 0xbc, 0x99, 0x58, 0x7a, 0xce, 0x11, 0x48, 0x96, 0x42, 0x80, 0x78, 0x62, 0xd4, 0xcb, 0x8f, 0x78, 0x9a, 0xf3, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x84, 0x5b, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0x94, 0xc9, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_226(ch_226, ch_226 + sizeof(ch_226) -1);
CDataStream stream_226(vch_226, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_226;
stream_226 >> txHist_226;

if(block.vtx[0]->GetHash() == txHist_226.GetHash() && nHeight == 1265751) {
return true;
}
unsigned char ch_227[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x85, 0x50, 0x13, 0x04, 0x5d, 0x48, 0x38, 0x5b, 0x08, 0x68, 0x00, 0x00, 0x05, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_227(ch_227, ch_227 + sizeof(ch_227) -1);
CDataStream stream_227(vch_227, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_227;
stream_227 >> txHist_227;

if(block.vtx[0]->GetHash() == txHist_227.GetHash() && nHeight == 1265797) {
return true;
}
unsigned char ch_228[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9e, 0x50, 0x13, 0x04, 0x08, 0x4e, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x55, 0x4e, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x01, 0x69, 0x2b, 0x28, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x6a, 0xa9, 0x02, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_228(ch_228, ch_228 + sizeof(ch_228) -1);
CDataStream stream_228(vch_228, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_228;
stream_228 >> txHist_228;

if(block.vtx[0]->GetHash() == txHist_228.GetHash() && nHeight == 1265822) {
return true;
}
unsigned char ch_229[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x32, 0x50, 0x13, 0x04, 0x41, 0x34, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa8, 0xb2, 0x0c, 0x17, 0x02, 0x86, 0x62, 0xf6, 0x96, 0x4b, 0x89, 0xe3, 0xc2, 0x38, 0x90, 0x80, 0xd7, 0x04, 0x97, 0x8b, 0x11, 0xcd, 0x38, 0xbc, 0x74, 0x25, 0xdf, 0x98, 0x00, 0x21, 0x02, 0x45, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xe4, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x60, 0x08, 0x04, 0x29, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x1e, 0xf3, 0xd7, 0x98, 0xf9, 0x7d, 0xba, 0x18, 0x33, 0x23, 0x83, 0xea, 0x65, 0x40, 0x27, 0xbe, 0xc4, 0x62, 0x86, 0x96, 0x88, 0xac, 0xa0, 0x06, 0x5b, 0xb1, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xca, 0xe3, 0x39, 0xe2, 0x4f, 0x6d, 0x60, 0x98, 0xec, 0xbe, 0x73, 0x11, 0x00, 0x3d, 0xd4, 0xf8, 0x02, 0x05, 0x8b, 0x9d, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_229(ch_229, ch_229 + sizeof(ch_229) -1);
CDataStream stream_229(vch_229, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_229;
stream_229 >> txHist_229;

if(block.vtx[0]->GetHash() == txHist_229.GetHash() && nHeight == 1265714) {
return true;
}
unsigned char ch_230[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9b, 0x50, 0x13, 0x04, 0xd0, 0x4d, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x29, 0xf3, 0x00, 0xf3, 0x24, 0x68, 0x00, 0x00, 0x01, 0x18, 0xcc, 0xe7, 0xb9, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x29, 0xf3, 0x00, 0xf2, 0x47, 0x38, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xe6, 0x10, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_230(ch_230, ch_230 + sizeof(ch_230) -1);
CDataStream stream_230(vch_230, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_230;
stream_230 >> txHist_230;

if(block.vtx[0]->GetHash() == txHist_230.GetHash() && nHeight == 1265819) {
return true;
}
unsigned char ch_231[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xe6, 0x4f, 0x13, 0x04, 0xdd, 0x12, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xfd, 0x1a, 0x53, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x5a, 0x21, 0x7b, 0xba, 0x00, 0xdc, 0x6c, 0xb5, 0x60, 0x1b, 0xed, 0x06, 0x88, 0x4a, 0x87, 0x87, 0xd6, 0x0c, 0xdf, 0xa2, 0xe6, 0x13, 0x22, 0xb0, 0x44, 0x1d, 0x45, 0xd2, 0x3f, 0x3b, 0xa8, 0xb4, 0x80, 0x79, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_231(ch_231, ch_231 + sizeof(ch_231) -1);
CDataStream stream_231(vch_231, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_231;
stream_231 >> txHist_231;

if(block.vtx[0]->GetHash() == txHist_231.GetHash() && nHeight == 1265638) {
return true;
}
unsigned char ch_232[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf3, 0x4f, 0x13, 0x04, 0x47, 0x1c, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x33, 0x19, 0x6c, 0x76, 0x46, 0xa6, 0x13, 0xbb, 0x36, 0x56, 0xe4, 0x10, 0x63, 0xd0, 0x84, 0xfc, 0xf9, 0x99, 0x10, 0xfd, 0xac, 0x44, 0x10, 0x65, 0x15, 0x34, 0x5e, 0x24, 0xc9, 0x1a, 0x2c, 0xfe, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xff, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x5b, 0x75, 0x10, 0xb6, 0x17, 0x9a, 0xae, 0x8b, 0x72, 0x74, 0x6a, 0x4e, 0x67, 0xe5, 0xae, 0x18, 0xd5, 0x3a, 0xc1, 0x70, 0xb5, 0x8a, 0xce, 0xff, 0xf5, 0x73, 0x07, 0x7a, 0x72, 0x03, 0x7b, 0xfb, 0xe0, 0x5d, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_232(ch_232, ch_232 + sizeof(ch_232) -1);
CDataStream stream_232(vch_232, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_232;
stream_232 >> txHist_232;

if(block.vtx[0]->GetHash() == txHist_232.GetHash() && nHeight == 1265651) {
return true;
}
unsigned char ch_233[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x83, 0x50, 0x13, 0x04, 0x2e, 0x48, 0x38, 0x5b, 0x08, 0x3f, 0xff, 0xff, 0xf7, 0x12, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_233(ch_233, ch_233 + sizeof(ch_233) -1);
CDataStream stream_233(vch_233, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_233;
stream_233 >> txHist_233;

if(block.vtx[0]->GetHash() == txHist_233.GetHash() && nHeight == 1265795) {
return true;
}
unsigned char ch_234[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x82, 0x50, 0x13, 0x04, 0x1c, 0x48, 0x38, 0x5b, 0x08, 0x3f, 0xff, 0xff, 0xf7, 0x55, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xbd, 0x55, 0xee, 0x79, 0x1f, 0x8c, 0x21, 0x48, 0xb9, 0xf6, 0xb1, 0x97, 0x69, 0xd4, 0xba, 0xa9, 0xaa, 0xf7, 0xf0, 0xf2, 0x79, 0x87, 0x85, 0x30, 0xcb, 0x5a, 0x30, 0xb8, 0x04, 0xa1, 0x91, 0xe9, 0x78, 0x3a, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_234(ch_234, ch_234 + sizeof(ch_234) -1);
CDataStream stream_234(vch_234, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_234;
stream_234 >> txHist_234;

if(block.vtx[0]->GetHash() == txHist_234.GetHash() && nHeight == 1265794) {
return true;
}
unsigned char ch_235[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x99, 0x50, 0x13, 0x04, 0xad, 0x4d, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x7f, 0xfe, 0x4b, 0x55, 0x39, 0x58, 0x00, 0x00, 0x00, 0x04, 0x00, 0x74, 0x78, 0x65, 0x6e, 0x6e, 0x65, 0x70, 0x6f, 0x3a, 0x6b, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x51, 0xb0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x11, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_235(ch_235, ch_235 + sizeof(ch_235) -1);
CDataStream stream_235(vch_235, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_235;
stream_235 >> txHist_235;

if(block.vtx[0]->GetHash() == txHist_235.GetHash() && nHeight == 1265817) {
return true;
}
unsigned char ch_236[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x2f, 0x50, 0x13, 0x04, 0x83, 0x33, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x1a, 0x67, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_236(ch_236, ch_236 + sizeof(ch_236) -1);
CDataStream stream_236(vch_236, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_236;
stream_236 >> txHist_236;

if(block.vtx[0]->GetHash() == txHist_236.GetHash() && nHeight == 1265711) {
return true;
}
unsigned char ch_237[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9a, 0x50, 0x13, 0x04, 0xcd, 0x4d, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x01, 0x5e, 0x5e, 0x70, 0x00, 0x00, 0x00, 0x00, 0x01, 0x5e, 0x5d, 0x98, 0x00, 0x00, 0x00, 0x00, 0x01, 0x5e, 0x5e, 0x28, 0x00, 0x00, 0x00, 0x00, 0x01, 0x5e, 0x5a, 0xb0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfa, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_237(ch_237, ch_237 + sizeof(ch_237) -1);
CDataStream stream_237(vch_237, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_237;
stream_237 >> txHist_237;

if(block.vtx[0]->GetHash() == txHist_237.GetHash() && nHeight == 1265818) {
return true;
}
unsigned char ch_238[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xe3, 0x4f, 0x13, 0x04, 0xc2, 0x10, 0x38, 0x5b, 0x08, 0x7f, 0xff, 0xfa, 0xc4, 0xa1, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_238(ch_238, ch_238 + sizeof(ch_238) -1);
CDataStream stream_238(vch_238, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_238;
stream_238 >> txHist_238;

if(block.vtx[0]->GetHash() == txHist_238.GetHash() && nHeight == 1265635) {
return true;
}
unsigned char ch_239[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf0, 0x4f, 0x13, 0x04, 0xa6, 0x16, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xf4, 0x34, 0xf1, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_239(ch_239, ch_239 + sizeof(ch_239) -1);
CDataStream stream_239(vch_239, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_239;
stream_239 >> txHist_239;

if(block.vtx[0]->GetHash() == txHist_239.GetHash() && nHeight == 1265648) {
return true;
}
unsigned char ch_240[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x81, 0x50, 0x13, 0x04, 0xaa, 0x47, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_240(ch_240, ch_240 + sizeof(ch_240) -1);
CDataStream stream_240(vch_240, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_240;
stream_240 >> txHist_240;

if(block.vtx[0]->GetHash() == txHist_240.GetHash() && nHeight == 1265793) {
return true;
}
unsigned char ch_241[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x80, 0x50, 0x13, 0x04, 0xab, 0x47, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc8, 0xec, 0x9b, 0x33, 0x69, 0x86, 0x3d, 0xd0, 0x8d, 0x00, 0x77, 0x64, 0x19, 0xa0, 0xda, 0x5a, 0x10, 0x17, 0xcb, 0x59, 0xe2, 0x80, 0x6a, 0xab, 0x12, 0xc2, 0xdb, 0x72, 0x98, 0x32, 0x58, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0xff, 0xff, 0xfe, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x2c, 0x6d, 0x55, 0xe3, 0x0a, 0xd8, 0xb7, 0xf9, 0x61, 0xab, 0x66, 0xd6, 0x0a, 0xea, 0xb7, 0xf1, 0xdc, 0x57, 0xb8, 0x26, 0x97, 0x70, 0xe5, 0x95, 0xb5, 0x29, 0xa2, 0x37, 0x75, 0xfc, 0x0d, 0xfc, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_241(ch_241, ch_241 + sizeof(ch_241) -1);
CDataStream stream_241(vch_241, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_241;
stream_241 >> txHist_241;

if(block.vtx[0]->GetHash() == txHist_241.GetHash() && nHeight == 1265792) {
return true;
}
unsigned char ch_242[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x98, 0x50, 0x13, 0x04, 0x7b, 0x4d, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x71, 0x49, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_242(ch_242, ch_242 + sizeof(ch_242) -1);
CDataStream stream_242(vch_242, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_242;
stream_242 >> txHist_242;

if(block.vtx[0]->GetHash() == txHist_242.GetHash() && nHeight == 1265816) {
return true;
}
unsigned char ch_243[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2e, 0x50, 0x13, 0x04, 0x89, 0x33, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x3c, 0xc1, 0xb8, 0x12, 0xb1, 0xc4, 0xcb, 0x82, 0x9e, 0xf2, 0xc2, 0x32, 0xda, 0xcb, 0xbb, 0xda, 0xe2, 0xa2, 0xd8, 0x0d, 0xce, 0xb7, 0x92, 0xa5, 0x45, 0xcf, 0x54, 0x21, 0x3d, 0xbd, 0xd5, 0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x6d, 0xe0, 0xc0, 0xfe, 0x6d, 0x71, 0xbd, 0xfe, 0xf4, 0xf4, 0x3f, 0xd2, 0xd1, 0x45, 0xf0, 0x01, 0xee, 0x6e, 0xd3, 0xef, 0xfb, 0x9a, 0x6c, 0x34, 0x40, 0xb1, 0x3b, 0xe4, 0x2e, 0x38, 0x59, 0x41, 0x48, 0x29, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_243(ch_243, ch_243 + sizeof(ch_243) -1);
CDataStream stream_243(vch_243, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_243;
stream_243 >> txHist_243;

if(block.vtx[0]->GetHash() == txHist_243.GetHash() && nHeight == 1265710) {
return true;
}
unsigned char ch_244[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x2a, 0x50, 0x13, 0x04, 0xf1, 0x2f, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xf4, 0x34, 0x61, 0x15, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x27, 0x43, 0x26, 0x4b, 0x58, 0xf9, 0xeb, 0x3e, 0xad, 0x06, 0x5a, 0x19, 0x98, 0x62, 0x6c, 0x2d, 0xc2, 0xfb, 0x9f, 0x98, 0xda, 0xe2, 0x4b, 0xa9, 0x97, 0xeb, 0x01, 0x62, 0x47, 0x2a, 0xe2, 0xbf, 0x00, 0xe4, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_244(ch_244, ch_244 + sizeof(ch_244) -1);
CDataStream stream_244(vch_244, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_244;
stream_244 >> txHist_244;

if(block.vtx[0]->GetHash() == txHist_244.GetHash() && nHeight == 1265706) {
return true;
}
unsigned char ch_245[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xe0, 0x4f, 0x13, 0x04, 0x82, 0x0e, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x05, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_245(ch_245, ch_245 + sizeof(ch_245) -1);
CDataStream stream_245(vch_245, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_245;
stream_245 >> txHist_245;

if(block.vtx[0]->GetHash() == txHist_245.GetHash() && nHeight == 1265632) {
return true;
}
unsigned char ch_246[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xed, 0x4f, 0x13, 0x04, 0xf6, 0x15, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xf4, 0x34, 0xec, 0x27, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x19, 0xa5, 0x41, 0xd1, 0x57, 0xa3, 0xf0, 0xd5, 0x39, 0x16, 0x56, 0x22, 0xf2, 0x04, 0xc6, 0xcf, 0x8e, 0xa8, 0x2c, 0x7c, 0x0f, 0xcf, 0x53, 0x2e, 0x81, 0x07, 0xf9, 0x79, 0x96, 0x6f, 0x44, 0x83, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_246(ch_246, ch_246 + sizeof(ch_246) -1);
CDataStream stream_246(vch_246, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_246;
stream_246 >> txHist_246;

if(block.vtx[0]->GetHash() == txHist_246.GetHash() && nHeight == 1265645) {
return true;
}
unsigned char ch_247[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x97, 0x50, 0x13, 0x04, 0x14, 0x4d, 0x38, 0x5b, 0x08, 0x08, 0x00, 0x00, 0x35, 0x9c, 0x0a, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_247(ch_247, ch_247 + sizeof(ch_247) -1);
CDataStream stream_247(vch_247, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_247;
stream_247 >> txHist_247;

if(block.vtx[0]->GetHash() == txHist_247.GetHash() && nHeight == 1265815) {
return true;
}
unsigned char ch_248[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x52, 0x4f, 0x13, 0x04, 0x60, 0xd0, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x19, 0xe4, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x9e, 0xff, 0x6e, 0x18, 0x19, 0x5c, 0x2a, 0x05, 0xb9, 0xce, 0xf9, 0x4b, 0xe9, 0xef, 0x9c, 0x7e, 0x0b, 0xc6, 0x90, 0x12, 0xda, 0x4c, 0x3b, 0x73, 0x27, 0xa9, 0xbe, 0x39, 0x5e, 0x4a, 0x82, 0x9a, 0x20, 0x1f, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_248(ch_248, ch_248 + sizeof(ch_248) -1);
CDataStream stream_248(vch_248, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_248;
stream_248 >> txHist_248;

if(block.vtx[0]->GetHash() == txHist_248.GetHash() && nHeight == 1265490) {
return true;
}
unsigned char ch_249[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xdc, 0x4f, 0x13, 0x04, 0x93, 0x0d, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x09, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_249(ch_249, ch_249 + sizeof(ch_249) -1);
CDataStream stream_249(vch_249, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_249;
stream_249 >> txHist_249;

if(block.vtx[0]->GetHash() == txHist_249.GetHash() && nHeight == 1265628) {
return true;
}
unsigned char ch_250[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x51, 0x4f, 0x13, 0x04, 0x8f, 0xcf, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x08, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x8b, 0x9a, 0x9f, 0xed, 0x5c, 0xd4, 0xf4, 0x02, 0xfe, 0x4b, 0x54, 0x0a, 0xa8, 0xf1, 0xbc, 0x92, 0x42, 0xb0, 0x90, 0xa8, 0xf4, 0x6d, 0x71, 0xdc, 0xbc, 0x07, 0xb6, 0xde, 0x7e, 0x1d, 0x42, 0xdc, 0x58, 0x6f, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_250(ch_250, ch_250 + sizeof(ch_250) -1);
CDataStream stream_250(vch_250, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_250;
stream_250 >> txHist_250;

if(block.vtx[0]->GetHash() == txHist_250.GetHash() && nHeight == 1265489) {
return true;
}
unsigned char ch_251[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x28, 0x50, 0x13, 0x04, 0xfb, 0x2e, 0x38, 0x5b, 0x08, 0x7f, 0xff, 0xe5, 0x05, 0x5f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x77, 0x81, 0xf4, 0x91, 0x91, 0x3d, 0x45, 0x1b, 0xf0, 0x77, 0xfc, 0x57, 0xa8, 0x0c, 0x63, 0x0e, 0x63, 0x50, 0x24, 0xcc, 0x33, 0xc7, 0xcd, 0xad, 0x81, 0xdc, 0xe1, 0x45, 0x7b, 0xaf, 0xda, 0xae, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_251(ch_251, ch_251 + sizeof(ch_251) -1);
CDataStream stream_251(vch_251, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_251;
stream_251 >> txHist_251;

if(block.vtx[0]->GetHash() == txHist_251.GetHash() && nHeight == 1265704) {
return true;
}
unsigned char ch_252[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa4, 0x4f, 0x13, 0x04, 0xb3, 0xf6, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x4d, 0x4e, 0xd4, 0x4f, 0x62, 0xfb, 0x5c, 0xbd, 0x8b, 0x0d, 0x5f, 0xcf, 0x0d, 0x12, 0x76, 0x7b, 0xec, 0xc7, 0x25, 0x17, 0x38, 0x41, 0x8f, 0x73, 0x10, 0x65, 0x9e, 0xd9, 0xd1, 0x44, 0x6a, 0xb9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x87, 0x62, 0xff, 0xa2, 0x37, 0x63, 0xbe, 0x7f, 0xfc, 0x82, 0x96, 0xc4, 0xaa, 0xaf, 0x72, 0x94, 0xff, 0x50, 0xe0, 0x3d, 0x93, 0x8b, 0xd4, 0x18, 0x54, 0x38, 0x8d, 0x9b, 0x17, 0xd1, 0x87, 0xa7, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_252(ch_252, ch_252 + sizeof(ch_252) -1);
CDataStream stream_252(vch_252, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_252;
stream_252 >> txHist_252;

if(block.vtx[0]->GetHash() == txHist_252.GetHash() && nHeight == 1265572) {
return true;
}
unsigned char ch_253[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x92, 0x50, 0x13, 0x04, 0x86, 0x4b, 0x38, 0x5b, 0x08, 0x68, 0x00, 0x00, 0x19, 0x3a, 0x14, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x06, 0x60, 0x4f, 0xcf, 0xe1, 0xb2, 0xae, 0xde, 0xe8, 0x18, 0x2e, 0x57, 0x1a, 0xbc, 0xbf, 0x36, 0xe5, 0x62, 0x69, 0xee, 0x41, 0x2e, 0x70, 0xc9, 0xc3, 0x22, 0x6e, 0x5e, 0x20, 0xe2, 0xae, 0x15, 0xd0, 0xeb, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_253(ch_253, ch_253 + sizeof(ch_253) -1);
CDataStream stream_253(vch_253, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_253;
stream_253 >> txHist_253;

if(block.vtx[0]->GetHash() == txHist_253.GetHash() && nHeight == 1265810) {
return true;
}
unsigned char ch_254[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x4f, 0x4f, 0x13, 0x04, 0x42, 0xcf, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x02, 0xe0, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_254(ch_254, ch_254 + sizeof(ch_254) -1);
CDataStream stream_254(vch_254, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_254;
stream_254 >> txHist_254;

if(block.vtx[0]->GetHash() == txHist_254.GetHash() && nHeight == 1265487) {
return true;
}
unsigned char ch_255[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x27, 0x50, 0x13, 0x04, 0x78, 0x2e, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x03, 0xaf, 0x0d, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe7, 0xfd, 0x15, 0xbc, 0x2d, 0x1d, 0xab, 0x13, 0xe8, 0x5c, 0xa7, 0xec, 0x46, 0xbe, 0xee, 0xa9, 0xc4, 0xa4, 0xf4, 0x29, 0x42, 0x0d, 0x00, 0x4d, 0xe6, 0x7b, 0x94, 0xec, 0x43, 0x29, 0xee, 0x72, 0xe8, 0x3f, 0x64, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_255(ch_255, ch_255 + sizeof(ch_255) -1);
CDataStream stream_255(vch_255, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_255;
stream_255 >> txHist_255;

if(block.vtx[0]->GetHash() == txHist_255.GetHash() && nHeight == 1265703) {
return true;
}
unsigned char ch_256[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa3, 0x4f, 0x13, 0x04, 0x9f, 0xf5, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x03, 0x04, 0xa4, 0xd7, 0x53, 0x8c, 0x00, 0x00, 0x03, 0x04, 0xa4, 0xd8, 0x4d, 0xac, 0x00, 0x00, 0x03, 0x04, 0xa4, 0xd6, 0x1e, 0xcc, 0x00, 0x00, 0x03, 0x04, 0xa4, 0xd0, 0xdf, 0xec, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0d, 0x38, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_256(ch_256, ch_256 + sizeof(ch_256) -1);
CDataStream stream_256(vch_256, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_256;
stream_256 >> txHist_256;

if(block.vtx[0]->GetHash() == txHist_256.GetHash() && nHeight == 1265571) {
return true;
}
unsigned char ch_257[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x7b, 0x50, 0x13, 0x04, 0x26, 0x46, 0x38, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0xa5, 0x07, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_257(ch_257, ch_257 + sizeof(ch_257) -1);
CDataStream stream_257(vch_257, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_257;
stream_257 >> txHist_257;

if(block.vtx[0]->GetHash() == txHist_257.GetHash() && nHeight == 1265787) {
return true;
}
unsigned char ch_258[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x4d, 0x4f, 0x13, 0x04, 0xb1, 0xcd, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xf4, 0x34, 0x65, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_258(ch_258, ch_258 + sizeof(ch_258) -1);
CDataStream stream_258(vch_258, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_258;
stream_258 >> txHist_258;

if(block.vtx[0]->GetHash() == txHist_258.GetHash() && nHeight == 1265485) {
return true;
}
unsigned char ch_259[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x26, 0x50, 0x13, 0x04, 0x06, 0x2e, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x1a, 0x67, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x9b, 0x1b, 0x95, 0x24, 0x91, 0xf9, 0x81, 0x44, 0x2a, 0x57, 0xd1, 0x2d, 0xb6, 0xe0, 0x08, 0x85, 0xd9, 0x16, 0x06, 0xdb, 0xdd, 0xfc, 0xbf, 0x2d, 0x8f, 0xab, 0xdd, 0xe2, 0x12, 0xb9, 0x53, 0x6f, 0x80, 0x79, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_259(ch_259, ch_259 + sizeof(ch_259) -1);
CDataStream stream_259(vch_259, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_259;
stream_259 >> txHist_259;

if(block.vtx[0]->GetHash() == txHist_259.GetHash() && nHeight == 1265702) {
return true;
}
unsigned char ch_260[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x96, 0x4f, 0x13, 0x04, 0xde, 0xef, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x0b, 0x42, 0x22, 0x05, 0x29, 0x1f, 0xa5, 0xb0, 0xd4, 0x36, 0x10, 0xf0, 0x6e, 0xfd, 0xe1, 0xe7, 0x00, 0x84, 0xff, 0xd3, 0xe2, 0xef, 0x7b, 0x7a, 0xe6, 0x81, 0x44, 0x79, 0x64, 0x94, 0x4b, 0xbf, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_260(ch_260, ch_260 + sizeof(ch_260) -1);
CDataStream stream_260(vch_260, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_260;
stream_260 >> txHist_260;

if(block.vtx[0]->GetHash() == txHist_260.GetHash() && nHeight == 1265558) {
return true;
}
unsigned char ch_261[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x7a, 0x50, 0x13, 0x04, 0xe5, 0x45, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x1a, 0x67, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_261(ch_261, ch_261 + sizeof(ch_261) -1);
CDataStream stream_261(vch_261, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_261;
stream_261 >> txHist_261;

if(block.vtx[0]->GetHash() == txHist_261.GetHash() && nHeight == 1265786) {
return true;
}
unsigned char ch_262[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x70, 0x50, 0x13, 0x04, 0x33, 0x44, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x79, 0x40, 0x19, 0xff, 0x5c, 0xb1, 0x7b, 0xb2, 0x96, 0x46, 0x70, 0x11, 0xfb, 0x6a, 0xb9, 0x1e, 0x83, 0xb5, 0xb3, 0xe5, 0xd7, 0xc9, 0x9d, 0x6a, 0xeb, 0x71, 0x81, 0x6c, 0x2e, 0x99, 0x3f, 0x1f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x0d, 0xfa, 0x80, 0xff, 0x23, 0x07, 0xa5, 0xdf, 0x94, 0x0a, 0xe0, 0xba, 0x4b, 0x2a, 0x97, 0x3e, 0xcf, 0x98, 0xda, 0xbd, 0x2a, 0xec, 0xa9, 0x73, 0x9d, 0x52, 0xfe, 0x65, 0x1c, 0x4b, 0xef, 0x4a, 0xf8, 0xe2, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_262(ch_262, ch_262 + sizeof(ch_262) -1);
CDataStream stream_262(vch_262, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_262;
stream_262 >> txHist_262;

if(block.vtx[0]->GetHash() == txHist_262.GetHash() && nHeight == 1265776) {
return true;
}
unsigned char ch_263[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x4a, 0x4f, 0x13, 0x04, 0x38, 0xcc, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfa, 0xc2, 0x32, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_263(ch_263, ch_263 + sizeof(ch_263) -1);
CDataStream stream_263(vch_263, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_263;
stream_263 >> txHist_263;

if(block.vtx[0]->GetHash() == txHist_263.GetHash() && nHeight == 1265482) {
return true;
}
unsigned char ch_264[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x25, 0x50, 0x13, 0x04, 0xfe, 0x2d, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x1a, 0x67, 0xe1, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x18, 0x57, 0x8e, 0xe2, 0x0a, 0xf1, 0xa0, 0xe1, 0x3b, 0xcd, 0x9d, 0x15, 0x76, 0xe5, 0x00, 0x59, 0xa0, 0xb2, 0xd7, 0x72, 0xc0, 0x47, 0xb0, 0x85, 0x19, 0xf5, 0x2a, 0xd2, 0x02, 0x66, 0x5b, 0xfb, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_264(ch_264, ch_264 + sizeof(ch_264) -1);
CDataStream stream_264(vch_264, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_264;
stream_264 >> txHist_264;

if(block.vtx[0]->GetHash() == txHist_264.GetHash() && nHeight == 1265701) {
return true;
}
unsigned char ch_265[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x93, 0x4f, 0x13, 0x04, 0xae, 0xee, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf9, 0x27, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_265(ch_265, ch_265 + sizeof(ch_265) -1);
CDataStream stream_265(vch_265, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_265;
stream_265 >> txHist_265;

if(block.vtx[0]->GetHash() == txHist_265.GetHash() && nHeight == 1265555) {
return true;
}
unsigned char ch_266[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x48, 0x4f, 0x13, 0x04, 0x7b, 0xcb, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x09, 0xc4, 0x7e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_266(ch_266, ch_266 + sizeof(ch_266) -1);
CDataStream stream_266(vch_266, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_266;
stream_266 >> txHist_266;

if(block.vtx[0]->GetHash() == txHist_266.GetHash() && nHeight == 1265480) {
return true;
}
unsigned char ch_267[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x79, 0x50, 0x13, 0x04, 0xb1, 0x45, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xe3, 0x81, 0x47, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_267(ch_267, ch_267 + sizeof(ch_267) -1);
CDataStream stream_267(vch_267, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_267;
stream_267 >> txHist_267;

if(block.vtx[0]->GetHash() == txHist_267.GetHash() && nHeight == 1265785) {
return true;
}
unsigned char ch_268[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x6f, 0x50, 0x13, 0x04, 0xd7, 0x43, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x26, 0x1c, 0xd9, 0x82, 0x00, 0x00, 0x00, 0x00, 0xac, 0x88, 0x6a, 0x65, 0xf6, 0x03, 0x93, 0x74, 0x12, 0xd2, 0xc6, 0xcf, 0x47, 0x5a, 0x7c, 0xc4, 0xf8, 0xc1, 0x72, 0x49, 0x96, 0x55, 0x14, 0xa9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0xff, 0xff, 0xff, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_268(ch_268, ch_268 + sizeof(ch_268) -1);
CDataStream stream_268(vch_268, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_268;
stream_268 >> txHist_268;

if(block.vtx[0]->GetHash() == txHist_268.GetHash() && nHeight == 1265775) {
return true;
}
unsigned char ch_269[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb4, 0x4f, 0x13, 0x04, 0xc1, 0xfc, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfd, 0x69, 0x10, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xf7, 0xa2, 0xea, 0x91, 0x34, 0x3f, 0x59, 0x0f, 0x8a, 0x6c, 0x29, 0x6d, 0xd4, 0x42, 0x07, 0x36, 0xb0, 0x15, 0xd3, 0xff, 0xba, 0x43, 0x14, 0x0f, 0x9d, 0x6c, 0xdc, 0x90, 0x8c, 0x66, 0x94, 0x76, 0x40, 0x3b, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_269(ch_269, ch_269 + sizeof(ch_269) -1);
CDataStream stream_269(vch_269, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_269;
stream_269 >> txHist_269;

if(block.vtx[0]->GetHash() == txHist_269.GetHash() && nHeight == 1265588) {
return true;
}
unsigned char ch_270[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x90, 0x4f, 0x13, 0x04, 0x03, 0xee, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x19, 0xfd, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_270(ch_270, ch_270 + sizeof(ch_270) -1);
CDataStream stream_270(vch_270, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_270;
stream_270 >> txHist_270;

if(block.vtx[0]->GetHash() == txHist_270.GetHash() && nHeight == 1265552) {
return true;
}
unsigned char ch_271[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x77, 0x50, 0x13, 0x04, 0x52, 0x45, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x08, 0x3a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_271(ch_271, ch_271 + sizeof(ch_271) -1);
CDataStream stream_271(vch_271, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_271;
stream_271 >> txHist_271;

if(block.vtx[0]->GetHash() == txHist_271.GetHash() && nHeight == 1265783) {
return true;
}
unsigned char ch_272[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x6e, 0x50, 0x13, 0x04, 0xc9, 0x43, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x63, 0x6e, 0x84, 0x54, 0xaf, 0xff, 0x01, 0x77, 0xd4, 0x84, 0x94, 0x49, 0x1f, 0xbe, 0x58, 0xe6, 0x53, 0xb6, 0x48, 0xea, 0xfc, 0x32, 0x75, 0xd3, 0xee, 0x07, 0xe1, 0xd9, 0x59, 0xfd, 0x21, 0xa3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x6b, 0xa5, 0xf9, 0x80, 0xa9, 0x3e, 0xb7, 0x2a, 0x71, 0x6f, 0x6f, 0xf8, 0x26, 0xe7, 0x79, 0x17, 0x72, 0x61, 0x6a, 0x02, 0x29, 0x2e, 0x74, 0xfb, 0xb9, 0x8c, 0x9c, 0xb1, 0xda, 0xc3, 0x9a, 0xea, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_272(ch_272, ch_272 + sizeof(ch_272) -1);
CDataStream stream_272(vch_272, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_272;
stream_272 >> txHist_272;

if(block.vtx[0]->GetHash() == txHist_272.GetHash() && nHeight == 1265774) {
return true;
}
unsigned char ch_273[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb3, 0x4f, 0x13, 0x04, 0xf5, 0xfb, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x45, 0x52, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0d, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_273(ch_273, ch_273 + sizeof(ch_273) -1);
CDataStream stream_273(vch_273, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_273;
stream_273 >> txHist_273;

if(block.vtx[0]->GetHash() == txHist_273.GetHash() && nHeight == 1265587) {
return true;
}
unsigned char ch_274[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb2, 0x4f, 0x13, 0x04, 0xd7, 0xfb, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x09, 0xc1, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xb9, 0x11, 0x6e, 0x86, 0xc0, 0x0d, 0x79, 0xab, 0x3d, 0x98, 0x93, 0x75, 0x8f, 0x56, 0x4e, 0xa1, 0xf1, 0x96, 0x8f, 0x5c, 0xe8, 0xc8, 0xec, 0xf8, 0xff, 0x7a, 0x0d, 0x57, 0xc8, 0x5b, 0xc5, 0x86, 0xf8, 0xe2, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_274(ch_274, ch_274 + sizeof(ch_274) -1);
CDataStream stream_274(vch_274, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_274;
stream_274 >> txHist_274;

if(block.vtx[0]->GetHash() == txHist_274.GetHash() && nHeight == 1265586) {
return true;
}
unsigned char ch_275[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x41, 0x4f, 0x13, 0x04, 0xaa, 0xc8, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x0b, 0x7d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_275(ch_275, ch_275 + sizeof(ch_275) -1);
CDataStream stream_275(vch_275, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_275;
stream_275 >> txHist_275;

if(block.vtx[0]->GetHash() == txHist_275.GetHash() && nHeight == 1265473) {
return true;
}
unsigned char ch_276[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x73, 0x50, 0x13, 0x04, 0x8e, 0x44, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x74, 0x00, 0x02, 0xff, 0xff, 0xff, 0xfe, 0x65, 0x43, 0xff, 0xbf, 0xa7, 0xfc, 0x38, 0xe9, 0x09, 0x50, 0xc4, 0x54, 0x99, 0xe5, 0x4c, 0x45, 0x52, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x02, 0x47, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x85, 0x1f, 0x76, 0x7c, 0x1f, 0xde, 0xdb, 0xaf, 0x70, 0x17, 0xad, 0x86, 0x20, 0x71, 0x38, 0xcc, 0x66, 0xdf, 0x04, 0xd2, 0x5b, 0x88, 0x48, 0x9f, 0x61, 0x04, 0x1a, 0x09, 0x56, 0xde, 0x6a, 0x5e, 0x60, 0xe5, 0xf3, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x50, 0x5c, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0x90, 0xcd, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_276(ch_276, ch_276 + sizeof(ch_276) -1);
CDataStream stream_276(vch_276, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_276;
stream_276 >> txHist_276;

if(block.vtx[0]->GetHash() == txHist_276.GetHash() && nHeight == 1265779) {
return true;
}
unsigned char ch_277[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb1, 0x4f, 0x13, 0x04, 0xe8, 0xfa, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfd, 0xea, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_277(ch_277, ch_277 + sizeof(ch_277) -1);
CDataStream stream_277(vch_277, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_277;
stream_277 >> txHist_277;

if(block.vtx[0]->GetHash() == txHist_277.GetHash() && nHeight == 1265585) {
return true;
}
unsigned char ch_278[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x63, 0x50, 0x13, 0x04, 0x1c, 0x41, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xfc, 0x3a, 0x43, 0x69, 0x20, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x20, 0x69, 0x43, 0x3a, 0xfc, 0xdb, 0x88, 0x2f, 0x51, 0xfc, 0x11, 0x45, 0xdf, 0x96, 0x9b, 0x5d, 0xaf, 0xa3, 0x54, 0x5d, 0xbf, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xe8, 0x3a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x60, 0x08, 0x04, 0x29, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x1e, 0xf3, 0xd7, 0x98, 0xf9, 0x7d, 0xba, 0x18, 0x33, 0x23, 0x83, 0xea, 0x65, 0x40, 0x27, 0xbe, 0xc4, 0x62, 0x86, 0x96, 0x88, 0xac, 0xa0, 0x06, 0x5b, 0xb1, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xca, 0xe3, 0x39, 0xe2, 0x4f, 0x6d, 0x60, 0x98, 0xec, 0xbe, 0x73, 0x11, 0x00, 0x3d, 0xd4, 0xf8, 0x02, 0x05, 0x8b, 0x9d, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_278(ch_278, ch_278 + sizeof(ch_278) -1);
CDataStream stream_278(vch_278, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_278;
stream_278 >> txHist_278;

if(block.vtx[0]->GetHash() == txHist_278.GetHash() && nHeight == 1265763) {
return true;
}
unsigned char ch_279[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb0, 0x4f, 0x13, 0x04, 0xdf, 0xfa, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0x58, 0x16, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xc8, 0xa8, 0xcb, 0x02, 0x63, 0x2f, 0x5b, 0xd0, 0xa5, 0xe3, 0x4c, 0xcb, 0xf0, 0x68, 0xdc, 0xf3, 0x0c, 0xd9, 0x56, 0xba, 0x10, 0x49, 0xd2, 0xd4, 0xeb, 0xb7, 0xcb, 0x0c, 0x8b, 0x6d, 0x8b, 0x30, 0xa8, 0x19, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_279(ch_279, ch_279 + sizeof(ch_279) -1);
CDataStream stream_279(vch_279, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_279;
stream_279 >> txHist_279;

if(block.vtx[0]->GetHash() == txHist_279.GetHash() && nHeight == 1265584) {
return true;
}
unsigned char ch_280[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x84, 0x4f, 0x13, 0x04, 0xbd, 0xea, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xda, 0x32, 0x8f, 0x9e, 0x61, 0x33, 0xc8, 0xf9, 0x0e, 0x3c, 0x92, 0x47, 0xd3, 0xac, 0x6f, 0xed, 0x6b, 0x1f, 0xbd, 0x18, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x00, 0x09, 0x4c, 0x5f, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0d, 0x46, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x73, 0x33, 0x98, 0xa0, 0x2d, 0x16, 0xa7, 0x27, 0xe7, 0x2d, 0xc8, 0x4e, 0xa3, 0x52, 0x95, 0xdd, 0x38, 0xb3, 0x28, 0x3f, 0x92, 0xee, 0x3f, 0xd1, 0xfa, 0x73, 0xc8, 0x69, 0x16, 0xab, 0x3b, 0x69, 0x18, 0xc6, 0xf4, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xb4, 0x5e, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0x84, 0xd9, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_280(ch_280, ch_280 + sizeof(ch_280) -1);
CDataStream stream_280(vch_280, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_280;
stream_280 >> txHist_280;

if(block.vtx[0]->GetHash() == txHist_280.GetHash() && nHeight == 1265540) {
return true;
}
unsigned char ch_281[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x05, 0x4f, 0x13, 0x04, 0x2a, 0xb3, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf3, 0x5d, 0x99, 0xd1, 0x8d, 0xd8, 0xae, 0x09, 0x6e, 0xa8, 0xf7, 0xfb, 0xb4, 0x38, 0x79, 0x2e, 0xfc, 0x59, 0xe7, 0x6f, 0x37, 0x4f, 0xdc, 0x28, 0xf4, 0x2d, 0x35, 0xd3, 0x53, 0xa5, 0xf0, 0x3e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_281(ch_281, ch_281 + sizeof(ch_281) -1);
CDataStream stream_281(vch_281, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_281;
stream_281 >> txHist_281;

if(block.vtx[0]->GetHash() == txHist_281.GetHash() && nHeight == 1265413) {
return true;
}
unsigned char ch_282[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x55, 0x50, 0x13, 0x04, 0x7d, 0x3c, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0xff, 0xff, 0xff, 0x2b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_282(ch_282, ch_282 + sizeof(ch_282) -1);
CDataStream stream_282(vch_282, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_282;
stream_282 >> txHist_282;

if(block.vtx[0]->GetHash() == txHist_282.GetHash() && nHeight == 1265749) {
return true;
}
unsigned char ch_283[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xaf, 0x4f, 0x13, 0x04, 0x24, 0xfa, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x16, 0x82, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_283(ch_283, ch_283 + sizeof(ch_283) -1);
CDataStream stream_283(vch_283, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_283;
stream_283 >> txHist_283;

if(block.vtx[0]->GetHash() == txHist_283.GetHash() && nHeight == 1265583) {
return true;
}
unsigned char ch_284[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x81, 0x4f, 0x13, 0x04, 0x9a, 0xe7, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x03, 0xe3, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_284(ch_284, ch_284 + sizeof(ch_284) -1);
CDataStream stream_284(vch_284, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_284;
stream_284 >> txHist_284;

if(block.vtx[0]->GetHash() == txHist_284.GetHash() && nHeight == 1265537) {
return true;
}
unsigned char ch_285[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xff, 0x4e, 0x13, 0x04, 0xee, 0xb1, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xff, 0xbd, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_285(ch_285, ch_285 + sizeof(ch_285) -1);
CDataStream stream_285(vch_285, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_285;
stream_285 >> txHist_285;

if(block.vtx[0]->GetHash() == txHist_285.GetHash() && nHeight == 1265407) {
return true;
}
unsigned char ch_286[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x53, 0x50, 0x13, 0x04, 0x35, 0x3c, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xfa, 0xc2, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xfc, 0x7f, 0xc0, 0x8c, 0x21, 0x70, 0x16, 0x97, 0xf5, 0x08, 0x6f, 0x4f, 0x30, 0x0c, 0xe5, 0x78, 0xc2, 0x36, 0x7d, 0x77, 0xaf, 0xbc, 0xf8, 0xab, 0x4e, 0xe6, 0xf5, 0xdb, 0x9c, 0x96, 0x73, 0x56, 0x40, 0x0f, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_286(ch_286, ch_286 + sizeof(ch_286) -1);
CDataStream stream_286(vch_286, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_286;
stream_286 >> txHist_286;

if(block.vtx[0]->GetHash() == txHist_286.GetHash() && nHeight == 1265747) {
return true;
}
unsigned char ch_287[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xae, 0x4f, 0x13, 0x04, 0xfe, 0xf9, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x24, 0x89, 0xf7, 0xae, 0x6c, 0x73, 0x17, 0xec, 0x1c, 0x23, 0x10, 0x96, 0xce, 0x6e, 0xac, 0xb5, 0x92, 0x16, 0x6c, 0x6e, 0xd6, 0x94, 0x48, 0x42, 0x4b, 0x10, 0x03, 0xd3, 0xe2, 0x59, 0xaf, 0x6a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xff, 0x25, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xce, 0xf8, 0x1b, 0xaf, 0x01, 0x16, 0x99, 0x3d, 0x43, 0xf0, 0xb6, 0xcb, 0xc8, 0x0c, 0x72, 0xb8, 0x84, 0xc7, 0xc3, 0x30, 0x85, 0x08, 0x79, 0xbd, 0x49, 0x4f, 0x6a, 0x6e, 0x74, 0x32, 0xd8, 0xf0, 0xa0, 0xda, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_287(ch_287, ch_287 + sizeof(ch_287) -1);
CDataStream stream_287(vch_287, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_287;
stream_287 >> txHist_287;

if(block.vtx[0]->GetHash() == txHist_287.GetHash() && nHeight == 1265582) {
return true;
}
unsigned char ch_288[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x51, 0x50, 0x13, 0x04, 0x03, 0x3c, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x05, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_288(ch_288, ch_288 + sizeof(ch_288) -1);
CDataStream stream_288(vch_288, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_288;
stream_288 >> txHist_288;

if(block.vtx[0]->GetHash() == txHist_288.GetHash() && nHeight == 1265745) {
return true;
}
unsigned char ch_289[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xac, 0x4f, 0x13, 0x04, 0x46, 0xf9, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x19, 0x53, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_289(ch_289, ch_289 + sizeof(ch_289) -1);
CDataStream stream_289(vch_289, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_289;
stream_289 >> txHist_289;

if(block.vtx[0]->GetHash() == txHist_289.GetHash() && nHeight == 1265580) {
return true;
}
unsigned char ch_290[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xaa, 0x4f, 0x13, 0x04, 0xe4, 0xf8, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x09, 0xc4, 0x6f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_290(ch_290, ch_290 + sizeof(ch_290) -1);
CDataStream stream_290(vch_290, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_290;
stream_290 >> txHist_290;

if(block.vtx[0]->GetHash() == txHist_290.GetHash() && nHeight == 1265578) {
return true;
}
unsigned char ch_291[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x79, 0x4f, 0x13, 0x04, 0x1c, 0xe5, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x16, 0x82, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xc1, 0xa0, 0x5d, 0x71, 0x4e, 0xb5, 0xe3, 0x84, 0x63, 0x1f, 0x37, 0x68, 0x8b, 0x87, 0x00, 0x7f, 0x4a, 0xb4, 0x5d, 0x75, 0xdf, 0x99, 0xc3, 0x31, 0x8d, 0xfa, 0x8b, 0x0e, 0xd5, 0x19, 0x5e, 0x77, 0x08, 0x29, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_291(ch_291, ch_291 + sizeof(ch_291) -1);
CDataStream stream_291(vch_291, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_291;
stream_291 >> txHist_291;

if(block.vtx[0]->GetHash() == txHist_291.GetHash() && nHeight == 1265529) {
return true;
}
unsigned char ch_292[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa9, 0x4f, 0x13, 0x04, 0x4b, 0xf8, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfd, 0x1a, 0x6d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x1f, 0x00, 0x0c, 0x3b, 0xe8, 0xb3, 0xb2, 0xb4, 0x4f, 0x9c, 0x8c, 0x21, 0x40, 0x5c, 0xa9, 0xe8, 0xad, 0xc8, 0xfa, 0xc8, 0x4a, 0xe8, 0xec, 0xe2, 0x8c, 0x96, 0x0b, 0xd5, 0x40, 0x97, 0x72, 0x4a, 0x40, 0xa5, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_292(ch_292, ch_292 + sizeof(ch_292) -1);
CDataStream stream_292(vch_292, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_292;
stream_292 >> txHist_292;

if(block.vtx[0]->GetHash() == txHist_292.GetHash() && nHeight == 1265577) {
return true;
}
unsigned char ch_293[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa8, 0x4f, 0x13, 0x04, 0xb7, 0xf7, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_293(ch_293, ch_293 + sizeof(ch_293) -1);
CDataStream stream_293(vch_293, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_293;
stream_293 >> txHist_293;

if(block.vtx[0]->GetHash() == txHist_293.GetHash() && nHeight == 1265576) {
return true;
}
unsigned char ch_294[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4b, 0x50, 0x13, 0x04, 0xb9, 0x3a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x02, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_294(ch_294, ch_294 + sizeof(ch_294) -1);
CDataStream stream_294(vch_294, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_294;
stream_294 >> txHist_294;

if(block.vtx[0]->GetHash() == txHist_294.GetHash() && nHeight == 1265739) {
return true;
}
unsigned char ch_295[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x47, 0x50, 0x13, 0x04, 0xee, 0x39, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x34, 0x0d, 0x2d, 0x8d, 0xeb, 0x4f, 0x34, 0x0b, 0xde, 0x50, 0x27, 0xa6, 0xd0, 0x73, 0x84, 0x77, 0x4e, 0xa9, 0xc8, 0x91, 0xa0, 0xcd, 0xfc, 0x3b, 0x74, 0xfe, 0x37, 0x36, 0xab, 0xcf, 0x6f, 0x24, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_295(ch_295, ch_295 + sizeof(ch_295) -1);
CDataStream stream_295(vch_295, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_295;
stream_295 >> txHist_295;

if(block.vtx[0]->GetHash() == txHist_295.GetHash() && nHeight == 1265735) {
return true;
}
unsigned char ch_296[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x43, 0x50, 0x13, 0x04, 0x96, 0x39, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x30, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xfa, 0x65, 0x62, 0x50, 0x34, 0xed, 0xdb, 0x5d, 0xd5, 0xa3, 0x11, 0xfe, 0xd1, 0x54, 0x26, 0x45, 0xc6, 0xba, 0x65, 0x65, 0x51, 0xbb, 0x57, 0x8e, 0x5b, 0x2a, 0x6d, 0x26, 0xcd, 0x67, 0xe1, 0x8e, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_296(ch_296, ch_296 + sizeof(ch_296) -1);
CDataStream stream_296(vch_296, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_296;
stream_296 >> txHist_296;

if(block.vtx[0]->GetHash() == txHist_296.GetHash() && nHeight == 1265731) {
return true;
}
unsigned char ch_297[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc7, 0x4f, 0x13, 0x04, 0x48, 0x04, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0d, 0x56, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x43, 0x18, 0xbe, 0x1b, 0x13, 0x3a, 0x0c, 0xc1, 0xe6, 0x0d, 0xd1, 0x5a, 0xe4, 0xb4, 0x17, 0x11, 0xec, 0xb1, 0x37, 0xc6, 0x94, 0x3f, 0x34, 0x7e, 0x6f, 0x05, 0xf9, 0x76, 0x47, 0x33, 0x88, 0x31, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_297(ch_297, ch_297 + sizeof(ch_297) -1);
CDataStream stream_297(vch_297, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_297;
stream_297 >> txHist_297;

if(block.vtx[0]->GetHash() == txHist_297.GetHash() && nHeight == 1265607) {
return true;
}
unsigned char ch_298[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc5, 0x4f, 0x13, 0x04, 0x94, 0x03, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x1f, 0x9b, 0x1f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x91, 0xff, 0x61, 0xa3, 0xe3, 0xb9, 0x73, 0xf0, 0x55, 0xc2, 0x3f, 0xde, 0xc9, 0x7c, 0xbd, 0xb0, 0x7f, 0x40, 0x3c, 0xe8, 0x68, 0x34, 0x3d, 0x0b, 0x3a, 0x3c, 0x1f, 0x5b, 0x0b, 0xb1, 0xc7, 0xcc, 0x08, 0xc1, 0x68, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_298(ch_298, ch_298 + sizeof(ch_298) -1);
CDataStream stream_298(vch_298, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_298;
stream_298 >> txHist_298;

if(block.vtx[0]->GetHash() == txHist_298.GetHash() && nHeight == 1265605) {
return true;
}
unsigned char ch_299[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc3, 0x4f, 0x13, 0x04, 0x60, 0x02, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x07, 0x4a, 0x8c, 0x7b, 0x98, 0x47, 0x06, 0x4a, 0x95, 0xf8, 0xeb, 0xf1, 0xbf, 0x28, 0x33, 0x91, 0x30, 0x97, 0x1f, 0xb9, 0x45, 0xd0, 0x4e, 0x4d, 0xef, 0x13, 0x2b, 0x2a, 0x74, 0x85, 0xeb, 0x32, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xae, 0x12, 0xcf, 0xce, 0x0b, 0x5b, 0x97, 0x2b, 0xfb, 0x38, 0x6a, 0xe5, 0x60, 0x5d, 0x7e, 0xdf, 0x7a, 0x7e, 0xa2, 0x57, 0xd1, 0xa7, 0x77, 0x7e, 0x60, 0x14, 0x3c, 0x46, 0xf3, 0x76, 0x2e, 0x18, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_299(ch_299, ch_299 + sizeof(ch_299) -1);
CDataStream stream_299(vch_299, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_299;
stream_299 >> txHist_299;

if(block.vtx[0]->GetHash() == txHist_299.GetHash() && nHeight == 1265603) {
return true;
}
unsigned char ch_300[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3b, 0x50, 0x13, 0x04, 0x56, 0x37, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe3, 0x9c, 0x77, 0x22, 0x41, 0xf4, 0xd6, 0xd7, 0xe7, 0x93, 0x22, 0xee, 0x6f, 0xad, 0xec, 0x09, 0x53, 0xf6, 0x80, 0xec, 0x5f, 0x2e, 0x8d, 0xb9, 0xf0, 0x76, 0xd8, 0x7b, 0x16, 0xfe, 0xe7, 0xc5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_300(ch_300, ch_300 + sizeof(ch_300) -1);
CDataStream stream_300(vch_300, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_300;
stream_300 >> txHist_300;

if(block.vtx[0]->GetHash() == txHist_300.GetHash() && nHeight == 1265723) {
return true;
}
unsigned char ch_301[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc1, 0x4f, 0x13, 0x04, 0x5b, 0x01, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x08, 0x56, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x41, 0x79, 0x03, 0xb6, 0xf2, 0x53, 0x77, 0x95, 0xd8, 0xbc, 0x6d, 0xd7, 0xde, 0x53, 0x40, 0x18, 0x8c, 0xaf, 0x81, 0x22, 0x75, 0x7e, 0x3d, 0x48, 0xc4, 0x36, 0x1f, 0x6d, 0x35, 0x2c, 0xca, 0x8f, 0x38, 0xc8, 0x72, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_301(ch_301, ch_301 + sizeof(ch_301) -1);
CDataStream stream_301(vch_301, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_301;
stream_301 >> txHist_301;

if(block.vtx[0]->GetHash() == txHist_301.GetHash() && nHeight == 1265601) {
return true;
}
unsigned char ch_302[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xbf, 0x4f, 0x13, 0x04, 0x9d, 0x00, 0x38, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0x8c, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_302(ch_302, ch_302 + sizeof(ch_302) -1);
CDataStream stream_302(vch_302, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_302;
stream_302 >> txHist_302;

if(block.vtx[0]->GetHash() == txHist_302.GetHash() && nHeight == 1265599) {
return true;
}
unsigned char ch_303[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xbb, 0x4f, 0x13, 0x04, 0x6d, 0xff, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0xfa, 0x0b, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_303(ch_303, ch_303 + sizeof(ch_303) -1);
CDataStream stream_303(vch_303, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_303;
stream_303 >> txHist_303;

if(block.vtx[0]->GetHash() == txHist_303.GetHash() && nHeight == 1265595) {
return true;
}
unsigned char ch_304[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb9, 0x4f, 0x13, 0x04, 0x0b, 0xfe, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x0b, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_304(ch_304, ch_304 + sizeof(ch_304) -1);
CDataStream stream_304(vch_304, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_304;
stream_304 >> txHist_304;

if(block.vtx[0]->GetHash() == txHist_304.GetHash() && nHeight == 1265593) {
return true;
}
unsigned char ch_305[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb7, 0x4f, 0x13, 0x04, 0xde, 0xfd, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x8a, 0x83, 0x12, 0x86, 0xb5, 0x59, 0x97, 0xb7, 0xc2, 0x34, 0x30, 0xb2, 0xf0, 0x63, 0x4b, 0x02, 0xc9, 0x02, 0x9f, 0x42, 0xfd, 0xeb, 0x24, 0xed, 0xe4, 0x00, 0x7e, 0x10, 0x70, 0x03, 0x0f, 0xdc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_305(ch_305, ch_305 + sizeof(ch_305) -1);
CDataStream stream_305(vch_305, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_305;
stream_305 >> txHist_305;

if(block.vtx[0]->GetHash() == txHist_305.GetHash() && nHeight == 1265591) {
return true;
}
unsigned char ch_306[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb6, 0x4f, 0x13, 0x04, 0x86, 0xfd, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x97, 0x36, 0xd8, 0xeb, 0x8b, 0xb4, 0x62, 0x99, 0x79, 0x89, 0x06, 0x69, 0x5c, 0x75, 0x53, 0x69, 0xa3, 0xdf, 0x99, 0xa9, 0x3f, 0xfd, 0xde, 0xd1, 0x71, 0x3f, 0x1c, 0xf6, 0xe2, 0xed, 0xa9, 0x21, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0d, 0x98, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_306(ch_306, ch_306 + sizeof(ch_306) -1);
CDataStream stream_306(vch_306, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_306;
stream_306 >> txHist_306;

if(block.vtx[0]->GetHash() == txHist_306.GetHash() && nHeight == 1265590) {
return true;
}
unsigned char ch_307[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb5, 0x4f, 0x13, 0x04, 0xe0, 0xfc, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x0b, 0x07, 0xeb, 0x48, 0x37, 0x33, 0xd4, 0x61, 0x12, 0x20, 0xc2, 0x70, 0x36, 0xf5, 0x0e, 0x0c, 0x15, 0x2e, 0xe1, 0x18, 0xe4, 0xf7, 0xc4, 0xe4, 0x75, 0xe0, 0xda, 0xa3, 0x08, 0xa6, 0x57, 0xf2, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_307(ch_307, ch_307 + sizeof(ch_307) -1);
CDataStream stream_307(vch_307, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_307;
stream_307 >> txHist_307;

if(block.vtx[0]->GetHash() == txHist_307.GetHash() && nHeight == 1265589) {
return true;
}
unsigned char ch_308[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x68, 0x50, 0x13, 0x04, 0x75, 0x42, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x81, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xfd, 0xfe, 0xae, 0x58, 0x57, 0x64, 0x07, 0x79, 0xa6, 0xe5, 0x9b, 0xb2, 0x5e, 0xfe, 0x09, 0xc6, 0xa0, 0xc3, 0x21, 0xe9, 0xe5, 0x94, 0x8e, 0x30, 0xcf, 0x8d, 0x6f, 0xa4, 0xb1, 0xf7, 0x9a, 0xa0, 0xa0, 0x57, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_308(ch_308, ch_308 + sizeof(ch_308) -1);
CDataStream stream_308(vch_308, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_308;
stream_308 >> txHist_308;

if(block.vtx[0]->GetHash() == txHist_308.GetHash() && nHeight == 1265768) {
return true;
}
unsigned char ch_309[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x71, 0x4f, 0x13, 0x04, 0x1a, 0xe0, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfd, 0xf5, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_309(ch_309, ch_309 + sizeof(ch_309) -1);
CDataStream stream_309(vch_309, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_309;
stream_309 >> txHist_309;

if(block.vtx[0]->GetHash() == txHist_309.GetHash() && nHeight == 1265521) {
return true;
}
unsigned char ch_310[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x66, 0x50, 0x13, 0x04, 0xd1, 0x41, 0x38, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xef, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_310(ch_310, ch_310 + sizeof(ch_310) -1);
CDataStream stream_310(vch_310, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_310;
stream_310 >> txHist_310;

if(block.vtx[0]->GetHash() == txHist_310.GetHash() && nHeight == 1265766) {
return true;
}
unsigned char ch_311[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x6d, 0x4f, 0x13, 0x04, 0x1a, 0xdf, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x16, 0x82, 0x46, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xf5, 0xca, 0x5f, 0x73, 0x3f, 0x04, 0x2d, 0xe0, 0xbc, 0xdc, 0xc5, 0xe4, 0xef, 0xc6, 0x71, 0x20, 0xcd, 0xd3, 0x7d, 0xb1, 0xdd, 0x7f, 0x09, 0xaa, 0xe2, 0x8d, 0x65, 0x0b, 0x22, 0x39, 0xc9, 0x98, 0x90, 0x9b, 0x65, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_311(ch_311, ch_311 + sizeof(ch_311) -1);
CDataStream stream_311(vch_311, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_311;
stream_311 >> txHist_311;

if(block.vtx[0]->GetHash() == txHist_311.GetHash() && nHeight == 1265517) {
return true;
}
unsigned char ch_312[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x64, 0x50, 0x13, 0x04, 0x44, 0x41, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x1f, 0x6e, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xc6, 0xae, 0xf9, 0xf2, 0xfc, 0xc0, 0xc9, 0xc0, 0x36, 0xe0, 0xbe, 0x03, 0x59, 0x89, 0xf7, 0x9d, 0x7f, 0x18, 0x6e, 0x08, 0x8a, 0x8a, 0x2e, 0xa5, 0x6e, 0xc3, 0xf3, 0x86, 0x90, 0x71, 0x6c, 0x12, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_312(ch_312, ch_312 + sizeof(ch_312) -1);
CDataStream stream_312(vch_312, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_312;
stream_312 >> txHist_312;

if(block.vtx[0]->GetHash() == txHist_312.GetHash() && nHeight == 1265764) {
return true;
}
unsigned char ch_313[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x5d, 0x50, 0x13, 0x04, 0x63, 0x3f, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xfd, 0x1a, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_313(ch_313, ch_313 + sizeof(ch_313) -1);
CDataStream stream_313(vch_313, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_313;
stream_313 >> txHist_313;

if(block.vtx[0]->GetHash() == txHist_313.GetHash() && nHeight == 1265757) {
return true;
}
unsigned char ch_314[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x54, 0x50, 0x13, 0x04, 0x52, 0x3c, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x8b, 0xa5, 0x14, 0x4a, 0xfa, 0x42, 0x40, 0x5d, 0x43, 0xbf, 0x68, 0x82, 0x49, 0x10, 0xef, 0xf8, 0x28, 0x80, 0xa2, 0xce, 0x01, 0xa1, 0xf1, 0xf6, 0xff, 0x44, 0x37, 0xa3, 0x76, 0x4b, 0x78, 0x32, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_314(ch_314, ch_314 + sizeof(ch_314) -1);
CDataStream stream_314(vch_314, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_314;
stream_314 >> txHist_314;

if(block.vtx[0]->GetHash() == txHist_314.GetHash() && nHeight == 1265748) {
return true;
}
unsigned char ch_315[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xdf, 0x4f, 0x13, 0x04, 0x75, 0x0e, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x05, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_315(ch_315, ch_315 + sizeof(ch_315) -1);
CDataStream stream_315(vch_315, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_315;
stream_315 >> txHist_315;

if(block.vtx[0]->GetHash() == txHist_315.GetHash() && nHeight == 1265631) {
return true;
}
unsigned char ch_316[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xdb, 0x4f, 0x13, 0x04, 0x89, 0x0d, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb5, 0xb4, 0xb3, 0xea, 0x30, 0x41, 0x11, 0x39, 0xe4, 0xc3, 0x9a, 0xd2, 0x29, 0x4d, 0x9c, 0xb6, 0x44, 0x72, 0xfa, 0x1f, 0x84, 0xb0, 0x29, 0xfd, 0xd4, 0x56, 0xec, 0xc1, 0x4a, 0xc2, 0x34, 0x88, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_316(ch_316, ch_316 + sizeof(ch_316) -1);
CDataStream stream_316(vch_316, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_316;
stream_316 >> txHist_316;

if(block.vtx[0]->GetHash() == txHist_316.GetHash() && nHeight == 1265627) {
return true;
}
unsigned char ch_317[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x4f, 0x50, 0x13, 0x04, 0xbb, 0x3b, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x1f, 0x20, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe7, 0x5f, 0xbb, 0x44, 0x4d, 0x36, 0x74, 0xed, 0xf8, 0x73, 0x22, 0x8f, 0x07, 0x4a, 0x44, 0x52, 0x96, 0xce, 0x45, 0x53, 0x99, 0xc0, 0x94, 0xa8, 0xd1, 0x37, 0xfe, 0x2a, 0x46, 0xbf, 0x0b, 0x5b, 0x08, 0xbc, 0x6d, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_317(ch_317, ch_317 + sizeof(ch_317) -1);
CDataStream stream_317(vch_317, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_317;
stream_317 >> txHist_317;

if(block.vtx[0]->GetHash() == txHist_317.GetHash() && nHeight == 1265743) {
return true;
}
unsigned char ch_318[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd8, 0x4f, 0x13, 0x04, 0x91, 0x0b, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbb, 0x73, 0x20, 0x00, 0x75, 0xdb, 0x80, 0x89, 0xd0, 0x20, 0x77, 0xef, 0x86, 0x42, 0x89, 0x1f, 0x8c, 0x31, 0x62, 0x57, 0xf5, 0xc4, 0xf5, 0x08, 0x2a, 0x1f, 0x18, 0x97, 0x45, 0x3e, 0xa5, 0x96, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xff, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xcc, 0x40, 0xa6, 0x44, 0x9d, 0x91, 0x95, 0x62, 0x35, 0x48, 0x0a, 0x7d, 0x74, 0x34, 0x01, 0xd7, 0xda, 0x64, 0x14, 0x9b, 0x33, 0x7c, 0x6c, 0x5e, 0x7e, 0x99, 0x3e, 0x5c, 0xeb, 0x48, 0xba, 0xb8, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_318(ch_318, ch_318 + sizeof(ch_318) -1);
CDataStream stream_318(vch_318, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_318;
stream_318 >> txHist_318;

if(block.vtx[0]->GetHash() == txHist_318.GetHash() && nHeight == 1265624) {
return true;
}
unsigned char ch_319[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x4c, 0x50, 0x13, 0x04, 0x2c, 0x3b, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x08, 0x53, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_319(ch_319, ch_319 + sizeof(ch_319) -1);
CDataStream stream_319(vch_319, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_319;
stream_319 >> txHist_319;

if(block.vtx[0]->GetHash() == txHist_319.GetHash() && nHeight == 1265740) {
return true;
}
unsigned char ch_320[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x48, 0x50, 0x13, 0x04, 0x63, 0x3a, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x09, 0x67, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_320(ch_320, ch_320 + sizeof(ch_320) -1);
CDataStream stream_320(vch_320, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_320;
stream_320 >> txHist_320;

if(block.vtx[0]->GetHash() == txHist_320.GetHash() && nHeight == 1265736) {
return true;
}
unsigned char ch_321[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x37, 0x50, 0x13, 0x04, 0xc5, 0x35, 0x38, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0xce, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_321(ch_321, ch_321 + sizeof(ch_321) -1);
CDataStream stream_321(vch_321, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_321;
stream_321 >> txHist_321;

if(block.vtx[0]->GetHash() == txHist_321.GetHash() && nHeight == 1265719) {
return true;
}
unsigned char ch_322[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x33, 0x50, 0x13, 0x04, 0xa3, 0x34, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xeb, 0x04, 0xf9, 0x8b, 0x13, 0x9f, 0xf1, 0x56, 0x62, 0x35, 0xc5, 0x6f, 0x33, 0xf7, 0xe7, 0x4f, 0xbc, 0x1d, 0x95, 0x0c, 0xdd, 0x10, 0x36, 0x44, 0xc2, 0x1f, 0xb8, 0xa3, 0x55, 0xc5, 0x01, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_322(ch_322, ch_322 + sizeof(ch_322) -1);
CDataStream stream_322(vch_322, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_322;
stream_322 >> txHist_322;

if(block.vtx[0]->GetHash() == txHist_322.GetHash() && nHeight == 1265715) {
return true;
}
unsigned char ch_323[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2d, 0x50, 0x13, 0x04, 0xe8, 0x30, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x2c, 0x03, 0x74, 0xdc, 0x75, 0xa3, 0x26, 0xa1, 0x88, 0x13, 0xcb, 0xb4, 0x90, 0xcf, 0xc5, 0x93, 0x08, 0x84, 0xaf, 0xcf, 0x60, 0xad, 0xf8, 0x04, 0xc0, 0xa7, 0x5c, 0x91, 0x91, 0xa2, 0xaa, 0xba, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_323(ch_323, ch_323 + sizeof(ch_323) -1);
CDataStream stream_323(vch_323, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_323;
stream_323 >> txHist_323;

if(block.vtx[0]->GetHash() == txHist_323.GetHash() && nHeight == 1265709) {
return true;
}
unsigned char ch_324[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2c, 0x50, 0x13, 0x04, 0xd5, 0x30, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x2c, 0x03, 0x74, 0xdc, 0x75, 0xa3, 0x26, 0xa1, 0x88, 0x13, 0xcb, 0xb4, 0x90, 0xcf, 0xc5, 0x93, 0x08, 0x84, 0xaf, 0xcf, 0x60, 0xad, 0xf8, 0x04, 0xc0, 0xa7, 0x5c, 0x91, 0x91, 0xa2, 0xaa, 0xba, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xfc, 0x50, 0x56, 0x47, 0xf5, 0xfa, 0xa3, 0xae, 0x34, 0x1a, 0xfe, 0x32, 0x14, 0xcb, 0x12, 0x6d, 0x11, 0xf5, 0x01, 0x4e, 0x6d, 0x83, 0xab, 0x9d, 0xc7, 0xe1, 0xef, 0xc9, 0x91, 0xa7, 0xc9, 0xdf, 0xa8, 0x47, 0x6a, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_324(ch_324, ch_324 + sizeof(ch_324) -1);
CDataStream stream_324(vch_324, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_324;
stream_324 >> txHist_324;

if(block.vtx[0]->GetHash() == txHist_324.GetHash() && nHeight == 1265708) {
return true;
}
unsigned char ch_325[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x2b, 0x50, 0x13, 0x04, 0x0b, 0x30, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x1f, 0xaf, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_325(ch_325, ch_325 + sizeof(ch_325) -1);
CDataStream stream_325(vch_325, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_325;
stream_325 >> txHist_325;

if(block.vtx[0]->GetHash() == txHist_325.GetHash() && nHeight == 1265707) {
return true;
}
unsigned char ch_326[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x29, 0x50, 0x13, 0x04, 0x21, 0x2f, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x03, 0x9a, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_326(ch_326, ch_326 + sizeof(ch_326) -1);
CDataStream stream_326(vch_326, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_326;
stream_326 >> txHist_326;

if(block.vtx[0]->GetHash() == txHist_326.GetHash() && nHeight == 1265705) {
return true;
}
unsigned char ch_327[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x80, 0x4f, 0x13, 0x04, 0x63, 0xe7, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0x69, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_327(ch_327, ch_327 + sizeof(ch_327) -1);
CDataStream stream_327(vch_327, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_327;
stream_327 >> txHist_327;

if(block.vtx[0]->GetHash() == txHist_327.GetHash() && nHeight == 1265536) {
return true;
}
unsigned char ch_328[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x44, 0x50, 0x13, 0x04, 0xa1, 0x39, 0x38, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x0b, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_328(ch_328, ch_328 + sizeof(ch_328) -1);
CDataStream stream_328(vch_328, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_328;
stream_328 >> txHist_328;

if(block.vtx[0]->GetHash() == txHist_328.GetHash() && nHeight == 1265732) {
return true;
}
unsigned char ch_329[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x7c, 0x4f, 0x13, 0x04, 0xc4, 0xe6, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x25, 0xa4, 0xfc, 0xea, 0xe1, 0x73, 0xd3, 0x44, 0x6d, 0x81, 0xc3, 0x7f, 0x5a, 0x13, 0x7f, 0x79, 0x3f, 0xd6, 0xe3, 0x9d, 0x61, 0x5f, 0x0f, 0x98, 0x7b, 0xfd, 0x07, 0x23, 0xb1, 0x5d, 0xae, 0xa1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x2b, 0x65, 0x22, 0x62, 0xd9, 0xad, 0x92, 0xa7, 0xa9, 0x96, 0x0f, 0x57, 0x26, 0xce, 0x65, 0x66, 0xa0, 0xf4, 0x81, 0x43, 0x3d, 0xd9, 0x9b, 0xa0, 0x4c, 0x6a, 0x06, 0x73, 0xc4, 0xca, 0x57, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_329(ch_329, ch_329 + sizeof(ch_329) -1);
CDataStream stream_329(vch_329, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_329;
stream_329 >> txHist_329;

if(block.vtx[0]->GetHash() == txHist_329.GetHash() && nHeight == 1265532) {
return true;
}
unsigned char ch_330[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x3c, 0x50, 0x13, 0x04, 0x68, 0x37, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x1a, 0x67, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_330(ch_330, ch_330 + sizeof(ch_330) -1);
CDataStream stream_330(vch_330, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_330;
stream_330 >> txHist_330;

if(block.vtx[0]->GetHash() == txHist_330.GetHash() && nHeight == 1265724) {
return true;
}
unsigned char ch_331[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x75, 0x4f, 0x13, 0x04, 0xa0, 0xe2, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfa, 0xc2, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_331(ch_331, ch_331 + sizeof(ch_331) -1);
CDataStream stream_331(vch_331, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_331;
stream_331 >> txHist_331;

if(block.vtx[0]->GetHash() == txHist_331.GetHash() && nHeight == 1265525) {
return true;
}
unsigned char ch_332[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x38, 0x50, 0x13, 0x04, 0x0c, 0x36, 0x38, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0x21, 0x08, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xea, 0x87, 0x2d, 0x2c, 0xa0, 0xc5, 0xcb, 0xa4, 0xdc, 0xcd, 0x95, 0xe1, 0x17, 0xf6, 0x58, 0xf7, 0x61, 0x36, 0xad, 0xf6, 0xe1, 0x67, 0xf8, 0x0d, 0x19, 0xf7, 0xae, 0x65, 0x6a, 0xfa, 0xa3, 0x0c, 0x30, 0x33, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_332(ch_332, ch_332 + sizeof(ch_332) -1);
CDataStream stream_332(vch_332, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_332;
stream_332 >> txHist_332;

if(block.vtx[0]->GetHash() == txHist_332.GetHash() && nHeight == 1265720) {
return true;
}
unsigned char ch_333[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x24, 0x50, 0x13, 0x04, 0xc2, 0x2c, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x0d, 0x76, 0x9d, 0x63, 0xc8, 0xa3, 0x5d, 0x26, 0x8e, 0x59, 0xc1, 0x04, 0x77, 0xda, 0xea, 0x94, 0xf0, 0x09, 0xc4, 0x61, 0x3e, 0x1d, 0x1f, 0x8b, 0x72, 0x36, 0x23, 0x3d, 0x0f, 0x2b, 0xa4, 0xb0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x02, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_333(ch_333, ch_333 + sizeof(ch_333) -1);
CDataStream stream_333(vch_333, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_333;
stream_333 >> txHist_333;

if(block.vtx[0]->GetHash() == txHist_333.GetHash() && nHeight == 1265700) {
return true;
}
unsigned char ch_334[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x34, 0x50, 0x13, 0x04, 0xa4, 0x34, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x05, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_334(ch_334, ch_334 + sizeof(ch_334) -1);
CDataStream stream_334(vch_334, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_334;
stream_334 >> txHist_334;

if(block.vtx[0]->GetHash() == txHist_334.GetHash() && nHeight == 1265716) {
return true;
}
unsigned char ch_335[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x30, 0x50, 0x13, 0x04, 0xfd, 0x33, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x1a, 0x67, 0x5b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_335(ch_335, ch_335 + sizeof(ch_335) -1);
CDataStream stream_335(vch_335, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_335;
stream_335 >> txHist_335;

if(block.vtx[0]->GetHash() == txHist_335.GetHash() && nHeight == 1265712) {
return true;
}
unsigned char ch_336[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x6a, 0x4f, 0x13, 0x04, 0x46, 0xdd, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfd, 0xac, 0x44, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x88, 0x5e, 0x1b, 0x62, 0x6d, 0x7d, 0xce, 0xc5, 0xfa, 0x36, 0x9f, 0x38, 0x9a, 0x6c, 0xc5, 0x50, 0xf1, 0x34, 0xa7, 0xd1, 0x77, 0x91, 0x39, 0xd9, 0x50, 0x2e, 0x47, 0x73, 0x3d, 0x25, 0x4d, 0x81, 0x48, 0xfe, 0x63, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_336(ch_336, ch_336 + sizeof(ch_336) -1);
CDataStream stream_336(vch_336, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_336;
stream_336 >> txHist_336;

if(block.vtx[0]->GetHash() == txHist_336.GetHash() && nHeight == 1265514) {
return true;
}
unsigned char ch_337[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x22, 0x50, 0x13, 0x04, 0xa7, 0x2c, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x02, 0xe0, 0x2d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x99, 0xe5, 0x5e, 0x84, 0x6e, 0x32, 0x1c, 0xca, 0x95, 0xe2, 0xd3, 0x5d, 0x0a, 0xef, 0x2a, 0xef, 0x6a, 0x90, 0xa3, 0xb4, 0x16, 0xe6, 0x43, 0x19, 0x23, 0x26, 0x43, 0xdf, 0x6c, 0x03, 0x07, 0x9d, 0x88, 0x93, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_337(ch_337, ch_337 + sizeof(ch_337) -1);
CDataStream stream_337(vch_337, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_337;
stream_337 >> txHist_337;

if(block.vtx[0]->GetHash() == txHist_337.GetHash() && nHeight == 1265698) {
return true;
}
unsigned char ch_338[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x21, 0x50, 0x13, 0x04, 0x72, 0x2c, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd4, 0x0a, 0xd0, 0x82, 0x2e, 0x47, 0x77, 0x49, 0xa4, 0x09, 0x0c, 0xf9, 0x67, 0x5f, 0x3f, 0x17, 0xe0, 0xf8, 0xda, 0x08, 0x7c, 0x5e, 0x0d, 0xd0, 0x41, 0xb3, 0x19, 0xad, 0xc9, 0x8d, 0x84, 0x46, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_338(ch_338, ch_338 + sizeof(ch_338) -1);
CDataStream stream_338(vch_338, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_338;
stream_338 >> txHist_338;

if(block.vtx[0]->GetHash() == txHist_338.GetHash() && nHeight == 1265697) {
return true;
}
unsigned char ch_339[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x66, 0x4f, 0x13, 0x04, 0xfa, 0xd9, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x1f, 0xb3, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_339(ch_339, ch_339 + sizeof(ch_339) -1);
CDataStream stream_339(vch_339, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_339;
stream_339 >> txHist_339;

if(block.vtx[0]->GetHash() == txHist_339.GetHash() && nHeight == 1265510) {
return true;
}
unsigned char ch_340[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x20, 0x50, 0x13, 0x04, 0x56, 0x2c, 0x38, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xff, 0xce, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x0a, 0x70, 0x9a, 0x72, 0xb9, 0xe1, 0x90, 0x87, 0x8b, 0x4b, 0xd0, 0xcf, 0x44, 0xd6, 0x46, 0xa4, 0x3b, 0xca, 0xcd, 0x22, 0xf9, 0xff, 0xed, 0x71, 0x71, 0x84, 0x2d, 0x02, 0x5c, 0xc0, 0x8b, 0xe8, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_340(ch_340, ch_340 + sizeof(ch_340) -1);
CDataStream stream_340(vch_340, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_340;
stream_340 >> txHist_340;

if(block.vtx[0]->GetHash() == txHist_340.GetHash() && nHeight == 1265696) {
return true;
}
unsigned char ch_341[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x62, 0x4f, 0x13, 0x04, 0xa8, 0xd7, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x14, 0x07, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_341(ch_341, ch_341 + sizeof(ch_341) -1);
CDataStream stream_341(vch_341, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_341;
stream_341 >> txHist_341;

if(block.vtx[0]->GetHash() == txHist_341.GetHash() && nHeight == 1265506) {
return true;
}
unsigned char ch_342[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x1f, 0x50, 0x13, 0x04, 0x2a, 0x2c, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfd, 0x3f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x96, 0xa0, 0x7a, 0x64, 0x2f, 0xbd, 0x9a, 0x42, 0x76, 0x1c, 0x9a, 0x81, 0x29, 0xb4, 0x94, 0x60, 0x84, 0xd7, 0xee, 0x0b, 0xdc, 0x03, 0x32, 0xd9, 0x40, 0x8a, 0x9d, 0x87, 0x84, 0xed, 0x07, 0x0b, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_342(ch_342, ch_342 + sizeof(ch_342) -1);
CDataStream stream_342(vch_342, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_342;
stream_342 >> txHist_342;

if(block.vtx[0]->GetHash() == txHist_342.GetHash() && nHeight == 1265695) {
return true;
}
unsigned char ch_343[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1d, 0x50, 0x13, 0x04, 0xd2, 0x2b, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x74, 0x1f, 0xa1, 0xd9, 0xbf, 0x10, 0x45, 0x5f, 0x40, 0xe6, 0x4d, 0x0e, 0x0e, 0xec, 0xe9, 0xdb, 0x6d, 0x33, 0x59, 0xe2, 0xac, 0xd8, 0x36, 0x0f, 0x9a, 0xdc, 0x38, 0xd0, 0x6a, 0x25, 0x98, 0xd6, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xff, 0x19, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x52, 0x4d, 0x88, 0xc3, 0x48, 0xc1, 0xac, 0x44, 0x45, 0x24, 0x1e, 0xd5, 0x5a, 0x9b, 0x69, 0x06, 0xbc, 0x6f, 0x58, 0xe8, 0x67, 0xf5, 0x0f, 0x56, 0xc9, 0xf7, 0xba, 0xcd, 0xa1, 0xb5, 0x22, 0x3e, 0x70, 0x4c, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_343(ch_343, ch_343 + sizeof(ch_343) -1);
CDataStream stream_343(vch_343, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_343;
stream_343 >> txHist_343;

if(block.vtx[0]->GetHash() == txHist_343.GetHash() && nHeight == 1265693) {
return true;
}
unsigned char ch_344[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x15, 0x50, 0x13, 0x04, 0x36, 0x29, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x1a, 0x67, 0x83, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xfd, 0xab, 0x8e, 0x26, 0x7f, 0xe4, 0x0e, 0x86, 0xfe, 0xa4, 0xce, 0x46, 0x51, 0x66, 0x67, 0x41, 0xad, 0x36, 0xf8, 0x85, 0x93, 0x2c, 0xe0, 0x00, 0x11, 0xdb, 0xb2, 0xdc, 0xaf, 0x3d, 0x42, 0x34, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_344(ch_344, ch_344 + sizeof(ch_344) -1);
CDataStream stream_344(vch_344, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_344;
stream_344 >> txHist_344;

if(block.vtx[0]->GetHash() == txHist_344.GetHash() && nHeight == 1265685) {
return true;
}
unsigned char ch_345[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x47, 0x4f, 0x13, 0x04, 0xae, 0xca, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0x6c, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_345(ch_345, ch_345 + sizeof(ch_345) -1);
CDataStream stream_345(vch_345, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_345;
stream_345 >> txHist_345;

if(block.vtx[0]->GetHash() == txHist_345.GetHash() && nHeight == 1265479) {
return true;
}
unsigned char ch_346[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1a, 0x50, 0x13, 0x04, 0x5d, 0x2a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0xac, 0x88, 0x9d, 0x8b, 0x05, 0x02, 0xf8, 0xd4, 0x3d, 0x00, 0x11, 0x73, 0xbe, 0xec, 0x98, 0x60, 0x6d, 0x4f, 0xe2, 0x39, 0xe3, 0xca, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xe5, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x60, 0x08, 0x04, 0x29, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x1e, 0xf3, 0xd7, 0x98, 0xf9, 0x7d, 0xba, 0x18, 0x33, 0x23, 0x83, 0xea, 0x65, 0x40, 0x27, 0xbe, 0xc4, 0x62, 0x86, 0x96, 0x88, 0xac, 0xa0, 0x06, 0x5b, 0xb1, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xca, 0xe3, 0x39, 0xe2, 0x4f, 0x6d, 0x60, 0x98, 0xec, 0xbe, 0x73, 0x11, 0x00, 0x3d, 0xd4, 0xf8, 0x02, 0x05, 0x8b, 0x9d, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_346(ch_346, ch_346 + sizeof(ch_346) -1);
CDataStream stream_346(vch_346, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_346;
stream_346 >> txHist_346;

if(block.vtx[0]->GetHash() == txHist_346.GetHash() && nHeight == 1265690) {
return true;
}
unsigned char ch_347[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x13, 0x50, 0x13, 0x04, 0x2c, 0x28, 0x38, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0x42, 0x0c, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x69, 0x17, 0x24, 0x36, 0x00, 0x71, 0x10, 0xf6, 0xde, 0xb3, 0x7b, 0x6a, 0x54, 0xef, 0x9b, 0x36, 0xcf, 0xfc, 0xca, 0x87, 0x91, 0xd1, 0x78, 0xcd, 0x6b, 0x5d, 0x42, 0x47, 0x91, 0xeb, 0x64, 0x22, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_347(ch_347, ch_347 + sizeof(ch_347) -1);
CDataStream stream_347(vch_347, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_347;
stream_347 >> txHist_347;

if(block.vtx[0]->GetHash() == txHist_347.GetHash() && nHeight == 1265683) {
return true;
}
unsigned char ch_348[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x44, 0x4f, 0x13, 0x04, 0xce, 0xc9, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfa, 0xc2, 0xcb, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xc9, 0x08, 0xb0, 0x96, 0xe0, 0x9f, 0x7e, 0xdb, 0xdb, 0x0a, 0x5b, 0x1f, 0x90, 0x33, 0x1b, 0xb6, 0x6e, 0xad, 0xcb, 0xe5, 0x63, 0xd0, 0x65, 0xcf, 0xf0, 0xe9, 0xab, 0xe6, 0x84, 0x82, 0x33, 0x91, 0xa0, 0xda, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_348(ch_348, ch_348 + sizeof(ch_348) -1);
CDataStream stream_348(vch_348, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_348;
stream_348 >> txHist_348;

if(block.vtx[0]->GetHash() == txHist_348.GetHash() && nHeight == 1265476) {
return true;
}
unsigned char ch_349[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x19, 0x50, 0x13, 0x04, 0x35, 0x2a, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x47, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_349(ch_349, ch_349 + sizeof(ch_349) -1);
CDataStream stream_349(vch_349, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_349;
stream_349 >> txHist_349;

if(block.vtx[0]->GetHash() == txHist_349.GetHash() && nHeight == 1265689) {
return true;
}
unsigned char ch_350[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x12, 0x50, 0x13, 0x04, 0xac, 0x27, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xf4, 0x34, 0xf5, 0x08, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_350(ch_350, ch_350 + sizeof(ch_350) -1);
CDataStream stream_350(vch_350, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_350;
stream_350 >> txHist_350;

if(block.vtx[0]->GetHash() == txHist_350.GetHash() && nHeight == 1265682) {
return true;
}
unsigned char ch_351[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x18, 0x50, 0x13, 0x04, 0xdd, 0x29, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x69, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x80, 0x43, 0x9e, 0xf2, 0x07, 0x22, 0xee, 0x0c, 0x2c, 0x31, 0xe9, 0x7b, 0xc3, 0x31, 0x56, 0x02, 0x26, 0x2b, 0x0e, 0xb4, 0x13, 0x88, 0x7b, 0x81, 0x3d, 0x4b, 0xfb, 0x0d, 0xa7, 0x13, 0x6b, 0xab, 0x50, 0x94, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_351(ch_351, ch_351 + sizeof(ch_351) -1);
CDataStream stream_351(vch_351, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_351;
stream_351 >> txHist_351;

if(block.vtx[0]->GetHash() == txHist_351.GetHash() && nHeight == 1265688) {
return true;
}
unsigned char ch_352[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x11, 0x50, 0x13, 0x04, 0x73, 0x27, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9b, 0xdf, 0x2d, 0xc5, 0xf8, 0xb7, 0x9a, 0xb0, 0x0d, 0xf0, 0x96, 0x3c, 0xae, 0x00, 0x92, 0xa1, 0xe9, 0xe4, 0xcb, 0xe4, 0x7a, 0x84, 0xad, 0x89, 0x02, 0x20, 0xaf, 0xdb, 0x67, 0xb8, 0x66, 0x6b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_352(ch_352, ch_352 + sizeof(ch_352) -1);
CDataStream stream_352(vch_352, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_352;
stream_352 >> txHist_352;

if(block.vtx[0]->GetHash() == txHist_352.GetHash() && nHeight == 1265681) {
return true;
}
unsigned char ch_353[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x3e, 0x4f, 0x13, 0x04, 0x14, 0xc6, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x1f, 0xd2, 0x0c, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_353(ch_353, ch_353 + sizeof(ch_353) -1);
CDataStream stream_353(vch_353, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_353;
stream_353 >> txHist_353;

if(block.vtx[0]->GetHash() == txHist_353.GetHash() && nHeight == 1265470) {
return true;
}
unsigned char ch_354[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x17, 0x50, 0x13, 0x04, 0x4f, 0x29, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_354(ch_354, ch_354 + sizeof(ch_354) -1);
CDataStream stream_354(vch_354, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_354;
stream_354 >> txHist_354;

if(block.vtx[0]->GetHash() == txHist_354.GetHash() && nHeight == 1265687) {
return true;
}
unsigned char ch_355[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x0f, 0x50, 0x13, 0x04, 0xb4, 0x26, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xfa, 0xc2, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_355(ch_355, ch_355 + sizeof(ch_355) -1);
CDataStream stream_355(vch_355, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_355;
stream_355 >> txHist_355;

if(block.vtx[0]->GetHash() == txHist_355.GetHash() && nHeight == 1265679) {
return true;
}
unsigned char ch_356[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x08, 0x50, 0x13, 0x04, 0xb0, 0x24, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x84, 0x75, 0x0f, 0x6b, 0x49, 0xd3, 0x59, 0x3e, 0x6f, 0x72, 0x0d, 0x0d, 0x53, 0x6c, 0xf3, 0x9f, 0x9e, 0x53, 0xdf, 0x5f, 0x8b, 0x77, 0x98, 0x8c, 0x5a, 0x2e, 0xe0, 0xbe, 0x9e, 0xea, 0x58, 0x5b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_356(ch_356, ch_356 + sizeof(ch_356) -1);
CDataStream stream_356(vch_356, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_356;
stream_356 >> txHist_356;

if(block.vtx[0]->GetHash() == txHist_356.GetHash() && nHeight == 1265672) {
return true;
}
unsigned char ch_357[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3c, 0x4f, 0x13, 0x04, 0x1e, 0xc5, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb1, 0x5b, 0x06, 0xa0, 0xac, 0x88, 0x96, 0x86, 0x62, 0xc4, 0xbe, 0x27, 0x40, 0x65, 0xea, 0x83, 0x23, 0x33, 0x18, 0xba, 0x7d, 0xf9, 0x98, 0xd7, 0xf3, 0x1e, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xea, 0x2a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x8b, 0xfa, 0xac, 0x9d, 0xba, 0x2e, 0x2a, 0xf9, 0x5e, 0x56, 0xd4, 0x3c, 0x28, 0x1a, 0xcb, 0x45, 0xef, 0xbb, 0xcb, 0xa5, 0x01, 0x94, 0x88, 0x67, 0x0e, 0x63, 0x5e, 0x27, 0xde, 0xb6, 0x77, 0xd2, 0x60, 0x08, 0x04, 0x29, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x1e, 0xf3, 0xd7, 0x98, 0xf9, 0x7d, 0xba, 0x18, 0x33, 0x23, 0x83, 0xea, 0x65, 0x40, 0x27, 0xbe, 0xc4, 0x62, 0x86, 0x96, 0x88, 0xac, 0xa0, 0x06, 0x5b, 0xb1, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xca, 0xe3, 0x39, 0xe2, 0x4f, 0x6d, 0x60, 0x98, 0xec, 0xbe, 0x73, 0x11, 0x00, 0x3d, 0xd4, 0xf8, 0x02, 0x05, 0x8b, 0x9d, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_357(ch_357, ch_357 + sizeof(ch_357) -1);
CDataStream stream_357(vch_357, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_357;
stream_357 >> txHist_357;

if(block.vtx[0]->GetHash() == txHist_357.GetHash() && nHeight == 1265468) {
return true;
}
unsigned char ch_358[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xe1, 0x4e, 0x13, 0x04, 0x39, 0xa7, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x0b, 0xc1, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x1b, 0x6c, 0x76, 0xfb, 0x88, 0x03, 0x03, 0xbe, 0xed, 0x09, 0xf2, 0x04, 0xb5, 0x7e, 0x49, 0x84, 0xa2, 0x8a, 0x5b, 0x18, 0x94, 0x19, 0xd9, 0xb6, 0xb6, 0x9d, 0xc3, 0x7e, 0x4b, 0xa7, 0x0c, 0x1d, 0x00, 0x7c, 0x6a, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_358(ch_358, ch_358 + sizeof(ch_358) -1);
CDataStream stream_358(vch_358, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_358;
stream_358 >> txHist_358;

if(block.vtx[0]->GetHash() == txHist_358.GetHash() && nHeight == 1265377) {
return true;
}
unsigned char ch_359[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x14, 0x50, 0x13, 0x04, 0x5d, 0x28, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x1f, 0xc5, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_359(ch_359, ch_359 + sizeof(ch_359) -1);
CDataStream stream_359(vch_359, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_359;
stream_359 >> txHist_359;

if(block.vtx[0]->GetHash() == txHist_359.GetHash() && nHeight == 1265684) {
return true;
}
unsigned char ch_360[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x02, 0x50, 0x13, 0x04, 0x43, 0x21, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x1f, 0xf0, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x7f, 0x5f, 0xa5, 0x31, 0xf9, 0x35, 0xac, 0x6c, 0xab, 0x11, 0x7a, 0xac, 0x98, 0xde, 0x3c, 0xb7, 0x2e, 0x84, 0x38, 0xfa, 0x30, 0xc6, 0x51, 0xff, 0x40, 0x12, 0xb0, 0xcf, 0x1a, 0x5e, 0x46, 0x9c, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_360(ch_360, ch_360 + sizeof(ch_360) -1);
CDataStream stream_360(vch_360, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_360;
stream_360 >> txHist_360;

if(block.vtx[0]->GetHash() == txHist_360.GetHash() && nHeight == 1265666) {
return true;
}
unsigned char ch_361[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3a, 0x4f, 0x13, 0x04, 0x94, 0xc4, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa7, 0x57, 0xbd, 0x85, 0xe2, 0xb5, 0xda, 0x76, 0xfe, 0x1f, 0x7a, 0x91, 0x51, 0x50, 0x2b, 0x01, 0x0f, 0xa0, 0xd5, 0xf1, 0x60, 0x2e, 0x19, 0xbc, 0x2d, 0x25, 0xc3, 0xb1, 0xa0, 0x17, 0x41, 0x92, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_361(ch_361, ch_361 + sizeof(ch_361) -1);
CDataStream stream_361(vch_361, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_361;
stream_361 >> txHist_361;

if(block.vtx[0]->GetHash() == txHist_361.GetHash() && nHeight == 1265466) {
return true;
}
unsigned char ch_362[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x10, 0x50, 0x13, 0x04, 0x2a, 0x27, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x1f, 0x78, 0x0e, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x84, 0xcb, 0xb6, 0x2f, 0x2b, 0x69, 0x5e, 0xe6, 0xb1, 0x75, 0x7c, 0x1e, 0xb4, 0xaa, 0xdb, 0x13, 0xe4, 0xec, 0x10, 0x2b, 0x03, 0xa2, 0x64, 0x39, 0x90, 0xa3, 0x69, 0x42, 0x1f, 0xc8, 0xa3, 0xc5, 0x48, 0x55, 0xf8, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_362(ch_362, ch_362 + sizeof(ch_362) -1);
CDataStream stream_362(vch_362, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_362;
stream_362 >> txHist_362;

if(block.vtx[0]->GetHash() == txHist_362.GetHash() && nHeight == 1265680) {
return true;
}
unsigned char ch_363[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x00, 0x50, 0x13, 0x04, 0x13, 0x21, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x45, 0x52, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x45, 0x52, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x04, 0x54, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x33, 0xb4, 0x77, 0x7b, 0x23, 0x3c, 0xd1, 0xc2, 0x13, 0x3f, 0xfb, 0x6e, 0x75, 0x30, 0x3f, 0x27, 0x76, 0x5e, 0x97, 0x2f, 0x3c, 0xde, 0x33, 0x8c, 0x5a, 0x26, 0x55, 0x3e, 0xc6, 0xb6, 0x20, 0x9f, 0x50, 0xdf, 0x15, 0x15, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xd8, 0xb8, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0x38, 0x9c, 0x86, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_363(ch_363, ch_363 + sizeof(ch_363) -1);
CDataStream stream_363(vch_363, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_363;
stream_363 >> txHist_363;

if(block.vtx[0]->GetHash() == txHist_363.GetHash() && nHeight == 1265664) {
return true;
}
unsigned char ch_364[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x0e, 0x50, 0x13, 0x04, 0x7f, 0x26, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0x73, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x6b, 0x4f, 0xd4, 0xf7, 0x0f, 0xa4, 0x0d, 0xd9, 0x18, 0x8a, 0x8e, 0x7c, 0xdb, 0x1e, 0x2a, 0x62, 0xf6, 0x12, 0x1f, 0x1d, 0xcf, 0x84, 0x73, 0xa7, 0x27, 0x11, 0xd1, 0x69, 0xe7, 0x8f, 0x10, 0x6f, 0x40, 0xa5, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_364(ch_364, ch_364 + sizeof(ch_364) -1);
CDataStream stream_364(vch_364, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_364;
stream_364 >> txHist_364;

if(block.vtx[0]->GetHash() == txHist_364.GetHash() && nHeight == 1265678) {
return true;
}
unsigned char ch_365[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x36, 0x4f, 0x13, 0x04, 0xdb, 0xc2, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x02, 0xa5, 0x7b, 0x85, 0xdc, 0xf3, 0xd8, 0x13, 0x1f, 0x9c, 0x10, 0x95, 0xa5, 0x45, 0x93, 0xd8, 0x4d, 0xf7, 0x6c, 0x03, 0x92, 0xb0, 0xa5, 0x32, 0xcb, 0x08, 0x35, 0xc7, 0x06, 0xe1, 0x3d, 0x7a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa8, 0x1b, 0x69, 0x39, 0x5a, 0x48, 0x8c, 0x05, 0x20, 0x86, 0x79, 0x02, 0x89, 0x22, 0xd0, 0x29, 0xe9, 0x46, 0x41, 0x8f, 0xcd, 0x40, 0x9c, 0xa3, 0x5b, 0xd5, 0xb9, 0x7d, 0x95, 0x04, 0xda, 0x90, 0x30, 0x33, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_365(ch_365, ch_365 + sizeof(ch_365) -1);
CDataStream stream_365(vch_365, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_365;
stream_365 >> txHist_365;

if(block.vtx[0]->GetHash() == txHist_365.GetHash() && nHeight == 1265462) {
return true;
}
unsigned char ch_366[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x0d, 0x50, 0x13, 0x04, 0x01, 0x26, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xfd, 0x1a, 0x55, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_366(ch_366, ch_366 + sizeof(ch_366) -1);
CDataStream stream_366(vch_366, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_366;
stream_366 >> txHist_366;

if(block.vtx[0]->GetHash() == txHist_366.GetHash() && nHeight == 1265677) {
return true;
}
unsigned char ch_367[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc5, 0x4e, 0x13, 0x04, 0xde, 0x9c, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xfa, 0xc4, 0x53, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xfa, 0x90, 0x5b, 0x32, 0x09, 0x95, 0x73, 0x6e, 0xc7, 0x66, 0x47, 0xf2, 0xee, 0x6c, 0x87, 0x96, 0x63, 0x51, 0x41, 0x65, 0x15, 0xd0, 0x96, 0xe1, 0x98, 0x07, 0xfa, 0xf8, 0x14, 0xbc, 0xff, 0x6e, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_367(ch_367, ch_367 + sizeof(ch_367) -1);
CDataStream stream_367(vch_367, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_367;
stream_367 >> txHist_367;

if(block.vtx[0]->GetHash() == txHist_367.GetHash() && nHeight == 1265349) {
return true;
}
unsigned char ch_368[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf1, 0x4f, 0x13, 0x04, 0x26, 0x19, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x01, 0x36, 0xe2, 0x3b, 0x0f, 0xe3, 0xcb, 0xd1, 0x85, 0x3b, 0x73, 0x5f, 0x65, 0x32, 0x0a, 0x53, 0xed, 0xd5, 0xdb, 0x17, 0x79, 0x62, 0x26, 0x46, 0xa6, 0xad, 0x4b, 0xea, 0xc9, 0x42, 0x5c, 0x8b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x82, 0x28, 0xe1, 0x8d, 0xed, 0xa2, 0xda, 0x14, 0x63, 0xfc, 0xbf, 0x87, 0xd4, 0x05, 0x03, 0x36, 0xaa, 0x16, 0x24, 0xbf, 0x3f, 0xc6, 0x10, 0x64, 0xb9, 0x77, 0x12, 0x39, 0x9b, 0x01, 0x9b, 0x66, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_368(ch_368, ch_368 + sizeof(ch_368) -1);
CDataStream stream_368(vch_368, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_368;
stream_368 >> txHist_368;

if(block.vtx[0]->GetHash() == txHist_368.GetHash() && nHeight == 1265649) {
return true;
}
unsigned char ch_369[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xee, 0x4f, 0x13, 0x04, 0x61, 0x16, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x47, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_369(ch_369, ch_369 + sizeof(ch_369) -1);
CDataStream stream_369(vch_369, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_369;
stream_369 >> txHist_369;

if(block.vtx[0]->GetHash() == txHist_369.GetHash() && nHeight == 1265646) {
return true;
}
unsigned char ch_370[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xeb, 0x4f, 0x13, 0x04, 0x77, 0x14, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x1f, 0x78, 0x06, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_370(ch_370, ch_370 + sizeof(ch_370) -1);
CDataStream stream_370(vch_370, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_370;
stream_370 >> txHist_370;

if(block.vtx[0]->GetHash() == txHist_370.GetHash() && nHeight == 1265643) {
return true;
}
unsigned char ch_371[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x50, 0x4f, 0x13, 0x04, 0x60, 0xcf, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfa, 0xc2, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x94, 0xf0, 0x12, 0xab, 0xff, 0xe6, 0x34, 0x07, 0x13, 0x9b, 0x67, 0x2b, 0xbd, 0x7f, 0x15, 0x94, 0x4b, 0x8a, 0x9a, 0x73, 0x1f, 0x78, 0x8c, 0xe7, 0x21, 0xf1, 0xf6, 0xa9, 0x9e, 0x03, 0x5f, 0x40, 0x10, 0x94, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_371(ch_371, ch_371 + sizeof(ch_371) -1);
CDataStream stream_371(vch_371, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_371;
stream_371 >> txHist_371;

if(block.vtx[0]->GetHash() == txHist_371.GetHash() && nHeight == 1265488) {
return true;
}
unsigned char ch_372[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe9, 0x4f, 0x13, 0x04, 0xe5, 0x13, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x15, 0xf5, 0x6e, 0x2e, 0x94, 0x08, 0x3b, 0xf9, 0x43, 0x2f, 0xa4, 0x56, 0x83, 0x25, 0x80, 0x3e, 0xe8, 0x6c, 0x35, 0x05, 0x2c, 0x0d, 0x67, 0x72, 0xcc, 0x07, 0x64, 0x02, 0x6c, 0x96, 0xb0, 0x4a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_372(ch_372, ch_372 + sizeof(ch_372) -1);
CDataStream stream_372(vch_372, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_372;
stream_372 >> txHist_372;

if(block.vtx[0]->GetHash() == txHist_372.GetHash() && nHeight == 1265641) {
return true;
}
unsigned char ch_373[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4e, 0x4f, 0x13, 0x04, 0x40, 0xcf, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x3b, 0xd1, 0x60, 0x4f, 0xcb, 0x87, 0x3a, 0xc9, 0x01, 0x86, 0x5e, 0x41, 0x9a, 0x14, 0xe2, 0x18, 0xbf, 0x38, 0x63, 0x9b, 0x56, 0xb6, 0x29, 0x9a, 0x4e, 0xe5, 0x1a, 0x32, 0xef, 0x7a, 0xfa, 0x50, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xc9, 0x5e, 0xa4, 0x15, 0x62, 0xf3, 0x0e, 0xcf, 0xec, 0xea, 0xbb, 0x35, 0xb9, 0xd6, 0x46, 0x83, 0x67, 0x0a, 0x94, 0x7e, 0x91, 0x1d, 0xea, 0x0d, 0x4f, 0x7e, 0xbc, 0x6c, 0x5f, 0x0b, 0xfd, 0x72, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_373(ch_373, ch_373 + sizeof(ch_373) -1);
CDataStream stream_373(vch_373, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_373;
stream_373 >> txHist_373;

if(block.vtx[0]->GetHash() == txHist_373.GetHash() && nHeight == 1265486) {
return true;
}
unsigned char ch_374[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x4c, 0x4f, 0x13, 0x04, 0xa3, 0xcd, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfd, 0x1a, 0xcd, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa5, 0x38, 0x43, 0xc7, 0x15, 0x64, 0x2b, 0xd1, 0xd5, 0x38, 0x4d, 0xed, 0xc8, 0x81, 0xd3, 0xfd, 0xf6, 0xff, 0xb1, 0xa4, 0x4a, 0x60, 0xf2, 0x14, 0xbd, 0xa1, 0x72, 0x35, 0x44, 0xb5, 0x2b, 0xe1, 0x08, 0xbf, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_374(ch_374, ch_374 + sizeof(ch_374) -1);
CDataStream stream_374(vch_374, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_374;
stream_374 >> txHist_374;

if(block.vtx[0]->GetHash() == txHist_374.GetHash() && nHeight == 1265484) {
return true;
}
unsigned char ch_375[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x49, 0x4f, 0x13, 0x04, 0xfc, 0xcb, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbd, 0x15, 0xfe, 0x3a, 0x0e, 0x00, 0x00, 0x6d, 0x6d, 0xbe, 0xfa, 0x08, 0x5b, 0x37, 0xcb, 0xc5, 0x04, 0x13, 0x4f, 0x49, 0x03, 0x4c, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0d, 0x52, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_375(ch_375, ch_375 + sizeof(ch_375) -1);
CDataStream stream_375(vch_375, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_375;
stream_375 >> txHist_375;

if(block.vtx[0]->GetHash() == txHist_375.GetHash() && nHeight == 1265481) {
return true;
}
unsigned char ch_376[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xe7, 0x4f, 0x13, 0x04, 0x6f, 0x13, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x02, 0xe0, 0x63, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_376(ch_376, ch_376 + sizeof(ch_376) -1);
CDataStream stream_376(vch_376, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_376;
stream_376 >> txHist_376;

if(block.vtx[0]->GetHash() == txHist_376.GetHash() && nHeight == 1265639) {
return true;
}
unsigned char ch_377[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xe4, 0x4f, 0x13, 0x04, 0xe4, 0x10, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_377(ch_377, ch_377 + sizeof(ch_377) -1);
CDataStream stream_377(vch_377, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_377;
stream_377 >> txHist_377;

if(block.vtx[0]->GetHash() == txHist_377.GetHash() && nHeight == 1265636) {
return true;
}
unsigned char ch_378[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x0c, 0x50, 0x13, 0x04, 0x6f, 0x25, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x76, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xfe, 0x2c, 0x96, 0xc8, 0x80, 0x65, 0xc2, 0xbb, 0x7f, 0x75, 0x57, 0x3d, 0xa3, 0xf1, 0xa3, 0x85, 0x0a, 0x78, 0x4b, 0x2a, 0x9d, 0x3a, 0x05, 0xd3, 0x6b, 0xc5, 0x80, 0x83, 0x0f, 0x04, 0xd0, 0x9d, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_378(ch_378, ch_378 + sizeof(ch_378) -1);
CDataStream stream_378(vch_378, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_378;
stream_378 >> txHist_378;

if(block.vtx[0]->GetHash() == txHist_378.GetHash() && nHeight == 1265676) {
return true;
}
unsigned char ch_379[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x0b, 0x50, 0x13, 0x04, 0xce, 0x24, 0x38, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0x77, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_379(ch_379, ch_379 + sizeof(ch_379) -1);
CDataStream stream_379(vch_379, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_379;
stream_379 >> txHist_379;

if(block.vtx[0]->GetHash() == txHist_379.GetHash() && nHeight == 1265675) {
return true;
}
unsigned char ch_380[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x0a, 0x50, 0x13, 0x04, 0xc4, 0x24, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_380(ch_380, ch_380 + sizeof(ch_380) -1);
CDataStream stream_380(vch_380, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_380;
stream_380 >> txHist_380;

if(block.vtx[0]->GetHash() == txHist_380.GetHash() && nHeight == 1265674) {
return true;
}
unsigned char ch_381[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x09, 0x50, 0x13, 0x04, 0xae, 0x24, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xfa, 0xc2, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xc7, 0xf9, 0xda, 0x60, 0x9c, 0x6f, 0x03, 0xf1, 0xd8, 0x37, 0x9d, 0x70, 0x1a, 0x65, 0x2a, 0xad, 0x63, 0x79, 0xa2, 0x41, 0xb0, 0x29, 0x50, 0x84, 0x83, 0xc6, 0xd0, 0x1c, 0x32, 0x0d, 0x10, 0x45, 0x28, 0x5e, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_381(ch_381, ch_381 + sizeof(ch_381) -1);
CDataStream stream_381(vch_381, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_381;
stream_381 >> txHist_381;

if(block.vtx[0]->GetHash() == txHist_381.GetHash() && nHeight == 1265673) {
return true;
}
unsigned char ch_382[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x07, 0x50, 0x13, 0x04, 0x42, 0x24, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfd, 0xce, 0x12, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_382(ch_382, ch_382 + sizeof(ch_382) -1);
CDataStream stream_382(vch_382, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_382;
stream_382 >> txHist_382;

if(block.vtx[0]->GetHash() == txHist_382.GetHash() && nHeight == 1265671) {
return true;
}
unsigned char ch_383[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe1, 0x4f, 0x13, 0x04, 0xcd, 0x0f, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0xbf, 0xed, 0x3a, 0xc0, 0x95, 0xae, 0x06, 0x4e, 0x20, 0x02, 0x72, 0x29, 0x43, 0x0a, 0xf0, 0x70, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x04, 0x0f, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x1a, 0xb8, 0x9b, 0x64, 0xcb, 0x9a, 0x14, 0xd6, 0x71, 0xb8, 0x3a, 0x17, 0x53, 0x76, 0xc8, 0xc2, 0xf6, 0x76, 0xc9, 0x10, 0x82, 0x00, 0x35, 0x19, 0x16, 0x82, 0xe5, 0x49, 0xab, 0x58, 0xd2, 0xb7, 0x50, 0xbe, 0xf5, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x58, 0x61, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xb8, 0xe6, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_383(ch_383, ch_383 + sizeof(ch_383) -1);
CDataStream stream_383(vch_383, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_383;
stream_383 >> txHist_383;

if(block.vtx[0]->GetHash() == txHist_383.GetHash() && nHeight == 1265633) {
return true;
}
unsigned char ch_384[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x06, 0x50, 0x13, 0x04, 0xa6, 0x23, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x39, 0xb1, 0x1b, 0x71, 0x6c, 0x02, 0x56, 0x10, 0x39, 0x03, 0xc7, 0x44, 0xcd, 0xa3, 0x1a, 0x07, 0xd4, 0x0d, 0xf4, 0x7e, 0x17, 0x08, 0xfd, 0x34, 0xc3, 0x57, 0xd7, 0xf2, 0xb7, 0xc8, 0x77, 0xf5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xff, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_384(ch_384, ch_384 + sizeof(ch_384) -1);
CDataStream stream_384(vch_384, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_384;
stream_384 >> txHist_384;

if(block.vtx[0]->GetHash() == txHist_384.GetHash() && nHeight == 1265670) {
return true;
}
unsigned char ch_385[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x05, 0x50, 0x13, 0x04, 0x81, 0x23, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x39, 0xb1, 0x1b, 0x71, 0x6c, 0x02, 0x56, 0x10, 0x39, 0x03, 0xc7, 0x44, 0xcd, 0xa3, 0x1a, 0x07, 0xd4, 0x0d, 0xf4, 0x7e, 0x17, 0x08, 0xfd, 0x34, 0xc3, 0x57, 0xd7, 0xf2, 0xb7, 0xc8, 0x77, 0xf5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xff, 0x19, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_385(ch_385, ch_385 + sizeof(ch_385) -1);
CDataStream stream_385(vch_385, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_385;
stream_385 >> txHist_385;

if(block.vtx[0]->GetHash() == txHist_385.GetHash() && nHeight == 1265669) {
return true;
}
unsigned char ch_386[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x04, 0x50, 0x13, 0x04, 0x72, 0x23, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x1a, 0x67, 0x91, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x43, 0x49, 0x6b, 0x56, 0x79, 0xae, 0xfe, 0x43, 0x55, 0xf8, 0xba, 0xc7, 0xa6, 0x7d, 0x53, 0x24, 0x93, 0x8a, 0x53, 0x05, 0xb5, 0xb5, 0xdc, 0x3e, 0xae, 0x2a, 0x54, 0xea, 0x22, 0x1a, 0xa6, 0x8a, 0x00, 0x93, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_386(ch_386, ch_386 + sizeof(ch_386) -1);
CDataStream stream_386(vch_386, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_386;
stream_386 >> txHist_386;

if(block.vtx[0]->GetHash() == txHist_386.GetHash() && nHeight == 1265668) {
return true;
}
unsigned char ch_387[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x03, 0x50, 0x13, 0x04, 0x4d, 0x21, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x1a, 0x67, 0x1e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x34, 0xa0, 0xcd, 0xd7, 0x7b, 0xd7, 0xe0, 0x17, 0x5a, 0xdb, 0xa8, 0x04, 0x51, 0x79, 0x8b, 0x0f, 0x42, 0x0c, 0x7d, 0x05, 0xfb, 0x88, 0xcc, 0xaa, 0x2d, 0xe6, 0xb2, 0xd0, 0x13, 0x44, 0xfd, 0x5f, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_387(ch_387, ch_387 + sizeof(ch_387) -1);
CDataStream stream_387(vch_387, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_387;
stream_387 >> txHist_387;

if(block.vtx[0]->GetHash() == txHist_387.GetHash() && nHeight == 1265667) {
return true;
}
unsigned char ch_388[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x01, 0x50, 0x13, 0x04, 0x49, 0x21, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb8, 0x81, 0xe0, 0xc6, 0x5c, 0xaa, 0xc5, 0xc9, 0xf3, 0xfe, 0x48, 0x0f, 0x62, 0x07, 0x41, 0x60, 0x1a, 0x16, 0x55, 0x9a, 0x67, 0x27, 0x08, 0x5c, 0xed, 0xac, 0x58, 0x8f, 0xd6, 0xf3, 0x11, 0x95, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_388(ch_388, ch_388 + sizeof(ch_388) -1);
CDataStream stream_388(vch_388, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_388;
stream_388 >> txHist_388;

if(block.vtx[0]->GetHash() == txHist_388.GetHash() && nHeight == 1265665) {
return true;
}
unsigned char ch_389[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xff, 0x4f, 0x13, 0x04, 0xa2, 0x20, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5d, 0x6d, 0x62, 0x8e, 0x8b, 0x14, 0x38, 0x0c, 0x62, 0xe2, 0x0f, 0xd1, 0xc3, 0x27, 0x84, 0x43, 0xab, 0xb1, 0x79, 0xad, 0xf7, 0x69, 0x50, 0xe9, 0xb1, 0x37, 0xab, 0x0c, 0x6f, 0xb3, 0x7e, 0x41, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_389(ch_389, ch_389 + sizeof(ch_389) -1);
CDataStream stream_389(vch_389, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_389;
stream_389 >> txHist_389;

if(block.vtx[0]->GetHash() == txHist_389.GetHash() && nHeight == 1265663) {
return true;
}
unsigned char ch_390[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xfe, 0x4f, 0x13, 0x04, 0x25, 0x20, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x64, 0x56, 0xa7, 0x33, 0x1a, 0xac, 0x6d, 0x6f, 0xd6, 0xe5, 0xb6, 0xc1, 0x0d, 0x64, 0x50, 0xe0, 0xc8, 0x8b, 0xd2, 0x3d, 0x64, 0x2e, 0xa5, 0xe4, 0x3b, 0x06, 0x6b, 0x36, 0x01, 0x0f, 0x58, 0x16, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x71, 0x36, 0xa3, 0x63, 0x9a, 0x4e, 0x2b, 0xc3, 0x56, 0x2a, 0xd1, 0xd4, 0x22, 0xc6, 0xb9, 0x9f, 0xeb, 0x43, 0xb1, 0xe1, 0xba, 0x9f, 0xaf, 0x48, 0x31, 0x64, 0x74, 0x8b, 0x04, 0x77, 0xf4, 0x5c, 0x38, 0x4d, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_390(ch_390, ch_390 + sizeof(ch_390) -1);
CDataStream stream_390(vch_390, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_390;
stream_390 >> txHist_390;

if(block.vtx[0]->GetHash() == txHist_390.GetHash() && nHeight == 1265662) {
return true;
}
unsigned char ch_391[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xdd, 0x4f, 0x13, 0x04, 0x9f, 0x0d, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xfd, 0x1a, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_391(ch_391, ch_391 + sizeof(ch_391) -1);
CDataStream stream_391(vch_391, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_391;
stream_391 >> txHist_391;

if(block.vtx[0]->GetHash() == txHist_391.GetHash() && nHeight == 1265629) {
return true;
}
unsigned char ch_392[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xfd, 0x4f, 0x13, 0x04, 0x1f, 0x1f, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5b, 0x9c, 0x04, 0x28, 0xf0, 0xc7, 0x84, 0xa3, 0x1a, 0x13, 0x84, 0x0b, 0x4c, 0x02, 0x4c, 0x38, 0x70, 0x81, 0x4b, 0x02, 0x13, 0x38, 0x7b, 0x6d, 0xe5, 0x3d, 0x25, 0x6c, 0x2b, 0xbd, 0x72, 0x0f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xff, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_392(ch_392, ch_392 + sizeof(ch_392) -1);
CDataStream stream_392(vch_392, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_392;
stream_392 >> txHist_392;

if(block.vtx[0]->GetHash() == txHist_392.GetHash() && nHeight == 1265661) {
return true;
}
unsigned char ch_393[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd9, 0x4f, 0x13, 0x04, 0xb0, 0x0b, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbb, 0x73, 0x20, 0x00, 0x75, 0xdb, 0x80, 0x89, 0xd0, 0x20, 0x77, 0xef, 0x86, 0x42, 0x89, 0x1f, 0x8c, 0x31, 0x62, 0x57, 0xf5, 0xc4, 0xf5, 0x08, 0x2a, 0x1f, 0x18, 0x97, 0x45, 0x3e, 0xa5, 0x96, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_393(ch_393, ch_393 + sizeof(ch_393) -1);
CDataStream stream_393(vch_393, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_393;
stream_393 >> txHist_393;

if(block.vtx[0]->GetHash() == txHist_393.GetHash() && nHeight == 1265625) {
return true;
}
unsigned char ch_394[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd7, 0x4f, 0x13, 0x04, 0x14, 0x0b, 0x38, 0x5b, 0x08, 0x7f, 0xff, 0xfa, 0xc4, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_394(ch_394, ch_394 + sizeof(ch_394) -1);
CDataStream stream_394(vch_394, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_394;
stream_394 >> txHist_394;

if(block.vtx[0]->GetHash() == txHist_394.GetHash() && nHeight == 1265623) {
return true;
}
unsigned char ch_395[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd6, 0x4f, 0x13, 0x04, 0xf9, 0x0a, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0d, 0x89, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xb7, 0x74, 0x1d, 0xdc, 0xc0, 0x4b, 0x75, 0x55, 0xf6, 0x75, 0x81, 0x74, 0x44, 0xd0, 0xdd, 0x3d, 0x76, 0xd2, 0xd4, 0x97, 0x47, 0x43, 0x0c, 0xf7, 0x1f, 0x32, 0x3c, 0xa6, 0x4a, 0x55, 0x25, 0x66, 0x78, 0x9a, 0xf3, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x84, 0x5b, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0x94, 0xc9, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_395(ch_395, ch_395 + sizeof(ch_395) -1);
CDataStream stream_395(vch_395, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_395;
stream_395 >> txHist_395;

if(block.vtx[0]->GetHash() == txHist_395.GetHash() && nHeight == 1265622) {
return true;
}
unsigned char ch_396[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xfb, 0x4f, 0x13, 0x04, 0xad, 0x1e, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x2f, 0x6d, 0x75, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x64, 0x6f, 0x6e, 0x2f, 0x0d, 0x00, 0x00, 0x00, 0x0e, 0xea, 0xff, 0xff, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xea, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x60, 0x08, 0x04, 0x29, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x1e, 0xf3, 0xd7, 0x98, 0xf9, 0x7d, 0xba, 0x18, 0x33, 0x23, 0x83, 0xea, 0x65, 0x40, 0x27, 0xbe, 0xc4, 0x62, 0x86, 0x96, 0x88, 0xac, 0xa0, 0x06, 0x5b, 0xb1, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xca, 0xe3, 0x39, 0xe2, 0x4f, 0x6d, 0x60, 0x98, 0xec, 0xbe, 0x73, 0x11, 0x00, 0x3d, 0xd4, 0xf8, 0x02, 0x05, 0x8b, 0x9d, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_396(ch_396, ch_396 + sizeof(ch_396) -1);
CDataStream stream_396(vch_396, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_396;
stream_396 >> txHist_396;

if(block.vtx[0]->GetHash() == txHist_396.GetHash() && nHeight == 1265659) {
return true;
}
unsigned char ch_397[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd5, 0x4f, 0x13, 0x04, 0x27, 0x0a, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0x47, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x54, 0x15, 0x5e, 0x9a, 0xb9, 0x39, 0x33, 0x0f, 0x82, 0xe5, 0x2e, 0x0a, 0xc2, 0x14, 0x5c, 0xf5, 0x7c, 0x56, 0x95, 0xf6, 0x18, 0x47, 0xd9, 0x87, 0xd6, 0xce, 0xc1, 0x2d, 0xae, 0x9b, 0x97, 0x2c, 0x48, 0x93, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_397(ch_397, ch_397 + sizeof(ch_397) -1);
CDataStream stream_397(vch_397, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_397;
stream_397 >> txHist_397;

if(block.vtx[0]->GetHash() == txHist_397.GetHash() && nHeight == 1265621) {
return true;
}
unsigned char ch_398[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xfa, 0x4f, 0x13, 0x04, 0xaf, 0x1e, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd0, 0x64, 0xe8, 0x37, 0x42, 0x06, 0xa8, 0x45, 0x95, 0xae, 0xa3, 0x6e, 0x27, 0x3a, 0xbe, 0x65, 0xf3, 0x87, 0x1c, 0xed, 0x32, 0x6c, 0x8f, 0xfa, 0xdf, 0x74, 0x28, 0x1e, 0xa7, 0x97, 0xa9, 0xfc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x4c, 0x97, 0x6a, 0x9c, 0x73, 0x1e, 0xc5, 0x82, 0x11, 0xbd, 0x7b, 0x11, 0x8b, 0x15, 0xda, 0x7f, 0x6c, 0x77, 0x6e, 0x8b, 0xec, 0x08, 0x83, 0xb5, 0xb2, 0xb1, 0xe5, 0xe9, 0x67, 0xd9, 0xe6, 0x68, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_398(ch_398, ch_398 + sizeof(ch_398) -1);
CDataStream stream_398(vch_398, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_398;
stream_398 >> txHist_398;

if(block.vtx[0]->GetHash() == txHist_398.GetHash() && nHeight == 1265658) {
return true;
}
unsigned char ch_399[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf9, 0x4f, 0x13, 0x04, 0x86, 0x1e, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf4, 0xc6, 0x9b, 0x7f, 0x7f, 0x56, 0x1c, 0xdb, 0x8c, 0xbd, 0x58, 0xf4, 0xf6, 0x9c, 0x10, 0x16, 0x8f, 0xbc, 0x0b, 0xe4, 0x7a, 0xe8, 0xb6, 0x42, 0x58, 0x3b, 0xc4, 0xbb, 0xe4, 0xd3, 0x41, 0xa7, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x73, 0x9d, 0xa3, 0xf2, 0x21, 0x66, 0x4f, 0x02, 0x27, 0xbe, 0x65, 0xbd, 0xc3, 0x7f, 0x49, 0x08, 0xd1, 0x09, 0xc0, 0x23, 0x99, 0x60, 0x8d, 0x21, 0x1a, 0xab, 0x86, 0x5b, 0x80, 0x31, 0x66, 0x3e, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_399(ch_399, ch_399 + sizeof(ch_399) -1);
CDataStream stream_399(vch_399, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_399;
stream_399 >> txHist_399;

if(block.vtx[0]->GetHash() == txHist_399.GetHash() && nHeight == 1265657) {
return true;
}
unsigned char ch_400[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf8, 0x4f, 0x13, 0x04, 0x0c, 0x1e, 0x38, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0x37, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_400(ch_400, ch_400 + sizeof(ch_400) -1);
CDataStream stream_400(vch_400, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_400;
stream_400 >> txHist_400;

if(block.vtx[0]->GetHash() == txHist_400.GetHash() && nHeight == 1265656) {
return true;
}
unsigned char ch_401[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf7, 0x4f, 0x13, 0x04, 0x04, 0x1e, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x03, 0xa0, 0x0f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x00, 0xa6, 0x11, 0x1c, 0xb0, 0xa4, 0x1b, 0x60, 0x7f, 0xa1, 0x93, 0x84, 0x95, 0x76, 0xd8, 0xc5, 0x65, 0x35, 0xed, 0xbd, 0x5c, 0xac, 0xcf, 0x77, 0xab, 0x2f, 0xb5, 0xe2, 0xd8, 0x4e, 0xf8, 0x8f, 0xc8, 0x04, 0x65, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_401(ch_401, ch_401 + sizeof(ch_401) -1);
CDataStream stream_401(vch_401, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_401;
stream_401 >> txHist_401;

if(block.vtx[0]->GetHash() == txHist_401.GetHash() && nHeight == 1265655) {
return true;
}
unsigned char ch_402[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf6, 0x4f, 0x13, 0x04, 0x6c, 0x1d, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0x1a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x27, 0x44, 0x7e, 0xb3, 0x40, 0x5f, 0x61, 0xc4, 0xd8, 0x08, 0x84, 0x72, 0x05, 0x56, 0x10, 0x35, 0x61, 0x90, 0x69, 0xf6, 0x74, 0x6b, 0x71, 0xba, 0x34, 0x3a, 0x6f, 0x72, 0xf7, 0xa4, 0x7f, 0x32, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_402(ch_402, ch_402 + sizeof(ch_402) -1);
CDataStream stream_402(vch_402, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_402;
stream_402 >> txHist_402;

if(block.vtx[0]->GetHash() == txHist_402.GetHash() && nHeight == 1265654) {
return true;
}
unsigned char ch_403[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf5, 0x4f, 0x13, 0x04, 0x35, 0x1d, 0x38, 0x5b, 0x08, 0x7f, 0xff, 0xe5, 0x05, 0x95, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_403(ch_403, ch_403 + sizeof(ch_403) -1);
CDataStream stream_403(vch_403, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_403;
stream_403 >> txHist_403;

if(block.vtx[0]->GetHash() == txHist_403.GetHash() && nHeight == 1265653) {
return true;
}
unsigned char ch_404[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd4, 0x4f, 0x13, 0x04, 0xdb, 0x09, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0x69, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x41, 0xac, 0x18, 0x81, 0x70, 0x20, 0x73, 0xe8, 0xd3, 0x1f, 0x3c, 0x34, 0x94, 0x8d, 0x0d, 0x6f, 0x14, 0x9f, 0x43, 0xf8, 0x73, 0xd4, 0xfb, 0x17, 0xc7, 0x00, 0xa4, 0x3d, 0x11, 0xc3, 0xdc, 0x18, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_404(ch_404, ch_404 + sizeof(ch_404) -1);
CDataStream stream_404(vch_404, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_404;
stream_404 >> txHist_404;

if(block.vtx[0]->GetHash() == txHist_404.GetHash() && nHeight == 1265620) {
return true;
}
unsigned char ch_405[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf4, 0x4f, 0x13, 0x04, 0x7a, 0x1c, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x1f, 0x4d, 0x09, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_405(ch_405, ch_405 + sizeof(ch_405) -1);
CDataStream stream_405(vch_405, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_405;
stream_405 >> txHist_405;

if(block.vtx[0]->GetHash() == txHist_405.GetHash() && nHeight == 1265652) {
return true;
}
unsigned char ch_406[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf2, 0x4f, 0x13, 0x04, 0x27, 0x19, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x01, 0x36, 0xe2, 0x3b, 0x0f, 0xe3, 0xcb, 0xd1, 0x85, 0x3b, 0x73, 0x5f, 0x65, 0x32, 0x0a, 0x53, 0xed, 0xd5, 0xdb, 0x17, 0x79, 0x62, 0x26, 0x46, 0xa6, 0xad, 0x4b, 0xea, 0xc9, 0x42, 0x5c, 0x8b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_406(ch_406, ch_406 + sizeof(ch_406) -1);
CDataStream stream_406(vch_406, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_406;
stream_406 >> txHist_406;

if(block.vtx[0]->GetHash() == txHist_406.GetHash() && nHeight == 1265650) {
return true;
}
unsigned char ch_407[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xef, 0x4f, 0x13, 0x04, 0x88, 0x16, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xf4, 0x34, 0x9b, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_407(ch_407, ch_407 + sizeof(ch_407) -1);
CDataStream stream_407(vch_407, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_407;
stream_407 >> txHist_407;

if(block.vtx[0]->GetHash() == txHist_407.GetHash() && nHeight == 1265647) {
return true;
}
unsigned char ch_408[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xec, 0x4f, 0x13, 0x04, 0xa0, 0x14, 0x38, 0x5b, 0x08, 0x7f, 0xff, 0xfa, 0xc4, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_408(ch_408, ch_408 + sizeof(ch_408) -1);
CDataStream stream_408(vch_408, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_408;
stream_408 >> txHist_408;

if(block.vtx[0]->GetHash() == txHist_408.GetHash() && nHeight == 1265644) {
return true;
}
unsigned char ch_409[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xea, 0x4f, 0x13, 0x04, 0x38, 0x14, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x02, 0xe0, 0x2d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x3e, 0x91, 0xe3, 0x1e, 0xb8, 0xb8, 0x03, 0x46, 0xd4, 0x1b, 0xfa, 0x76, 0x31, 0x05, 0xa7, 0xab, 0xa1, 0xe5, 0x30, 0xbb, 0x5b, 0x27, 0x73, 0xea, 0xfd, 0xf9, 0x85, 0xc1, 0xd1, 0x0d, 0xd1, 0x34, 0x30, 0x33, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_409(ch_409, ch_409 + sizeof(ch_409) -1);
CDataStream stream_409(vch_409, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_409;
stream_409 >> txHist_409;

if(block.vtx[0]->GetHash() == txHist_409.GetHash() && nHeight == 1265642) {
return true;
}
unsigned char ch_410[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd3, 0x4f, 0x13, 0x04, 0x67, 0x09, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x1f, 0x1d, 0x0e, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_410(ch_410, ch_410 + sizeof(ch_410) -1);
CDataStream stream_410(vch_410, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_410;
stream_410 >> txHist_410;

if(block.vtx[0]->GetHash() == txHist_410.GetHash() && nHeight == 1265619) {
return true;
}
unsigned char ch_411[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe8, 0x4f, 0x13, 0x04, 0x84, 0x13, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x04, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x2d, 0x24, 0xa1, 0xd9, 0x84, 0x01, 0xd3, 0xed, 0x40, 0x76, 0x00, 0xa5, 0xa7, 0x2d, 0x24, 0x88, 0x96, 0x6c, 0xdd, 0x58, 0xc7, 0x26, 0x56, 0x58, 0xee, 0xb1, 0x27, 0x4d, 0x84, 0x60, 0x15, 0x07, 0x14, 0x8c, 0xf4, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x16, 0x5e, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0x6e, 0xd6, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_411(ch_411, ch_411 + sizeof(ch_411) -1);
CDataStream stream_411(vch_411, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_411;
stream_411 >> txHist_411;

if(block.vtx[0]->GetHash() == txHist_411.GetHash() && nHeight == 1265640) {
return true;
}
unsigned char ch_412[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd2, 0x4f, 0x13, 0x04, 0xf4, 0x08, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfd, 0xd0, 0x0c, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_412(ch_412, ch_412 + sizeof(ch_412) -1);
CDataStream stream_412(vch_412, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_412;
stream_412 >> txHist_412;

if(block.vtx[0]->GetHash() == txHist_412.GetHash() && nHeight == 1265618) {
return true;
}
unsigned char ch_413[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xe5, 0x4f, 0x13, 0x04, 0x07, 0x11, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x03, 0x16, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_413(ch_413, ch_413 + sizeof(ch_413) -1);
CDataStream stream_413(vch_413, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_413;
stream_413 >> txHist_413;

if(block.vtx[0]->GetHash() == txHist_413.GetHash() && nHeight == 1265637) {
return true;
}
unsigned char ch_414[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xe2, 0x4f, 0x13, 0x04, 0x00, 0x10, 0x38, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xff, 0xf9, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x84, 0x6b, 0x5e, 0x7b, 0xf7, 0x5f, 0xd4, 0xc6, 0x2c, 0x05, 0x4e, 0x9a, 0x3c, 0x22, 0x42, 0xe2, 0x60, 0xfa, 0xa3, 0x45, 0xe0, 0xb5, 0x00, 0x52, 0xde, 0x2e, 0x17, 0x84, 0x36, 0x59, 0x60, 0x6c, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_414(ch_414, ch_414 + sizeof(ch_414) -1);
CDataStream stream_414(vch_414, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_414;
stream_414 >> txHist_414;

if(block.vtx[0]->GetHash() == txHist_414.GetHash() && nHeight == 1265634) {
return true;
}
unsigned char ch_415[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xde, 0x4f, 0x13, 0x04, 0x46, 0x0e, 0x38, 0x5b, 0x08, 0x7f, 0xff, 0xfa, 0xc4, 0x9e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x6a, 0xd7, 0x49, 0x4e, 0xce, 0xae, 0xfd, 0x0b, 0x97, 0x1d, 0xd0, 0xf6, 0x39, 0xc1, 0x3e, 0x4c, 0x31, 0x02, 0xe3, 0xfe, 0xae, 0x2c, 0x38, 0x1f, 0xe4, 0xf8, 0x61, 0xfb, 0x39, 0x75, 0x3c, 0xc4, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_415(ch_415, ch_415 + sizeof(ch_415) -1);
CDataStream stream_415(vch_415, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_415;
stream_415 >> txHist_415;

if(block.vtx[0]->GetHash() == txHist_415.GetHash() && nHeight == 1265630) {
return true;
}
unsigned char ch_416[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd1, 0x4f, 0x13, 0x04, 0x73, 0x08, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x75, 0x52, 0x06, 0x68, 0xb3, 0xf1, 0xe1, 0x98, 0xd2, 0xae, 0xcf, 0x62, 0xac, 0x6f, 0x2e, 0x75, 0x3a, 0x48, 0xf3, 0x46, 0x4d, 0xce, 0xec, 0x24, 0xf4, 0x86, 0xba, 0x8b, 0x67, 0xf1, 0xa9, 0xd8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_416(ch_416, ch_416 + sizeof(ch_416) -1);
CDataStream stream_416(vch_416, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_416;
stream_416 >> txHist_416;

if(block.vtx[0]->GetHash() == txHist_416.GetHash() && nHeight == 1265617) {
return true;
}
unsigned char ch_417[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xda, 0x4f, 0x13, 0x04, 0x6a, 0x0d, 0x38, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0xea, 0x2f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x70, 0x05, 0xda, 0x70, 0x57, 0x1b, 0xcf, 0x87, 0xb1, 0x19, 0x76, 0xe9, 0x11, 0x55, 0x8d, 0xef, 0x5e, 0xf6, 0xa4, 0xb7, 0x83, 0x24, 0x1d, 0xf2, 0x44, 0xf6, 0x9d, 0x42, 0xec, 0x94, 0x02, 0xae, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_417(ch_417, ch_417 + sizeof(ch_417) -1);
CDataStream stream_417(vch_417, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_417;
stream_417 >> txHist_417;

if(block.vtx[0]->GetHash() == txHist_417.GetHash() && nHeight == 1265626) {
return true;
}
unsigned char ch_418[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xcf, 0x4f, 0x13, 0x04, 0xed, 0x07, 0x38, 0x5b, 0x08, 0x20, 0x00, 0x02, 0xe0, 0x46, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x20, 0x9b, 0x97, 0xef, 0xab, 0x97, 0x44, 0x58, 0x2e, 0x4e, 0x0d, 0xaf, 0xa4, 0x82, 0x89, 0xef, 0x2e, 0x56, 0xb2, 0x60, 0x53, 0x5f, 0xcc, 0xbe, 0x21, 0x3b, 0xc4, 0x42, 0x35, 0x80, 0x70, 0x72, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_418(ch_418, ch_418 + sizeof(ch_418) -1);
CDataStream stream_418(vch_418, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_418;
stream_418 >> txHist_418;

if(block.vtx[0]->GetHash() == txHist_418.GetHash() && nHeight == 1265615) {
return true;
}
unsigned char ch_419[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xce, 0x4f, 0x13, 0x04, 0xa9, 0x07, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_419(ch_419, ch_419 + sizeof(ch_419) -1);
CDataStream stream_419(vch_419, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_419;
stream_419 >> txHist_419;

if(block.vtx[0]->GetHash() == txHist_419.GetHash() && nHeight == 1265614) {
return true;
}
unsigned char ch_420[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xcd, 0x4f, 0x13, 0x04, 0x73, 0x07, 0x38, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xff, 0x21, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_420(ch_420, ch_420 + sizeof(ch_420) -1);
CDataStream stream_420(vch_420, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_420;
stream_420 >> txHist_420;

if(block.vtx[0]->GetHash() == txHist_420.GetHash() && nHeight == 1265613) {
return true;
}
unsigned char ch_421[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xcc, 0x4f, 0x13, 0x04, 0x45, 0x07, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf8, 0xc1, 0x72, 0x49, 0x96, 0x55, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x05, 0xa4, 0x85, 0x5c, 0xba, 0xac, 0x88, 0x12, 0xd5, 0x21, 0xec, 0x01, 0x8e, 0x79, 0x60, 0x16, 0x96, 0x0f, 0xae, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x04, 0x0f, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x97, 0x0e, 0xfb, 0xde, 0x66, 0xa6, 0xf4, 0x25, 0x16, 0x3c, 0xfa, 0xb7, 0x7e, 0xfc, 0x0c, 0xcb, 0x14, 0x22, 0xdd, 0x13, 0xa1, 0xf8, 0x25, 0x73, 0x09, 0xdb, 0x3a, 0x11, 0x69, 0x44, 0xc5, 0xdd, 0xdc, 0x68, 0xfe, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xf2, 0x78, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xba, 0x5c, 0x85, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_421(ch_421, ch_421 + sizeof(ch_421) -1);
CDataStream stream_421(vch_421, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_421;
stream_421 >> txHist_421;

if(block.vtx[0]->GetHash() == txHist_421.GetHash() && nHeight == 1265612) {
return true;
}
unsigned char ch_422[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xcb, 0x4f, 0x13, 0x04, 0xe1, 0x05, 0x38, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0x7e, 0x08, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_422(ch_422, ch_422 + sizeof(ch_422) -1);
CDataStream stream_422(vch_422, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_422;
stream_422 >> txHist_422;

if(block.vtx[0]->GetHash() == txHist_422.GetHash() && nHeight == 1265611) {
return true;
}
unsigned char ch_423[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xca, 0x4f, 0x13, 0x04, 0x92, 0x05, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x3b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xf3, 0x5f, 0x47, 0xf0, 0x57, 0x43, 0xed, 0x7e, 0x69, 0x1a, 0x58, 0x4b, 0xf4, 0xb8, 0x2c, 0xe1, 0xf2, 0x04, 0xf2, 0x12, 0xaf, 0xfa, 0x92, 0xed, 0x1f, 0x1d, 0xb6, 0x72, 0xe8, 0xd9, 0x11, 0x93, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_423(ch_423, ch_423 + sizeof(ch_423) -1);
CDataStream stream_423(vch_423, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_423;
stream_423 >> txHist_423;

if(block.vtx[0]->GetHash() == txHist_423.GetHash() && nHeight == 1265610) {
return true;
}
unsigned char ch_424[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc9, 0x4f, 0x13, 0x04, 0x65, 0x05, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe5, 0x3c, 0x6f, 0x68, 0x86, 0x57, 0x8a, 0xaa, 0xe9, 0x0e, 0x46, 0xda, 0x85, 0xf0, 0xaa, 0x9e, 0xd3, 0x06, 0x12, 0xe0, 0x97, 0x42, 0x5f, 0x41, 0xde, 0xb9, 0x48, 0x6e, 0x50, 0x20, 0x10, 0x64, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xb1, 0xbc, 0xed, 0xe9, 0x9e, 0xe8, 0xc4, 0x72, 0x34, 0x53, 0xcc, 0xa2, 0x15, 0x49, 0x9f, 0x9a, 0xcb, 0xfa, 0xe8, 0x1d, 0xf3, 0x33, 0xeb, 0xb7, 0x52, 0x46, 0x00, 0x86, 0x26, 0xbb, 0xa6, 0xa3, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_424(ch_424, ch_424 + sizeof(ch_424) -1);
CDataStream stream_424(vch_424, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_424;
stream_424 >> txHist_424;

if(block.vtx[0]->GetHash() == txHist_424.GetHash() && nHeight == 1265609) {
return true;
}
unsigned char ch_425[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc8, 0x4f, 0x13, 0x04, 0x4a, 0x04, 0x38, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0xc8, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_425(ch_425, ch_425 + sizeof(ch_425) -1);
CDataStream stream_425(vch_425, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_425;
stream_425 >> txHist_425;

if(block.vtx[0]->GetHash() == txHist_425.GetHash() && nHeight == 1265608) {
return true;
}
unsigned char ch_426[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd0, 0x4f, 0x13, 0x04, 0x51, 0x08, 0x38, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0xc0, 0x05, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x50, 0x5e, 0x34, 0xf2, 0xb2, 0x8c, 0xcc, 0x06, 0x6f, 0x17, 0x6e, 0x45, 0x7e, 0xe1, 0x42, 0x3b, 0x18, 0x2a, 0xb6, 0x38, 0x5d, 0x65, 0xdb, 0xfc, 0x0b, 0x64, 0xec, 0xdc, 0xf0, 0xaa, 0xff, 0x39, 0xc0, 0x92, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_426(ch_426, ch_426 + sizeof(ch_426) -1);
CDataStream stream_426(vch_426, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_426;
stream_426 >> txHist_426;

if(block.vtx[0]->GetHash() == txHist_426.GetHash() && nHeight == 1265616) {
return true;
}
unsigned char ch_427[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc6, 0x4f, 0x13, 0x04, 0xa2, 0x03, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x66, 0x34, 0x64, 0x62, 0x65, 0x37, 0x32, 0x36, 0x32, 0x61, 0x61, 0x62, 0x31, 0x65, 0x61, 0x38, 0x39, 0x35, 0x30, 0x30, 0x61, 0x63, 0x63, 0x31, 0x62, 0x34, 0x33, 0x39, 0x30, 0x32, 0x34, 0x64, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0d, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_427(ch_427, ch_427 + sizeof(ch_427) -1);
CDataStream stream_427(vch_427, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_427;
stream_427 >> txHist_427;

if(block.vtx[0]->GetHash() == txHist_427.GetHash() && nHeight == 1265606) {
return true;
}
unsigned char ch_428[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xad, 0x4f, 0x13, 0x04, 0xa0, 0xf9, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xff, 0x95, 0x09, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_428(ch_428, ch_428 + sizeof(ch_428) -1);
CDataStream stream_428(vch_428, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_428;
stream_428 >> txHist_428;

if(block.vtx[0]->GetHash() == txHist_428.GetHash() && nHeight == 1265581) {
return true;
}
unsigned char ch_429[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xbb, 0x4e, 0x13, 0x04, 0xee, 0x9a, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0x98, 0x08, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x44, 0x15, 0x63, 0x1c, 0xfc, 0x58, 0x9f, 0x52, 0xf1, 0x74, 0x4d, 0xe8, 0xec, 0xee, 0xc1, 0x2f, 0x5f, 0xbf, 0xe6, 0xa3, 0x15, 0x3e, 0x30, 0x1d, 0xcf, 0xe0, 0xd8, 0x5f, 0x54, 0xae, 0x44, 0x78, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_429(ch_429, ch_429 + sizeof(ch_429) -1);
CDataStream stream_429(vch_429, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_429;
stream_429 >> txHist_429;

if(block.vtx[0]->GetHash() == txHist_429.GetHash() && nHeight == 1265339) {
return true;
}
unsigned char ch_430[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc4, 0x4f, 0x13, 0x04, 0x88, 0x02, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc5, 0xea, 0x80, 0x5a, 0x0e, 0x10, 0xc0, 0x9c, 0x2d, 0xbd, 0xbe, 0xb3, 0x5c, 0x2f, 0x53, 0x3b, 0xbc, 0x76, 0x8d, 0x14, 0xd9, 0x2f, 0xfb, 0xac, 0x8f, 0xa6, 0x83, 0xa2, 0x55, 0x22, 0xc9, 0x28, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_430(ch_430, ch_430 + sizeof(ch_430) -1);
CDataStream stream_430(vch_430, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_430;
stream_430 >> txHist_430;

if(block.vtx[0]->GetHash() == txHist_430.GetHash() && nHeight == 1265604) {
return true;
}
unsigned char ch_431[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xab, 0x4f, 0x13, 0x04, 0x45, 0xf9, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x09, 0x31, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_431(ch_431, ch_431 + sizeof(ch_431) -1);
CDataStream stream_431(vch_431, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_431;
stream_431 >> txHist_431;

if(block.vtx[0]->GetHash() == txHist_431.GetHash() && nHeight == 1265579) {
return true;
}
unsigned char ch_432[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc2, 0x4f, 0x13, 0x04, 0xa4, 0x01, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xfa, 0xc2, 0x45, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_432(ch_432, ch_432 + sizeof(ch_432) -1);
CDataStream stream_432(vch_432, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_432;
stream_432 >> txHist_432;

if(block.vtx[0]->GetHash() == txHist_432.GetHash() && nHeight == 1265602) {
return true;
}
unsigned char ch_433[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa7, 0x4f, 0x13, 0x04, 0x92, 0xf7, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x71, 0x8b, 0x0c, 0x55, 0xe2, 0x1d, 0x4a, 0x12, 0x9d, 0x79, 0xc3, 0xf0, 0x43, 0xcc, 0xb9, 0xab, 0x47, 0x17, 0xa7, 0xb7, 0xa0, 0x3a, 0xd5, 0x29, 0x3d, 0x20, 0x02, 0xb6, 0x9d, 0x40, 0xdd, 0x7c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0d, 0x89, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x18, 0xd0, 0x20, 0xa3, 0xe8, 0x59, 0xeb, 0x20, 0x64, 0x6e, 0xf7, 0x63, 0xe7, 0xb7, 0x84, 0xa5, 0xf0, 0x13, 0x83, 0xda, 0xfb, 0x5f, 0x61, 0x6d, 0x31, 0xc7, 0x9e, 0x02, 0xf1, 0xb7, 0x61, 0xb8, 0x30, 0x08, 0xf5, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x68, 0x5f, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0x08, 0xdd, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_433(ch_433, ch_433 + sizeof(ch_433) -1);
CDataStream stream_433(vch_433, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_433;
stream_433 >> txHist_433;

if(block.vtx[0]->GetHash() == txHist_433.GetHash() && nHeight == 1265575) {
return true;
}
unsigned char ch_434[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc0, 0x4f, 0x13, 0x04, 0xec, 0x00, 0x38, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc7, 0x04, 0x73, 0x38, 0x0c, 0x35, 0x3c, 0xaa, 0x05, 0xf3, 0x23, 0x19, 0xdf, 0xb5, 0x35, 0xdc, 0x77, 0x7a, 0x78, 0x84, 0x67, 0xa0, 0xb4, 0x67, 0x1e, 0x71, 0xdb, 0x39, 0xd0, 0x12, 0x2b, 0xfa, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_434(ch_434, ch_434 + sizeof(ch_434) -1);
CDataStream stream_434(vch_434, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_434;
stream_434 >> txHist_434;

if(block.vtx[0]->GetHash() == txHist_434.GetHash() && nHeight == 1265600) {
return true;
}
unsigned char ch_435[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa6, 0x4f, 0x13, 0x04, 0xec, 0xf6, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x05, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_435(ch_435, ch_435 + sizeof(ch_435) -1);
CDataStream stream_435(vch_435, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_435;
stream_435 >> txHist_435;

if(block.vtx[0]->GetHash() == txHist_435.GetHash() && nHeight == 1265574) {
return true;
}
unsigned char ch_436[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x29, 0x4f, 0x13, 0x04, 0xbe, 0xbe, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0x94, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_436(ch_436, ch_436 + sizeof(ch_436) -1);
CDataStream stream_436(vch_436, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_436;
stream_436 >> txHist_436;

if(block.vtx[0]->GetHash() == txHist_436.GetHash() && nHeight == 1265449) {
return true;
}
unsigned char ch_437[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xbe, 0x4f, 0x13, 0x04, 0x99, 0x00, 0x38, 0x5b, 0x08, 0x57, 0xff, 0xfd, 0x1a, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_437(ch_437, ch_437 + sizeof(ch_437) -1);
CDataStream stream_437(vch_437, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_437;
stream_437 >> txHist_437;

if(block.vtx[0]->GetHash() == txHist_437.GetHash() && nHeight == 1265598) {
return true;
}
unsigned char ch_438[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa5, 0x4f, 0x13, 0x04, 0xbb, 0xf6, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x16, 0x82, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_438(ch_438, ch_438 + sizeof(ch_438) -1);
CDataStream stream_438(vch_438, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_438;
stream_438 >> txHist_438;

if(block.vtx[0]->GetHash() == txHist_438.GetHash() && nHeight == 1265573) {
return true;
}
unsigned char ch_439[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x27, 0x4f, 0x13, 0x04, 0xa9, 0xbe, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x3f, 0xd3, 0xc7, 0x5c, 0x45, 0xa9, 0xa5, 0x7b, 0xb4, 0x82, 0x0c, 0xc6, 0x42, 0x32, 0x09, 0xc5, 0x34, 0xd7, 0x66, 0x01, 0x6b, 0xd8, 0x18, 0x89, 0x64, 0x9a, 0xcc, 0xa5, 0x8a, 0xb7, 0xa9, 0x23, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x7c, 0xd7, 0x2d, 0x3e, 0xbe, 0x67, 0x6d, 0x4a, 0xec, 0x0c, 0x14, 0xe1, 0x2e, 0x49, 0x89, 0xda, 0x54, 0x64, 0x38, 0x55, 0x5f, 0x9a, 0xec, 0x4b, 0x29, 0x82, 0x03, 0xd0, 0x51, 0x46, 0x0c, 0xd4, 0x98, 0xc0, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_439(ch_439, ch_439 + sizeof(ch_439) -1);
CDataStream stream_439(vch_439, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_439;
stream_439 >> txHist_439;

if(block.vtx[0]->GetHash() == txHist_439.GetHash() && nHeight == 1265447) {
return true;
}
unsigned char ch_440[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xbc, 0x4f, 0x13, 0x04, 0x85, 0xff, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x09, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_440(ch_440, ch_440 + sizeof(ch_440) -1);
CDataStream stream_440(vch_440, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_440;
stream_440 >> txHist_440;

if(block.vtx[0]->GetHash() == txHist_440.GetHash() && nHeight == 1265596) {
return true;
}
unsigned char ch_441[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9b, 0x4f, 0x13, 0x04, 0x86, 0xf2, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x52, 0x3b, 0x09, 0x0c, 0x18, 0xbb, 0xf0, 0xa2, 0xed, 0xc4, 0xc7, 0xb6, 0x42, 0x17, 0x79, 0x18, 0xd0, 0x72, 0x21, 0xca, 0x2c, 0x23, 0x35, 0x2f, 0x27, 0xe1, 0xd3, 0xee, 0xca, 0xe3, 0xc6, 0x85, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x2a, 0x9c, 0x65, 0x60, 0xf9, 0xeb, 0xa8, 0x96, 0x66, 0xcc, 0x62, 0xc7, 0x51, 0x74, 0xb1, 0x64, 0x61, 0x05, 0x1c, 0x02, 0xda, 0xc0, 0x7b, 0xc8, 0x05, 0xf6, 0x88, 0x05, 0x5e, 0x9a, 0xdb, 0xf6, 0xc8, 0x67, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_441(ch_441, ch_441 + sizeof(ch_441) -1);
CDataStream stream_441(vch_441, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_441;
stream_441 >> txHist_441;

if(block.vtx[0]->GetHash() == txHist_441.GetHash() && nHeight == 1265563) {
return true;
}
unsigned char ch_442[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb3, 0x4e, 0x13, 0x04, 0x65, 0x97, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x2a, 0x66, 0x7f, 0x39, 0xb1, 0x78, 0xe7, 0x2e, 0x89, 0xbd, 0x7a, 0xed, 0xde, 0x72, 0xd2, 0x30, 0x4d, 0x1c, 0x6d, 0x33, 0x44, 0x7f, 0xa0, 0x7c, 0x67, 0xe3, 0x46, 0x22, 0x26, 0x8d, 0xec, 0x67, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xc5, 0x4c, 0xac, 0x06, 0xa8, 0xea, 0x94, 0xa7, 0xb4, 0xfa, 0x24, 0xd6, 0xac, 0x8a, 0xb9, 0x39, 0x0f, 0x6f, 0xb9, 0xfb, 0x51, 0xea, 0x3e, 0xbc, 0x7f, 0x8a, 0xbf, 0xf4, 0x92, 0x0b, 0xb1, 0x0a, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_442(ch_442, ch_442 + sizeof(ch_442) -1);
CDataStream stream_442(vch_442, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_442;
stream_442 >> txHist_442;

if(block.vtx[0]->GetHash() == txHist_442.GetHash() && nHeight == 1265331) {
return true;
}
unsigned char ch_443[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xba, 0x4f, 0x13, 0x04, 0xe8, 0xfe, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xfa, 0xc4, 0xc2, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x4c, 0x9a, 0x45, 0x63, 0x95, 0xa2, 0x94, 0xc8, 0x32, 0xe8, 0x85, 0x97, 0x01, 0xa8, 0xe2, 0xaa, 0x46, 0xc5, 0xea, 0x24, 0xfb, 0xbc, 0xd2, 0xba, 0x1a, 0x7f, 0x0c, 0x44, 0xa7, 0x60, 0xbf, 0x9c, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_443(ch_443, ch_443 + sizeof(ch_443) -1);
CDataStream stream_443(vch_443, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_443;
stream_443 >> txHist_443;

if(block.vtx[0]->GetHash() == txHist_443.GetHash() && nHeight == 1265594) {
return true;
}
unsigned char ch_444[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x99, 0x4f, 0x13, 0x04, 0x4f, 0xf1, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0xa2, 0x23, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x86, 0xd8, 0x18, 0xd7, 0x75, 0xfa, 0x70, 0x32, 0x52, 0x28, 0x3f, 0x08, 0x29, 0x3f, 0x24, 0x8a, 0x51, 0x2d, 0xe5, 0x51, 0xd5, 0x98, 0xef, 0xd8, 0xeb, 0x80, 0xdc, 0xda, 0x02, 0x0f, 0xa4, 0x48, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_444(ch_444, ch_444 + sizeof(ch_444) -1);
CDataStream stream_444(vch_444, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_444;
stream_444 >> txHist_444;

if(block.vtx[0]->GetHash() == txHist_444.GetHash() && nHeight == 1265561) {
return true;
}
unsigned char ch_445[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x25, 0x4f, 0x13, 0x04, 0xd4, 0xbd, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x09, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_445(ch_445, ch_445 + sizeof(ch_445) -1);
CDataStream stream_445(vch_445, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_445;
stream_445 >> txHist_445;

if(block.vtx[0]->GetHash() == txHist_445.GetHash() && nHeight == 1265445) {
return true;
}
unsigned char ch_446[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb8, 0x4f, 0x13, 0x04, 0xd8, 0xfd, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xff, 0x7b, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_446(ch_446, ch_446 + sizeof(ch_446) -1);
CDataStream stream_446(vch_446, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_446;
stream_446 >> txHist_446;

if(block.vtx[0]->GetHash() == txHist_446.GetHash() && nHeight == 1265592) {
return true;
}
unsigned char ch_447[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x97, 0x4f, 0x13, 0x04, 0xf7, 0xef, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x0d, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_447(ch_447, ch_447 + sizeof(ch_447) -1);
CDataStream stream_447(vch_447, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_447;
stream_447 >> txHist_447;

if(block.vtx[0]->GetHash() == txHist_447.GetHash() && nHeight == 1265559) {
return true;
}
unsigned char ch_448[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x94, 0x4f, 0x13, 0x04, 0x2e, 0xef, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5b, 0x77, 0x8f, 0x73, 0xa1, 0x17, 0x45, 0xa5, 0xc1, 0x90, 0xd1, 0xd3, 0x0d, 0x99, 0xef, 0x5d, 0x23, 0xd3, 0x6d, 0xc1, 0x33, 0x37, 0x9d, 0xa4, 0xd7, 0x1a, 0x72, 0xa0, 0x1a, 0x4b, 0x79, 0x89, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_448(ch_448, ch_448 + sizeof(ch_448) -1);
CDataStream stream_448(vch_448, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_448;
stream_448 >> txHist_448;

if(block.vtx[0]->GetHash() == txHist_448.GetHash() && nHeight == 1265556) {
return true;
}
unsigned char ch_449[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x91, 0x4f, 0x13, 0x04, 0x8e, 0xee, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x02, 0xe0, 0x2d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x0e, 0x94, 0x4b, 0x0a, 0x2f, 0x6e, 0xe2, 0x30, 0x34, 0xde, 0x34, 0xf4, 0x4c, 0x9e, 0x77, 0x67, 0xd4, 0xf9, 0x98, 0x4b, 0xf7, 0x7a, 0xb0, 0x50, 0x80, 0xd8, 0xf1, 0xa9, 0x8b, 0x4f, 0x90, 0x2b, 0xb0, 0xf4, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_449(ch_449, ch_449 + sizeof(ch_449) -1);
CDataStream stream_449(vch_449, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_449;
stream_449 >> txHist_449;

if(block.vtx[0]->GetHash() == txHist_449.GetHash() && nHeight == 1265553) {
return true;
}
unsigned char ch_450[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x8b, 0x4f, 0x13, 0x04, 0x1a, 0xec, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x16, 0x82, 0x11, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x66, 0xff, 0x13, 0x24, 0x98, 0x57, 0xc9, 0x27, 0x98, 0x7a, 0x98, 0x8c, 0xe0, 0xaf, 0xab, 0xaa, 0x6b, 0xfb, 0x78, 0x24, 0x3e, 0x56, 0x88, 0xb0, 0xde, 0xf4, 0x0a, 0x13, 0x4e, 0x9a, 0xfb, 0xc0, 0xc0, 0xe3, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_450(ch_450, ch_450 + sizeof(ch_450) -1);
CDataStream stream_450(vch_450, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_450;
stream_450 >> txHist_450;

if(block.vtx[0]->GetHash() == txHist_450.GetHash() && nHeight == 1265547) {
return true;
}
unsigned char ch_451[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x88, 0x4f, 0x13, 0x04, 0x46, 0xeb, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfd, 0x1a, 0x2b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x98, 0xa5, 0x8a, 0x0c, 0x50, 0x59, 0x6d, 0xdd, 0xa0, 0x74, 0x12, 0x65, 0xc9, 0x12, 0x78, 0x8f, 0x59, 0x1b, 0xd7, 0x27, 0x89, 0x04, 0x51, 0xc2, 0xc6, 0x02, 0xc4, 0x9d, 0x54, 0x9a, 0xdb, 0xfb, 0xb0, 0xf4, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_451(ch_451, ch_451 + sizeof(ch_451) -1);
CDataStream stream_451(vch_451, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_451;
stream_451 >> txHist_451;

if(block.vtx[0]->GetHash() == txHist_451.GetHash() && nHeight == 1265544) {
return true;
}
unsigned char ch_452[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x85, 0x4f, 0x13, 0x04, 0xd9, 0xea, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfa, 0xc2, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_452(ch_452, ch_452 + sizeof(ch_452) -1);
CDataStream stream_452(vch_452, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_452;
stream_452 >> txHist_452;

if(block.vtx[0]->GetHash() == txHist_452.GetHash() && nHeight == 1265541) {
return true;
}
unsigned char ch_453[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa2, 0x4f, 0x13, 0x04, 0x37, 0xf5, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0x23, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_453(ch_453, ch_453 + sizeof(ch_453) -1);
CDataStream stream_453(vch_453, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_453;
stream_453 >> txHist_453;

if(block.vtx[0]->GetHash() == txHist_453.GetHash() && nHeight == 1265570) {
return true;
}
unsigned char ch_454[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa1, 0x4f, 0x13, 0x04, 0x0f, 0xf5, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xf0, 0x81, 0x16, 0x39, 0x51, 0xe6, 0xff, 0xf2, 0x3a, 0x59, 0xd8, 0x9d, 0x60, 0xc1, 0xb0, 0x00, 0x06, 0x5c, 0x91, 0xce, 0x4f, 0x79, 0xf4, 0xc0, 0xc6, 0x0a, 0x4e, 0x3e, 0xd9, 0x5f, 0x4e, 0x6c, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_454(ch_454, ch_454 + sizeof(ch_454) -1);
CDataStream stream_454(vch_454, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_454;
stream_454 >> txHist_454;

if(block.vtx[0]->GetHash() == txHist_454.GetHash() && nHeight == 1265569) {
return true;
}
unsigned char ch_455[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa0, 0x4f, 0x13, 0x04, 0xf8, 0xf4, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x16, 0x82, 0xb3, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xdf, 0x1f, 0x4d, 0xaa, 0x5c, 0x0c, 0x3e, 0x03, 0x13, 0x6b, 0xb1, 0x76, 0xa1, 0x5b, 0x25, 0xd3, 0x0f, 0x5f, 0x71, 0x84, 0x22, 0x4a, 0xdb, 0x6c, 0x31, 0xf4, 0x1f, 0x65, 0xe0, 0x2a, 0xb4, 0xed, 0x00, 0x10, 0xf9, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_455(ch_455, ch_455 + sizeof(ch_455) -1);
CDataStream stream_455(vch_455, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_455;
stream_455 >> txHist_455;

if(block.vtx[0]->GetHash() == txHist_455.GetHash() && nHeight == 1265568) {
return true;
}
unsigned char ch_456[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9f, 0x4f, 0x13, 0x04, 0xfa, 0xf3, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7b, 0x3c, 0xec, 0x5c, 0x74, 0xc9, 0x00, 0x2c, 0x75, 0x97, 0xa5, 0x1c, 0x97, 0x83, 0x8b, 0x6c, 0x57, 0x53, 0x3a, 0x82, 0xc1, 0x83, 0xb1, 0xde, 0x94, 0xb5, 0xcb, 0x40, 0xba, 0x67, 0x11, 0xa9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xc1, 0xbf, 0xe5, 0xed, 0x75, 0x00, 0x3b, 0xc4, 0x94, 0x3c, 0xe6, 0x8c, 0xb0, 0x7e, 0x6b, 0x37, 0x07, 0x45, 0x5f, 0x0e, 0x09, 0x4a, 0xbd, 0xf2, 0xf3, 0xc5, 0x16, 0xd2, 0x69, 0xbd, 0xd9, 0x52, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_456(ch_456, ch_456 + sizeof(ch_456) -1);
CDataStream stream_456(vch_456, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_456;
stream_456 >> txHist_456;

if(block.vtx[0]->GetHash() == txHist_456.GetHash() && nHeight == 1265567) {
return true;
}
unsigned char ch_457[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9e, 0x4f, 0x13, 0x04, 0xa1, 0xf3, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x45, 0x52, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x04, 0x88, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x87, 0x56, 0x61, 0xe5, 0xc4, 0xd3, 0x04, 0x5f, 0x47, 0x9a, 0xe3, 0xc0, 0x31, 0x3f, 0xa1, 0x0e, 0x13, 0xb7, 0x1a, 0x79, 0x1c, 0xd7, 0xf9, 0x0f, 0x27, 0x78, 0x6e, 0xbd, 0xa4, 0x0c, 0xcc, 0x0d, 0x14, 0x19, 0xf5, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x96, 0x5f, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xee, 0xdd, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_457(ch_457, ch_457 + sizeof(ch_457) -1);
CDataStream stream_457(vch_457, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_457;
stream_457 >> txHist_457;

if(block.vtx[0]->GetHash() == txHist_457.GetHash() && nHeight == 1265566) {
return true;
}
unsigned char ch_458[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9d, 0x4f, 0x13, 0x04, 0xe2, 0xf2, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x91, 0xd2, 0x33, 0xc4, 0x97, 0x8f, 0xb3, 0x5e, 0x36, 0xd7, 0x7a, 0x59, 0x15, 0xf4, 0xd6, 0xd0, 0x3c, 0x4a, 0x01, 0xa8, 0xd0, 0xce, 0x27, 0x59, 0x58, 0x87, 0x3a, 0xc8, 0xaa, 0x42, 0x6a, 0x3f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x1a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x9a, 0xff, 0xb1, 0xa2, 0x45, 0xc4, 0x19, 0x5d, 0x9a, 0xcc, 0xb7, 0x4e, 0x47, 0x9d, 0xa8, 0x38, 0x2c, 0x2b, 0xf2, 0x35, 0xfa, 0x6f, 0x76, 0x0f, 0x6e, 0xce, 0x69, 0x06, 0xfd, 0x47, 0xdc, 0xbf, 0x58, 0x6f, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_458(ch_458, ch_458 + sizeof(ch_458) -1);
CDataStream stream_458(vch_458, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_458;
stream_458 >> txHist_458;

if(block.vtx[0]->GetHash() == txHist_458.GetHash() && nHeight == 1265565) {
return true;
}
unsigned char ch_459[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x9c, 0x4f, 0x13, 0x04, 0x88, 0xf2, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfa, 0xc2, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_459(ch_459, ch_459 + sizeof(ch_459) -1);
CDataStream stream_459(vch_459, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_459;
stream_459 >> txHist_459;

if(block.vtx[0]->GetHash() == txHist_459.GetHash() && nHeight == 1265564) {
return true;
}
unsigned char ch_460[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x9a, 0x4f, 0x13, 0x04, 0x5c, 0xf1, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_460(ch_460, ch_460 + sizeof(ch_460) -1);
CDataStream stream_460(vch_460, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_460;
stream_460 >> txHist_460;

if(block.vtx[0]->GetHash() == txHist_460.GetHash() && nHeight == 1265562) {
return true;
}
unsigned char ch_461[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x98, 0x4f, 0x13, 0x04, 0xfb, 0xef, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_461(ch_461, ch_461 + sizeof(ch_461) -1);
CDataStream stream_461(vch_461, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_461;
stream_461 >> txHist_461;

if(block.vtx[0]->GetHash() == txHist_461.GetHash() && nHeight == 1265560) {
return true;
}
unsigned char ch_462[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xfa, 0x4e, 0x13, 0x04, 0x4d, 0xb0, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb1, 0xb1, 0x32, 0x30, 0x32, 0xaa, 0xb7, 0x05, 0xce, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x6a, 0x14, 0xf3, 0xe5, 0x60, 0x65, 0x19, 0xb1, 0xa8, 0x84, 0xc3, 0x76, 0x28, 0xa8, 0xe3, 0xdd, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x04, 0x95, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x66, 0x91, 0xbe, 0x84, 0x10, 0xd2, 0xba, 0xc1, 0x5c, 0xe7, 0xf9, 0x25, 0xb1, 0x53, 0x82, 0x40, 0xc4, 0x14, 0xab, 0xa1, 0x34, 0xdd, 0xe3, 0xa8, 0x28, 0x76, 0xc3, 0x84, 0xa8, 0xb1, 0x19, 0x65, 0x60, 0xe5, 0xf3, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x50, 0x5c, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0x90, 0xcd, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_462(ch_462, ch_462 + sizeof(ch_462) -1);
CDataStream stream_462(vch_462, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_462;
stream_462 >> txHist_462;

if(block.vtx[0]->GetHash() == txHist_462.GetHash() && nHeight == 1265402) {
return true;
}
unsigned char ch_463[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x92, 0x4f, 0x13, 0x04, 0x91, 0xee, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_463(ch_463, ch_463 + sizeof(ch_463) -1);
CDataStream stream_463(vch_463, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_463;
stream_463 >> txHist_463;

if(block.vtx[0]->GetHash() == txHist_463.GetHash() && nHeight == 1265554) {
return true;
}
unsigned char ch_464[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf4, 0x4e, 0x13, 0x04, 0xf0, 0xad, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe1, 0x70, 0x04, 0x15, 0x32, 0x38, 0xb7, 0x00, 0x0f, 0xb9, 0x00, 0x4e, 0xe9, 0xe2, 0x5d, 0xfd, 0x1e, 0x5e, 0x71, 0x88, 0xe7, 0x9f, 0x05, 0x84, 0x36, 0x95, 0xae, 0x11, 0xf4, 0x1e, 0xa9, 0x15, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xb7, 0xea, 0x06, 0xb7, 0x96, 0x47, 0x3f, 0x59, 0x02, 0xd5, 0x1a, 0x25, 0x85, 0x9e, 0xd2, 0x41, 0xd7, 0x0b, 0x1a, 0x98, 0x1d, 0x42, 0xf8, 0x04, 0xe6, 0x0b, 0xa0, 0x26, 0xb8, 0x64, 0x4f, 0xed, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_464(ch_464, ch_464 + sizeof(ch_464) -1);
CDataStream stream_464(vch_464, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_464;
stream_464 >> txHist_464;

if(block.vtx[0]->GetHash() == txHist_464.GetHash() && nHeight == 1265396) {
return true;
}
unsigned char ch_465[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x83, 0x4f, 0x13, 0x04, 0xb4, 0xe7, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_465(ch_465, ch_465 + sizeof(ch_465) -1);
CDataStream stream_465(vch_465, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_465;
stream_465 >> txHist_465;

if(block.vtx[0]->GetHash() == txHist_465.GetHash() && nHeight == 1265539) {
return true;
}
unsigned char ch_466[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd0, 0x4e, 0x13, 0x04, 0x5f, 0xa0, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7f, 0xb5, 0x83, 0x3d, 0x0b, 0xfe, 0x2b, 0xa0, 0x3e, 0xdb, 0xc9, 0x60, 0x1e, 0x92, 0x91, 0x25, 0x1f, 0x07, 0x8e, 0x88, 0xdc, 0xa9, 0xa7, 0x10, 0x9f, 0x3b, 0xf5, 0xd4, 0x7b, 0x48, 0xed, 0xf1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_466(ch_466, ch_466 + sizeof(ch_466) -1);
CDataStream stream_466(vch_466, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_466;
stream_466 >> txHist_466;

if(block.vtx[0]->GetHash() == txHist_466.GetHash() && nHeight == 1265360) {
return true;
}
unsigned char ch_467[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x43, 0x4f, 0x13, 0x04, 0xfe, 0xc8, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xdc, 0x21, 0xff, 0xe4, 0x7c, 0x17, 0xcf, 0xb5, 0xc9, 0x54, 0x36, 0x6c, 0xc1, 0x3f, 0xd2, 0x97, 0x81, 0x73, 0x6a, 0x84, 0x43, 0xa8, 0x6e, 0x29, 0x59, 0x93, 0xfb, 0xf0, 0xc0, 0x1b, 0x83, 0xc1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_467(ch_467, ch_467 + sizeof(ch_467) -1);
CDataStream stream_467(vch_467, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_467;
stream_467 >> txHist_467;

if(block.vtx[0]->GetHash() == txHist_467.GetHash() && nHeight == 1265475) {
return true;
}
unsigned char ch_468[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x02, 0x4f, 0x13, 0x04, 0x01, 0xb3, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa9, 0x23, 0x6a, 0x1c, 0xc1, 0xf6, 0x3c, 0x56, 0xc2, 0x6f, 0x37, 0x00, 0x7a, 0x91, 0xe1, 0xe2, 0x42, 0x31, 0x9c, 0xe1, 0x78, 0xbb, 0x66, 0xb1, 0x61, 0x19, 0x61, 0x44, 0x95, 0x63, 0x7a, 0x49, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_468(ch_468, ch_468 + sizeof(ch_468) -1);
CDataStream stream_468(vch_468, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_468;
stream_468 >> txHist_468;

if(block.vtx[0]->GetHash() == txHist_468.GetHash() && nHeight == 1265410) {
return true;
}
unsigned char ch_469[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xfc, 0x4e, 0x13, 0x04, 0x95, 0xb0, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_469(ch_469, ch_469 + sizeof(ch_469) -1);
CDataStream stream_469(vch_469, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_469;
stream_469 >> txHist_469;

if(block.vtx[0]->GetHash() == txHist_469.GetHash() && nHeight == 1265404) {
return true;
}
unsigned char ch_470[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xea, 0x4e, 0x13, 0x04, 0xdc, 0xab, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xff, 0xc1, 0x28, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xdf, 0xa5, 0x70, 0xfd, 0x31, 0x65, 0x8b, 0x32, 0x17, 0xdd, 0x89, 0x0a, 0xae, 0x56, 0x3c, 0x37, 0xaa, 0xf4, 0xa2, 0xe7, 0x5a, 0x3c, 0x3f, 0xe3, 0x43, 0x19, 0x31, 0x82, 0xb4, 0xc8, 0x21, 0x58, 0xc0, 0x22, 0x63, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_470(ch_470, ch_470 + sizeof(ch_470) -1);
CDataStream stream_470(vch_470, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_470;
stream_470 >> txHist_470;

if(block.vtx[0]->GetHash() == txHist_470.GetHash() && nHeight == 1265386) {
return true;
}
unsigned char ch_471[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xe4, 0x4e, 0x13, 0x04, 0xe2, 0xa7, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x05, 0x12, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe1, 0x82, 0x30, 0xb4, 0xa1, 0xf9, 0x2a, 0xaa, 0x89, 0xaa, 0x37, 0xc8, 0x18, 0x99, 0xc1, 0xac, 0xe2, 0x9d, 0xe6, 0xf6, 0xfd, 0x07, 0x56, 0x4d, 0xb9, 0x26, 0x0e, 0xf4, 0x27, 0x75, 0x58, 0x13, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_471(ch_471, ch_471 + sizeof(ch_471) -1);
CDataStream stream_471(vch_471, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_471;
stream_471 >> txHist_471;

if(block.vtx[0]->GetHash() == txHist_471.GetHash() && nHeight == 1265380) {
return true;
}
unsigned char ch_472[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x7a, 0x4f, 0x13, 0x04, 0x1f, 0xe5, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0x57, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_472(ch_472, ch_472 + sizeof(ch_472) -1);
CDataStream stream_472(vch_472, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_472;
stream_472 >> txHist_472;

if(block.vtx[0]->GetHash() == txHist_472.GetHash() && nHeight == 1265530) {
return true;
}
unsigned char ch_473[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xde, 0x4e, 0x13, 0x04, 0x61, 0xa5, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xee, 0x60, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_473(ch_473, ch_473 + sizeof(ch_473) -1);
CDataStream stream_473(vch_473, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_473;
stream_473 >> txHist_473;

if(block.vtx[0]->GetHash() == txHist_473.GetHash() && nHeight == 1265374) {
return true;
}
unsigned char ch_474[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd8, 0x4e, 0x13, 0x04, 0xdc, 0xa3, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0xe9, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_474(ch_474, ch_474 + sizeof(ch_474) -1);
CDataStream stream_474(vch_474, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_474;
stream_474 >> txHist_474;

if(block.vtx[0]->GetHash() == txHist_474.GetHash() && nHeight == 1265368) {
return true;
}
unsigned char ch_475[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd2, 0x4e, 0x13, 0x04, 0x15, 0xa1, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x88, 0xf6, 0x21, 0xea, 0x54, 0x2a, 0x87, 0x0b, 0xa5, 0x9c, 0x52, 0x28, 0x6c, 0x54, 0x3d, 0xb8, 0xc5, 0x65, 0x4e, 0x9e, 0x0a, 0x87, 0x68, 0xdd, 0xf0, 0xb7, 0xc9, 0xd1, 0x0a, 0xb8, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xea, 0x54, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd8, 0x55, 0x85, 0x52, 0x8e, 0x04, 0x69, 0xb3, 0x87, 0x73, 0x7d, 0xbc, 0x15, 0x13, 0xe7, 0x55, 0x3c, 0x50, 0x91, 0x08, 0x55, 0x0e, 0x11, 0x19, 0x1a, 0x30, 0xa6, 0x8e, 0x3d, 0xb6, 0x1a, 0x8d, 0x78, 0x82, 0x06, 0x29, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x1e, 0xf3, 0xd7, 0x98, 0xf9, 0x7d, 0xba, 0x18, 0x33, 0x23, 0x83, 0xea, 0x65, 0x40, 0x27, 0xbe, 0xc4, 0x62, 0x86, 0x96, 0x88, 0xac, 0x48, 0x10, 0x5b, 0xb1, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xca, 0xe3, 0x39, 0xe2, 0x4f, 0x6d, 0x60, 0x98, 0xec, 0xbe, 0x73, 0x11, 0x00, 0x3d, 0xd4, 0xf8, 0x02, 0x05, 0x8b, 0x9d, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_475(ch_475, ch_475 + sizeof(ch_475) -1);
CDataStream stream_475(vch_475, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_475;
stream_475 >> txHist_475;

if(block.vtx[0]->GetHash() == txHist_475.GetHash() && nHeight == 1265362) {
return true;
}
unsigned char ch_476[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x73, 0x4f, 0x13, 0x04, 0xf7, 0xe0, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x09, 0xc4, 0x5f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa5, 0x7c, 0xc7, 0x42, 0x92, 0x3d, 0x37, 0x6e, 0xc7, 0xd1, 0xbf, 0xff, 0x23, 0x55, 0x7a, 0x58, 0xea, 0xdf, 0x99, 0xec, 0x40, 0x93, 0x82, 0x1a, 0x91, 0xff, 0xbe, 0x00, 0xbc, 0x63, 0x19, 0x22, 0x78, 0xa6, 0x68, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_476(ch_476, ch_476 + sizeof(ch_476) -1);
CDataStream stream_476(vch_476, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_476;
stream_476 >> txHist_476;

if(block.vtx[0]->GetHash() == txHist_476.GetHash() && nHeight == 1265523) {
return true;
}
unsigned char ch_477[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x6b, 0x4f, 0x13, 0x04, 0x71, 0xdd, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x09, 0xc4, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_477(ch_477, ch_477 + sizeof(ch_477) -1);
CDataStream stream_477(vch_477, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_477;
stream_477 >> txHist_477;

if(block.vtx[0]->GetHash() == txHist_477.GetHash() && nHeight == 1265515) {
return true;
}
unsigned char ch_478[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x23, 0x4f, 0x13, 0x04, 0x30, 0xbd, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0x8a, 0x13, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd1, 0x2c, 0x04, 0xce, 0x09, 0x32, 0x31, 0x73, 0xd1, 0xb0, 0xa2, 0x9b, 0x0c, 0x77, 0xd4, 0xb7, 0x7d, 0x6c, 0x0e, 0xe2, 0x0f, 0x0d, 0x18, 0x7b, 0x40, 0xd6, 0x2b, 0x92, 0xfd, 0xba, 0xa1, 0xba, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_478(ch_478, ch_478 + sizeof(ch_478) -1);
CDataStream stream_478(vch_478, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_478;
stream_478 >> txHist_478;

if(block.vtx[0]->GetHash() == txHist_478.GetHash() && nHeight == 1265443) {
return true;
}
unsigned char ch_479[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x7f, 0x4f, 0x13, 0x04, 0x5a, 0xe7, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x41, 0xa2, 0xa3, 0x3c, 0x47, 0x67, 0x9a, 0xd4, 0x11, 0x4a, 0xf1, 0x04, 0x1a, 0x4b, 0x47, 0x9d, 0x01, 0xd5, 0xa2, 0xb0, 0xca, 0x05, 0x73, 0x95, 0x00, 0xdc, 0xbf, 0xa1, 0xdd, 0x59, 0xec, 0xba, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x3e, 0xa9, 0x5c, 0x7b, 0x66, 0x5d, 0x8a, 0x6e, 0x28, 0xab, 0x09, 0x6a, 0x9e, 0x4b, 0xde, 0x29, 0x59, 0x12, 0x76, 0x2f, 0x26, 0x5c, 0x47, 0x52, 0x36, 0xf6, 0x7a, 0x91, 0x5a, 0x13, 0x6c, 0x69, 0x58, 0x6f, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_479(ch_479, ch_479 + sizeof(ch_479) -1);
CDataStream stream_479(vch_479, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_479;
stream_479 >> txHist_479;

if(block.vtx[0]->GetHash() == txHist_479.GetHash() && nHeight == 1265535) {
return true;
}
unsigned char ch_480[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x74, 0x4f, 0x13, 0x04, 0x8c, 0xe2, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x05, 0x20, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd8, 0xad, 0x06, 0x9b, 0xe1, 0xb1, 0x64, 0x5b, 0xdb, 0xdb, 0x3c, 0xb2, 0x33, 0xf4, 0x78, 0x5b, 0x15, 0x01, 0x17, 0x86, 0xc2, 0x7f, 0xbb, 0xa9, 0xc5, 0x87, 0x39, 0xb8, 0x6f, 0xb7, 0x9c, 0x6f, 0x50, 0x94, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_480(ch_480, ch_480 + sizeof(ch_480) -1);
CDataStream stream_480(vch_480, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_480;
stream_480 >> txHist_480;

if(block.vtx[0]->GetHash() == txHist_480.GetHash() && nHeight == 1265524) {
return true;
}
unsigned char ch_481[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x70, 0x4f, 0x13, 0x04, 0x03, 0xe0, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0x7b, 0x07, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x2d, 0xd6, 0x40, 0x87, 0xcf, 0x84, 0xa1, 0xa0, 0x54, 0xdd, 0x4b, 0xfd, 0xfb, 0x9f, 0x8c, 0x6d, 0xd4, 0x6a, 0xd6, 0x9d, 0x06, 0xb5, 0xd9, 0x79, 0xb8, 0xfc, 0xe2, 0xdc, 0x97, 0x53, 0xe3, 0xff, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_481(ch_481, ch_481 + sizeof(ch_481) -1);
CDataStream stream_481(vch_481, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_481;
stream_481 >> txHist_481;

if(block.vtx[0]->GetHash() == txHist_481.GetHash() && nHeight == 1265520) {
return true;
}
unsigned char ch_482[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x68, 0x4f, 0x13, 0x04, 0x19, 0xda, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0x1e, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x6f, 0x61, 0x40, 0x5f, 0x8e, 0x7d, 0xbe, 0x71, 0x90, 0x6a, 0x05, 0x75, 0x9f, 0x39, 0x1e, 0xc4, 0xef, 0xf6, 0xa7, 0x63, 0x2c, 0x70, 0x80, 0x1f, 0x77, 0x7e, 0x8d, 0x3b, 0xeb, 0x5c, 0xb1, 0x86, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_482(ch_482, ch_482 + sizeof(ch_482) -1);
CDataStream stream_482(vch_482, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_482;
stream_482 >> txHist_482;

if(block.vtx[0]->GetHash() == txHist_482.GetHash() && nHeight == 1265512) {
return true;
}
unsigned char ch_483[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x67, 0x4f, 0x13, 0x04, 0x06, 0xda, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x09, 0xc4, 0x11, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_483(ch_483, ch_483 + sizeof(ch_483) -1);
CDataStream stream_483(vch_483, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_483;
stream_483 >> txHist_483;

if(block.vtx[0]->GetHash() == txHist_483.GetHash() && nHeight == 1265511) {
return true;
}
unsigned char ch_484[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x63, 0x4f, 0x13, 0x04, 0x29, 0xd8, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x5e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x27, 0x32, 0xfd, 0x86, 0xed, 0xc5, 0xd8, 0xe4, 0x84, 0x93, 0x6d, 0x3f, 0xb1, 0xbf, 0xcd, 0x82, 0x1f, 0x76, 0xf4, 0xc7, 0xda, 0x64, 0xc4, 0xce, 0x05, 0xc0, 0xe2, 0x3c, 0x43, 0x40, 0xab, 0x0c, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_484(ch_484, ch_484 + sizeof(ch_484) -1);
CDataStream stream_484(vch_484, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_484;
stream_484 >> txHist_484;

if(block.vtx[0]->GetHash() == txHist_484.GetHash() && nHeight == 1265507) {
return true;
}
unsigned char ch_485[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x60, 0x4f, 0x13, 0x04, 0x7e, 0xd7, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x14, 0x14, 0x67, 0xc0, 0xed, 0xff, 0x09, 0xdf, 0x4e, 0x58, 0x5e, 0x7a, 0x7e, 0x56, 0xba, 0x50, 0x97, 0xe6, 0x99, 0x4b, 0x0e, 0x61, 0xea, 0x46, 0x38, 0xc3, 0x88, 0xa5, 0xcc, 0x1d, 0xfb, 0xb7, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0x18, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x2e, 0x12, 0xd0, 0x5a, 0x1d, 0xa9, 0xe5, 0xab, 0x0a, 0x5f, 0x3b, 0x32, 0x8f, 0x3e, 0xe7, 0x46, 0x22, 0x27, 0x5c, 0x9b, 0x91, 0x31, 0x7a, 0x72, 0x50, 0x8a, 0xef, 0xa6, 0xda, 0x44, 0x9f, 0x13, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_485(ch_485, ch_485 + sizeof(ch_485) -1);
CDataStream stream_485(vch_485, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_485;
stream_485 >> txHist_485;

if(block.vtx[0]->GetHash() == txHist_485.GetHash() && nHeight == 1265504) {
return true;
}
unsigned char ch_486[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5f, 0x4f, 0x13, 0x04, 0x29, 0xd7, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x47, 0xa8, 0xa8, 0x45, 0xb0, 0xb5, 0x0a, 0xb0, 0xe1, 0x20, 0xc9, 0xd6, 0xde, 0x3a, 0x7b, 0x85, 0x3f, 0x10, 0x82, 0xd8, 0x7d, 0x41, 0xd2, 0x6f, 0x4b, 0xae, 0x89, 0x8f, 0x73, 0x5c, 0x5e, 0x87, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xc4, 0x77, 0xcb, 0xd0, 0xe0, 0x37, 0xc9, 0x1e, 0xcf, 0x6a, 0x70, 0x3f, 0x8d, 0x75, 0xdd, 0x90, 0xd6, 0x2a, 0x09, 0x07, 0x6b, 0x0a, 0x52, 0x7a, 0xd8, 0xe7, 0x96, 0x01, 0x43, 0x4d, 0x95, 0x5e, 0xf0, 0xb6, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_486(ch_486, ch_486 + sizeof(ch_486) -1);
CDataStream stream_486(vch_486, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_486;
stream_486 >> txHist_486;

if(block.vtx[0]->GetHash() == txHist_486.GetHash() && nHeight == 1265503) {
return true;
}
unsigned char ch_487[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x01, 0x4f, 0x13, 0x04, 0xcd, 0xb2, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xff, 0x4b, 0x0d, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x69, 0x88, 0xa9, 0x4d, 0xaf, 0x6a, 0xfb, 0x5f, 0x5f, 0xec, 0xf8, 0x86, 0x92, 0x1a, 0xad, 0x51, 0x40, 0x48, 0xd8, 0x18, 0xdc, 0x3d, 0xb3, 0x72, 0xf4, 0x23, 0x91, 0xc7, 0xf1, 0x50, 0x80, 0xc1, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_487(ch_487, ch_487 + sizeof(ch_487) -1);
CDataStream stream_487(vch_487, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_487;
stream_487 >> txHist_487;

if(block.vtx[0]->GetHash() == txHist_487.GetHash() && nHeight == 1265409) {
return true;
}
unsigned char ch_488[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xfb, 0x4e, 0x13, 0x04, 0x79, 0xb0, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x03, 0x3b, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_488(ch_488, ch_488 + sizeof(ch_488) -1);
CDataStream stream_488(vch_488, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_488;
stream_488 >> txHist_488;

if(block.vtx[0]->GetHash() == txHist_488.GetHash() && nHeight == 1265403) {
return true;
}
unsigned char ch_489[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x0f, 0x4f, 0x13, 0x04, 0x9d, 0xb6, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x69, 0xa3, 0xdf, 0x99, 0xa9, 0x3f, 0xfd, 0xde, 0xd1, 0x71, 0x3f, 0x1c, 0xf6, 0xe2, 0xed, 0xa9, 0x21, 0xaa, 0x24, 0x6a, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xea, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x60, 0x08, 0x04, 0x29, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x1e, 0xf3, 0xd7, 0x98, 0xf9, 0x7d, 0xba, 0x18, 0x33, 0x23, 0x83, 0xea, 0x65, 0x40, 0x27, 0xbe, 0xc4, 0x62, 0x86, 0x96, 0x88, 0xac, 0xa0, 0x06, 0x5b, 0xb1, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xca, 0xe3, 0x39, 0xe2, 0x4f, 0x6d, 0x60, 0x98, 0xec, 0xbe, 0x73, 0x11, 0x00, 0x3d, 0xd4, 0xf8, 0x02, 0x05, 0x8b, 0x9d, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_489(ch_489, ch_489 + sizeof(ch_489) -1);
CDataStream stream_489(vch_489, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_489;
stream_489 >> txHist_489;

if(block.vtx[0]->GetHash() == txHist_489.GetHash() && nHeight == 1265423) {
return true;
}
unsigned char ch_490[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5b, 0x4f, 0x13, 0x04, 0xe7, 0xd4, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe6, 0xe5, 0x6e, 0xc4, 0x4b, 0x80, 0x9f, 0x3c, 0xaf, 0x82, 0x94, 0x83, 0x3b, 0x64, 0x7c, 0x87, 0xbd, 0xd3, 0x7e, 0x47, 0xf2, 0x1b, 0x72, 0x66, 0x41, 0xc1, 0x5f, 0x3d, 0xb5, 0x36, 0x90, 0x15, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x7f, 0xc5, 0x30, 0xbf, 0x8c, 0xa7, 0xfe, 0xb7, 0xe7, 0x32, 0x73, 0x29, 0x31, 0x53, 0x04, 0x16, 0x04, 0x67, 0xb4, 0xf5, 0x3b, 0xd9, 0x59, 0xc1, 0x9b, 0x99, 0x1f, 0x11, 0xb0, 0xa6, 0x0a, 0x53, 0x58, 0x70, 0x64, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_490(ch_490, ch_490 + sizeof(ch_490) -1);
CDataStream stream_490(vch_490, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_490;
stream_490 >> txHist_490;

if(block.vtx[0]->GetHash() == txHist_490.GetHash() && nHeight == 1265499) {
return true;
}
unsigned char ch_491[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xef, 0x4e, 0x13, 0x04, 0x0c, 0xad, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x95, 0x33, 0x6e, 0xbe, 0x88, 0xbd, 0xd5, 0x7f, 0x7c, 0x1a, 0xa4, 0x74, 0xb2, 0x97, 0x2f, 0x02, 0x9a, 0x4b, 0xf3, 0xc3, 0x1d, 0x40, 0x4a, 0xb4, 0x4b, 0xc9, 0x97, 0xb8, 0xec, 0xda, 0x6f, 0xa4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_491(ch_491, ch_491 + sizeof(ch_491) -1);
CDataStream stream_491(vch_491, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_491;
stream_491 >> txHist_491;

if(block.vtx[0]->GetHash() == txHist_491.GetHash() && nHeight == 1265391) {
return true;
}
unsigned char ch_492[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x5a, 0x4f, 0x13, 0x04, 0xd2, 0xd2, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x1f, 0xfd, 0x05, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_492(ch_492, ch_492 + sizeof(ch_492) -1);
CDataStream stream_492(vch_492, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_492;
stream_492 >> txHist_492;

if(block.vtx[0]->GetHash() == txHist_492.GetHash() && nHeight == 1265498) {
return true;
}
unsigned char ch_493[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x09, 0x4f, 0x13, 0x04, 0x48, 0xb5, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x86, 0xf7, 0xf9, 0x9d, 0xbd, 0x51, 0xc2, 0xba, 0xd7, 0xbb, 0x52, 0x3d, 0x13, 0xd1, 0x1a, 0xd6, 0x24, 0xd6, 0x87, 0xb9, 0xf3, 0xdb, 0x84, 0x40, 0xfd, 0xe7, 0x96, 0x18, 0x30, 0x7f, 0x3d, 0xb2, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xab, 0xf7, 0xd1, 0xcb, 0x80, 0x32, 0x2b, 0xca, 0xdc, 0xd2, 0xda, 0x71, 0x4f, 0x21, 0x64, 0x9d, 0xa8, 0x86, 0x4f, 0xcc, 0x0f, 0xd4, 0xaf, 0x65, 0x3f, 0x04, 0x67, 0x08, 0x8a, 0x1d, 0x78, 0x08, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_493(ch_493, ch_493 + sizeof(ch_493) -1);
CDataStream stream_493(vch_493, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_493;
stream_493 >> txHist_493;

if(block.vtx[0]->GetHash() == txHist_493.GetHash() && nHeight == 1265417) {
return true;
}
unsigned char ch_494[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x58, 0x4f, 0x13, 0x04, 0x8a, 0xd2, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x39, 0xfd, 0xf1, 0x3c, 0x3e, 0x8c, 0xbe, 0xb0, 0x8b, 0xd7, 0x63, 0x01, 0xcd, 0xf0, 0x87, 0x14, 0xed, 0x21, 0xf1, 0xda, 0xc0, 0x77, 0x77, 0x94, 0x5a, 0xb6, 0x50, 0x00, 0xba, 0xc3, 0x07, 0x91, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_494(ch_494, ch_494 + sizeof(ch_494) -1);
CDataStream stream_494(vch_494, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_494;
stream_494 >> txHist_494;

if(block.vtx[0]->GetHash() == txHist_494.GetHash() && nHeight == 1265496) {
return true;
}
unsigned char ch_495[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x07, 0x4f, 0x13, 0x04, 0x37, 0xb3, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfd, 0x39, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_495(ch_495, ch_495 + sizeof(ch_495) -1);
CDataStream stream_495(vch_495, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_495;
stream_495 >> txHist_495;

if(block.vtx[0]->GetHash() == txHist_495.GetHash() && nHeight == 1265415) {
return true;
}
unsigned char ch_496[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xdd, 0x4e, 0x13, 0x04, 0x3e, 0xa5, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xee, 0x60, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x1a, 0x3b, 0x9d, 0x83, 0x4a, 0xc3, 0x29, 0x9e, 0x9d, 0xd5, 0x4b, 0xf1, 0x47, 0xb6, 0xb6, 0x44, 0x19, 0x14, 0xd5, 0xdc, 0xb7, 0xa3, 0xe8, 0x36, 0x84, 0xb6, 0x82, 0xbb, 0x13, 0x0e, 0x8d, 0x79, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_496(ch_496, ch_496 + sizeof(ch_496) -1);
CDataStream stream_496(vch_496, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_496;
stream_496 >> txHist_496;

if(block.vtx[0]->GetHash() == txHist_496.GetHash() && nHeight == 1265373) {
return true;
}
unsigned char ch_497[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x57, 0x4f, 0x13, 0x04, 0x71, 0xd2, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xf4, 0x34, 0xb9, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_497(ch_497, ch_497 + sizeof(ch_497) -1);
CDataStream stream_497(vch_497, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_497;
stream_497 >> txHist_497;

if(block.vtx[0]->GetHash() == txHist_497.GetHash() && nHeight == 1265495) {
return true;
}
unsigned char ch_498[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd7, 0x4e, 0x13, 0x04, 0xc4, 0xa3, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x11, 0xd4, 0x07, 0xe5, 0x3f, 0xc3, 0x61, 0x11, 0x39, 0x09, 0x23, 0x99, 0x57, 0xfc, 0x46, 0x05, 0x0e, 0x17, 0xcf, 0xae, 0x22, 0x02, 0x90, 0x89, 0x7d, 0x9c, 0x04, 0x57, 0x7d, 0x7b, 0x97, 0xea, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xff, 0x11, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_498(ch_498, ch_498 + sizeof(ch_498) -1);
CDataStream stream_498(vch_498, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_498;
stream_498 >> txHist_498;

if(block.vtx[0]->GetHash() == txHist_498.GetHash() && nHeight == 1265367) {
return true;
}
unsigned char ch_499[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x9b, 0x4e, 0x13, 0x04, 0x79, 0x8f, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xfa, 0xc4, 0x95, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x97, 0xf6, 0x3a, 0xae, 0xf4, 0x00, 0x4c, 0x65, 0xe7, 0xec, 0x2d, 0x40, 0x70, 0x57, 0x24, 0x63, 0xf5, 0x8c, 0x22, 0x07, 0x0c, 0x2f, 0x0f, 0xdf, 0xf9, 0x68, 0xfa, 0xd2, 0x7a, 0x9a, 0x7b, 0x34, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_499(ch_499, ch_499 + sizeof(ch_499) -1);
CDataStream stream_499(vch_499, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_499;
stream_499 >> txHist_499;

if(block.vtx[0]->GetHash() == txHist_499.GetHash() && nHeight == 1265307) {
return true;
}
unsigned char ch_500[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x56, 0x4f, 0x13, 0x04, 0x5f, 0xd2, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x33, 0x33, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x8d, 0x9a, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xe9, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x60, 0x08, 0x04, 0x29, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x1e, 0xf3, 0xd7, 0x98, 0xf9, 0x7d, 0xba, 0x18, 0x33, 0x23, 0x83, 0xea, 0x65, 0x40, 0x27, 0xbe, 0xc4, 0x62, 0x86, 0x96, 0x88, 0xac, 0xa0, 0x06, 0x5b, 0xb1, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xca, 0xe3, 0x39, 0xe2, 0x4f, 0x6d, 0x60, 0x98, 0xec, 0xbe, 0x73, 0x11, 0x00, 0x3d, 0xd4, 0xf8, 0x02, 0x05, 0x8b, 0x9d, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_500(ch_500, ch_500 + sizeof(ch_500) -1);
CDataStream stream_500(vch_500, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_500;
stream_500 >> txHist_500;

if(block.vtx[0]->GetHash() == txHist_500.GetHash() && nHeight == 1265494) {
return true;
}
unsigned char ch_501[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xfd, 0x4e, 0x13, 0x04, 0xd1, 0xb1, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xf4, 0x34, 0xb1, 0x1f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x54, 0x2e, 0x4b, 0x98, 0xac, 0x79, 0xaa, 0xd3, 0x40, 0xc8, 0x40, 0x2d, 0xd8, 0x29, 0xea, 0x57, 0x44, 0xbb, 0xe5, 0x65, 0x94, 0x72, 0xa3, 0xd1, 0x26, 0x84, 0x0c, 0x67, 0xc3, 0x69, 0xc2, 0xa9, 0x40, 0xd1, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_501(ch_501, ch_501 + sizeof(ch_501) -1);
CDataStream stream_501(vch_501, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_501;
stream_501 >> txHist_501;

if(block.vtx[0]->GetHash() == txHist_501.GetHash() && nHeight == 1265405) {
return true;
}
unsigned char ch_502[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x55, 0x4f, 0x13, 0x04, 0x5e, 0xd2, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x14, 0x07, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_502(ch_502, ch_502 + sizeof(ch_502) -1);
CDataStream stream_502(vch_502, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_502;
stream_502 >> txHist_502;

if(block.vtx[0]->GetHash() == txHist_502.GetHash() && nHeight == 1265493) {
return true;
}
unsigned char ch_503[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x8b, 0x4e, 0x13, 0x04, 0x3a, 0x88, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0d, 0x2d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_503(ch_503, ch_503 + sizeof(ch_503) -1);
CDataStream stream_503(vch_503, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_503;
stream_503 >> txHist_503;

if(block.vtx[0]->GetHash() == txHist_503.GetHash() && nHeight == 1265291) {
return true;
}
unsigned char ch_504[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x54, 0x4f, 0x13, 0x04, 0x48, 0xd2, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc2, 0xd8, 0x95, 0xfd, 0x96, 0xd5, 0x43, 0x3e, 0x1b, 0xe3, 0x09, 0xfb, 0x4d, 0x34, 0xbe, 0x04, 0xde, 0xdc, 0x72, 0x6a, 0x20, 0xeb, 0xd0, 0x83, 0x37, 0xed, 0x31, 0x85, 0x51, 0x54, 0xb2, 0xbd, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xff, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_504(ch_504, ch_504 + sizeof(ch_504) -1);
CDataStream stream_504(vch_504, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_504;
stream_504 >> txHist_504;

if(block.vtx[0]->GetHash() == txHist_504.GetHash() && nHeight == 1265492) {
return true;
}
unsigned char ch_505[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf1, 0x4e, 0x13, 0x04, 0x4f, 0xad, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfd, 0x1a, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd4, 0x0d, 0x5c, 0x06, 0xbe, 0x80, 0x51, 0xc9, 0xc7, 0x19, 0x6c, 0x6f, 0x03, 0xe1, 0xf9, 0x85, 0x32, 0xba, 0xee, 0x16, 0x55, 0xcf, 0x06, 0x06, 0xed, 0xfa, 0x53, 0xfe, 0x9b, 0x73, 0x8b, 0xad, 0xc8, 0x7a, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_505(ch_505, ch_505 + sizeof(ch_505) -1);
CDataStream stream_505(vch_505, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_505;
stream_505 >> txHist_505;

if(block.vtx[0]->GetHash() == txHist_505.GetHash() && nHeight == 1265393) {
return true;
}
unsigned char ch_506[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x83, 0x4e, 0x13, 0x04, 0xb9, 0x85, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xf4, 0x34, 0x39, 0x1e, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_506(ch_506, ch_506 + sizeof(ch_506) -1);
CDataStream stream_506(vch_506, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_506;
stream_506 >> txHist_506;

if(block.vtx[0]->GetHash() == txHist_506.GetHash() && nHeight == 1265283) {
return true;
}
unsigned char ch_507[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc2, 0x4e, 0x13, 0x04, 0x70, 0x9c, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfa, 0xc2, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_507(ch_507, ch_507 + sizeof(ch_507) -1);
CDataStream stream_507(vch_507, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_507;
stream_507 >> txHist_507;

if(block.vtx[0]->GetHash() == txHist_507.GetHash() && nHeight == 1265346) {
return true;
}
unsigned char ch_508[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x3b, 0x4f, 0x13, 0x04, 0xc6, 0xc4, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x05, 0x38, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_508(ch_508, ch_508 + sizeof(ch_508) -1);
CDataStream stream_508(vch_508, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_508;
stream_508 >> txHist_508;

if(block.vtx[0]->GetHash() == txHist_508.GetHash() && nHeight == 1265467) {
return true;
}
unsigned char ch_509[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x73, 0x4e, 0x13, 0x04, 0xd9, 0x7e, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xf2, 0xb8, 0x54, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_509(ch_509, ch_509 + sizeof(ch_509) -1);
CDataStream stream_509(vch_509, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_509;
stream_509 >> txHist_509;

if(block.vtx[0]->GetHash() == txHist_509.GetHash() && nHeight == 1265267) {
return true;
}
unsigned char ch_510[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xba, 0x4e, 0x13, 0x04, 0x70, 0x9a, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf9, 0x55, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_510(ch_510, ch_510 + sizeof(ch_510) -1);
CDataStream stream_510(vch_510, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_510;
stream_510 >> txHist_510;

if(block.vtx[0]->GetHash() == txHist_510.GetHash() && nHeight == 1265338) {
return true;
}
unsigned char ch_511[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x39, 0x4f, 0x13, 0x04, 0x47, 0xc4, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x08, 0x60, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xcf, 0x77, 0x97, 0xbd, 0x4b, 0x06, 0x8e, 0xfa, 0x89, 0xfb, 0x83, 0x64, 0xd7, 0x9c, 0x96, 0x98, 0x8d, 0x27, 0x30, 0x9d, 0x0a, 0xfd, 0xac, 0xc7, 0x7c, 0xf2, 0x14, 0x9f, 0x31, 0x9c, 0x8a, 0xf2, 0x10, 0x94, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_511(ch_511, ch_511 + sizeof(ch_511) -1);
CDataStream stream_511(vch_511, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_511;
stream_511 >> txHist_511;

if(block.vtx[0]->GetHash() == txHist_511.GetHash() && nHeight == 1265465) {
return true;
}
unsigned char ch_512[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xdf, 0x4e, 0x13, 0x04, 0xd3, 0xa5, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfa, 0xc2, 0x75, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_512(ch_512, ch_512 + sizeof(ch_512) -1);
CDataStream stream_512(vch_512, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_512;
stream_512 >> txHist_512;

if(block.vtx[0]->GetHash() == txHist_512.GetHash() && nHeight == 1265375) {
return true;
}
unsigned char ch_513[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb2, 0x4e, 0x13, 0x04, 0x3e, 0x97, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x48, 0x43, 0x58, 0x31, 0x53, 0x4c, 0x6f, 0x37, 0x4f, 0x41, 0x52, 0x36, 0x5a, 0x4a, 0x65, 0x71, 0x75, 0x4e, 0x67, 0x63, 0x6a, 0x4c, 0x36, 0x51, 0x7a, 0x65, 0x5a, 0x39, 0x59, 0x34, 0x6f, 0x66, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xeb, 0x89, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x61, 0xf2, 0xe6, 0x67, 0x4a, 0xde, 0xa8, 0x90, 0xd0, 0x26, 0x81, 0xf9, 0xa2, 0xe7, 0x60, 0x7a, 0x3c, 0x83, 0x28, 0x9a, 0x42, 0x5c, 0x3b, 0x1c, 0xc9, 0x51, 0x81, 0x24, 0x48, 0x25, 0x1c, 0x54, 0xf0, 0x54, 0x9a, 0x29, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x1e, 0xf3, 0xd7, 0x98, 0xf9, 0x7d, 0xba, 0x18, 0x33, 0x23, 0x83, 0xea, 0x65, 0x40, 0x27, 0xbe, 0xc4, 0x62, 0x86, 0x96, 0x88, 0xac, 0x90, 0x50, 0x5d, 0xb1, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xca, 0xe3, 0x39, 0xe2, 0x4f, 0x6d, 0x60, 0x98, 0xec, 0xbe, 0x73, 0x11, 0x00, 0x3d, 0xd4, 0xf8, 0x02, 0x05, 0x8b, 0x9d, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_513(ch_513, ch_513 + sizeof(ch_513) -1);
CDataStream stream_513(vch_513, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_513;
stream_513 >> txHist_513;

if(block.vtx[0]->GetHash() == txHist_513.GetHash() && nHeight == 1265330) {
return true;
}
unsigned char ch_514[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x37, 0x4f, 0x13, 0x04, 0x09, 0xc3, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0x0d, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_514(ch_514, ch_514 + sizeof(ch_514) -1);
CDataStream stream_514(vch_514, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_514;
stream_514 >> txHist_514;

if(block.vtx[0]->GetHash() == txHist_514.GetHash() && nHeight == 1265463) {
return true;
}
unsigned char ch_515[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd9, 0x4e, 0x13, 0x04, 0x1a, 0xa4, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfd, 0x1a, 0x37, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_515(ch_515, ch_515 + sizeof(ch_515) -1);
CDataStream stream_515(vch_515, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_515;
stream_515 >> txHist_515;

if(block.vtx[0]->GetHash() == txHist_515.GetHash() && nHeight == 1265369) {
return true;
}
unsigned char ch_516[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x63, 0x4e, 0x13, 0x04, 0x2a, 0x79, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_516(ch_516, ch_516 + sizeof(ch_516) -1);
CDataStream stream_516(vch_516, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_516;
stream_516 >> txHist_516;

if(block.vtx[0]->GetHash() == txHist_516.GetHash() && nHeight == 1265251) {
return true;
}
unsigned char ch_517[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd3, 0x4e, 0x13, 0x04, 0x28, 0xa1, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x03, 0xdc, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_517(ch_517, ch_517 + sizeof(ch_517) -1);
CDataStream stream_517(vch_517, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_517;
stream_517 >> txHist_517;

if(block.vtx[0]->GetHash() == txHist_517.GetHash() && nHeight == 1265363) {
return true;
}
unsigned char ch_518[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x5b, 0x4e, 0x13, 0x04, 0xde, 0x76, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x03, 0x3b, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd4, 0x9e, 0x28, 0xb7, 0x39, 0x97, 0x8a, 0x0e, 0xf1, 0xa4, 0x5e, 0xb5, 0x5d, 0x3d, 0x37, 0xa6, 0xcb, 0x43, 0xd8, 0x12, 0xe7, 0xf7, 0xa6, 0x09, 0x06, 0x94, 0xeb, 0xdf, 0x91, 0x40, 0x05, 0x08, 0xd0, 0x29, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_518(ch_518, ch_518 + sizeof(ch_518) -1);
CDataStream stream_518(vch_518, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_518;
stream_518 >> txHist_518;

if(block.vtx[0]->GetHash() == txHist_518.GetHash() && nHeight == 1265243) {
return true;
}
unsigned char ch_519[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa2, 0x4e, 0x13, 0x04, 0xee, 0x90, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x08, 0x53, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xba, 0xc9, 0xff, 0x4a, 0xa0, 0x71, 0x43, 0x2e, 0xa6, 0x3f, 0x66, 0xcb, 0xec, 0x47, 0xd9, 0x70, 0x07, 0xe5, 0xa9, 0x36, 0x3b, 0xdb, 0x75, 0x11, 0x25, 0xd4, 0x4f, 0x1b, 0x88, 0x44, 0x24, 0x45, 0xd0, 0x55, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_519(ch_519, ch_519 + sizeof(ch_519) -1);
CDataStream stream_519(vch_519, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_519;
stream_519 >> txHist_519;

if(block.vtx[0]->GetHash() == txHist_519.GetHash() && nHeight == 1265314) {
return true;
}
unsigned char ch_520[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x34, 0x4f, 0x13, 0x04, 0x19, 0xc2, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x0a, 0x4e, 0xf0, 0x8d, 0x3d, 0x55, 0xfc, 0x65, 0x22, 0x5e, 0x5c, 0x49, 0xc6, 0x4f, 0x69, 0x83, 0x68, 0x8f, 0x04, 0x07, 0xaa, 0x9c, 0x37, 0x6e, 0x09, 0x6a, 0x1c, 0xf6, 0xec, 0x98, 0x87, 0x92, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0x27, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_520(ch_520, ch_520 + sizeof(ch_520) -1);
CDataStream stream_520(vch_520, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_520;
stream_520 >> txHist_520;

if(block.vtx[0]->GetHash() == txHist_520.GetHash() && nHeight == 1265460) {
return true;
}
unsigned char ch_521[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xcd, 0x4e, 0x13, 0x04, 0x52, 0x9f, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x8e, 0x47, 0x3d, 0xfd, 0x37, 0x15, 0xa5, 0x92, 0xde, 0x5b, 0x23, 0x31, 0x2b, 0x72, 0x6e, 0xb2, 0x2f, 0xd3, 0xd8, 0xd5, 0xb1, 0x71, 0xcb, 0x04, 0xc9, 0x14, 0xc5, 0xd8, 0x5a, 0x00, 0x9e, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x9c, 0x6b, 0x2c, 0x50, 0xd6, 0xfc, 0xeb, 0x3c, 0x60, 0x41, 0xf4, 0xe5, 0xc6, 0x33, 0xd0, 0x73, 0x2e, 0xd0, 0xbb, 0x61, 0x8b, 0x2f, 0xa7, 0x91, 0xa1, 0x57, 0x93, 0xb0, 0x55, 0xca, 0x7e, 0xb6, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_521(ch_521, ch_521 + sizeof(ch_521) -1);
CDataStream stream_521(vch_521, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_521;
stream_521 >> txHist_521;

if(block.vtx[0]->GetHash() == txHist_521.GetHash() && nHeight == 1265357) {
return true;
}
unsigned char ch_522[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x4c, 0x4e, 0x13, 0x04, 0x8b, 0x71, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x08, 0x54, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x98, 0x6e, 0xf0, 0x39, 0xa2, 0xd7, 0x8c, 0x59, 0x9f, 0x43, 0xb2, 0xe8, 0xa6, 0xb7, 0x25, 0x14, 0x43, 0x4d, 0x02, 0x52, 0xc3, 0xa7, 0x01, 0xd2, 0x28, 0xca, 0xd7, 0x1e, 0x5c, 0x67, 0x39, 0xa7, 0x30, 0x33, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_522(ch_522, ch_522 + sizeof(ch_522) -1);
CDataStream stream_522(vch_522, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_522;
stream_522 >> txHist_522;

if(block.vtx[0]->GetHash() == txHist_522.GetHash() && nHeight == 1265228) {
return true;
}
unsigned char ch_523[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x33, 0x4f, 0x13, 0x04, 0xfc, 0xc1, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0x47, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x99, 0x5c, 0x3e, 0x9d, 0x0a, 0xbe, 0xc9, 0xec, 0x4f, 0x79, 0x52, 0xb2, 0x67, 0x5b, 0xab, 0x9b, 0xbb, 0x84, 0x9f, 0x7a, 0x65, 0xf2, 0xa0, 0xc0, 0x0e, 0x3f, 0xfd, 0x36, 0xb0, 0xf5, 0x5f, 0x21, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_523(ch_523, ch_523 + sizeof(ch_523) -1);
CDataStream stream_523(vch_523, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_523;
stream_523 >> txHist_523;

if(block.vtx[0]->GetHash() == txHist_523.GetHash() && nHeight == 1265459) {
return true;
}
unsigned char ch_524[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x32, 0x4f, 0x13, 0x04, 0xf2, 0xc1, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe9, 0xc4, 0x88, 0x89, 0xf6, 0x6e, 0xd7, 0x79, 0x42, 0xa3, 0x90, 0x54, 0x48, 0x72, 0x0e, 0xcc, 0x2f, 0xf2, 0x20, 0x36, 0x03, 0xd3, 0x2b, 0x43, 0x1e, 0xd5, 0x9a, 0x90, 0x52, 0xa1, 0x67, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_524(ch_524, ch_524 + sizeof(ch_524) -1);
CDataStream stream_524(vch_524, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_524;
stream_524 >> txHist_524;

if(block.vtx[0]->GetHash() == txHist_524.GetHash() && nHeight == 1265458) {
return true;
}
unsigned char ch_525[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x31, 0x4f, 0x13, 0x04, 0x9d, 0xc1, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0xa0, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x14, 0xf1, 0x11, 0xee, 0x8f, 0x1e, 0x25, 0xe0, 0x06, 0x48, 0xf7, 0x96, 0x3e, 0x21, 0xbd, 0x2b, 0x66, 0x72, 0x8c, 0xa3, 0x9b, 0xb2, 0x3c, 0x0b, 0x31, 0x59, 0x91, 0xc2, 0x03, 0x21, 0x17, 0x83, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_525(ch_525, ch_525 + sizeof(ch_525) -1);
CDataStream stream_525(vch_525, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_525;
stream_525 >> txHist_525;

if(block.vtx[0]->GetHash() == txHist_525.GetHash() && nHeight == 1265457) {
return true;
}
unsigned char ch_526[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x2e, 0x4f, 0x13, 0x04, 0x23, 0xc0, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xee, 0x60, 0x6b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xad, 0x46, 0x65, 0x0e, 0x0e, 0x69, 0xd3, 0x33, 0xe7, 0x27, 0xea, 0xa9, 0x39, 0x7e, 0xf6, 0x73, 0x7f, 0xad, 0x2a, 0x41, 0x76, 0x96, 0x4d, 0xe5, 0xf7, 0x4a, 0x4c, 0x78, 0xec, 0x8a, 0x1c, 0xbc, 0x98, 0x58, 0x69, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_526(ch_526, ch_526 + sizeof(ch_526) -1);
CDataStream stream_526(vch_526, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_526;
stream_526 >> txHist_526;

if(block.vtx[0]->GetHash() == txHist_526.GetHash() && nHeight == 1265454) {
return true;
}
unsigned char ch_527[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x2d, 0x4f, 0x13, 0x04, 0xaf, 0xbf, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x02, 0xe0, 0x53, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_527(ch_527, ch_527 + sizeof(ch_527) -1);
CDataStream stream_527(vch_527, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_527;
stream_527 >> txHist_527;

if(block.vtx[0]->GetHash() == txHist_527.GetHash() && nHeight == 1265453) {
return true;
}
unsigned char ch_528[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x28, 0x4f, 0x13, 0x04, 0xb5, 0xbe, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x3f, 0xd3, 0xc7, 0x5c, 0x45, 0xa9, 0xa5, 0x7b, 0xb4, 0x82, 0x0c, 0xc6, 0x42, 0x32, 0x09, 0xc5, 0x34, 0xd7, 0x66, 0x01, 0x6b, 0xd8, 0x18, 0x89, 0x64, 0x9a, 0xcc, 0xa5, 0x8a, 0xb7, 0xa9, 0x23, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_528(ch_528, ch_528 + sizeof(ch_528) -1);
CDataStream stream_528(vch_528, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_528;
stream_528 >> txHist_528;

if(block.vtx[0]->GetHash() == txHist_528.GetHash() && nHeight == 1265448) {
return true;
}
unsigned char ch_529[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb5, 0x4e, 0x13, 0x04, 0x2d, 0x98, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0x18, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x77, 0xa3, 0x2d, 0x0e, 0xa3, 0xeb, 0xbe, 0xc1, 0xfb, 0xd8, 0xb9, 0xf8, 0xb6, 0xba, 0x87, 0x42, 0x50, 0x4f, 0x3b, 0x2e, 0x57, 0xd2, 0xd0, 0x5b, 0x90, 0x01, 0x36, 0x4d, 0xb8, 0xee, 0x6d, 0x93, 0x60, 0x44, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_529(ch_529, ch_529 + sizeof(ch_529) -1);
CDataStream stream_529(vch_529, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_529;
stream_529 >> txHist_529;

if(block.vtx[0]->GetHash() == txHist_529.GetHash() && nHeight == 1265333) {
return true;
}
unsigned char ch_530[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc8, 0x4e, 0x13, 0x04, 0x74, 0x9d, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf2, 0xd3, 0x8d, 0x7f, 0x37, 0x3b, 0x88, 0xdf, 0x53, 0x18, 0x12, 0x13, 0xd4, 0xc6, 0x03, 0x34, 0xf4, 0x90, 0x44, 0xd9, 0x05, 0x3a, 0x5e, 0xc6, 0x42, 0x6d, 0x4c, 0x91, 0x26, 0xc8, 0x19, 0x73, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_530(ch_530, ch_530 + sizeof(ch_530) -1);
CDataStream stream_530(vch_530, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_530;
stream_530 >> txHist_530;

if(block.vtx[0]->GetHash() == txHist_530.GetHash() && nHeight == 1265352) {
return true;
}
unsigned char ch_531[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc1, 0x4e, 0x13, 0x04, 0x65, 0x9c, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc4, 0xbe, 0x27, 0x40, 0x65, 0xea, 0x83, 0x23, 0x33, 0x18, 0xba, 0x7d, 0xf9, 0x98, 0xd7, 0xf3, 0x1e, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x6f, 0x29, 0x04, 0x08, 0x60, 0xf9, 0x8c, 0x4e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xea, 0x54, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x60, 0x08, 0x04, 0x29, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x1e, 0xf3, 0xd7, 0x98, 0xf9, 0x7d, 0xba, 0x18, 0x33, 0x23, 0x83, 0xea, 0x65, 0x40, 0x27, 0xbe, 0xc4, 0x62, 0x86, 0x96, 0x88, 0xac, 0xa0, 0x06, 0x5b, 0xb1, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xca, 0xe3, 0x39, 0xe2, 0x4f, 0x6d, 0x60, 0x98, 0xec, 0xbe, 0x73, 0x11, 0x00, 0x3d, 0xd4, 0xf8, 0x02, 0x05, 0x8b, 0x9d, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_531(ch_531, ch_531 + sizeof(ch_531) -1);
CDataStream stream_531(vch_531, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_531;
stream_531 >> txHist_531;

if(block.vtx[0]->GetHash() == txHist_531.GetHash() && nHeight == 1265345) {
return true;
}
unsigned char ch_532[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x8e, 0x4e, 0x13, 0x04, 0x16, 0x8a, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb4, 0xc9, 0xf3, 0x23, 0xd0, 0x8a, 0xbc, 0xaf, 0xbe, 0x10, 0x43, 0xcd, 0x3d, 0x3d, 0x7d, 0x08, 0x4d, 0x3d, 0xc4, 0x0d, 0x28, 0x69, 0xce, 0x12, 0x81, 0xf8, 0x7e, 0x6e, 0x5a, 0xeb, 0x06, 0x1e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x6f, 0xe7, 0xb4, 0xa9, 0xcc, 0x22, 0xfd, 0x33, 0xf3, 0x1d, 0x7d, 0x90, 0x26, 0x8d, 0x16, 0x32, 0x3c, 0x12, 0x0c, 0x4c, 0xbe, 0x81, 0x65, 0x74, 0x2d, 0x57, 0x08, 0x15, 0xae, 0x84, 0x49, 0x88, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_532(ch_532, ch_532 + sizeof(ch_532) -1);
CDataStream stream_532(vch_532, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_532;
stream_532 >> txHist_532;

if(block.vtx[0]->GetHash() == txHist_532.GetHash() && nHeight == 1265294) {
return true;
}
unsigned char ch_533[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x9d, 0x4e, 0x13, 0x04, 0x8e, 0x8f, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x09, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_533(ch_533, ch_533 + sizeof(ch_533) -1);
CDataStream stream_533(vch_533, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_533;
stream_533 >> txHist_533;

if(block.vtx[0]->GetHash() == txHist_533.GetHash() && nHeight == 1265309) {
return true;
}
unsigned char ch_534[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb9, 0x4e, 0x13, 0x04, 0x5b, 0x9a, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb6, 0x05, 0x6c, 0xdb, 0x57, 0xfb, 0x16, 0xa9, 0xf9, 0xfc, 0x11, 0xc0, 0xfd, 0x87, 0x1a, 0x6a, 0x6f, 0x93, 0xa2, 0x47, 0x23, 0x41, 0x6a, 0xbd, 0xdb, 0xe7, 0x92, 0x37, 0x12, 0xcb, 0xb4, 0x93, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xff, 0x12, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe7, 0x18, 0xff, 0x9e, 0x7f, 0xa3, 0x7d, 0xd3, 0xd2, 0xf2, 0xa4, 0xb2, 0xc3, 0xf7, 0x64, 0x5e, 0xf9, 0x42, 0x3a, 0x93, 0xc6, 0x2f, 0xb1, 0x80, 0x85, 0x64, 0x95, 0xc3, 0x02, 0xe7, 0xed, 0x43, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_534(ch_534, ch_534 + sizeof(ch_534) -1);
CDataStream stream_534(vch_534, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_534;
stream_534 >> txHist_534;

if(block.vtx[0]->GetHash() == txHist_534.GetHash() && nHeight == 1265337) {
return true;
}
unsigned char ch_535[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x95, 0x4e, 0x13, 0x04, 0xdb, 0x8c, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x09, 0xc4, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_535(ch_535, ch_535 + sizeof(ch_535) -1);
CDataStream stream_535(vch_535, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_535;
stream_535 >> txHist_535;

if(block.vtx[0]->GetHash() == txHist_535.GetHash() && nHeight == 1265301) {
return true;
}
unsigned char ch_536[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa9, 0x4e, 0x13, 0x04, 0x64, 0x93, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x0f, 0x89, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_536(ch_536, ch_536 + sizeof(ch_536) -1);
CDataStream stream_536(vch_536, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_536;
stream_536 >> txHist_536;

if(block.vtx[0]->GetHash() == txHist_536.GetHash() && nHeight == 1265321) {
return true;
}
unsigned char ch_537[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x7e, 0x4e, 0x13, 0x04, 0x79, 0x83, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x03, 0xec, 0x08, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_537(ch_537, ch_537 + sizeof(ch_537) -1);
CDataStream stream_537(vch_537, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_537;
stream_537 >> txHist_537;

if(block.vtx[0]->GetHash() == txHist_537.GetHash() && nHeight == 1265278) {
return true;
}
unsigned char ch_538[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x6e, 0x4e, 0x13, 0x04, 0x5a, 0x7d, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0xa0, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xc2, 0xac, 0xa4, 0xe0, 0x22, 0x0c, 0x0b, 0xe3, 0xdb, 0x48, 0x3e, 0xf9, 0xcb, 0x11, 0xd8, 0x29, 0xa4, 0xce, 0xf6, 0x3f, 0xc5, 0xbf, 0xc8, 0x93, 0xa8, 0x95, 0x8e, 0x20, 0xec, 0x4a, 0xce, 0x3f, 0x40, 0xa5, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_538(ch_538, ch_538 + sizeof(ch_538) -1);
CDataStream stream_538(vch_538, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_538;
stream_538 >> txHist_538;

if(block.vtx[0]->GetHash() == txHist_538.GetHash() && nHeight == 1265262) {
return true;
}
unsigned char ch_539[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x66, 0x4e, 0x13, 0x04, 0xda, 0x79, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc2, 0x5c, 0x24, 0x5c, 0x50, 0xc9, 0x9b, 0xd2, 0xa1, 0x4d, 0x20, 0x87, 0x46, 0x34, 0x69, 0x86, 0xa2, 0x9f, 0x25, 0xdb, 0x8e, 0x98, 0x0a, 0xa2, 0x66, 0x4f, 0x00, 0x24, 0x65, 0x97, 0xb6, 0x3a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xff, 0x1e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_539(ch_539, ch_539 + sizeof(ch_539) -1);
CDataStream stream_539(vch_539, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_539;
stream_539 >> txHist_539;

if(block.vtx[0]->GetHash() == txHist_539.GetHash() && nHeight == 1265254) {
return true;
}
unsigned char ch_540[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x21, 0x4f, 0x13, 0x04, 0x16, 0xbc, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x03, 0x83, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xc4, 0x66, 0xdb, 0xfb, 0x4d, 0xe1, 0xb0, 0x80, 0x51, 0x36, 0x70, 0x13, 0xbe, 0x57, 0xb2, 0x02, 0x0f, 0x56, 0x45, 0x3c, 0xc7, 0x6e, 0xeb, 0x69, 0x5b, 0x90, 0x11, 0xd5, 0x71, 0x65, 0x7a, 0x4d, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_540(ch_540, ch_540 + sizeof(ch_540) -1);
CDataStream stream_540(vch_540, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_540;
stream_540 >> txHist_540;

if(block.vtx[0]->GetHash() == txHist_540.GetHash() && nHeight == 1265441) {
return true;
}
unsigned char ch_541[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x4f, 0x4e, 0x13, 0x04, 0x8c, 0x72, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x03, 0x7b, 0x13, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x19, 0xaa, 0x5b, 0x69, 0x5a, 0x83, 0x00, 0xea, 0xa8, 0xea, 0xc8, 0x64, 0x3f, 0xf9, 0xd6, 0x9e, 0x74, 0xd6, 0xff, 0xfc, 0x35, 0x4a, 0x70, 0xff, 0x81, 0x50, 0x6d, 0x61, 0x86, 0xda, 0xb0, 0xa6, 0x58, 0x6f, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_541(ch_541, ch_541 + sizeof(ch_541) -1);
CDataStream stream_541(vch_541, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_541;
stream_541 >> txHist_541;

if(block.vtx[0]->GetHash() == txHist_541.GetHash() && nHeight == 1265231) {
return true;
}
unsigned char ch_542[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x1f, 0x4f, 0x13, 0x04, 0xd6, 0xbb, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x08, 0x2e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_542(ch_542, ch_542 + sizeof(ch_542) -1);
CDataStream stream_542(vch_542, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_542;
stream_542 >> txHist_542;

if(block.vtx[0]->GetHash() == txHist_542.GetHash() && nHeight == 1265439) {
return true;
}
unsigned char ch_543[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x1e, 0x4f, 0x13, 0x04, 0x83, 0xbb, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfa, 0xc2, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_543(ch_543, ch_543 + sizeof(ch_543) -1);
CDataStream stream_543(vch_543, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_543;
stream_543 >> txHist_543;

if(block.vtx[0]->GetHash() == txHist_543.GetHash() && nHeight == 1265438) {
return true;
}
unsigned char ch_544[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1c, 0x4f, 0x13, 0x04, 0x46, 0xbb, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xac, 0x9f, 0x8f, 0x8a, 0x3e, 0xf8, 0x37, 0x34, 0x4d, 0x18, 0x38, 0xf2, 0x43, 0x94, 0x2c, 0xc9, 0xdd, 0xa3, 0xd4, 0x7f, 0xf1, 0xb8, 0x87, 0x55, 0x91, 0xc9, 0xe4, 0x15, 0xbe, 0x59, 0xb2, 0xcb, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_544(ch_544, ch_544 + sizeof(ch_544) -1);
CDataStream stream_544(vch_544, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_544;
stream_544 >> txHist_544;

if(block.vtx[0]->GetHash() == txHist_544.GetHash() && nHeight == 1265436) {
return true;
}
unsigned char ch_545[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x1b, 0x4f, 0x13, 0x04, 0x68, 0xba, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x09, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_545(ch_545, ch_545 + sizeof(ch_545) -1);
CDataStream stream_545(vch_545, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_545;
stream_545 >> txHist_545;

if(block.vtx[0]->GetHash() == txHist_545.GetHash() && nHeight == 1265435) {
return true;
}
unsigned char ch_546[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x1a, 0x4f, 0x13, 0x04, 0x61, 0xba, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfd, 0x1a, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_546(ch_546, ch_546 + sizeof(ch_546) -1);
CDataStream stream_546(vch_546, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_546;
stream_546 >> txHist_546;

if(block.vtx[0]->GetHash() == txHist_546.GetHash() && nHeight == 1265434) {
return true;
}
unsigned char ch_547[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x19, 0x4f, 0x13, 0x04, 0x69, 0xba, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x96, 0xa9, 0xff, 0x1a, 0x9c, 0x4b, 0xc6, 0x74, 0x89, 0xfa, 0xa1, 0xd9, 0x15, 0x5b, 0xe9, 0x56, 0xeb, 0x9f, 0x52, 0x43, 0x74, 0x1a, 0xcc, 0x2d, 0xa5, 0x1e, 0x27, 0x3d, 0x2d, 0xd7, 0x16, 0x8c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_547(ch_547, ch_547 + sizeof(ch_547) -1);
CDataStream stream_547(vch_547, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_547;
stream_547 >> txHist_547;

if(block.vtx[0]->GetHash() == txHist_547.GetHash() && nHeight == 1265433) {
return true;
}
unsigned char ch_548[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x18, 0x4f, 0x13, 0x04, 0x42, 0xba, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0xab, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_548(ch_548, ch_548 + sizeof(ch_548) -1);
CDataStream stream_548(vch_548, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_548;
stream_548 >> txHist_548;

if(block.vtx[0]->GetHash() == txHist_548.GetHash() && nHeight == 1265432) {
return true;
}
unsigned char ch_549[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x17, 0x4f, 0x13, 0x04, 0x19, 0xba, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfd, 0xa0, 0x12, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa5, 0x0c, 0x48, 0xad, 0x87, 0x88, 0xd5, 0x8d, 0xd3, 0x05, 0x75, 0x7a, 0x00, 0xc6, 0x34, 0x44, 0xe3, 0x64, 0xaa, 0xcf, 0xf9, 0xc2, 0x98, 0x64, 0x70, 0xaf, 0x19, 0xf9, 0x81, 0x56, 0x86, 0x2e, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_549(ch_549, ch_549 + sizeof(ch_549) -1);
CDataStream stream_549(vch_549, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_549;
stream_549 >> txHist_549;

if(block.vtx[0]->GetHash() == txHist_549.GetHash() && nHeight == 1265431) {
return true;
}
unsigned char ch_550[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x15, 0x4f, 0x13, 0x04, 0xaf, 0xb8, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x45, 0x52, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0d, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_550(ch_550, ch_550 + sizeof(ch_550) -1);
CDataStream stream_550(vch_550, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_550;
stream_550 >> txHist_550;

if(block.vtx[0]->GetHash() == txHist_550.GetHash() && nHeight == 1265429) {
return true;
}
unsigned char ch_551[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x13, 0x4f, 0x13, 0x04, 0x59, 0xb8, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x02, 0xe0, 0x55, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_551(ch_551, ch_551 + sizeof(ch_551) -1);
CDataStream stream_551(vch_551, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_551;
stream_551 >> txHist_551;

if(block.vtx[0]->GetHash() == txHist_551.GetHash() && nHeight == 1265427) {
return true;
}
unsigned char ch_552[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xac, 0x4e, 0x13, 0x04, 0x5e, 0x95, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9a, 0x55, 0x9b, 0x91, 0x81, 0xdf, 0xc0, 0x87, 0xe2, 0x47, 0x66, 0x27, 0xae, 0x9c, 0x67, 0x21, 0xb1, 0x2c, 0x93, 0x9b, 0x67, 0x2c, 0x89, 0x8a, 0x02, 0xac, 0x59, 0x91, 0x67, 0x52, 0xb5, 0x98, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_552(ch_552, ch_552 + sizeof(ch_552) -1);
CDataStream stream_552(vch_552, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_552;
stream_552 >> txHist_552;

if(block.vtx[0]->GetHash() == txHist_552.GetHash() && nHeight == 1265324) {
return true;
}
unsigned char ch_553[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa4, 0x4e, 0x13, 0x04, 0x02, 0x92, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x4a, 0x66, 0x79, 0xe2, 0xcc, 0xb7, 0x02, 0xc8, 0x6a, 0x06, 0xa7, 0xf0, 0x0d, 0x44, 0xda, 0xae, 0x4a, 0x35, 0xe3, 0x0a, 0xca, 0x27, 0x2f, 0xe7, 0x18, 0x85, 0x81, 0xba, 0x5e, 0xc5, 0x28, 0x0c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xfe, 0xb2, 0x37, 0xf0, 0xc0, 0xbd, 0xec, 0x07, 0xb2, 0xe8, 0x77, 0xfc, 0x39, 0xef, 0xb7, 0x10, 0x24, 0x8a, 0xa1, 0x3a, 0xa8, 0x4e, 0xa3, 0xba, 0x64, 0x38, 0x35, 0x3e, 0x95, 0x33, 0xf9, 0xbd, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_553(ch_553, ch_553 + sizeof(ch_553) -1);
CDataStream stream_553(vch_553, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_553;
stream_553 >> txHist_553;

if(block.vtx[0]->GetHash() == txHist_553.GetHash() && nHeight == 1265316) {
return true;
}
unsigned char ch_554[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9c, 0x4e, 0x13, 0x04, 0x98, 0x8f, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7b, 0xb5, 0xb0, 0x31, 0x5d, 0x9b, 0x13, 0xec, 0x71, 0x2c, 0xee, 0x3d, 0x3e, 0x0c, 0xa0, 0x46, 0x71, 0x5c, 0x62, 0x4d, 0x58, 0x52, 0x93, 0x93, 0x89, 0xce, 0x90, 0xbf, 0xba, 0x66, 0x8c, 0xe6, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_554(ch_554, ch_554 + sizeof(ch_554) -1);
CDataStream stream_554(vch_554, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_554;
stream_554 >> txHist_554;

if(block.vtx[0]->GetHash() == txHist_554.GetHash() && nHeight == 1265308) {
return true;
}
unsigned char ch_555[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x12, 0x4f, 0x13, 0x04, 0xda, 0xb7, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x05, 0x54, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x0e, 0xc8, 0x09, 0x3c, 0x87, 0x0e, 0x21, 0x36, 0x28, 0x6d, 0x1a, 0xeb, 0x2e, 0xb1, 0x3a, 0xfe, 0xd2, 0xad, 0x85, 0xce, 0xb7, 0x41, 0x32, 0x28, 0x4f, 0xae, 0x47, 0x56, 0x0b, 0x02, 0x83, 0x72, 0x38, 0x22, 0x64, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_555(ch_555, ch_555 + sizeof(ch_555) -1);
CDataStream stream_555(vch_555, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_555;
stream_555 >> txHist_555;

if(block.vtx[0]->GetHash() == txHist_555.GetHash() && nHeight == 1265426) {
return true;
}
unsigned char ch_556[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x0e, 0x4f, 0x13, 0x04, 0x82, 0xb6, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfa, 0xc2, 0x3d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_556(ch_556, ch_556 + sizeof(ch_556) -1);
CDataStream stream_556(vch_556, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_556;
stream_556 >> txHist_556;

if(block.vtx[0]->GetHash() == txHist_556.GetHash() && nHeight == 1265422) {
return true;
}
unsigned char ch_557[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf8, 0x4e, 0x13, 0x04, 0x33, 0xaf, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf4, 0x15, 0x42, 0x26, 0x5b, 0x07, 0x6a, 0xe3, 0x42, 0x0a, 0xba, 0xb5, 0xc5, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x00, 0x02, 0x09, 0x85, 0xc3, 0xac, 0x88, 0x8f, 0xaa, 0xb2, 0x71, 0x0f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x04, 0x47, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_557(ch_557, ch_557 + sizeof(ch_557) -1);
CDataStream stream_557(vch_557, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_557;
stream_557 >> txHist_557;

if(block.vtx[0]->GetHash() == txHist_557.GetHash() && nHeight == 1265400) {
return true;
}
unsigned char ch_558[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf2, 0x4e, 0x13, 0x04, 0x8a, 0xad, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0xd2, 0xe1, 0x16, 0x17, 0x1b, 0x67, 0xcc, 0xec, 0x5b, 0x37, 0xad, 0x53, 0x96, 0xc9, 0xd4, 0x58, 0x0b, 0xc9, 0xa2, 0xd5, 0xbd, 0x33, 0x6b, 0x26, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xea, 0x2d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd2, 0xa5, 0x2c, 0x31, 0x78, 0x37, 0xae, 0xe4, 0xce, 0x6e, 0x42, 0x62, 0x88, 0x47, 0xbb, 0x82, 0x82, 0xf7, 0x3b, 0x61, 0x75, 0x7d, 0xe4, 0xf9, 0x07, 0xcb, 0x6a, 0xbf, 0x23, 0x92, 0x72, 0xd3, 0x85, 0xb5, 0x04, 0x29, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x1e, 0xf3, 0xd7, 0x98, 0xf9, 0x7d, 0xba, 0x18, 0x33, 0x23, 0x83, 0xea, 0x65, 0x40, 0x27, 0xbe, 0xc4, 0x62, 0x86, 0x96, 0x88, 0xac, 0x43, 0x09, 0x5b, 0xb1, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xca, 0xe3, 0x39, 0xe2, 0x4f, 0x6d, 0x60, 0x98, 0xec, 0xbe, 0x73, 0x11, 0x00, 0x3d, 0xd4, 0xf8, 0x02, 0x05, 0x8b, 0x9d, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_558(ch_558, ch_558 + sizeof(ch_558) -1);
CDataStream stream_558(vch_558, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_558;
stream_558 >> txHist_558;

if(block.vtx[0]->GetHash() == txHist_558.GetHash() && nHeight == 1265394) {
return true;
}
unsigned char ch_559[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xe6, 0x4e, 0x13, 0x04, 0xe3, 0xa8, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x9e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe1, 0x94, 0x13, 0x60, 0x40, 0x9d, 0x74, 0x80, 0xfb, 0x38, 0x52, 0xdd, 0xe6, 0xfd, 0x6f, 0x66, 0xae, 0x8b, 0x73, 0xfd, 0x96, 0xa6, 0x76, 0x1d, 0x62, 0x59, 0x9d, 0x7b, 0x61, 0xf6, 0x47, 0xc4, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_559(ch_559, ch_559 + sizeof(ch_559) -1);
CDataStream stream_559(vch_559, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_559;
stream_559 >> txHist_559;

if(block.vtx[0]->GetHash() == txHist_559.GetHash() && nHeight == 1265382) {
return true;
}
unsigned char ch_560[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xe0, 0x4e, 0x13, 0x04, 0x36, 0xa6, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x0b, 0x47, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xb1, 0xc0, 0x49, 0x13, 0x2f, 0x80, 0xc1, 0x50, 0x3f, 0x70, 0xf5, 0xa5, 0xff, 0xbe, 0x05, 0x61, 0xf8, 0x27, 0x2c, 0x31, 0xa2, 0xb8, 0x6a, 0x76, 0x1e, 0x35, 0x3b, 0x40, 0xe7, 0x3e, 0xb4, 0x76, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_560(ch_560, ch_560 + sizeof(ch_560) -1);
CDataStream stream_560(vch_560, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_560;
stream_560 >> txHist_560;

if(block.vtx[0]->GetHash() == txHist_560.GetHash() && nHeight == 1265376) {
return true;
}
unsigned char ch_561[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xda, 0x4e, 0x13, 0x04, 0x37, 0xa4, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xf4, 0x34, 0x77, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x2a, 0x27, 0x0f, 0x01, 0xf9, 0x69, 0x22, 0x50, 0x67, 0x2a, 0x64, 0x21, 0x59, 0x83, 0x52, 0x96, 0x05, 0xca, 0x1f, 0xc3, 0xa5, 0x6f, 0x15, 0x2f, 0x43, 0x9e, 0x7a, 0x3a, 0x81, 0x89, 0x46, 0x6e, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_561(ch_561, ch_561 + sizeof(ch_561) -1);
CDataStream stream_561(vch_561, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_561;
stream_561 >> txHist_561;

if(block.vtx[0]->GetHash() == txHist_561.GetHash() && nHeight == 1265370) {
return true;
}
unsigned char ch_562[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xce, 0x4e, 0x13, 0x04, 0x5e, 0x9f, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x8e, 0x47, 0x3d, 0xfd, 0x37, 0x15, 0xa5, 0x92, 0xde, 0x5b, 0x23, 0x31, 0x2b, 0x72, 0x6e, 0xb2, 0x2f, 0xd3, 0xd8, 0xd5, 0xb1, 0x71, 0xcb, 0x04, 0xc9, 0x14, 0xc5, 0xd8, 0x5a, 0x00, 0x9e, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xff, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_562(ch_562, ch_562 + sizeof(ch_562) -1);
CDataStream stream_562(vch_562, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_562;
stream_562 >> txHist_562;

if(block.vtx[0]->GetHash() == txHist_562.GetHash() && nHeight == 1265358) {
return true;
}
unsigned char ch_563[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc7, 0x4e, 0x13, 0x04, 0x40, 0x9d, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x53, 0x0e, 0x2b, 0x96, 0x29, 0x54, 0xb8, 0x72, 0xd7, 0x69, 0x6e, 0xb7, 0x6a, 0x97, 0x4d, 0xbf, 0x00, 0x8d, 0x3e, 0x6c, 0x30, 0xdb, 0xf3, 0x3b, 0xee, 0x56, 0x37, 0x55, 0x33, 0x78, 0x64, 0x27, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xac, 0x85, 0x2c, 0x03, 0x11, 0xbf, 0x42, 0xd2, 0x7a, 0xa3, 0x57, 0xfe, 0x7a, 0xa4, 0xa7, 0xba, 0x65, 0xb9, 0x54, 0x6c, 0x64, 0x09, 0x13, 0x7c, 0x5a, 0x9d, 0x01, 0x0c, 0x26, 0x71, 0x54, 0x24, 0xc0, 0x92, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_563(ch_563, ch_563 + sizeof(ch_563) -1);
CDataStream stream_563(vch_563, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_563;
stream_563 >> txHist_563;

if(block.vtx[0]->GetHash() == txHist_563.GetHash() && nHeight == 1265351) {
return true;
}
unsigned char ch_564[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc0, 0x4e, 0x13, 0x04, 0xf3, 0x9b, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_564(ch_564, ch_564 + sizeof(ch_564) -1);
CDataStream stream_564(vch_564, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_564;
stream_564 >> txHist_564;

if(block.vtx[0]->GetHash() == txHist_564.GetHash() && nHeight == 1265344) {
return true;
}
unsigned char ch_565[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xbf, 0x4e, 0x13, 0x04, 0xe2, 0x9b, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x8e, 0x79, 0x60, 0x16, 0x96, 0x0f, 0xae, 0x0e, 0x6e, 0xcf, 0x24, 0x0a, 0x79, 0xec, 0xb3, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x01, 0x20, 0xe7, 0x59, 0xc0, 0xac, 0x88, 0xc2, 0x4b, 0x74, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0d, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_565(ch_565, ch_565 + sizeof(ch_565) -1);
CDataStream stream_565(vch_565, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_565;
stream_565 >> txHist_565;

if(block.vtx[0]->GetHash() == txHist_565.GetHash() && nHeight == 1265343) {
return true;
}
unsigned char ch_566[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb8, 0x4e, 0x13, 0x04, 0xad, 0x99, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x6b, 0xbf, 0x3a, 0xc8, 0x2a, 0x2e, 0x66, 0x95, 0x4e, 0x34, 0x9a, 0xfe, 0xe7, 0xb5, 0x86, 0xd4, 0xa6, 0xc6, 0x0d, 0x03, 0x2b, 0xab, 0x07, 0x0f, 0xf7, 0x3c, 0xba, 0x2a, 0x66, 0xbb, 0x8f, 0xcf, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x07, 0x71, 0x0c, 0x3f, 0x1e, 0xed, 0xfe, 0x44, 0xa4, 0xdd, 0x4f, 0x08, 0x8f, 0x4f, 0x1d, 0x55, 0x28, 0xf7, 0xef, 0x5b, 0xc7, 0x22, 0x7a, 0xf2, 0x55, 0x95, 0x1b, 0x8a, 0xbe, 0xa2, 0x84, 0xf9, 0x58, 0x6f, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_566(ch_566, ch_566 + sizeof(ch_566) -1);
CDataStream stream_566(vch_566, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_566;
stream_566 >> txHist_566;

if(block.vtx[0]->GetHash() == txHist_566.GetHash() && nHeight == 1265336) {
return true;
}
unsigned char ch_567[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb0, 0x4e, 0x13, 0x04, 0x75, 0x96, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe4, 0x30, 0x64, 0x6c, 0x8b, 0x95, 0x7e, 0xea, 0x47, 0x5e, 0xd0, 0x6b, 0xf1, 0xb0, 0x27, 0xf0, 0xc0, 0x41, 0x45, 0x81, 0x45, 0x7f, 0xbe, 0x78, 0x6f, 0x51, 0x6a, 0xd0, 0x2a, 0xe7, 0xd2, 0x5a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_567(ch_567, ch_567 + sizeof(ch_567) -1);
CDataStream stream_567(vch_567, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_567;
stream_567 >> txHist_567;

if(block.vtx[0]->GetHash() == txHist_567.GetHash() && nHeight == 1265328) {
return true;
}
unsigned char ch_568[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xaf, 0x4e, 0x13, 0x04, 0x40, 0x96, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfa, 0xc2, 0x69, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_568(ch_568, ch_568 + sizeof(ch_568) -1);
CDataStream stream_568(vch_568, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_568;
stream_568 >> txHist_568;

if(block.vtx[0]->GetHash() == txHist_568.GetHash() && nHeight == 1265327) {
return true;
}
unsigned char ch_569[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa7, 0x4e, 0x13, 0x04, 0x2c, 0x93, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x2f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x47, 0x21, 0x3b, 0x6c, 0x38, 0xbe, 0xb7, 0x03, 0xe8, 0x2f, 0xae, 0x44, 0x7d, 0x29, 0xfb, 0x50, 0xcd, 0xc6, 0xec, 0xe2, 0xf9, 0xf1, 0x9d, 0xa1, 0x4a, 0xff, 0xb6, 0xfb, 0x5f, 0xf9, 0x29, 0x61, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_569(ch_569, ch_569 + sizeof(ch_569) -1);
CDataStream stream_569(vch_569, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_569;
stream_569 >> txHist_569;

if(block.vtx[0]->GetHash() == txHist_569.GetHash() && nHeight == 1265319) {
return true;
}
unsigned char ch_570[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa0, 0x4e, 0x13, 0x04, 0x55, 0x90, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x98, 0xca, 0xbe, 0xae, 0x82, 0xd4, 0x7a, 0x62, 0x62, 0x38, 0x9e, 0xb9, 0x77, 0x20, 0xcf, 0xdd, 0xc7, 0xfa, 0x54, 0x75, 0x7b, 0x8f, 0x5f, 0xf9, 0xcb, 0xc0, 0x33, 0x74, 0x4c, 0x6f, 0xbc, 0xfc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa0, 0xf1, 0x98, 0x32, 0xa5, 0x47, 0x0d, 0x87, 0xba, 0x62, 0x8c, 0x98, 0x3d, 0x45, 0x05, 0x0c, 0x51, 0x5b, 0x52, 0x08, 0x10, 0x5e, 0xfb, 0x4b, 0xfb, 0x89, 0x89, 0xfa, 0x19, 0xf0, 0xe0, 0x5a, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_570(ch_570, ch_570 + sizeof(ch_570) -1);
CDataStream stream_570(vch_570, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_570;
stream_570 >> txHist_570;

if(block.vtx[0]->GetHash() == txHist_570.GetHash() && nHeight == 1265312) {
return true;
}
unsigned char ch_571[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x97, 0x4e, 0x13, 0x04, 0x82, 0x8d, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0xfd, 0x06, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x24, 0xd3, 0x57, 0x7f, 0x16, 0xd0, 0xf3, 0xa6, 0x75, 0x90, 0x0e, 0xbb, 0xe8, 0x01, 0x4f, 0x81, 0xbc, 0x0c, 0xe5, 0x06, 0x2c, 0xac, 0x9e, 0x4d, 0x01, 0xea, 0x48, 0x0f, 0x03, 0x66, 0x73, 0x2c, 0xb0, 0xb0, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_571(ch_571, ch_571 + sizeof(ch_571) -1);
CDataStream stream_571(vch_571, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_571;
stream_571 >> txHist_571;

if(block.vtx[0]->GetHash() == txHist_571.GetHash() && nHeight == 1265303) {
return true;
}
unsigned char ch_572[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x94, 0x4e, 0x13, 0x04, 0xd8, 0x8c, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xf4, 0x34, 0x46, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_572(ch_572, ch_572 + sizeof(ch_572) -1);
CDataStream stream_572(vch_572, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_572;
stream_572 >> txHist_572;

if(block.vtx[0]->GetHash() == txHist_572.GetHash() && nHeight == 1265300) {
return true;
}
unsigned char ch_573[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x91, 0x4e, 0x13, 0x04, 0xf5, 0x8a, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x1f, 0x5a, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x1a, 0x8d, 0x73, 0x94, 0x3a, 0x56, 0x73, 0x9a, 0x0b, 0x20, 0xfe, 0x43, 0x6e, 0x4e, 0x5f, 0x5e, 0x40, 0xcb, 0x63, 0xc5, 0xf3, 0xb6, 0x9c, 0x83, 0x88, 0xf9, 0x41, 0x1c, 0x6c, 0xea, 0xd6, 0x2e, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_573(ch_573, ch_573 + sizeof(ch_573) -1);
CDataStream stream_573(vch_573, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_573;
stream_573 >> txHist_573;

if(block.vtx[0]->GetHash() == txHist_573.GetHash() && nHeight == 1265297) {
return true;
}
unsigned char ch_574[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x90, 0x4e, 0x13, 0x04, 0x28, 0x8a, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x19, 0x2b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa6, 0x54, 0x96, 0x16, 0xb6, 0x2d, 0x1f, 0x88, 0x4a, 0x27, 0x3e, 0x5e, 0x99, 0x85, 0xa7, 0x45, 0xa8, 0x58, 0xa3, 0x94, 0xa4, 0xcc, 0x34, 0x9e, 0x23, 0xf9, 0xd0, 0xbb, 0x3b, 0x72, 0x27, 0x54, 0x68, 0x32, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_574(ch_574, ch_574 + sizeof(ch_574) -1);
CDataStream stream_574(vch_574, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_574;
stream_574 >> txHist_574;

if(block.vtx[0]->GetHash() == txHist_574.GetHash() && nHeight == 1265296) {
return true;
}
unsigned char ch_575[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x8f, 0x4e, 0x13, 0x04, 0x0d, 0x8a, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x03, 0x4e, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_575(ch_575, ch_575 + sizeof(ch_575) -1);
CDataStream stream_575(vch_575, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_575;
stream_575 >> txHist_575;

if(block.vtx[0]->GetHash() == txHist_575.GetHash() && nHeight == 1265295) {
return true;
}
unsigned char ch_576[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x8a, 0x4e, 0x13, 0x04, 0xf8, 0x87, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x09, 0x2e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_576(ch_576, ch_576 + sizeof(ch_576) -1);
CDataStream stream_576(vch_576, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_576;
stream_576 >> txHist_576;

if(block.vtx[0]->GetHash() == txHist_576.GetHash() && nHeight == 1265290) {
return true;
}
unsigned char ch_577[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x88, 0x4e, 0x13, 0x04, 0x1d, 0x87, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfa, 0xc2, 0x3d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x3f, 0x36, 0x48, 0x02, 0xdf, 0x6a, 0x0a, 0xb4, 0x2b, 0x19, 0x00, 0x30, 0x45, 0x4e, 0xc0, 0x58, 0x6f, 0x08, 0x50, 0x01, 0x3b, 0xc3, 0xca, 0x58, 0x11, 0xfc, 0x1d, 0x22, 0xef, 0x20, 0x5e, 0xd7, 0xb0, 0x20, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_577(ch_577, ch_577 + sizeof(ch_577) -1);
CDataStream stream_577(vch_577, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_577;
stream_577 >> txHist_577;

if(block.vtx[0]->GetHash() == txHist_577.GetHash() && nHeight == 1265288) {
return true;
}
unsigned char ch_578[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x87, 0x4e, 0x13, 0x04, 0xb9, 0x86, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x09, 0xc4, 0x45, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_578(ch_578, ch_578 + sizeof(ch_578) -1);
CDataStream stream_578(vch_578, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_578;
stream_578 >> txHist_578;

if(block.vtx[0]->GetHash() == txHist_578.GetHash() && nHeight == 1265287) {
return true;
}
unsigned char ch_579[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x7d, 0x4e, 0x13, 0x04, 0x1b, 0x83, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x72, 0x1b, 0x1b, 0x3b, 0x0c, 0x17, 0x72, 0xea, 0x7e, 0xb0, 0x87, 0x93, 0x13, 0xa9, 0xb4, 0xcc, 0xb3, 0x6a, 0x72, 0xb7, 0x16, 0x8d, 0x44, 0x4c, 0xbe, 0x15, 0x2e, 0x75, 0x59, 0x20, 0x8c, 0x2f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xff, 0x1e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x7c, 0x75, 0xc1, 0x66, 0x91, 0xe1, 0xff, 0xfe, 0x2f, 0x4e, 0x33, 0xd4, 0xfc, 0xf6, 0xbe, 0x33, 0x73, 0x74, 0x99, 0xa1, 0xbb, 0x96, 0x0a, 0xda, 0x6a, 0xe0, 0x8c, 0xe3, 0xcc, 0x95, 0x2a, 0x90, 0xf0, 0x39, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_579(ch_579, ch_579 + sizeof(ch_579) -1);
CDataStream stream_579(vch_579, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_579;
stream_579 >> txHist_579;

if(block.vtx[0]->GetHash() == txHist_579.GetHash() && nHeight == 1265277) {
return true;
}
unsigned char ch_580[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x84, 0x4e, 0x13, 0x04, 0xcc, 0x85, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x02, 0xe0, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_580(ch_580, ch_580 + sizeof(ch_580) -1);
CDataStream stream_580(vch_580, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_580;
stream_580 >> txHist_580;

if(block.vtx[0]->GetHash() == txHist_580.GetHash() && nHeight == 1265284) {
return true;
}
unsigned char ch_581[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x81, 0x4e, 0x13, 0x04, 0x96, 0x84, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x02, 0xe0, 0x2c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x7d, 0xd6, 0x16, 0x86, 0xb2, 0xc3, 0x6a, 0x00, 0x1a, 0x40, 0x17, 0x1b, 0xc8, 0x8b, 0xd0, 0x0b, 0xce, 0x74, 0x3a, 0x5f, 0x58, 0xeb, 0x92, 0x9d, 0xe5, 0xe4, 0x2e, 0x53, 0x76, 0x61, 0x76, 0xb0, 0x58, 0x6f, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_581(ch_581, ch_581 + sizeof(ch_581) -1);
CDataStream stream_581(vch_581, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_581;
stream_581 >> txHist_581;

if(block.vtx[0]->GetHash() == txHist_581.GetHash() && nHeight == 1265281) {
return true;
}
unsigned char ch_582[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x80, 0x4e, 0x13, 0x04, 0x49, 0x84, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xf4, 0x34, 0x72, 0x05, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x4c, 0x1a, 0x70, 0x35, 0x63, 0xcb, 0x03, 0xa8, 0x81, 0x37, 0x03, 0x61, 0x28, 0xfd, 0x3a, 0xaf, 0x85, 0x89, 0x6a, 0xa2, 0xef, 0x60, 0x1d, 0xab, 0xcc, 0xeb, 0x2b, 0xec, 0x1f, 0xfc, 0x03, 0x3d, 0x08, 0xbf, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_582(ch_582, ch_582 + sizeof(ch_582) -1);
CDataStream stream_582(vch_582, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_582;
stream_582 >> txHist_582;

if(block.vtx[0]->GetHash() == txHist_582.GetHash() && nHeight == 1265280) {
return true;
}
unsigned char ch_583[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x74, 0x4e, 0x13, 0x04, 0x19, 0x7f, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfd, 0x1a, 0x2d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_583(ch_583, ch_583 + sizeof(ch_583) -1);
CDataStream stream_583(vch_583, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_583;
stream_583 >> txHist_583;

if(block.vtx[0]->GetHash() == txHist_583.GetHash() && nHeight == 1265268) {
return true;
}
unsigned char ch_584[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x71, 0x4e, 0x13, 0x04, 0x60, 0x7e, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfd, 0x1a, 0xa9, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xeb, 0xbf, 0x98, 0x43, 0x79, 0x9f, 0x01, 0x11, 0xdd, 0x10, 0x92, 0xf2, 0x48, 0xc8, 0x2a, 0xb0, 0x7b, 0xa2, 0x3a, 0x45, 0xb8, 0xf4, 0x43, 0xe3, 0xfb, 0x7b, 0xff, 0xc5, 0x22, 0xed, 0x5e, 0x6f, 0x20, 0x1f, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_584(ch_584, ch_584 + sizeof(ch_584) -1);
CDataStream stream_584(vch_584, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_584;
stream_584 >> txHist_584;

if(block.vtx[0]->GetHash() == txHist_584.GetHash() && nHeight == 1265265) {
return true;
}
unsigned char ch_585[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x65, 0x4e, 0x13, 0x04, 0x4d, 0x79, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfd, 0x69, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_585(ch_585, ch_585 + sizeof(ch_585) -1);
CDataStream stream_585(vch_585, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_585;
stream_585 >> txHist_585;

if(block.vtx[0]->GetHash() == txHist_585.GetHash() && nHeight == 1265253) {
return true;
}
unsigned char ch_586[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x6a, 0x4e, 0x13, 0x04, 0xfd, 0x7b, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7d, 0x52, 0xd9, 0xd3, 0x32, 0x61, 0x23, 0x76, 0xd2, 0x20, 0x04, 0xb2, 0x44, 0x98, 0x56, 0x0a, 0x15, 0x0d, 0xce, 0xb6, 0xa3, 0xe9, 0xea, 0x19, 0xb5, 0x6b, 0xa4, 0x1e, 0xce, 0xe9, 0x93, 0x5b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x9f, 0xf0, 0x31, 0xf1, 0xee, 0xb5, 0x7b, 0x2e, 0xe7, 0xc8, 0x13, 0xcc, 0x57, 0x11, 0x03, 0xba, 0xa5, 0x87, 0xe9, 0x48, 0xbb, 0x76, 0xa8, 0xa6, 0xa0, 0x94, 0x77, 0x48, 0xd8, 0x7c, 0x20, 0xd2, 0x58, 0x6f, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_586(ch_586, ch_586 + sizeof(ch_586) -1);
CDataStream stream_586(vch_586, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_586;
stream_586 >> txHist_586;

if(block.vtx[0]->GetHash() == txHist_586.GetHash() && nHeight == 1265258) {
return true;
}
unsigned char ch_587[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x69, 0x4e, 0x13, 0x04, 0xf8, 0x7a, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0xaf, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xc5, 0x17, 0xf3, 0xa4, 0x14, 0x07, 0xf8, 0xa5, 0x1c, 0x58, 0x4d, 0xdb, 0x04, 0x88, 0xa6, 0x06, 0xc2, 0x25, 0x00, 0x1f, 0x2a, 0xfd, 0x56, 0xdd, 0x09, 0x4c, 0x76, 0x7b, 0x57, 0x8c, 0x3a, 0xad, 0x80, 0xa5, 0xf7, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_587(ch_587, ch_587 + sizeof(ch_587) -1);
CDataStream stream_587(vch_587, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_587;
stream_587 >> txHist_587;

if(block.vtx[0]->GetHash() == txHist_587.GetHash() && nHeight == 1265257) {
return true;
}
unsigned char ch_588[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x68, 0x4e, 0x13, 0x04, 0xe1, 0x7a, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x03, 0xc3, 0x11, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x36, 0x24, 0xbf, 0x78, 0x2e, 0x66, 0x25, 0x01, 0x80, 0x0b, 0x26, 0x97, 0x8f, 0xe1, 0xe0, 0x5b, 0x1e, 0x2a, 0xa3, 0xd7, 0xad, 0xf5, 0x16, 0xd9, 0xad, 0x0d, 0x92, 0x14, 0x8a, 0x4f, 0xf0, 0xc2, 0xb0, 0xf4, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_588(ch_588, ch_588 + sizeof(ch_588) -1);
CDataStream stream_588(vch_588, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_588;
stream_588 >> txHist_588;

if(block.vtx[0]->GetHash() == txHist_588.GetHash() && nHeight == 1265256) {
return true;
}
unsigned char ch_589[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x67, 0x4e, 0x13, 0x04, 0x33, 0x7a, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x2f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd9, 0x8e, 0xb5, 0x04, 0xea, 0x2a, 0x53, 0x84, 0x20, 0x61, 0x79, 0x81, 0xb6, 0x72, 0x6a, 0xc8, 0x78, 0x2e, 0xc3, 0x83, 0x18, 0x1c, 0x90, 0x0e, 0x82, 0x68, 0x24, 0xfa, 0x28, 0x81, 0x58, 0xa5, 0x40, 0xa7, 0x68, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_589(ch_589, ch_589 + sizeof(ch_589) -1);
CDataStream stream_589(vch_589, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_589;
stream_589 >> txHist_589;

if(block.vtx[0]->GetHash() == txHist_589.GetHash() && nHeight == 1265255) {
return true;
}
unsigned char ch_590[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x64, 0x4e, 0x13, 0x04, 0x47, 0x79, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xfa, 0xc4, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_590(ch_590, ch_590 + sizeof(ch_590) -1);
CDataStream stream_590(vch_590, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_590;
stream_590 >> txHist_590;

if(block.vtx[0]->GetHash() == txHist_590.GetHash() && nHeight == 1265252) {
return true;
}
unsigned char ch_591[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x62, 0x4e, 0x13, 0x04, 0x1e, 0x79, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0xa1, 0x1b, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x77, 0x98, 0xf8, 0xa6, 0x73, 0xfe, 0x4d, 0x6e, 0xaf, 0x06, 0xbf, 0x75, 0x75, 0x7f, 0xc5, 0x23, 0xe6, 0x02, 0x61, 0x2a, 0xec, 0xac, 0xe7, 0x94, 0x63, 0xa0, 0x24, 0x58, 0x18, 0xf5, 0x21, 0x71, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_591(ch_591, ch_591 + sizeof(ch_591) -1);
CDataStream stream_591(vch_591, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_591;
stream_591 >> txHist_591;

if(block.vtx[0]->GetHash() == txHist_591.GetHash() && nHeight == 1265250) {
return true;
}
unsigned char ch_592[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x5c, 0x4e, 0x13, 0x04, 0xe8, 0x76, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xfa, 0xc4, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_592(ch_592, ch_592 + sizeof(ch_592) -1);
CDataStream stream_592(vch_592, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_592;
stream_592 >> txHist_592;

if(block.vtx[0]->GetHash() == txHist_592.GetHash() && nHeight == 1265244) {
return true;
}
unsigned char ch_593[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x59, 0x4e, 0x13, 0x04, 0x6a, 0x76, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x65, 0xe6, 0x6d, 0xbd, 0x9d, 0x1f, 0x79, 0xca, 0xf1, 0xca, 0x39, 0x47, 0x02, 0xe5, 0x2c, 0x77, 0xdd, 0xf1, 0x32, 0xa1, 0x6f, 0xae, 0x92, 0x4a, 0xee, 0x4e, 0x54, 0x24, 0x92, 0x2d, 0x65, 0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_593(ch_593, ch_593 + sizeof(ch_593) -1);
CDataStream stream_593(vch_593, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_593;
stream_593 >> txHist_593;

if(block.vtx[0]->GetHash() == txHist_593.GetHash() && nHeight == 1265241) {
return true;
}
unsigned char ch_594[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x58, 0x4e, 0x13, 0x04, 0x29, 0x76, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe2, 0x8f, 0x6b, 0xb2, 0xf7, 0x8e, 0xa1, 0x02, 0x1e, 0xc3, 0xa5, 0xa8, 0xb2, 0x3f, 0x73, 0xd4, 0xa0, 0x87, 0x65, 0x2e, 0xc8, 0x5c, 0x45, 0xaf, 0xa3, 0x0e, 0x6b, 0xcd, 0x36, 0x6a, 0xbc, 0x48, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_594(ch_594, ch_594 + sizeof(ch_594) -1);
CDataStream stream_594(vch_594, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_594;
stream_594 >> txHist_594;

if(block.vtx[0]->GetHash() == txHist_594.GetHash() && nHeight == 1265240) {
return true;
}
unsigned char ch_595[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x54, 0x4e, 0x13, 0x04, 0xb7, 0x74, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xfa, 0xc4, 0x18, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_595(ch_595, ch_595 + sizeof(ch_595) -1);
CDataStream stream_595(vch_595, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_595;
stream_595 >> txHist_595;

if(block.vtx[0]->GetHash() == txHist_595.GetHash() && nHeight == 1265236) {
return true;
}
unsigned char ch_596[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x53, 0x4e, 0x13, 0x04, 0x88, 0x74, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0xcd, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xdb, 0x9a, 0x74, 0x70, 0xa3, 0xfe, 0x5e, 0x5c, 0x69, 0xb7, 0x88, 0x23, 0x6e, 0xd1, 0x4e, 0x78, 0x4a, 0x05, 0x0e, 0xa2, 0x32, 0xc9, 0x4f, 0x19, 0x58, 0xc5, 0xe1, 0x7d, 0x09, 0x2d, 0x36, 0xda, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_596(ch_596, ch_596 + sizeof(ch_596) -1);
CDataStream stream_596(vch_596, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_596;
stream_596 >> txHist_596;

if(block.vtx[0]->GetHash() == txHist_596.GetHash() && nHeight == 1265235) {
return true;
}
unsigned char ch_597[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x4d, 0x4e, 0x13, 0x04, 0x98, 0x71, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xf2, 0xb8, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_597(ch_597, ch_597 + sizeof(ch_597) -1);
CDataStream stream_597(vch_597, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_597;
stream_597 >> txHist_597;

if(block.vtx[0]->GetHash() == txHist_597.GetHash() && nHeight == 1265229) {
return true;
}
unsigned char ch_598[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xcd, 0x4d, 0x13, 0x04, 0x02, 0x47, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x08, 0x11, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_598(ch_598, ch_598 + sizeof(ch_598) -1);
CDataStream stream_598(vch_598, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_598;
stream_598 >> txHist_598;

if(block.vtx[0]->GetHash() == txHist_598.GetHash() && nHeight == 1265101) {
return true;
}
unsigned char ch_599[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x4b, 0x4e, 0x13, 0x04, 0xe7, 0x70, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xf2, 0xb8, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x17, 0x6b, 0x2a, 0x73, 0xd1, 0x21, 0x2b, 0xbd, 0x45, 0x48, 0x94, 0x43, 0xb8, 0x0d, 0x9c, 0x38, 0xef, 0x9a, 0xef, 0x41, 0x24, 0x8e, 0x39, 0x36, 0x9d, 0x97, 0x7d, 0xc5, 0xe2, 0x9e, 0xb8, 0xcd, 0x68, 0x32, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_599(ch_599, ch_599 + sizeof(ch_599) -1);
CDataStream stream_599(vch_599, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_599;
stream_599 >> txHist_599;

if(block.vtx[0]->GetHash() == txHist_599.GetHash() && nHeight == 1265227) {
return true;
}
unsigned char ch_600[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x4a, 0x4e, 0x13, 0x04, 0xd8, 0x70, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_600(ch_600, ch_600 + sizeof(ch_600) -1);
CDataStream stream_600(vch_600, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_600;
stream_600 >> txHist_600;

if(block.vtx[0]->GetHash() == txHist_600.GetHash() && nHeight == 1265226) {
return true;
}
unsigned char ch_601[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2a, 0x4e, 0x13, 0x04, 0x42, 0x63, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x44, 0x6c, 0xf6, 0xdc, 0x1b, 0x39, 0x77, 0xd8, 0x5b, 0x37, 0x62, 0xd8, 0x97, 0x50, 0xd8, 0x8a, 0x86, 0x6f, 0x9a, 0x3d, 0x88, 0x2e, 0xfc, 0xfd, 0xfe, 0xa0, 0xaf, 0x81, 0x65, 0x56, 0x03, 0xb5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xee, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x60, 0x08, 0x04, 0x29, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x1e, 0xf3, 0xd7, 0x98, 0xf9, 0x7d, 0xba, 0x18, 0x33, 0x23, 0x83, 0xea, 0x65, 0x40, 0x27, 0xbe, 0xc4, 0x62, 0x86, 0x96, 0x88, 0xac, 0xa0, 0x06, 0x5b, 0xb1, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xca, 0xe3, 0x39, 0xe2, 0x4f, 0x6d, 0x60, 0x98, 0xec, 0xbe, 0x73, 0x11, 0x00, 0x3d, 0xd4, 0xf8, 0x02, 0x05, 0x8b, 0x9d, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_601(ch_601, ch_601 + sizeof(ch_601) -1);
CDataStream stream_601(vch_601, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_601;
stream_601 >> txHist_601;

if(block.vtx[0]->GetHash() == txHist_601.GetHash() && nHeight == 1265194) {
return true;
}
unsigned char ch_602[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xca, 0x4d, 0x13, 0x04, 0x54, 0x46, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0xe8, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_602(ch_602, ch_602 + sizeof(ch_602) -1);
CDataStream stream_602(vch_602, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_602;
stream_602 >> txHist_602;

if(block.vtx[0]->GetHash() == txHist_602.GetHash() && nHeight == 1265098) {
return true;
}
unsigned char ch_603[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3b, 0x4e, 0x13, 0x04, 0xf8, 0x6c, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa5, 0x19, 0x88, 0xeb, 0xb7, 0xed, 0xa0, 0x92, 0x81, 0x48, 0x8c, 0xd5, 0xa1, 0x6a, 0xed, 0x5a, 0x33, 0xe9, 0xf8, 0xc6, 0x2f, 0x14, 0x3a, 0x0d, 0xe9, 0xbf, 0xed, 0x97, 0xc8, 0x6e, 0x3d, 0xee, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x88, 0x8e, 0xde, 0x8c, 0x69, 0x75, 0x88, 0x7e, 0xc6, 0x71, 0x69, 0x5f, 0x5f, 0xfd, 0x04, 0x03, 0x49, 0x87, 0x21, 0xb6, 0xb5, 0xd6, 0x0f, 0x58, 0x57, 0x0b, 0x0d, 0x57, 0xb7, 0x15, 0x5a, 0x4e, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_603(ch_603, ch_603 + sizeof(ch_603) -1);
CDataStream stream_603(vch_603, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_603;
stream_603 >> txHist_603;

if(block.vtx[0]->GetHash() == txHist_603.GetHash() && nHeight == 1265211) {
return true;
}
unsigned char ch_604[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x46, 0x4e, 0x13, 0x04, 0xea, 0x6e, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xff, 0x28, 0x08, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_604(ch_604, ch_604 + sizeof(ch_604) -1);
CDataStream stream_604(vch_604, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_604;
stream_604 >> txHist_604;

if(block.vtx[0]->GetHash() == txHist_604.GetHash() && nHeight == 1265222) {
return true;
}
unsigned char ch_605[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc6, 0x4d, 0x13, 0x04, 0x4b, 0x45, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x09, 0x31, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_605(ch_605, ch_605 + sizeof(ch_605) -1);
CDataStream stream_605(vch_605, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_605;
stream_605 >> txHist_605;

if(block.vtx[0]->GetHash() == txHist_605.GetHash() && nHeight == 1265094) {
return true;
}
unsigned char ch_606[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x44, 0x4e, 0x13, 0x04, 0x8c, 0x6e, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x0b, 0x7d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_606(ch_606, ch_606 + sizeof(ch_606) -1);
CDataStream stream_606(vch_606, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_606;
stream_606 >> txHist_606;

if(block.vtx[0]->GetHash() == txHist_606.GetHash() && nHeight == 1265220) {
return true;
}
unsigned char ch_607[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x26, 0x4e, 0x13, 0x04, 0xa7, 0x62, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x09, 0xc4, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x0e, 0x02, 0xc3, 0xf5, 0x0b, 0x72, 0xb1, 0x9a, 0x47, 0x7f, 0xb0, 0x93, 0xa6, 0x3a, 0x11, 0x61, 0x33, 0xb3, 0xb9, 0xf0, 0xb6, 0x1d, 0xbc, 0xa9, 0x78, 0x58, 0xa1, 0x6a, 0x3a, 0xe2, 0xf9, 0x15, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_607(ch_607, ch_607 + sizeof(ch_607) -1);
CDataStream stream_607(vch_607, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_607;
stream_607 >> txHist_607;

if(block.vtx[0]->GetHash() == txHist_607.GetHash() && nHeight == 1265190) {
return true;
}
unsigned char ch_608[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xdd, 0x4d, 0x13, 0x04, 0xc4, 0x4b, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x88, 0xd7, 0x63, 0x4c, 0xf3, 0xb4, 0x0f, 0x84, 0xf2, 0xfd, 0x38, 0x07, 0x20, 0x3d, 0x15, 0x0c, 0xca, 0x58, 0x9d, 0xac, 0xcf, 0x09, 0x49, 0xea, 0x20, 0xbe, 0x1b, 0x98, 0xaa, 0x0e, 0x67, 0x41, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xfe, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_608(ch_608, ch_608 + sizeof(ch_608) -1);
CDataStream stream_608(vch_608, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_608;
stream_608 >> txHist_608;

if(block.vtx[0]->GetHash() == txHist_608.GetHash() && nHeight == 1265117) {
return true;
}
unsigned char ch_609[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x41, 0x4e, 0x13, 0x04, 0xcb, 0x6d, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x63, 0x55, 0x65, 0x8a, 0xea, 0xcd, 0x4c, 0x89, 0x7d, 0xe3, 0x77, 0x6f, 0xd6, 0xba, 0x68, 0x8d, 0x4e, 0xcf, 0x59, 0x5d, 0xa7, 0xe5, 0xd0, 0x84, 0x10, 0xf4, 0x0d, 0xcf, 0x11, 0xbe, 0x14, 0xbf, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_609(ch_609, ch_609 + sizeof(ch_609) -1);
CDataStream stream_609(vch_609, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_609;
stream_609 >> txHist_609;

if(block.vtx[0]->GetHash() == txHist_609.GetHash() && nHeight == 1265217) {
return true;
}
unsigned char ch_610[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc2, 0x4d, 0x13, 0x04, 0x6d, 0x44, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xff, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe7, 0x9a, 0x9d, 0x70, 0x7f, 0xab, 0xd9, 0x2b, 0x42, 0x7a, 0x53, 0x94, 0xf5, 0x65, 0x5c, 0x27, 0x24, 0x56, 0x1d, 0xa2, 0x6e, 0x3f, 0x65, 0x82, 0x93, 0xe6, 0x99, 0x33, 0xf0, 0x06, 0x4c, 0xf8, 0x30, 0xdd, 0x65, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_610(ch_610, ch_610 + sizeof(ch_610) -1);
CDataStream stream_610(vch_610, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_610;
stream_610 >> txHist_610;

if(block.vtx[0]->GetHash() == txHist_610.GetHash() && nHeight == 1265090) {
return true;
}
unsigned char ch_611[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x39, 0x4e, 0x13, 0x04, 0x37, 0x6b, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc0, 0x06, 0x30, 0x5f, 0x03, 0xf8, 0x24, 0xb9, 0xf2, 0xe1, 0x02, 0xa4, 0xe5, 0x7c, 0x4c, 0x89, 0x71, 0x2d, 0x50, 0xfa, 0xfe, 0x0f, 0xb4, 0xee, 0x19, 0x08, 0x30, 0xbf, 0xf8, 0x62, 0xc1, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_611(ch_611, ch_611 + sizeof(ch_611) -1);
CDataStream stream_611(vch_611, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_611;
stream_611 >> txHist_611;

if(block.vtx[0]->GetHash() == txHist_611.GetHash() && nHeight == 1265209) {
return true;
}
unsigned char ch_612[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x42, 0x4e, 0x13, 0x04, 0xd2, 0x6d, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfd, 0xa3, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x64, 0x5a, 0x11, 0xb4, 0x99, 0x96, 0xd7, 0x6d, 0x63, 0x9d, 0x3c, 0xee, 0x5e, 0xbb, 0x5b, 0xd7, 0xfc, 0x3e, 0x78, 0x44, 0xc7, 0x61, 0x15, 0x51, 0x86, 0x34, 0xc7, 0xe3, 0x55, 0xb4, 0xb5, 0x07, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_612(ch_612, ch_612 + sizeof(ch_612) -1);
CDataStream stream_612(vch_612, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_612;
stream_612 >> txHist_612;

if(block.vtx[0]->GetHash() == txHist_612.GetHash() && nHeight == 1265218) {
return true;
}
unsigned char ch_613[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x1f, 0x4e, 0x13, 0x04, 0x22, 0x60, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x0b, 0x2e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_613(ch_613, ch_613 + sizeof(ch_613) -1);
CDataStream stream_613(vch_613, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_613;
stream_613 >> txHist_613;

if(block.vtx[0]->GetHash() == txHist_613.GetHash() && nHeight == 1265183) {
return true;
}
unsigned char ch_614[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xdc, 0x4d, 0x13, 0x04, 0xc1, 0x4b, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x88, 0xd7, 0x63, 0x4c, 0xf3, 0xb4, 0x0f, 0x84, 0xf2, 0xfd, 0x38, 0x07, 0x20, 0x3d, 0x15, 0x0c, 0xca, 0x58, 0x9d, 0xac, 0xcf, 0x09, 0x49, 0xea, 0x20, 0xbe, 0x1b, 0x98, 0xaa, 0x0e, 0x67, 0x41, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x1a, 0x02, 0xdc, 0x08, 0xea, 0xf4, 0x8b, 0xc2, 0x5e, 0x1f, 0xe5, 0x8a, 0x17, 0xfe, 0xbb, 0xb2, 0x6c, 0x12, 0x61, 0xd7, 0x9b, 0x7c, 0xd2, 0xaf, 0xc3, 0x99, 0x21, 0xc2, 0x09, 0xee, 0xbf, 0xdd, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_614(ch_614, ch_614 + sizeof(ch_614) -1);
CDataStream stream_614(vch_614, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_614;
stream_614 >> txHist_614;

if(block.vtx[0]->GetHash() == txHist_614.GetHash() && nHeight == 1265116) {
return true;
}
unsigned char ch_615[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x20, 0x4e, 0x13, 0x04, 0x97, 0x60, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xfa, 0xc4, 0x75, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x44, 0x69, 0xca, 0xe3, 0xe4, 0x9e, 0x1d, 0x12, 0x39, 0x82, 0x69, 0x25, 0xff, 0x0e, 0xbc, 0xff, 0xea, 0x16, 0xea, 0xca, 0x55, 0xa5, 0x9b, 0x17, 0x27, 0x7e, 0xbb, 0xad, 0x88, 0x7b, 0x40, 0xd7, 0xa8, 0x34, 0x69, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_615(ch_615, ch_615 + sizeof(ch_615) -1);
CDataStream stream_615(vch_615, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_615;
stream_615 >> txHist_615;

if(block.vtx[0]->GetHash() == txHist_615.GetHash() && nHeight == 1265184) {
return true;
}
unsigned char ch_616[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xbe, 0x4d, 0x13, 0x04, 0x2b, 0x43, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x03, 0x3d, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x5f, 0xa0, 0x75, 0xa2, 0x90, 0xb4, 0x21, 0xcd, 0x9c, 0xbc, 0xae, 0x6f, 0xe9, 0x14, 0x90, 0x0e, 0x7d, 0x36, 0x9f, 0x91, 0xfc, 0x78, 0xc9, 0x0b, 0x7e, 0x24, 0x31, 0xbf, 0x1c, 0x17, 0xc1, 0xa1, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_616(ch_616, ch_616 + sizeof(ch_616) -1);
CDataStream stream_616(vch_616, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_616;
stream_616 >> txHist_616;

if(block.vtx[0]->GetHash() == txHist_616.GetHash() && nHeight == 1265086) {
return true;
}
unsigned char ch_617[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x38, 0x4e, 0x13, 0x04, 0xdd, 0x6a, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x09, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_617(ch_617, ch_617 + sizeof(ch_617) -1);
CDataStream stream_617(vch_617, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_617;
stream_617 >> txHist_617;

if(block.vtx[0]->GetHash() == txHist_617.GetHash() && nHeight == 1265208) {
return true;
}
unsigned char ch_618[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1e, 0x4e, 0x13, 0x04, 0xe8, 0x5f, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x46, 0x25, 0x13, 0x19, 0xa4, 0x5a, 0x8c, 0x19, 0x4f, 0xd9, 0xd2, 0x05, 0xed, 0xd0, 0x1c, 0x58, 0x43, 0x24, 0xea, 0x58, 0x20, 0x02, 0x44, 0x30, 0x47, 0x6a, 0x00, 0x00, 0x00, 0x01, 0xae, 0x6e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0d, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_618(ch_618, ch_618 + sizeof(ch_618) -1);
CDataStream stream_618(vch_618, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_618;
stream_618 >> txHist_618;

if(block.vtx[0]->GetHash() == txHist_618.GetHash() && nHeight == 1265182) {
return true;
}
unsigned char ch_619[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xee, 0x4d, 0x13, 0x04, 0x3c, 0x51, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x03, 0xe5, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe0, 0xf0, 0xde, 0x83, 0xa8, 0xc4, 0x6b, 0x6f, 0xf2, 0xd8, 0xd3, 0x20, 0xa4, 0x28, 0x3a, 0x46, 0x75, 0xc5, 0x61, 0xe2, 0x51, 0x4a, 0xba, 0xdd, 0xdc, 0xf5, 0xca, 0x27, 0xa3, 0x8c, 0x3a, 0x84, 0xc0, 0x92, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_619(ch_619, ch_619 + sizeof(ch_619) -1);
CDataStream stream_619(vch_619, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_619;
stream_619 >> txHist_619;

if(block.vtx[0]->GetHash() == txHist_619.GetHash() && nHeight == 1265134) {
return true;
}
unsigned char ch_620[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xdb, 0x4d, 0x13, 0x04, 0xf2, 0x4a, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf9, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_620(ch_620, ch_620 + sizeof(ch_620) -1);
CDataStream stream_620(vch_620, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_620;
stream_620 >> txHist_620;

if(block.vtx[0]->GetHash() == txHist_620.GetHash() && nHeight == 1265115) {
return true;
}
unsigned char ch_621[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3d, 0x4e, 0x13, 0x04, 0x0e, 0x6d, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd7, 0xd4, 0x91, 0x73, 0x0b, 0x09, 0x9e, 0x56, 0x28, 0xd0, 0x6e, 0xea, 0x52, 0x12, 0xa9, 0x40, 0xad, 0x4e, 0xd7, 0xe2, 0x65, 0x5f, 0xac, 0x82, 0x91, 0x54, 0xe5, 0xcc, 0xd8, 0x71, 0x41, 0x29, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0xff, 0xff, 0xff, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_621(ch_621, ch_621 + sizeof(ch_621) -1);
CDataStream stream_621(vch_621, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_621;
stream_621 >> txHist_621;

if(block.vtx[0]->GetHash() == txHist_621.GetHash() && nHeight == 1265213) {
return true;
}
unsigned char ch_622[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xba, 0x4d, 0x13, 0x04, 0xea, 0x41, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xff, 0xdb, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_622(ch_622, ch_622 + sizeof(ch_622) -1);
CDataStream stream_622(vch_622, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_622;
stream_622 >> txHist_622;

if(block.vtx[0]->GetHash() == txHist_622.GetHash() && nHeight == 1265082) {
return true;
}
unsigned char ch_623[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x37, 0x4e, 0x13, 0x04, 0xdc, 0x6a, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0xf2, 0x06, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_623(ch_623, ch_623 + sizeof(ch_623) -1);
CDataStream stream_623(vch_623, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_623;
stream_623 >> txHist_623;

if(block.vtx[0]->GetHash() == txHist_623.GetHash() && nHeight == 1265207) {
return true;
}
unsigned char ch_624[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x1d, 0x4e, 0x13, 0x04, 0xd6, 0x5f, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x09, 0xc4, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xfb, 0x37, 0xf0, 0x06, 0xf0, 0xd9, 0x6e, 0xd7, 0xd8, 0xd8, 0x15, 0x17, 0xf5, 0xcc, 0xa6, 0x46, 0x10, 0xb2, 0xa4, 0x8e, 0x74, 0x7f, 0x9d, 0x01, 0x44, 0x1d, 0x47, 0x56, 0xcb, 0xd0, 0xfb, 0xa7, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_624(ch_624, ch_624 + sizeof(ch_624) -1);
CDataStream stream_624(vch_624, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_624;
stream_624 >> txHist_624;

if(block.vtx[0]->GetHash() == txHist_624.GetHash() && nHeight == 1265181) {
return true;
}
unsigned char ch_625[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xec, 0x4d, 0x13, 0x04, 0x0c, 0x51, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xfa, 0xc4, 0x2e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_625(ch_625, ch_625 + sizeof(ch_625) -1);
CDataStream stream_625(vch_625, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_625;
stream_625 >> txHist_625;

if(block.vtx[0]->GetHash() == txHist_625.GetHash() && nHeight == 1265132) {
return true;
}
unsigned char ch_626[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc7, 0x4d, 0x13, 0x04, 0x54, 0x45, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_626(ch_626, ch_626 + sizeof(ch_626) -1);
CDataStream stream_626(vch_626, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_626;
stream_626 >> txHist_626;

if(block.vtx[0]->GetHash() == txHist_626.GetHash() && nHeight == 1265095) {
return true;
}
unsigned char ch_627[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x36, 0x4e, 0x13, 0x04, 0x6d, 0x6a, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfd, 0x1a, 0x89, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x8f, 0xcf, 0x98, 0x4c, 0xfa, 0x50, 0x5a, 0x78, 0xc4, 0x11, 0x4f, 0x51, 0xd5, 0xb0, 0x2b, 0x24, 0x6c, 0x24, 0x4e, 0x70, 0x60, 0x30, 0x73, 0x99, 0x6b, 0x55, 0x07, 0xa3, 0x08, 0xee, 0x87, 0x44, 0x58, 0xc7, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_627(ch_627, ch_627 + sizeof(ch_627) -1);
CDataStream stream_627(vch_627, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_627;
stream_627 >> txHist_627;

if(block.vtx[0]->GetHash() == txHist_627.GetHash() && nHeight == 1265206) {
return true;
}
unsigned char ch_628[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xea, 0x4d, 0x13, 0x04, 0xab, 0x50, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7c, 0xc3, 0x80, 0x26, 0xb6, 0x49, 0xef, 0x4a, 0x91, 0xe0, 0x32, 0x81, 0xf2, 0x3c, 0x28, 0xff, 0x80, 0xaf, 0x30, 0xf2, 0x7b, 0x66, 0xf3, 0x18, 0x84, 0x20, 0xea, 0x63, 0xfe, 0x66, 0x20, 0x87, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x93, 0xa0, 0x11, 0x57, 0xfa, 0xf6, 0x23, 0xf8, 0x1a, 0xf7, 0xa4, 0xc8, 0x27, 0x01, 0xc1, 0x52, 0xd5, 0xea, 0x3d, 0xa1, 0x0f, 0x89, 0xd5, 0xcd, 0xb7, 0xbf, 0x18, 0xe6, 0x99, 0xe0, 0x4d, 0x7f, 0xc0, 0x3b, 0x63, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_628(ch_628, ch_628 + sizeof(ch_628) -1);
CDataStream stream_628(vch_628, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_628;
stream_628 >> txHist_628;

if(block.vtx[0]->GetHash() == txHist_628.GetHash() && nHeight == 1265130) {
return true;
}
unsigned char ch_629[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x95, 0x4d, 0x13, 0x04, 0x8e, 0x38, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0x2f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_629(ch_629, ch_629 + sizeof(ch_629) -1);
CDataStream stream_629(vch_629, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_629;
stream_629 >> txHist_629;

if(block.vtx[0]->GetHash() == txHist_629.GetHash() && nHeight == 1265045) {
return true;
}
unsigned char ch_630[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc3, 0x4d, 0x13, 0x04, 0x89, 0x44, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x09, 0xc4, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_630(ch_630, ch_630 + sizeof(ch_630) -1);
CDataStream stream_630(vch_630, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_630;
stream_630 >> txHist_630;

if(block.vtx[0]->GetHash() == txHist_630.GetHash() && nHeight == 1265091) {
return true;
}
unsigned char ch_631[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x09, 0x4e, 0x13, 0x04, 0x91, 0x59, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0xd2, 0x0e, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x00, 0xa1, 0xc4, 0x07, 0x9a, 0x6e, 0x24, 0xfa, 0x44, 0x2c, 0xcf, 0x10, 0x94, 0xe9, 0x5f, 0x58, 0xd0, 0xbc, 0x26, 0xff, 0xc9, 0x63, 0x58, 0xeb, 0x93, 0x2f, 0xae, 0x9c, 0x80, 0x26, 0xad, 0xce, 0xb8, 0x78, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_631(ch_631, ch_631 + sizeof(ch_631) -1);
CDataStream stream_631(vch_631, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_631;
stream_631 >> txHist_631;

if(block.vtx[0]->GetHash() == txHist_631.GetHash() && nHeight == 1265161) {
return true;
}
unsigned char ch_632[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xe7, 0x4d, 0x13, 0x04, 0x6b, 0x4f, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xfa, 0xc4, 0x46, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe8, 0x41, 0x07, 0xa4, 0xd4, 0xd2, 0x0b, 0x62, 0x5b, 0x7c, 0x43, 0x6d, 0x1f, 0xac, 0xcc, 0x98, 0x90, 0x08, 0xeb, 0xa1, 0xd9, 0x56, 0x5d, 0xfc, 0x0c, 0x14, 0xad, 0x86, 0x93, 0x1f, 0xae, 0x32, 0x50, 0x32, 0x69, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_632(ch_632, ch_632 + sizeof(ch_632) -1);
CDataStream stream_632(vch_632, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_632;
stream_632 >> txHist_632;

if(block.vtx[0]->GetHash() == txHist_632.GetHash() && nHeight == 1265127) {
return true;
}
unsigned char ch_633[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x33, 0x4e, 0x13, 0x04, 0x55, 0x67, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xf5, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_633(ch_633, ch_633 + sizeof(ch_633) -1);
CDataStream stream_633(vch_633, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_633;
stream_633 >> txHist_633;

if(block.vtx[0]->GetHash() == txHist_633.GetHash() && nHeight == 1265203) {
return true;
}
unsigned char ch_634[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x90, 0x4d, 0x13, 0x04, 0x60, 0x36, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfd, 0x4e, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_634(ch_634, ch_634 + sizeof(ch_634) -1);
CDataStream stream_634(vch_634, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_634;
stream_634 >> txHist_634;

if(block.vtx[0]->GetHash() == txHist_634.GetHash() && nHeight == 1265040) {
return true;
}
unsigned char ch_635[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x56, 0x4d, 0x13, 0x04, 0x60, 0x21, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x05, 0x89, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe0, 0x7d, 0x16, 0x63, 0x5c, 0xa5, 0xe9, 0x7e, 0x35, 0x23, 0x17, 0x40, 0xa6, 0xf5, 0x31, 0xa6, 0x95, 0x8b, 0xa1, 0x56, 0x30, 0x4e, 0xaa, 0xa1, 0x76, 0xc1, 0x94, 0x2f, 0x0d, 0x80, 0xd4, 0xbf, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_635(ch_635, ch_635 + sizeof(ch_635) -1);
CDataStream stream_635(vch_635, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_635;
stream_635 >> txHist_635;

if(block.vtx[0]->GetHash() == txHist_635.GetHash() && nHeight == 1264982) {
return true;
}
unsigned char ch_636[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2f, 0x4e, 0x13, 0x04, 0x02, 0x66, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x00, 0x00, 0x1b, 0xea, 0xca, 0x73, 0x45, 0x52, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0d, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_636(ch_636, ch_636 + sizeof(ch_636) -1);
CDataStream stream_636(vch_636, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_636;
stream_636 >> txHist_636;

if(block.vtx[0]->GetHash() == txHist_636.GetHash() && nHeight == 1265199) {
return true;
}
unsigned char ch_637[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x8e, 0x4d, 0x13, 0x04, 0x34, 0x36, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf9, 0x61, 0xfe, 0x99, 0x1c, 0x17, 0xaa, 0xf7, 0xe5, 0xca, 0xd0, 0x32, 0xdc, 0xaa, 0xa3, 0x49, 0xf3, 0x4a, 0xe2, 0x70, 0x23, 0xae, 0xa5, 0xd4, 0x1d, 0x12, 0x93, 0x80, 0x6a, 0xb7, 0x19, 0xcd, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x5d, 0xf2, 0xc1, 0x1e, 0xb0, 0x89, 0xbe, 0xf6, 0x80, 0x9f, 0x8c, 0xd0, 0xa0, 0x88, 0xcc, 0x77, 0x69, 0x92, 0x50, 0xe6, 0x50, 0x5d, 0xc8, 0xda, 0xc0, 0xaa, 0x2d, 0xa0, 0x54, 0x95, 0x19, 0x03, 0x30, 0x33, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_637(ch_637, ch_637 + sizeof(ch_637) -1);
CDataStream stream_637(vch_637, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_637;
stream_637 >> txHist_637;

if(block.vtx[0]->GetHash() == txHist_637.GetHash() && nHeight == 1265038) {
return true;
}
unsigned char ch_638[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb7, 0x4d, 0x13, 0x04, 0x72, 0x41, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xff, 0x0e, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd6, 0x00, 0xad, 0xb2, 0x4b, 0xf0, 0x8b, 0xc2, 0x56, 0xa8, 0xb6, 0xd9, 0x44, 0x8e, 0x7b, 0xca, 0x66, 0xfb, 0x87, 0xdd, 0x40, 0x00, 0x26, 0x69, 0xc8, 0x9e, 0xf7, 0x0e, 0x7d, 0x8c, 0x6f, 0xe2, 0xd0, 0x29, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_638(ch_638, ch_638 + sizeof(ch_638) -1);
CDataStream stream_638(vch_638, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_638;
stream_638 >> txHist_638;

if(block.vtx[0]->GetHash() == txHist_638.GetHash() && nHeight == 1265079) {
return true;
}
unsigned char ch_639[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x55, 0x4d, 0x13, 0x04, 0xb5, 0x20, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xff, 0xc7, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xc8, 0xee, 0x38, 0xc2, 0xc7, 0x2d, 0x42, 0xd0, 0x93, 0xc4, 0xc5, 0xb8, 0x80, 0xd1, 0x91, 0x1a, 0xa4, 0x53, 0xf9, 0x04, 0xf0, 0x12, 0xfb, 0x35, 0x6f, 0xc1, 0xb8, 0x33, 0xd2, 0xdf, 0xbf, 0xbe, 0xf8, 0xe2, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_639(ch_639, ch_639 + sizeof(ch_639) -1);
CDataStream stream_639(vch_639, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_639;
stream_639 >> txHist_639;

if(block.vtx[0]->GetHash() == txHist_639.GetHash() && nHeight == 1264981) {
return true;
}
unsigned char ch_640[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x2e, 0x4e, 0x13, 0x04, 0xed, 0x65, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfd, 0xff, 0x1d, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x0d, 0xf0, 0x09, 0x80, 0x49, 0xed, 0x59, 0x8a, 0x6b, 0xad, 0xbc, 0x57, 0x6a, 0x9c, 0x21, 0x1c, 0x0e, 0xc5, 0xf9, 0xb9, 0xe5, 0x5b, 0xfb, 0x26, 0xcc, 0x00, 0x08, 0x2e, 0x92, 0xd4, 0x79, 0x5d, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_640(ch_640, ch_640 + sizeof(ch_640) -1);
CDataStream stream_640(vch_640, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_640;
stream_640 >> txHist_640;

if(block.vtx[0]->GetHash() == txHist_640.GetHash() && nHeight == 1265198) {
return true;
}
unsigned char ch_641[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x06, 0x4e, 0x13, 0x04, 0xb2, 0x58, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x26, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_641(ch_641, ch_641 + sizeof(ch_641) -1);
CDataStream stream_641(vch_641, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_641;
stream_641 >> txHist_641;

if(block.vtx[0]->GetHash() == txHist_641.GetHash() && nHeight == 1265158) {
return true;
}
unsigned char ch_642[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x52, 0x4d, 0x13, 0x04, 0xf2, 0x1f, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0x49, 0x1a, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa5, 0x53, 0xd6, 0x39, 0x8b, 0x16, 0x13, 0x5e, 0x0a, 0xcc, 0xc0, 0xf3, 0x27, 0x5d, 0x5e, 0xc8, 0x71, 0xb3, 0xb1, 0x00, 0xae, 0x45, 0x75, 0xbc, 0x0b, 0x91, 0xc2, 0x7f, 0xd2, 0x00, 0xc7, 0xf2, 0x10, 0xc0, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_642(ch_642, ch_642 + sizeof(ch_642) -1);
CDataStream stream_642(vch_642, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_642;
stream_642 >> txHist_642;

if(block.vtx[0]->GetHash() == txHist_642.GetHash() && nHeight == 1264978) {
return true;
}
unsigned char ch_643[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2c, 0x4e, 0x13, 0x04, 0xb7, 0x64, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf9, 0x24, 0x2f, 0xf1, 0x38, 0xe0, 0xe8, 0x0e, 0x79, 0x64, 0xe5, 0xe7, 0xd8, 0x9d, 0x97, 0x79, 0x77, 0xe3, 0x7a, 0x96, 0xfc, 0x60, 0x1e, 0xf8, 0x04, 0x23, 0xcd, 0xae, 0xaa, 0x9f, 0xe0, 0xfb, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x0d, 0x89, 0x7a, 0xdf, 0x3d, 0x31, 0x80, 0x15, 0x2a, 0x5d, 0x1c, 0xe7, 0x19, 0x5a, 0x9b, 0xea, 0x85, 0xe0, 0xe8, 0x43, 0x6f, 0x4a, 0x67, 0xdd, 0x47, 0x3f, 0xa6, 0x45, 0x19, 0x8c, 0xaf, 0x9e, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_643(ch_643, ch_643 + sizeof(ch_643) -1);
CDataStream stream_643(vch_643, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_643;
stream_643 >> txHist_643;

if(block.vtx[0]->GetHash() == txHist_643.GetHash() && nHeight == 1265196) {
return true;
}
unsigned char ch_644[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x00, 0x4e, 0x13, 0x04, 0x24, 0x57, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0x7d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_644(ch_644, ch_644 + sizeof(ch_644) -1);
CDataStream stream_644(vch_644, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_644;
stream_644 >> txHist_644;

if(block.vtx[0]->GetHash() == txHist_644.GetHash() && nHeight == 1265152) {
return true;
}
unsigned char ch_645[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x15, 0x4e, 0x13, 0x04, 0x04, 0x5e, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0x98, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xfd, 0xe2, 0x76, 0xa9, 0xb9, 0x81, 0xb9, 0xe2, 0x5b, 0x99, 0x6c, 0x41, 0xb7, 0x45, 0xc9, 0xb8, 0x47, 0xff, 0x6b, 0xfc, 0x90, 0x68, 0xba, 0x34, 0x19, 0x5d, 0x2c, 0x15, 0xa9, 0x74, 0x40, 0xa1, 0x48, 0x55, 0xf8, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_645(ch_645, ch_645 + sizeof(ch_645) -1);
CDataStream stream_645(vch_645, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_645;
stream_645 >> txHist_645;

if(block.vtx[0]->GetHash() == txHist_645.GetHash() && nHeight == 1265173) {
return true;
}
unsigned char ch_646[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x70, 0x4d, 0x13, 0x04, 0xec, 0x29, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x08, 0x2e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x25, 0x63, 0xed, 0xe8, 0xd1, 0x65, 0x2c, 0xb3, 0xcf, 0x5b, 0x86, 0x2c, 0x62, 0xcb, 0x11, 0x65, 0xc5, 0x36, 0x53, 0x6f, 0xa5, 0x0d, 0xb8, 0xbe, 0x93, 0xcf, 0xef, 0xdd, 0x9e, 0xbf, 0xe3, 0xd9, 0xe0, 0xda, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_646(ch_646, ch_646 + sizeof(ch_646) -1);
CDataStream stream_646(vch_646, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_646;
stream_646 >> txHist_646;

if(block.vtx[0]->GetHash() == txHist_646.GetHash() && nHeight == 1265008) {
return true;
}
unsigned char ch_647[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x84, 0x4d, 0x13, 0x04, 0x41, 0x31, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_647(ch_647, ch_647 + sizeof(ch_647) -1);
CDataStream stream_647(vch_647, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_647;
stream_647 >> txHist_647;

if(block.vtx[0]->GetHash() == txHist_647.GetHash() && nHeight == 1265028) {
return true;
}
unsigned char ch_648[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x9a, 0x4d, 0x13, 0x04, 0x0e, 0x3b, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x1f, 0x3b, 0x13, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x69, 0x92, 0x10, 0x2a, 0xa4, 0x46, 0x5a, 0x91, 0x5b, 0xa7, 0x1d, 0x67, 0x0c, 0x78, 0x12, 0xfc, 0x01, 0xfa, 0xd4, 0xa3, 0x1e, 0xdf, 0x16, 0xb6, 0x69, 0x85, 0x9e, 0x5d, 0x16, 0x05, 0x15, 0xd3, 0x98, 0x43, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_648(ch_648, ch_648 + sizeof(ch_648) -1);
CDataStream stream_648(vch_648, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_648;
stream_648 >> txHist_648;

if(block.vtx[0]->GetHash() == txHist_648.GetHash() && nHeight == 1265050) {
return true;
}
unsigned char ch_649[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xac, 0x4d, 0x13, 0x04, 0x2e, 0x3f, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_649(ch_649, ch_649 + sizeof(ch_649) -1);
CDataStream stream_649(vch_649, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_649;
stream_649 >> txHist_649;

if(block.vtx[0]->GetHash() == txHist_649.GetHash() && nHeight == 1265068) {
return true;
}
unsigned char ch_650[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x83, 0x4d, 0x13, 0x04, 0x12, 0x31, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xeb, 0x0a, 0xd2, 0xc2, 0x97, 0x2d, 0x2f, 0x57, 0x10, 0x66, 0x50, 0x6e, 0x2d, 0x0c, 0xce, 0x89, 0x49, 0x84, 0x08, 0xbd, 0x14, 0x1d, 0xa0, 0x2c, 0x23, 0x1d, 0x94, 0xc1, 0xc5, 0xa3, 0x0b, 0x64, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_650(ch_650, ch_650 + sizeof(ch_650) -1);
CDataStream stream_650(vch_650, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_650;
stream_650 >> txHist_650;

if(block.vtx[0]->GetHash() == txHist_650.GetHash() && nHeight == 1265027) {
return true;
}
unsigned char ch_651[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x27, 0x4e, 0x13, 0x04, 0xad, 0x62, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xfa, 0xc4, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_651(ch_651, ch_651 + sizeof(ch_651) -1);
CDataStream stream_651(vch_651, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_651;
stream_651 >> txHist_651;

if(block.vtx[0]->GetHash() == txHist_651.GetHash() && nHeight == 1265191) {
return true;
}
unsigned char ch_652[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x6d, 0x4d, 0x13, 0x04, 0x7a, 0x28, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0x31, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe9, 0xde, 0x37, 0xe2, 0x54, 0xf6, 0x21, 0x4e, 0x1d, 0x2a, 0xf1, 0xd2, 0x1e, 0x81, 0x8a, 0xdc, 0x87, 0x96, 0xb0, 0x97, 0xcf, 0x5f, 0xe4, 0x2d, 0x0e, 0x95, 0x18, 0x29, 0x09, 0x24, 0x48, 0x7c, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_652(ch_652, ch_652 + sizeof(ch_652) -1);
CDataStream stream_652(vch_652, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_652;
stream_652 >> txHist_652;

if(block.vtx[0]->GetHash() == txHist_652.GetHash() && nHeight == 1265005) {
return true;
}
unsigned char ch_653[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x2f, 0x4c, 0x13, 0x04, 0x1c, 0xb8, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x02, 0x24, 0x09, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_653(ch_653, ch_653 + sizeof(ch_653) -1);
CDataStream stream_653(vch_653, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_653;
stream_653 >> txHist_653;

if(block.vtx[0]->GetHash() == txHist_653.GetHash() && nHeight == 1264687) {
return true;
}
unsigned char ch_654[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf2, 0x4d, 0x13, 0x04, 0x8a, 0x52, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x02, 0xe0, 0x63, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xfe, 0x90, 0x18, 0x53, 0x75, 0x4b, 0xe6, 0x3d, 0x43, 0xbb, 0xa4, 0xe2, 0x23, 0x71, 0x75, 0x29, 0x7c, 0x24, 0xb9, 0x1e, 0xd5, 0x33, 0x64, 0x9a, 0x57, 0x72, 0xbe, 0x06, 0xf3, 0xf8, 0xd9, 0x17, 0x98, 0x05, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_654(ch_654, ch_654 + sizeof(ch_654) -1);
CDataStream stream_654(vch_654, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_654;
stream_654 >> txHist_654;

if(block.vtx[0]->GetHash() == txHist_654.GetHash() && nHeight == 1265138) {
return true;
}
unsigned char ch_655[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x27, 0x4c, 0x13, 0x04, 0x8f, 0xb6, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x18, 0x66, 0x3a, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe3, 0x85, 0xdb, 0x4a, 0x0a, 0xdf, 0x9a, 0x2d, 0x53, 0xe5, 0x00, 0x6f, 0x5a, 0xf0, 0x8c, 0xe8, 0xb7, 0x5d, 0x32, 0x6c, 0xa6, 0x92, 0x7d, 0x70, 0x68, 0xdf, 0xb7, 0xd9, 0xa0, 0xbf, 0x5a, 0x26, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_655(ch_655, ch_655 + sizeof(ch_655) -1);
CDataStream stream_655(vch_655, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_655;
stream_655 >> txHist_655;

if(block.vtx[0]->GetHash() == txHist_655.GetHash() && nHeight == 1264679) {
return true;
}
unsigned char ch_656[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x23, 0x4c, 0x13, 0x04, 0xa2, 0xb4, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf9, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x75, 0x6b, 0x2e, 0xa1, 0xac, 0x5e, 0x68, 0x0f, 0x9b, 0x64, 0x99, 0x6d, 0x52, 0x26, 0xf0, 0xab, 0xe5, 0x14, 0xae, 0x32, 0x30, 0xeb, 0xd1, 0xa6, 0x32, 0x4f, 0x64, 0x5e, 0x45, 0xfb, 0x18, 0xf0, 0x68, 0x20, 0x63, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_656(ch_656, ch_656 + sizeof(ch_656) -1);
CDataStream stream_656(vch_656, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_656;
stream_656 >> txHist_656;

if(block.vtx[0]->GetHash() == txHist_656.GetHash() && nHeight == 1264675) {
return true;
}
unsigned char ch_657[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd6, 0x4d, 0x13, 0x04, 0xb4, 0x49, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd9, 0x46, 0xae, 0x6a, 0x33, 0xcb, 0x55, 0xd3, 0x39, 0xdc, 0x7c, 0x38, 0xcd, 0x24, 0xb1, 0xe7, 0x76, 0xce, 0xf8, 0x9a, 0x51, 0x48, 0xcf, 0xfa, 0xe7, 0x60, 0x37, 0xd9, 0xb4, 0x9f, 0xf2, 0xdd, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xfe, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xb7, 0xce, 0x5b, 0x84, 0x71, 0x36, 0xeb, 0xa1, 0xf7, 0x15, 0xd6, 0xad, 0xaa, 0x58, 0x02, 0xb9, 0x16, 0x59, 0x19, 0x99, 0x35, 0x06, 0x47, 0x64, 0x1e, 0x30, 0xe3, 0xde, 0x43, 0x10, 0x30, 0x0e, 0xf0, 0x5e, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_657(ch_657, ch_657 + sizeof(ch_657) -1);
CDataStream stream_657(vch_657, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_657;
stream_657 >> txHist_657;

if(block.vtx[0]->GetHash() == txHist_657.GetHash() && nHeight == 1265110) {
return true;
}
unsigned char ch_658[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x1f, 0x4c, 0x13, 0x04, 0xee, 0xb3, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x13, 0x34, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x10, 0x46, 0x67, 0xc3, 0xb4, 0xed, 0x6b, 0x58, 0xd9, 0xe6, 0xfc, 0x2c, 0xb1, 0x35, 0x74, 0xaf, 0xb2, 0x7d, 0x82, 0xa7, 0xa4, 0x18, 0x81, 0x0c, 0x17, 0xee, 0xf7, 0xe9, 0x85, 0x4f, 0x0b, 0xe1, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_658(ch_658, ch_658 + sizeof(ch_658) -1);
CDataStream stream_658(vch_658, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_658;
stream_658 >> txHist_658;

if(block.vtx[0]->GetHash() == txHist_658.GetHash() && nHeight == 1264671) {
return true;
}
unsigned char ch_659[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd4, 0x4d, 0x13, 0x04, 0x11, 0x49, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_659(ch_659, ch_659 + sizeof(ch_659) -1);
CDataStream stream_659(vch_659, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_659;
stream_659 >> txHist_659;

if(block.vtx[0]->GetHash() == txHist_659.GetHash() && nHeight == 1265108) {
return true;
}
unsigned char ch_660[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd2, 0x4d, 0x13, 0x04, 0xd5, 0x48, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x19, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_660(ch_660, ch_660 + sizeof(ch_660) -1);
CDataStream stream_660(vch_660, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_660;
stream_660 >> txHist_660;

if(block.vtx[0]->GetHash() == txHist_660.GetHash() && nHeight == 1265106) {
return true;
}
unsigned char ch_661[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd0, 0x4d, 0x13, 0x04, 0xa6, 0x48, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x45, 0x52, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0d, 0x11, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_661(ch_661, ch_661 + sizeof(ch_661) -1);
CDataStream stream_661(vch_661, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_661;
stream_661 >> txHist_661;

if(block.vtx[0]->GetHash() == txHist_661.GetHash() && nHeight == 1265104) {
return true;
}
unsigned char ch_662[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x0e, 0x4e, 0x13, 0x04, 0x6a, 0x5b, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf4, 0x85, 0x7d, 0xfe, 0x3b, 0x73, 0x61, 0x66, 0x39, 0xd0, 0xb9, 0xf2, 0x0c, 0xca, 0x82, 0xd3, 0xa1, 0x4e, 0xbb, 0x8b, 0x64, 0xa6, 0x05, 0x3c, 0xd2, 0xd6, 0x00, 0x25, 0x5b, 0x64, 0xb0, 0xc8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xfe, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xbb, 0xa1, 0x38, 0x99, 0xec, 0xc3, 0x7f, 0x02, 0xa5, 0x3a, 0x3c, 0x0e, 0x57, 0x9f, 0xb7, 0x72, 0xb7, 0x85, 0xc0, 0x32, 0x25, 0x12, 0xca, 0x8c, 0xe0, 0xa3, 0x58, 0xbb, 0x0d, 0xd8, 0x28, 0x32, 0x18, 0x1a, 0x69, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_662(ch_662, ch_662 + sizeof(ch_662) -1);
CDataStream stream_662(vch_662, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_662;
stream_662 >> txHist_662;

if(block.vtx[0]->GetHash() == txHist_662.GetHash() && nHeight == 1265166) {
return true;
}
unsigned char ch_663[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x0c, 0x4e, 0x13, 0x04, 0xfa, 0x5a, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfa, 0xc2, 0x92, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa3, 0x74, 0xf7, 0xc7, 0xf0, 0x29, 0x95, 0x9c, 0x77, 0x63, 0x59, 0xd5, 0x18, 0xb1, 0x20, 0xb2, 0x25, 0xcc, 0x2e, 0x16, 0xf8, 0x3c, 0x37, 0x85, 0x6c, 0x09, 0x2c, 0xf6, 0x6e, 0xf5, 0x41, 0x4a, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_663(ch_663, ch_663 + sizeof(ch_663) -1);
CDataStream stream_663(vch_663, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_663;
stream_663 >> txHist_663;

if(block.vtx[0]->GetHash() == txHist_663.GetHash() && nHeight == 1265164) {
return true;
}
unsigned char ch_664[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xce, 0x4d, 0x13, 0x04, 0x2d, 0x48, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xfa, 0xc4, 0xee, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xba, 0x4e, 0x9f, 0x7f, 0xb8, 0x24, 0x12, 0x78, 0xc6, 0x4a, 0x35, 0xaa, 0x91, 0xa0, 0x94, 0x76, 0x92, 0x63, 0xd7, 0x02, 0x94, 0xdf, 0xa0, 0x44, 0x5f, 0x2d, 0x2a, 0x61, 0x9a, 0x13, 0xf6, 0x70, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_664(ch_664, ch_664 + sizeof(ch_664) -1);
CDataStream stream_664(vch_664, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_664;
stream_664 >> txHist_664;

if(block.vtx[0]->GetHash() == txHist_664.GetHash() && nHeight == 1265102) {
return true;
}
unsigned char ch_665[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xcb, 0x4d, 0x13, 0x04, 0xac, 0x46, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x54, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x03, 0x81, 0x21, 0x78, 0x11, 0xb2, 0x11, 0xcd, 0x6e, 0x0b, 0x7e, 0x66, 0x8b, 0x65, 0x0f, 0x56, 0x43, 0xfe, 0xd7, 0x1b, 0xd5, 0x07, 0x6a, 0x70, 0x34, 0xa9, 0xd5, 0x06, 0x9f, 0xfd, 0xb4, 0xe1, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_665(ch_665, ch_665 + sizeof(ch_665) -1);
CDataStream stream_665(vch_665, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_665;
stream_665 >> txHist_665;

if(block.vtx[0]->GetHash() == txHist_665.GetHash() && nHeight == 1265099) {
return true;
}
unsigned char ch_666[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf8, 0x4d, 0x13, 0x04, 0x56, 0x54, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0x4a, 0x1f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x1a, 0x8b, 0xa8, 0x6b, 0x67, 0xf7, 0x23, 0x7f, 0x32, 0x28, 0x5e, 0x50, 0x31, 0x0c, 0x6e, 0x67, 0xac, 0x86, 0xcb, 0xd3, 0x35, 0x3d, 0x77, 0x40, 0x82, 0xc7, 0x0f, 0xe9, 0x0d, 0x4a, 0xdb, 0xec, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_666(ch_666, ch_666 + sizeof(ch_666) -1);
CDataStream stream_666(vch_666, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_666;
stream_666 >> txHist_666;

if(block.vtx[0]->GetHash() == txHist_666.GetHash() && nHeight == 1265144) {
return true;
}
unsigned char ch_667[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf7, 0x4d, 0x13, 0x04, 0x38, 0x53, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xff, 0x19, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_667(ch_667, ch_667 + sizeof(ch_667) -1);
CDataStream stream_667(vch_667, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_667;
stream_667 >> txHist_667;

if(block.vtx[0]->GetHash() == txHist_667.GetHash() && nHeight == 1265143) {
return true;
}
unsigned char ch_668[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf5, 0x4d, 0x13, 0x04, 0xf2, 0x52, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x09, 0x1e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xcf, 0xd1, 0x44, 0x60, 0x65, 0xd1, 0x2d, 0x64, 0x6a, 0x2c, 0x49, 0xef, 0xab, 0xb1, 0x9f, 0x2f, 0xbb, 0x91, 0xad, 0x85, 0xf4, 0xfa, 0xee, 0x43, 0x44, 0xc7, 0xc5, 0xec, 0x1c, 0x36, 0x86, 0xed, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_668(ch_668, ch_668 + sizeof(ch_668) -1);
CDataStream stream_668(vch_668, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_668;
stream_668 >> txHist_668;

if(block.vtx[0]->GetHash() == txHist_668.GetHash() && nHeight == 1265141) {
return true;
}
unsigned char ch_669[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x8f, 0x4d, 0x13, 0x04, 0x56, 0x36, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfd, 0x7a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x63, 0x48, 0xf1, 0x8e, 0xe5, 0xc6, 0xb6, 0x2c, 0x04, 0x1f, 0x0e, 0xcf, 0xed, 0x03, 0x77, 0x7b, 0xb3, 0xba, 0xd2, 0xf2, 0xf7, 0xb6, 0x27, 0x12, 0x04, 0x6b, 0x09, 0x96, 0xc5, 0x1d, 0x81, 0x5f, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_669(ch_669, ch_669 + sizeof(ch_669) -1);
CDataStream stream_669(vch_669, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_669;
stream_669 >> txHist_669;

if(block.vtx[0]->GetHash() == txHist_669.GetHash() && nHeight == 1265039) {
return true;
}
unsigned char ch_670[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x92, 0x4d, 0x13, 0x04, 0xa1, 0x36, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfb, 0x1e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_670(ch_670, ch_670 + sizeof(ch_670) -1);
CDataStream stream_670(vch_670, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_670;
stream_670 >> txHist_670;

if(block.vtx[0]->GetHash() == txHist_670.GetHash() && nHeight == 1265042) {
return true;
}
unsigned char ch_671[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x8d, 0x4d, 0x13, 0x04, 0x5e, 0x35, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x0f, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_671(ch_671, ch_671 + sizeof(ch_671) -1);
CDataStream stream_671(vch_671, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_671;
stream_671 >> txHist_671;

if(block.vtx[0]->GetHash() == txHist_671.GetHash() && nHeight == 1265037) {
return true;
}
unsigned char ch_672[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x8c, 0x4d, 0x13, 0x04, 0x43, 0x35, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0xaf, 0x23, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd9, 0xfc, 0x13, 0x4e, 0x23, 0x2a, 0x67, 0x12, 0x6d, 0xf5, 0x48, 0xe4, 0x8c, 0x04, 0x20, 0xce, 0x24, 0x2f, 0xcf, 0x2d, 0x81, 0xb9, 0x58, 0x41, 0xb8, 0x5f, 0xa9, 0xbb, 0xee, 0xfd, 0x3e, 0x4c, 0x98, 0x05, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_672(ch_672, ch_672 + sizeof(ch_672) -1);
CDataStream stream_672(vch_672, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_672;
stream_672 >> txHist_672;

if(block.vtx[0]->GetHash() == txHist_672.GetHash() && nHeight == 1265036) {
return true;
}
unsigned char ch_673[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xfb, 0x4c, 0x13, 0x04, 0x72, 0xff, 0x36, 0x5b, 0x08, 0x57, 0xff, 0xfd, 0x1a, 0x12, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_673(ch_673, ch_673 + sizeof(ch_673) -1);
CDataStream stream_673(vch_673, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_673;
stream_673 >> txHist_673;

if(block.vtx[0]->GetHash() == txHist_673.GetHash() && nHeight == 1264891) {
return true;
}
unsigned char ch_674[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf7, 0x4c, 0x13, 0x04, 0x01, 0xff, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x1f, 0xe0, 0x06, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x3c, 0x45, 0x4b, 0xe8, 0x49, 0x89, 0xbf, 0x27, 0xba, 0x80, 0x6a, 0xf0, 0x2d, 0xaa, 0xe0, 0x50, 0x2b, 0xc9, 0x20, 0x0a, 0x8f, 0x08, 0x1a, 0x77, 0x8f, 0x6a, 0x43, 0x68, 0x10, 0xd5, 0x3b, 0xfa, 0x70, 0x33, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_674(ch_674, ch_674 + sizeof(ch_674) -1);
CDataStream stream_674(vch_674, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_674;
stream_674 >> txHist_674;

if(block.vtx[0]->GetHash() == txHist_674.GetHash() && nHeight == 1264887) {
return true;
}
unsigned char ch_675[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf1, 0x4c, 0x13, 0x04, 0x1a, 0xfd, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xfd, 0xd0, 0x82, 0x36, 0xa8, 0x2f, 0x71, 0xb3, 0x86, 0xf6, 0xc0, 0x19, 0xa2, 0x60, 0xed, 0xce, 0x1e, 0xd1, 0xd1, 0xaf, 0x5a, 0xff, 0x3c, 0xaa, 0xcd, 0x49, 0x30, 0xad, 0x09, 0x40, 0x05, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x51, 0xbe, 0x02, 0xa8, 0x6a, 0xa8, 0x16, 0x6f, 0xd2, 0xdf, 0xa4, 0x77, 0x7a, 0x5a, 0xe3, 0xf8, 0x1f, 0x64, 0xed, 0x48, 0x92, 0x46, 0xb1, 0x55, 0x63, 0x52, 0xf3, 0x64, 0x1e, 0xb6, 0x40, 0x0f, 0xc0, 0x92, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_675(ch_675, ch_675 + sizeof(ch_675) -1);
CDataStream stream_675(vch_675, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_675;
stream_675 >> txHist_675;

if(block.vtx[0]->GetHash() == txHist_675.GetHash() && nHeight == 1264881) {
return true;
}
unsigned char ch_676[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xed, 0x4d, 0x13, 0x04, 0x0f, 0x51, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x17, 0xbf, 0xfd, 0xf8, 0x85, 0xbd, 0x83, 0xe2, 0xde, 0xcf, 0x68, 0xa2, 0x55, 0x27, 0xbc, 0x90, 0x1d, 0x6e, 0x29, 0x46, 0xaf, 0xa0, 0xc0, 0x94, 0xb5, 0x46, 0x66, 0xa7, 0x92, 0x50, 0x37, 0x5b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x04, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_676(ch_676, ch_676 + sizeof(ch_676) -1);
CDataStream stream_676(vch_676, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_676;
stream_676 >> txHist_676;

if(block.vtx[0]->GetHash() == txHist_676.GetHash() && nHeight == 1265133) {
return true;
}
unsigned char ch_677[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xe4, 0x4d, 0x13, 0x04, 0x94, 0x4e, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x09, 0x2f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x2a, 0x6f, 0x74, 0xc6, 0xdb, 0x0e, 0x6f, 0x98, 0x2b, 0x61, 0xdc, 0xfe, 0x4c, 0xa7, 0x9a, 0xd9, 0x6f, 0x2f, 0x76, 0x3f, 0x70, 0xa4, 0x8c, 0x84, 0xf0, 0xc0, 0x37, 0xdd, 0x3a, 0xfa, 0xd7, 0x22, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_677(ch_677, ch_677 + sizeof(ch_677) -1);
CDataStream stream_677(vch_677, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_677;
stream_677 >> txHist_677;

if(block.vtx[0]->GetHash() == txHist_677.GetHash() && nHeight == 1265124) {
return true;
}
unsigned char ch_678[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x8a, 0x4d, 0x13, 0x04, 0x16, 0x33, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfd, 0x1a, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_678(ch_678, ch_678 + sizeof(ch_678) -1);
CDataStream stream_678(vch_678, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_678;
stream_678 >> txHist_678;

if(block.vtx[0]->GetHash() == txHist_678.GetHash() && nHeight == 1265034) {
return true;
}
unsigned char ch_679[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1a, 0x4d, 0x13, 0x04, 0xc0, 0x07, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x52, 0x70, 0x79, 0x87, 0x3d, 0xe1, 0x71, 0x56, 0xa8, 0x59, 0x00, 0x36, 0x56, 0x04, 0x62, 0x1f, 0xde, 0xcc, 0x65, 0x60, 0xed, 0x5b, 0x44, 0x09, 0x81, 0xc3, 0x9a, 0xad, 0xb9, 0xb2, 0xdd, 0xea, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_679(ch_679, ch_679 + sizeof(ch_679) -1);
CDataStream stream_679(vch_679, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_679;
stream_679 >> txHist_679;

if(block.vtx[0]->GetHash() == txHist_679.GetHash() && nHeight == 1264922) {
return true;
}
unsigned char ch_680[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x16, 0x4d, 0x13, 0x04, 0xbc, 0x05, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x19, 0x21, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_680(ch_680, ch_680 + sizeof(ch_680) -1);
CDataStream stream_680(vch_680, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_680;
stream_680 >> txHist_680;

if(block.vtx[0]->GetHash() == txHist_680.GetHash() && nHeight == 1264918) {
return true;
}
unsigned char ch_681[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc4, 0x4d, 0x13, 0x04, 0xad, 0x44, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfd, 0x1a, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_681(ch_681, ch_681 + sizeof(ch_681) -1);
CDataStream stream_681(vch_681, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_681;
stream_681 >> txHist_681;

if(block.vtx[0]->GetHash() == txHist_681.GetHash() && nHeight == 1265092) {
return true;
}
unsigned char ch_682[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x15, 0x4d, 0x13, 0x04, 0xa8, 0x05, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_682(ch_682, ch_682 + sizeof(ch_682) -1);
CDataStream stream_682(vch_682, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_682;
stream_682 >> txHist_682;

if(block.vtx[0]->GetHash() == txHist_682.GetHash() && nHeight == 1264917) {
return true;
}
unsigned char ch_683[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x13, 0x4d, 0x13, 0x04, 0x7e, 0x05, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfd, 0x46, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_683(ch_683, ch_683 + sizeof(ch_683) -1);
CDataStream stream_683(vch_683, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_683;
stream_683 >> txHist_683;

if(block.vtx[0]->GetHash() == txHist_683.GetHash() && nHeight == 1264915) {
return true;
}
unsigned char ch_684[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x12, 0x4d, 0x13, 0x04, 0x69, 0x05, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x22, 0x57, 0xf7, 0x73, 0xab, 0x9a, 0xf9, 0x6f, 0xed, 0x46, 0x5c, 0xeb, 0x85, 0x53, 0x29, 0x3f, 0x33, 0xd1, 0x4c, 0x3b, 0x71, 0x7d, 0x8c, 0x00, 0x76, 0xec, 0x00, 0x82, 0x1b, 0xc0, 0xa2, 0xb6, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd7, 0x89, 0x61, 0x60, 0x99, 0x8a, 0x1e, 0xe8, 0x57, 0x31, 0xa6, 0x94, 0xd8, 0x6e, 0x8b, 0x7f, 0xb3, 0x91, 0x1f, 0x8f, 0x1d, 0x5b, 0xf2, 0x4e, 0xfb, 0x9a, 0xae, 0xc7, 0x72, 0x7c, 0x44, 0x9f, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_684(ch_684, ch_684 + sizeof(ch_684) -1);
CDataStream stream_684(vch_684, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_684;
stream_684 >> txHist_684;

if(block.vtx[0]->GetHash() == txHist_684.GetHash() && nHeight == 1264914) {
return true;
}
unsigned char ch_685[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x10, 0x4d, 0x13, 0x04, 0xa0, 0x04, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xde, 0x92, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x96, 0x88, 0x8a, 0x5e, 0x8a, 0x82, 0xcc, 0x8b, 0xfb, 0xb1, 0x23, 0x97, 0x04, 0x57, 0x98, 0x4d, 0xb6, 0x02, 0xfd, 0x2d, 0x98, 0x99, 0xbb, 0x88, 0xa7, 0x87, 0xda, 0x74, 0x2b, 0x81, 0xf4, 0x43, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_685(ch_685, ch_685 + sizeof(ch_685) -1);
CDataStream stream_685(vch_685, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_685;
stream_685 >> txHist_685;

if(block.vtx[0]->GetHash() == txHist_685.GetHash() && nHeight == 1264912) {
return true;
}
unsigned char ch_686[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xbc, 0x4d, 0x13, 0x04, 0xb2, 0x42, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0x63, 0x0c, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x7b, 0x46, 0xe6, 0x4d, 0xf3, 0x93, 0x7f, 0xef, 0xe2, 0x2c, 0x36, 0xf0, 0xc5, 0xbb, 0x12, 0x3c, 0xe3, 0xf0, 0x89, 0xe0, 0x43, 0x21, 0x4f, 0x57, 0x83, 0x90, 0xb5, 0x54, 0x03, 0x64, 0xc4, 0x77, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_686(ch_686, ch_686 + sizeof(ch_686) -1);
CDataStream stream_686(vch_686, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_686;
stream_686 >> txHist_686;

if(block.vtx[0]->GetHash() == txHist_686.GetHash() && nHeight == 1265084) {
return true;
}
unsigned char ch_687[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb8, 0x4d, 0x13, 0x04, 0x88, 0x41, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x1f, 0x1b, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_687(ch_687, ch_687 + sizeof(ch_687) -1);
CDataStream stream_687(vch_687, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_687;
stream_687 >> txHist_687;

if(block.vtx[0]->GetHash() == txHist_687.GetHash() && nHeight == 1265080) {
return true;
}
unsigned char ch_688[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd8, 0x4d, 0x13, 0x04, 0xa3, 0x4a, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x1d, 0x0b, 0x51, 0xb7, 0xaa, 0xf3, 0x56, 0x1f, 0x30, 0x1d, 0x08, 0x8a, 0x2d, 0x31, 0xe9, 0x86, 0x06, 0xd3, 0x73, 0xa1, 0x75, 0xad, 0x26, 0x3a, 0x7e, 0xd4, 0xbc, 0xe3, 0xac, 0x53, 0x9d, 0x0c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_688(ch_688, ch_688 + sizeof(ch_688) -1);
CDataStream stream_688(vch_688, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_688;
stream_688 >> txHist_688;

if(block.vtx[0]->GetHash() == txHist_688.GetHash() && nHeight == 1265112) {
return true;
}
unsigned char ch_689[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd7, 0x4d, 0x13, 0x04, 0x70, 0x4a, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x03, 0x2d, 0x12, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xb1, 0x0e, 0xeb, 0x62, 0x04, 0x3d, 0x6a, 0xae, 0x8f, 0x3d, 0x65, 0x31, 0x08, 0x85, 0xca, 0x31, 0x3a, 0xb5, 0xc6, 0x27, 0x2f, 0x2e, 0xe1, 0xc9, 0x30, 0x45, 0xf9, 0x97, 0x92, 0xf1, 0xe5, 0x14, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_689(ch_689, ch_689 + sizeof(ch_689) -1);
CDataStream stream_689(vch_689, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_689;
stream_689 >> txHist_689;

if(block.vtx[0]->GetHash() == txHist_689.GetHash() && nHeight == 1265111) {
return true;
}
unsigned char ch_690[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd1, 0x4d, 0x13, 0x04, 0xd3, 0x48, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xfb, 0x5d, 0x40, 0x96, 0x1f, 0x6f, 0x5c, 0xfc, 0x07, 0x67, 0xc7, 0xc7, 0x3c, 0x60, 0x3f, 0x2e, 0xfd, 0x3d, 0x33, 0x4c, 0xdc, 0xf7, 0x1c, 0xe9, 0x76, 0xd2, 0x5c, 0x45, 0x95, 0x5d, 0x8d, 0x7e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x75, 0x2c, 0xbe, 0xa0, 0x19, 0x3e, 0xfc, 0x7b, 0x94, 0xba, 0xeb, 0x6b, 0xed, 0x72, 0x55, 0x84, 0xeb, 0x53, 0x92, 0x3f, 0xfb, 0x8d, 0x8e, 0x21, 0xab, 0xcf, 0x9f, 0xf7, 0x99, 0x09, 0x4c, 0x6c, 0x58, 0x6f, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_690(ch_690, ch_690 + sizeof(ch_690) -1);
CDataStream stream_690(vch_690, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_690;
stream_690 >> txHist_690;

if(block.vtx[0]->GetHash() == txHist_690.GetHash() && nHeight == 1265105) {
return true;
}
unsigned char ch_691[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x6a, 0x4d, 0x13, 0x04, 0x9c, 0x27, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x52, 0xea, 0xba, 0x78, 0xec, 0xf2, 0x83, 0xde, 0x7b, 0x18, 0xaa, 0x7d, 0x80, 0xf7, 0x0b, 0xc1, 0xe6, 0xe0, 0x0c, 0xa2, 0x2d, 0x8a, 0x86, 0xba, 0x0f, 0xfe, 0x3c, 0x6d, 0x37, 0x5c, 0x58, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_691(ch_691, ch_691 + sizeof(ch_691) -1);
CDataStream stream_691(vch_691, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_691;
stream_691 >> txHist_691;

if(block.vtx[0]->GetHash() == txHist_691.GetHash() && nHeight == 1265002) {
return true;
}
unsigned char ch_692[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xcf, 0x4d, 0x13, 0x04, 0x9f, 0x48, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf5, 0x4a, 0x02, 0x35, 0xdf, 0x94, 0x91, 0x6a, 0x74, 0x12, 0xf5, 0x65, 0x79, 0x4b, 0x6e, 0xa9, 0xaf, 0xe8, 0x4b, 0x11, 0x89, 0x00, 0xb9, 0x5b, 0x0d, 0x61, 0xd4, 0x3a, 0xa8, 0x99, 0x81, 0x6a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_692(ch_692, ch_692 + sizeof(ch_692) -1);
CDataStream stream_692(vch_692, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_692;
stream_692 >> txHist_692;

if(block.vtx[0]->GetHash() == txHist_692.GetHash() && nHeight == 1265103) {
return true;
}
unsigned char ch_693[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xad, 0x4d, 0x13, 0x04, 0x72, 0x3f, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x79, 0x7c, 0xf2, 0xc5, 0x6c, 0xd4, 0x68, 0xbd, 0x6d, 0xd4, 0x28, 0x67, 0x56, 0x64, 0x09, 0x35, 0x5a, 0x46, 0x68, 0x71, 0xed, 0xb3, 0x3c, 0xf9, 0x06, 0x3c, 0x58, 0xcd, 0x3a, 0xc4, 0x6e, 0x32, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xfe, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x89, 0xf4, 0xa4, 0xd6, 0x32, 0x77, 0xb9, 0x99, 0x36, 0x5f, 0xe3, 0x02, 0x57, 0x0e, 0x6f, 0x69, 0xe8, 0x5f, 0x2d, 0x09, 0xb5, 0xc6, 0x0f, 0xf7, 0xc8, 0x08, 0xeb, 0x7c, 0x95, 0x4c, 0x6c, 0xf6, 0xf8, 0xe2, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_693(ch_693, ch_693 + sizeof(ch_693) -1);
CDataStream stream_693(vch_693, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_693;
stream_693 >> txHist_693;

if(block.vtx[0]->GetHash() == txHist_693.GetHash() && nHeight == 1265069) {
return true;
}
unsigned char ch_694[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xcc, 0x4d, 0x13, 0x04, 0xe3, 0x46, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfa, 0xc2, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_694(ch_694, ch_694 + sizeof(ch_694) -1);
CDataStream stream_694(vch_694, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_694;
stream_694 >> txHist_694;

if(block.vtx[0]->GetHash() == txHist_694.GetHash() && nHeight == 1265100) {
return true;
}
unsigned char ch_695[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x68, 0x4d, 0x13, 0x04, 0xb7, 0x26, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x19, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_695(ch_695, ch_695 + sizeof(ch_695) -1);
CDataStream stream_695(vch_695, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_695;
stream_695 >> txHist_695;

if(block.vtx[0]->GetHash() == txHist_695.GetHash() && nHeight == 1265000) {
return true;
}
unsigned char ch_696[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x67, 0x4d, 0x13, 0x04, 0x87, 0x26, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0x71, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_696(ch_696, ch_696 + sizeof(ch_696) -1);
CDataStream stream_696(vch_696, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_696;
stream_696 >> txHist_696;

if(block.vtx[0]->GetHash() == txHist_696.GetHash() && nHeight == 1264999) {
return true;
}
unsigned char ch_697[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc5, 0x4d, 0x13, 0x04, 0x19, 0x45, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x1a, 0x42, 0xf9, 0xf2, 0x1a, 0xf0, 0xf6, 0x57, 0x0a, 0x8c, 0x09, 0x3e, 0x79, 0xa5, 0x04, 0x54, 0xf7, 0xd8, 0xa6, 0xd5, 0x42, 0x3f, 0x3d, 0xeb, 0x0b, 0x35, 0x27, 0x61, 0x2a, 0x40, 0x15, 0xee, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x8a, 0x1c, 0x92, 0x49, 0xf5, 0x85, 0x91, 0xd9, 0x7d, 0xa3, 0x70, 0xab, 0x4d, 0x4a, 0x36, 0x20, 0x5a, 0x23, 0x5f, 0x14, 0x2d, 0x57, 0x2c, 0xe3, 0x36, 0xd8, 0x26, 0xcb, 0x3a, 0x5c, 0xf5, 0x7c, 0x30, 0x33, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_697(ch_697, ch_697 + sizeof(ch_697) -1);
CDataStream stream_697(vch_697, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_697;
stream_697 >> txHist_697;

if(block.vtx[0]->GetHash() == txHist_697.GetHash() && nHeight == 1265093) {
return true;
}
unsigned char ch_698[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x66, 0x4d, 0x13, 0x04, 0x7e, 0x26, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xfa, 0xc2, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_698(ch_698, ch_698 + sizeof(ch_698) -1);
CDataStream stream_698(vch_698, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_698;
stream_698 >> txHist_698;

if(block.vtx[0]->GetHash() == txHist_698.GetHash() && nHeight == 1264998) {
return true;
}
unsigned char ch_699[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa6, 0x4d, 0x13, 0x04, 0x17, 0x3e, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x21, 0xaf, 0x38, 0x7d, 0x25, 0xe9, 0x78, 0x5b, 0xff, 0x13, 0xc6, 0x2b, 0x65, 0x42, 0x55, 0xf2, 0x03, 0x1f, 0x2f, 0x5e, 0x45, 0x66, 0xa2, 0xca, 0x6d, 0xb3, 0x6d, 0x08, 0xc1, 0xe0, 0xad, 0x99, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xfe, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_699(ch_699, ch_699 + sizeof(ch_699) -1);
CDataStream stream_699(vch_699, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_699;
stream_699 >> txHist_699;

if(block.vtx[0]->GetHash() == txHist_699.GetHash() && nHeight == 1265062) {
return true;
}
unsigned char ch_700[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x65, 0x4d, 0x13, 0x04, 0x59, 0x26, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xfa, 0xc4, 0x19, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x57, 0x4a, 0xf5, 0xe1, 0xdd, 0x46, 0x6b, 0x36, 0x67, 0xb4, 0x11, 0xad, 0x82, 0xbd, 0x7a, 0x3c, 0x8b, 0xaf, 0x84, 0x42, 0x74, 0xbe, 0xa4, 0xaf, 0xe0, 0x8b, 0x8a, 0xf6, 0x8e, 0x1e, 0xb6, 0x92, 0x00, 0xfd, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_700(ch_700, ch_700 + sizeof(ch_700) -1);
CDataStream stream_700(vch_700, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_700;
stream_700 >> txHist_700;

if(block.vtx[0]->GetHash() == txHist_700.GetHash() && nHeight == 1264997) {
return true;
}
unsigned char ch_701[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xbd, 0x4d, 0x13, 0x04, 0x2c, 0x43, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x3d, 0x0f, 0xbb, 0x78, 0xcf, 0x2f, 0x18, 0x5e, 0x03, 0x7b, 0x41, 0xbe, 0x1b, 0xef, 0x7d, 0xf0, 0x05, 0xcd, 0x21, 0xd1, 0xf3, 0x73, 0xe8, 0x68, 0xab, 0x8a, 0xb9, 0xaf, 0xe0, 0x2e, 0x69, 0x79, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x39, 0x40, 0x5f, 0xa4, 0x87, 0xd4, 0x5b, 0x8d, 0x22, 0xca, 0xe8, 0xf6, 0xf4, 0x42, 0x01, 0x23, 0xd4, 0xdd, 0x7c, 0x6b, 0x73, 0xb4, 0x2c, 0xff, 0x27, 0x27, 0x9a, 0x15, 0xcd, 0x25, 0x70, 0xe7, 0x98, 0x56, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_701(ch_701, ch_701 + sizeof(ch_701) -1);
CDataStream stream_701(vch_701, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_701;
stream_701 >> txHist_701;

if(block.vtx[0]->GetHash() == txHist_701.GetHash() && nHeight == 1265085) {
return true;
}
unsigned char ch_702[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb9, 0x4d, 0x13, 0x04, 0xbf, 0x41, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x19, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x7d, 0xbe, 0xb5, 0xe7, 0x9d, 0xfa, 0x09, 0x2e, 0x1e, 0xc9, 0x65, 0x8a, 0x80, 0x10, 0xee, 0xd0, 0x72, 0x17, 0x7a, 0xcb, 0x0c, 0x01, 0x62, 0x80, 0xa8, 0x6b, 0xfe, 0xef, 0x14, 0xee, 0x18, 0x7d, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_702(ch_702, ch_702 + sizeof(ch_702) -1);
CDataStream stream_702(vch_702, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_702;
stream_702 >> txHist_702;

if(block.vtx[0]->GetHash() == txHist_702.GetHash() && nHeight == 1265081) {
return true;
}
unsigned char ch_703[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb2, 0x4d, 0x13, 0x04, 0xbd, 0x40, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x1f, 0xa1, 0x06, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x7d, 0x58, 0x5b, 0x87, 0xbf, 0xda, 0xc8, 0x5d, 0xbd, 0x40, 0xa5, 0xae, 0xde, 0x8b, 0xea, 0x12, 0xe2, 0x55, 0x9f, 0xe6, 0x7d, 0x9f, 0xda, 0xa3, 0xde, 0x8f, 0x66, 0x5c, 0x50, 0xde, 0xc7, 0x88, 0x08, 0xf2, 0x64, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_703(ch_703, ch_703 + sizeof(ch_703) -1);
CDataStream stream_703(vch_703, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_703;
stream_703 >> txHist_703;

if(block.vtx[0]->GetHash() == txHist_703.GetHash() && nHeight == 1265074) {
return true;
}
unsigned char ch_704[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x62, 0x4d, 0x13, 0x04, 0x81, 0x25, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xff, 0xbb, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_704(ch_704, ch_704 + sizeof(ch_704) -1);
CDataStream stream_704(vch_704, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_704;
stream_704 >> txHist_704;

if(block.vtx[0]->GetHash() == txHist_704.GetHash() && nHeight == 1264994) {
return true;
}
unsigned char ch_705[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x60, 0x4d, 0x13, 0x04, 0x43, 0x25, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc1, 0x83, 0x20, 0x95, 0x9c, 0x71, 0x51, 0x1d, 0x9e, 0xcc, 0x62, 0xd4, 0xd9, 0x18, 0x43, 0x20, 0x94, 0x9c, 0xbb, 0xa5, 0x81, 0x9a, 0xb7, 0xa7, 0x56, 0x61, 0xc3, 0x2e, 0x69, 0xe1, 0xc7, 0x4b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x65, 0x71, 0xc0, 0x83, 0x7e, 0xb4, 0x20, 0xe7, 0x7d, 0x7d, 0xc4, 0xf6, 0xfa, 0xc1, 0xca, 0xa3, 0xcd, 0x1e, 0xf6, 0xdc, 0x9b, 0x9d, 0xe3, 0x01, 0x67, 0x36, 0xcf, 0x3b, 0x8b, 0x88, 0x61, 0xb6, 0x58, 0x95, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_705(ch_705, ch_705 + sizeof(ch_705) -1);
CDataStream stream_705(vch_705, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_705;
stream_705 >> txHist_705;

if(block.vtx[0]->GetHash() == txHist_705.GetHash() && nHeight == 1264992) {
return true;
}
unsigned char ch_706[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x28, 0x4d, 0x13, 0x04, 0x11, 0x11, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xed, 0x71, 0x6d, 0x3a, 0xbb, 0x36, 0x8a, 0xec, 0x57, 0x1e, 0x1f, 0x74, 0x7e, 0xb4, 0x2d, 0x8a, 0x19, 0xd6, 0x8e, 0x4c, 0x7d, 0xa0, 0x7a, 0x82, 0x3a, 0x96, 0xcc, 0x3c, 0xe1, 0xbb, 0x3b, 0x4c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe1, 0xfd, 0x8d, 0x96, 0x6f, 0x91, 0x60, 0x63, 0x0c, 0x17, 0xe1, 0xa6, 0x68, 0xe9, 0xaa, 0x14, 0x62, 0x46, 0xfa, 0xa3, 0xef, 0x80, 0x78, 0xa2, 0x11, 0x6f, 0xf6, 0x2c, 0x64, 0xca, 0xa0, 0xa7, 0xf0, 0x33, 0x63, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_706(ch_706, ch_706 + sizeof(ch_706) -1);
CDataStream stream_706(vch_706, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_706;
stream_706 >> txHist_706;

if(block.vtx[0]->GetHash() == txHist_706.GetHash() && nHeight == 1264936) {
return true;
}
unsigned char ch_707[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xae, 0x4d, 0x13, 0x04, 0xd7, 0x3f, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa5, 0x32, 0xd2, 0xfc, 0x92, 0x7f, 0x3e, 0x5f, 0x2b, 0x46, 0x07, 0xcf, 0x30, 0xc9, 0xe1, 0x2a, 0x2a, 0xb7, 0xa4, 0x5b, 0x68, 0x7b, 0xcb, 0xb3, 0x51, 0xc0, 0x50, 0x8c, 0x31, 0x99, 0x44, 0x9f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_707(ch_707, ch_707 + sizeof(ch_707) -1);
CDataStream stream_707(vch_707, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_707;
stream_707 >> txHist_707;

if(block.vtx[0]->GetHash() == txHist_707.GetHash() && nHeight == 1265070) {
return true;
}
unsigned char ch_708[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa7, 0x4d, 0x13, 0x04, 0x10, 0x3e, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xfa, 0xc4, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_708(ch_708, ch_708 + sizeof(ch_708) -1);
CDataStream stream_708(vch_708, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_708;
stream_708 >> txHist_708;

if(block.vtx[0]->GetHash() == txHist_708.GetHash() && nHeight == 1265063) {
return true;
}
unsigned char ch_709[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa5, 0x4d, 0x13, 0x04, 0xb3, 0x3d, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfb, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_709(ch_709, ch_709 + sizeof(ch_709) -1);
CDataStream stream_709(vch_709, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_709;
stream_709 >> txHist_709;

if(block.vtx[0]->GetHash() == txHist_709.GetHash() && nHeight == 1265061) {
return true;
}
unsigned char ch_710[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa4, 0x4d, 0x13, 0x04, 0x8a, 0x3d, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x0b, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_710(ch_710, ch_710 + sizeof(ch_710) -1);
CDataStream stream_710(vch_710, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_710;
stream_710 >> txHist_710;

if(block.vtx[0]->GetHash() == txHist_710.GetHash() && nHeight == 1265060) {
return true;
}
unsigned char ch_711[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa3, 0x4d, 0x13, 0x04, 0x7f, 0x3d, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc4, 0xc8, 0xf6, 0xd7, 0xb3, 0xac, 0xf4, 0x68, 0x29, 0xb9, 0x94, 0xb4, 0x28, 0x1c, 0x68, 0xc5, 0x7f, 0x3e, 0xab, 0x8f, 0x5c, 0xd2, 0xf4, 0xd0, 0x2b, 0x74, 0xdd, 0xa2, 0x84, 0xaf, 0x7f, 0x4c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_711(ch_711, ch_711 + sizeof(ch_711) -1);
CDataStream stream_711(vch_711, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_711;
stream_711 >> txHist_711;

if(block.vtx[0]->GetHash() == txHist_711.GetHash() && nHeight == 1265059) {
return true;
}
unsigned char ch_712[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x9e, 0x4d, 0x13, 0x04, 0x16, 0x3c, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x0b, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_712(ch_712, ch_712 + sizeof(ch_712) -1);
CDataStream stream_712(vch_712, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_712;
stream_712 >> txHist_712;

if(block.vtx[0]->GetHash() == txHist_712.GetHash() && nHeight == 1265054) {
return true;
}
unsigned char ch_713[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x4c, 0x4d, 0x13, 0x04, 0xd8, 0x1d, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0x1b, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_713(ch_713, ch_713 + sizeof(ch_713) -1);
CDataStream stream_713(vch_713, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_713;
stream_713 >> txHist_713;

if(block.vtx[0]->GetHash() == txHist_713.GetHash() && nHeight == 1264972) {
return true;
}
unsigned char ch_714[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x72, 0x4d, 0x13, 0x04, 0x4d, 0x2a, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x23, 0x7e, 0x26, 0x0b, 0x71, 0x8c, 0xb9, 0xfc, 0xa2, 0x29, 0xe1, 0x22, 0x82, 0x17, 0x4f, 0x19, 0xc1, 0xfd, 0x84, 0x92, 0xdc, 0xc8, 0xa9, 0xed, 0xcf, 0xfd, 0x90, 0xa9, 0x01, 0x9a, 0x0a, 0xd5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xfe, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_714(ch_714, ch_714 + sizeof(ch_714) -1);
CDataStream stream_714(vch_714, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_714;
stream_714 >> txHist_714;

if(block.vtx[0]->GetHash() == txHist_714.GetHash() && nHeight == 1265010) {
return true;
}
unsigned char ch_715[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x4a, 0x4d, 0x13, 0x04, 0xa6, 0x1d, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0x47, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x16, 0xbd, 0x40, 0xef, 0xc0, 0x03, 0x4a, 0x10, 0x53, 0x59, 0xe6, 0x5b, 0xc1, 0x23, 0xd9, 0x32, 0x82, 0x76, 0x8b, 0x6b, 0x95, 0xbf, 0x74, 0xbc, 0x28, 0x00, 0xef, 0xb8, 0xbe, 0x81, 0xfb, 0xe2, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_715(ch_715, ch_715 + sizeof(ch_715) -1);
CDataStream stream_715(vch_715, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_715;
stream_715 >> txHist_715;

if(block.vtx[0]->GetHash() == txHist_715.GetHash() && nHeight == 1264970) {
return true;
}
unsigned char ch_716[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x6b, 0x4d, 0x13, 0x04, 0x9f, 0x27, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfd, 0xbb, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_716(ch_716, ch_716 + sizeof(ch_716) -1);
CDataStream stream_716(vch_716, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_716;
stream_716 >> txHist_716;

if(block.vtx[0]->GetHash() == txHist_716.GetHash() && nHeight == 1265003) {
return true;
}
unsigned char ch_717[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x17, 0x4c, 0x13, 0x04, 0x88, 0xb0, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x04, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_717(ch_717, ch_717 + sizeof(ch_717) -1);
CDataStream stream_717(vch_717, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_717;
stream_717 >> txHist_717;

if(block.vtx[0]->GetHash() == txHist_717.GetHash() && nHeight == 1264663) {
return true;
}
unsigned char ch_718[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x47, 0x4d, 0x13, 0x04, 0xba, 0x1c, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x0b, 0x12, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_718(ch_718, ch_718 + sizeof(ch_718) -1);
CDataStream stream_718(vch_718, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_718;
stream_718 >> txHist_718;

if(block.vtx[0]->GetHash() == txHist_718.GetHash() && nHeight == 1264967) {
return true;
}
unsigned char ch_719[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x81, 0x4d, 0x13, 0x04, 0x1d, 0x30, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x31, 0xb8, 0x91, 0x38, 0x74, 0xa4, 0xb6, 0xe6, 0xaf, 0x5f, 0xff, 0x5f, 0x48, 0xaa, 0xc5, 0xfc, 0x5a, 0x9b, 0x94, 0xe6, 0x17, 0xbc, 0x5b, 0x00, 0xf9, 0x8b, 0x6f, 0xa3, 0xef, 0x8b, 0x05, 0xaf, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_719(ch_719, ch_719 + sizeof(ch_719) -1);
CDataStream stream_719(vch_719, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_719;
stream_719 >> txHist_719;

if(block.vtx[0]->GetHash() == txHist_719.GetHash() && nHeight == 1265025) {
return true;
}
unsigned char ch_720[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x12, 0x4c, 0x13, 0x04, 0xa3, 0xaf, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbc, 0x94, 0x50, 0x57, 0xc2, 0x47, 0x58, 0x5a, 0xd1, 0x1e, 0x5d, 0x9b, 0x83, 0xc0, 0xff, 0x00, 0xd2, 0x33, 0x1e, 0xd3, 0x8d, 0x38, 0x56, 0xc1, 0x78, 0x3b, 0x36, 0x4b, 0xf0, 0xb3, 0x29, 0xb0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xff, 0xfe, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_720(ch_720, ch_720 + sizeof(ch_720) -1);
CDataStream stream_720(vch_720, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_720;
stream_720 >> txHist_720;

if(block.vtx[0]->GetHash() == txHist_720.GetHash() && nHeight == 1264658) {
return true;
}
unsigned char ch_721[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x44, 0x4d, 0x13, 0x04, 0x2e, 0x1b, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0xc2, 0x06, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_721(ch_721, ch_721 + sizeof(ch_721) -1);
CDataStream stream_721(vch_721, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_721;
stream_721 >> txHist_721;

if(block.vtx[0]->GetHash() == txHist_721.GetHash() && nHeight == 1264964) {
return true;
}
unsigned char ch_722[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x80, 0x4d, 0x13, 0x04, 0x0d, 0x30, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x34, 0xb2, 0x03, 0xcf, 0x14, 0xe3, 0x94, 0x35, 0x04, 0x17, 0xe7, 0xad, 0xaf, 0x08, 0xb9, 0x24, 0x84, 0xfa, 0x33, 0x3f, 0xeb, 0xbb, 0xec, 0x66, 0x8b, 0x51, 0xc3, 0x3e, 0x59, 0x2a, 0xb2, 0x54, 0xc0, 0xe3, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_722(ch_722, ch_722 + sizeof(ch_722) -1);
CDataStream stream_722(vch_722, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_722;
stream_722 >> txHist_722;

if(block.vtx[0]->GetHash() == txHist_722.GetHash() && nHeight == 1265024) {
return true;
}
unsigned char ch_723[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x5f, 0x4d, 0x13, 0x04, 0xf4, 0x23, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x08, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x34, 0x0d, 0xb4, 0xf6, 0x72, 0xb4, 0xb0, 0x52, 0x94, 0xc5, 0x90, 0x40, 0xbb, 0x94, 0xf8, 0x85, 0x38, 0x06, 0x07, 0xce, 0xad, 0x05, 0xaf, 0x7b, 0xf1, 0x32, 0x52, 0xcd, 0x01, 0xc2, 0x95, 0xbc, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_723(ch_723, ch_723 + sizeof(ch_723) -1);
CDataStream stream_723(vch_723, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_723;
stream_723 >> txHist_723;

if(block.vtx[0]->GetHash() == txHist_723.GetHash() && nHeight == 1264991) {
return true;
}
unsigned char ch_724[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5e, 0x4d, 0x13, 0x04, 0xe0, 0x23, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x1c, 0x70, 0x07, 0xb3, 0x08, 0x66, 0x8a, 0x7e, 0xfa, 0x0b, 0xe8, 0xea, 0x4c, 0x37, 0x66, 0x8c, 0xe2, 0xf2, 0x6b, 0xf2, 0x2b, 0x43, 0x18, 0xe4, 0x02, 0x79, 0x7a, 0x93, 0xea, 0xd5, 0xba, 0xca, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x3d, 0x9a, 0x3e, 0x01, 0x99, 0xfd, 0xc6, 0x55, 0xbe, 0xed, 0x14, 0xd8, 0x42, 0x1a, 0xc4, 0x95, 0x2a, 0xf6, 0x47, 0x80, 0x50, 0x58, 0xb7, 0x6d, 0x2d, 0x0c, 0x6b, 0x36, 0x28, 0x37, 0x45, 0x38, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_724(ch_724, ch_724 + sizeof(ch_724) -1);
CDataStream stream_724(vch_724, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_724;
stream_724 >> txHist_724;

if(block.vtx[0]->GetHash() == txHist_724.GetHash() && nHeight == 1264990) {
return true;
}
unsigned char ch_725[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x07, 0x4c, 0x13, 0x04, 0xb8, 0xa9, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x22, 0x57, 0x06, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_725(ch_725, ch_725 + sizeof(ch_725) -1);
CDataStream stream_725(vch_725, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_725;
stream_725 >> txHist_725;

if(block.vtx[0]->GetHash() == txHist_725.GetHash() && nHeight == 1264647) {
return true;
}
unsigned char ch_726[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe7, 0x4c, 0x13, 0x04, 0xa0, 0xf9, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x24, 0xae, 0x21, 0xe1, 0x30, 0x5d, 0xdb, 0x4d, 0xe8, 0x53, 0xa3, 0xab, 0xef, 0x98, 0xa4, 0x4d, 0x6e, 0x1a, 0x7e, 0x7c, 0x64, 0x67, 0xdd, 0xcf, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x07, 0x7c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe0, 0xe9, 0x32, 0x61, 0x1c, 0x00, 0xbe, 0x4a, 0xd5, 0xf6, 0x41, 0xc0, 0xd8, 0x56, 0xa0, 0x76, 0xb3, 0x8a, 0x5c, 0x82, 0x9f, 0x03, 0x73, 0x47, 0x0d, 0xbd, 0xd0, 0xed, 0xfd, 0x8e, 0xc2, 0x28, 0x70, 0x40, 0xf4, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x48, 0x5d, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0x68, 0xd2, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_726(ch_726, ch_726 + sizeof(ch_726) -1);
CDataStream stream_726(vch_726, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_726;
stream_726 >> txHist_726;

if(block.vtx[0]->GetHash() == txHist_726.GetHash() && nHeight == 1264871) {
return true;
}
unsigned char ch_727[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x5d, 0x4d, 0x13, 0x04, 0xb8, 0x23, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xff, 0xc9, 0x08, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_727(ch_727, ch_727 + sizeof(ch_727) -1);
CDataStream stream_727(vch_727, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_727;
stream_727 >> txHist_727;

if(block.vtx[0]->GetHash() == txHist_727.GetHash() && nHeight == 1264989) {
return true;
}
unsigned char ch_728[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x01, 0x4c, 0x13, 0x04, 0x90, 0xa8, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf9, 0x7e, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x3d, 0x49, 0x13, 0x47, 0xc1, 0xb8, 0x06, 0xd0, 0x9a, 0x5f, 0x4e, 0x06, 0x84, 0x48, 0x3d, 0xac, 0x43, 0x3b, 0x34, 0x32, 0x5e, 0x1c, 0x04, 0x68, 0xfb, 0x31, 0x70, 0xa1, 0xf1, 0xf0, 0x93, 0x56, 0x98, 0xa3, 0x69, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_728(ch_728, ch_728 + sizeof(ch_728) -1);
CDataStream stream_728(vch_728, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_728;
stream_728 >> txHist_728;

if(block.vtx[0]->GetHash() == txHist_728.GetHash() && nHeight == 1264641) {
return true;
}
unsigned char ch_729[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x5c, 0x4d, 0x13, 0x04, 0x7e, 0x23, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x0b, 0x2c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe8, 0xac, 0xb9, 0x2e, 0xa9, 0x88, 0xd7, 0xab, 0x68, 0x22, 0xac, 0x66, 0xca, 0x46, 0xb1, 0x59, 0xb8, 0x29, 0x19, 0x22, 0xa2, 0xc3, 0xda, 0x17, 0xfc, 0x7b, 0x1e, 0xeb, 0xb9, 0xc9, 0x93, 0x9e, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_729(ch_729, ch_729 + sizeof(ch_729) -1);
CDataStream stream_729(vch_729, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_729;
stream_729 >> txHist_729;

if(block.vtx[0]->GetHash() == txHist_729.GetHash() && nHeight == 1264988) {
return true;
}
unsigned char ch_730[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xfb, 0x4b, 0x13, 0x04, 0x79, 0xa4, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb9, 0xe7, 0xa7, 0x5f, 0x58, 0x73, 0x05, 0xaf, 0x8e, 0x30, 0x14, 0x75, 0x05, 0x1d, 0x14, 0x6b, 0xff, 0x1d, 0x55, 0x96, 0x03, 0x2c, 0xf3, 0x9a, 0x9a, 0xeb, 0x0e, 0x2c, 0x08, 0x19, 0xf0, 0x82, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_730(ch_730, ch_730 + sizeof(ch_730) -1);
CDataStream stream_730(vch_730, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_730;
stream_730 >> txHist_730;

if(block.vtx[0]->GetHash() == txHist_730.GetHash() && nHeight == 1264635) {
return true;
}
unsigned char ch_731[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x5b, 0x4d, 0x13, 0x04, 0x21, 0x23, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x0b, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x28, 0x3e, 0xdd, 0x4f, 0x82, 0xcf, 0x7d, 0xf9, 0x8b, 0x3c, 0x0f, 0x4e, 0x54, 0x78, 0x4f, 0x8b, 0x8b, 0x44, 0x2a, 0x6f, 0xff, 0x07, 0x8a, 0x96, 0x1d, 0xc9, 0x45, 0xf9, 0x12, 0x24, 0xfe, 0x38, 0x80, 0xa5, 0xf7, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_731(ch_731, ch_731 + sizeof(ch_731) -1);
CDataStream stream_731(vch_731, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_731;
stream_731 >> txHist_731;

if(block.vtx[0]->GetHash() == txHist_731.GetHash() && nHeight == 1264987) {
return true;
}
unsigned char ch_732[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf5, 0x4b, 0x13, 0x04, 0xe5, 0xa2, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x06, 0x3a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x44, 0xa7, 0xd2, 0xb7, 0x94, 0xda, 0xef, 0x31, 0xe1, 0xdf, 0xb9, 0xc5, 0xe7, 0x57, 0x9e, 0x63, 0xf4, 0xca, 0xa1, 0x19, 0x38, 0x4b, 0x4d, 0xba, 0xed, 0x13, 0x6d, 0x61, 0x50, 0xbe, 0x94, 0xa4, 0xf8, 0xe2, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_732(ch_732, ch_732 + sizeof(ch_732) -1);
CDataStream stream_732(vch_732, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_732;
stream_732 >> txHist_732;

if(block.vtx[0]->GetHash() == txHist_732.GetHash() && nHeight == 1264629) {
return true;
}
unsigned char ch_733[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x7b, 0x4d, 0x13, 0x04, 0x5a, 0x2e, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0x89, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_733(ch_733, ch_733 + sizeof(ch_733) -1);
CDataStream stream_733(vch_733, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_733;
stream_733 >> txHist_733;

if(block.vtx[0]->GetHash() == txHist_733.GetHash() && nHeight == 1265019) {
return true;
}
unsigned char ch_734[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x5a, 0x4d, 0x13, 0x04, 0xfb, 0x22, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x08, 0x39, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_734(ch_734, ch_734 + sizeof(ch_734) -1);
CDataStream stream_734(vch_734, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_734;
stream_734 >> txHist_734;

if(block.vtx[0]->GetHash() == txHist_734.GetHash() && nHeight == 1264986) {
return true;
}
unsigned char ch_735[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xec, 0x4c, 0x13, 0x04, 0xa4, 0xfb, 0x36, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfd, 0x70, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_735(ch_735, ch_735 + sizeof(ch_735) -1);
CDataStream stream_735(vch_735, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_735;
stream_735 >> txHist_735;

if(block.vtx[0]->GetHash() == txHist_735.GetHash() && nHeight == 1264876) {
return true;
}
unsigned char ch_736[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xea, 0x4b, 0x13, 0x04, 0x9b, 0x9f, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x06, 0x95, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x6b, 0x16, 0xd5, 0xdd, 0xcd, 0x68, 0x27, 0x3f, 0x20, 0xb9, 0x01, 0xb5, 0x50, 0x29, 0x38, 0xfa, 0x76, 0xb9, 0x52, 0xfb, 0xbe, 0x5a, 0xb8, 0x06, 0xc0, 0x0f, 0x8e, 0xc0, 0xe2, 0x51, 0x92, 0xb3, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_736(ch_736, ch_736 + sizeof(ch_736) -1);
CDataStream stream_736(vch_736, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_736;
stream_736 >> txHist_736;

if(block.vtx[0]->GetHash() == txHist_736.GetHash() && nHeight == 1264618) {
return true;
}
unsigned char ch_737[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x51, 0x4d, 0x13, 0x04, 0x10, 0x1f, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x0b, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_737(ch_737, ch_737 + sizeof(ch_737) -1);
CDataStream stream_737(vch_737, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_737;
stream_737 >> txHist_737;

if(block.vtx[0]->GetHash() == txHist_737.GetHash() && nHeight == 1264977) {
return true;
}
unsigned char ch_738[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x77, 0x4d, 0x13, 0x04, 0xab, 0x2b, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x08, 0x3a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x4b, 0x09, 0x90, 0x27, 0xfc, 0xfb, 0x95, 0x9e, 0xf0, 0xfa, 0x7c, 0x3f, 0x19, 0x2b, 0x35, 0xeb, 0x1a, 0xe8, 0xf2, 0x2c, 0xbe, 0x6a, 0x38, 0x4d, 0xb8, 0xf1, 0x83, 0x9e, 0xa7, 0xb1, 0x08, 0x2a, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_738(ch_738, ch_738 + sizeof(ch_738) -1);
CDataStream stream_738(vch_738, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_738;
stream_738 >> txHist_738;

if(block.vtx[0]->GetHash() == txHist_738.GetHash() && nHeight == 1265015) {
return true;
}
unsigned char ch_739[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x4f, 0x4d, 0x13, 0x04, 0x8a, 0x1e, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0xc2, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x5b, 0xc4, 0x3b, 0xe6, 0xec, 0x1f, 0x2d, 0x7b, 0xf4, 0x33, 0xf8, 0x26, 0x1d, 0x72, 0x17, 0x39, 0xd8, 0x0f, 0x82, 0xa0, 0x62, 0xff, 0xd3, 0x9b, 0x0e, 0x16, 0x50, 0x85, 0x99, 0x9b, 0xfe, 0x19, 0x78, 0xa6, 0x68, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_739(ch_739, ch_739 + sizeof(ch_739) -1);
CDataStream stream_739(vch_739, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_739;
stream_739 >> txHist_739;

if(block.vtx[0]->GetHash() == txHist_739.GetHash() && nHeight == 1264975) {
return true;
}
unsigned char ch_740[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x48, 0x4d, 0x13, 0x04, 0x15, 0x1d, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x06, 0x24, 0x37, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_740(ch_740, ch_740 + sizeof(ch_740) -1);
CDataStream stream_740(vch_740, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_740;
stream_740 >> txHist_740;

if(block.vtx[0]->GetHash() == txHist_740.GetHash() && nHeight == 1264968) {
return true;
}
unsigned char ch_741[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x75, 0x4d, 0x13, 0x04, 0x3b, 0x2b, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0x86, 0x08, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x66, 0xc7, 0xe4, 0x64, 0x27, 0xf6, 0x3f, 0x6f, 0xde, 0x88, 0xd9, 0xe4, 0xcd, 0xf8, 0xb0, 0x9f, 0x87, 0xd2, 0x06, 0x7f, 0xfb, 0x10, 0x8d, 0x01, 0x4f, 0xfe, 0x07, 0xae, 0x59, 0x48, 0x99, 0x86, 0xd0, 0x29, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_741(ch_741, ch_741 + sizeof(ch_741) -1);
CDataStream stream_741(vch_741, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_741;
stream_741 >> txHist_741;

if(block.vtx[0]->GetHash() == txHist_741.GetHash() && nHeight == 1265013) {
return true;
}
unsigned char ch_742[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x45, 0x4d, 0x13, 0x04, 0x34, 0x1c, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xfa, 0xc4, 0xcc, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_742(ch_742, ch_742 + sizeof(ch_742) -1);
CDataStream stream_742(vch_742, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_742;
stream_742 >> txHist_742;

if(block.vtx[0]->GetHash() == txHist_742.GetHash() && nHeight == 1264965) {
return true;
}
unsigned char ch_743[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x73, 0x4d, 0x13, 0x04, 0xb2, 0x2a, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x08, 0x53, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_743(ch_743, ch_743 + sizeof(ch_743) -1);
CDataStream stream_743(vch_743, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_743;
stream_743 >> txHist_743;

if(block.vtx[0]->GetHash() == txHist_743.GetHash() && nHeight == 1265011) {
return true;
}
unsigned char ch_744[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4b, 0x4d, 0x13, 0x04, 0xdf, 0x1d, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x45, 0x1d, 0x09, 0x9a, 0x88, 0x13, 0xf8, 0x82, 0x4a, 0xf0, 0xe5, 0xce, 0xd5, 0xa0, 0x22, 0xb4, 0xeb, 0xa3, 0xc8, 0xfb, 0x48, 0x56, 0xab, 0x31, 0x48, 0x6a, 0x9d, 0xc4, 0x95, 0xa2, 0x6e, 0xfc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xfe, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_744(ch_744, ch_744 + sizeof(ch_744) -1);
CDataStream stream_744(vch_744, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_744;
stream_744 >> txHist_744;

if(block.vtx[0]->GetHash() == txHist_744.GetHash() && nHeight == 1264971) {
return true;
}
unsigned char ch_745[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x49, 0x4d, 0x13, 0x04, 0x39, 0x1d, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x06, 0x24, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_745(ch_745, ch_745 + sizeof(ch_745) -1);
CDataStream stream_745(vch_745, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_745;
stream_745 >> txHist_745;

if(block.vtx[0]->GetHash() == txHist_745.GetHash() && nHeight == 1264969) {
return true;
}
unsigned char ch_746[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x0f, 0x4d, 0x13, 0x04, 0x85, 0x04, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x1f, 0xa9, 0x09, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa3, 0x25, 0x58, 0x89, 0x42, 0x7d, 0xd8, 0xf9, 0x87, 0x9d, 0xa0, 0x4c, 0x13, 0xd1, 0x41, 0x52, 0x11, 0x0a, 0xff, 0x76, 0xc4, 0x61, 0x9b, 0x2f, 0x17, 0x50, 0xae, 0xd2, 0xba, 0x77, 0x7f, 0x52, 0x98, 0xe6, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_746(ch_746, ch_746 + sizeof(ch_746) -1);
CDataStream stream_746(vch_746, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_746;
stream_746 >> txHist_746;

if(block.vtx[0]->GetHash() == txHist_746.GetHash() && nHeight == 1264911) {
return true;
}
unsigned char ch_747[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x0e, 0x4d, 0x13, 0x04, 0x47, 0x04, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x08, 0x53, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_747(ch_747, ch_747 + sizeof(ch_747) -1);
CDataStream stream_747(vch_747, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_747;
stream_747 >> txHist_747;

if(block.vtx[0]->GetHash() == txHist_747.GetHash() && nHeight == 1264910) {
return true;
}
unsigned char ch_748[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x0c, 0x4d, 0x13, 0x04, 0xd5, 0x03, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x8a, 0xbb, 0x36, 0x94, 0x54, 0xf5, 0xab, 0x2f, 0xa0, 0x57, 0xf7, 0x31, 0x56, 0xc3, 0x8f, 0x06, 0xb3, 0xa8, 0x16, 0x8f, 0xe5, 0xd2, 0xa0, 0xdf, 0xd2, 0xbb, 0xe7, 0xd8, 0x57, 0x5b, 0x9d, 0xfc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xfe, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_748(ch_748, ch_748 + sizeof(ch_748) -1);
CDataStream stream_748(vch_748, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_748;
stream_748 >> txHist_748;

if(block.vtx[0]->GetHash() == txHist_748.GetHash() && nHeight == 1264908) {
return true;
}
unsigned char ch_749[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x08, 0x4d, 0x13, 0x04, 0xe6, 0x01, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xfb, 0xe6, 0xd0, 0x5d, 0xaf, 0x80, 0x75, 0x9f, 0x92, 0x35, 0x44, 0x09, 0x2a, 0xc3, 0xf9, 0x00, 0x17, 0x27, 0xe7, 0x5c, 0xf1, 0xa9, 0x15, 0x72, 0x63, 0x13, 0xa3, 0x4b, 0x1b, 0x9e, 0x0f, 0xa4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x9c, 0xe8, 0x7e, 0x42, 0xe0, 0x41, 0xbe, 0x35, 0x0e, 0x28, 0xf5, 0xa3, 0xbf, 0x4a, 0xe3, 0xef, 0x3f, 0x8f, 0x4c, 0x4a, 0x29, 0x2b, 0x10, 0x9b, 0x53, 0xae, 0xc5, 0x06, 0xa6, 0x6c, 0x29, 0xd4, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_749(ch_749, ch_749 + sizeof(ch_749) -1);
CDataStream stream_749(vch_749, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_749;
stream_749 >> txHist_749;

if(block.vtx[0]->GetHash() == txHist_749.GetHash() && nHeight == 1264904) {
return true;
}
unsigned char ch_750[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x7a, 0x4c, 0x13, 0x04, 0x0a, 0xd2, 0x36, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_750(ch_750, ch_750 + sizeof(ch_750) -1);
CDataStream stream_750(vch_750, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_750;
stream_750 >> txHist_750;

if(block.vtx[0]->GetHash() == txHist_750.GetHash() && nHeight == 1264762) {
return true;
}
unsigned char ch_751[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x1c, 0x4d, 0x13, 0x04, 0xed, 0x07, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x08, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_751(ch_751, ch_751 + sizeof(ch_751) -1);
CDataStream stream_751(vch_751, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_751;
stream_751 >> txHist_751;

if(block.vtx[0]->GetHash() == txHist_751.GetHash() && nHeight == 1264924) {
return true;
}
unsigned char ch_752[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x77, 0x4c, 0x13, 0x04, 0x7f, 0xd1, 0x36, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_752(ch_752, ch_752 + sizeof(ch_752) -1);
CDataStream stream_752(vch_752, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_752;
stream_752 >> txHist_752;

if(block.vtx[0]->GetHash() == txHist_752.GetHash() && nHeight == 1264759) {
return true;
}
unsigned char ch_753[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x74, 0x4c, 0x13, 0x04, 0x11, 0xd1, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x05, 0x8a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xfd, 0xb3, 0x45, 0xea, 0x14, 0x55, 0xf3, 0x20, 0xb4, 0xa5, 0xcc, 0xe1, 0xdc, 0x56, 0xc1, 0x46, 0x77, 0x6d, 0xb0, 0x95, 0xb7, 0x8c, 0x9d, 0x17, 0xae, 0x7e, 0x15, 0x2a, 0xb2, 0x3f, 0xd8, 0x49, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_753(ch_753, ch_753 + sizeof(ch_753) -1);
CDataStream stream_753(vch_753, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_753;
stream_753 >> txHist_753;

if(block.vtx[0]->GetHash() == txHist_753.GetHash() && nHeight == 1264756) {
return true;
}
unsigned char ch_754[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x19, 0x4d, 0x13, 0x04, 0x8e, 0x07, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x05, 0x3b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x54, 0x14, 0x8b, 0x91, 0xb0, 0x35, 0xf5, 0x5c, 0xb5, 0x98, 0x85, 0x2d, 0x7c, 0x79, 0x86, 0x99, 0x62, 0x74, 0x65, 0xdf, 0x15, 0x48, 0x80, 0x58, 0x17, 0x2f, 0x5f, 0xd7, 0x10, 0xd8, 0x7f, 0x0f, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_754(ch_754, ch_754 + sizeof(ch_754) -1);
CDataStream stream_754(vch_754, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_754;
stream_754 >> txHist_754;

if(block.vtx[0]->GetHash() == txHist_754.GetHash() && nHeight == 1264921) {
return true;
}
unsigned char ch_755[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x17, 0x4d, 0x13, 0x04, 0x03, 0x06, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x08, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x7f, 0x64, 0x49, 0x72, 0x0a, 0x0e, 0x6e, 0xc0, 0xaf, 0x16, 0x3a, 0xfe, 0x79, 0xe4, 0xbe, 0x05, 0x80, 0x98, 0x2b, 0xed, 0x97, 0x00, 0x69, 0x88, 0x2d, 0x8b, 0xd6, 0x67, 0x1e, 0xeb, 0x62, 0x12, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_755(ch_755, ch_755 + sizeof(ch_755) -1);
CDataStream stream_755(vch_755, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_755;
stream_755 >> txHist_755;

if(block.vtx[0]->GetHash() == txHist_755.GetHash() && nHeight == 1264919) {
return true;
}
unsigned char ch_756[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x14, 0x4d, 0x13, 0x04, 0xa1, 0x05, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x07, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_756(ch_756, ch_756 + sizeof(ch_756) -1);
CDataStream stream_756(vch_756, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_756;
stream_756 >> txHist_756;

if(block.vtx[0]->GetHash() == txHist_756.GetHash() && nHeight == 1264916) {
return true;
}
unsigned char ch_757[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb4, 0x4c, 0x13, 0x04, 0xbe, 0xe6, 0x36, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x0b, 0x54, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xee, 0x4b, 0x59, 0x2b, 0x7d, 0x4f, 0xb3, 0x7f, 0x91, 0x16, 0x19, 0x95, 0x9e, 0x45, 0x9a, 0x83, 0x1f, 0x21, 0xe3, 0xfe, 0xaa, 0x39, 0x3a, 0xbd, 0xf0, 0x55, 0xd0, 0xf8, 0x16, 0xcc, 0x96, 0x35, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_757(ch_757, ch_757 + sizeof(ch_757) -1);
CDataStream stream_757(vch_757, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_757;
stream_757 >> txHist_757;

if(block.vtx[0]->GetHash() == txHist_757.GetHash() && nHeight == 1264820) {
return true;
}
unsigned char ch_758[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb3, 0x4c, 0x13, 0x04, 0x3a, 0xe6, 0x36, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xff, 0x55, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_758(ch_758, ch_758 + sizeof(ch_758) -1);
CDataStream stream_758(vch_758, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_758;
stream_758 >> txHist_758;

if(block.vtx[0]->GetHash() == txHist_758.GetHash() && nHeight == 1264819) {
return true;
}
unsigned char ch_759[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x41, 0x4d, 0x13, 0x04, 0x96, 0x1a, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x08, 0x04, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x1f, 0xab, 0x9e, 0xce, 0xd5, 0x29, 0xf5, 0xd6, 0x72, 0x5c, 0x5c, 0x6e, 0xdf, 0x22, 0x3b, 0x35, 0x6f, 0x23, 0x35, 0x8c, 0xc7, 0x06, 0x75, 0x06, 0x91, 0xf9, 0xd6, 0x06, 0xd1, 0xd3, 0x4f, 0xfb, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_759(ch_759, ch_759 + sizeof(ch_759) -1);
CDataStream stream_759(vch_759, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_759;
stream_759 >> txHist_759;

if(block.vtx[0]->GetHash() == txHist_759.GetHash() && nHeight == 1264961) {
return true;
}
unsigned char ch_760[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x3f, 0x4d, 0x13, 0x04, 0xf4, 0x18, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x08, 0x96, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x29, 0x15, 0xd1, 0x5e, 0x61, 0xf9, 0x41, 0xa9, 0xb8, 0xeb, 0x46, 0xc9, 0xae, 0x27, 0x95, 0x4e, 0x2d, 0x5c, 0x4d, 0x4d, 0x73, 0x72, 0xe6, 0x13, 0x54, 0x15, 0xd6, 0x21, 0x17, 0x1e, 0x8d, 0x51, 0x18, 0x18, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_760(ch_760, ch_760 + sizeof(ch_760) -1);
CDataStream stream_760(vch_760, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_760;
stream_760 >> txHist_760;

if(block.vtx[0]->GetHash() == txHist_760.GetHash() && nHeight == 1264959) {
return true;
}
unsigned char ch_761[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3d, 0x4d, 0x13, 0x04, 0xfc, 0x17, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x45, 0x52, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0b, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_761(ch_761, ch_761 + sizeof(ch_761) -1);
CDataStream stream_761(vch_761, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_761;
stream_761 >> txHist_761;

if(block.vtx[0]->GetHash() == txHist_761.GetHash() && nHeight == 1264957) {
return true;
}
unsigned char ch_762[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x3b, 0x4d, 0x13, 0x04, 0x74, 0x17, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x06, 0x24, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_762(ch_762, ch_762 + sizeof(ch_762) -1);
CDataStream stream_762(vch_762, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_762;
stream_762 >> txHist_762;

if(block.vtx[0]->GetHash() == txHist_762.GetHash() && nHeight == 1264955) {
return true;
}
unsigned char ch_763[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3c, 0x4d, 0x13, 0x04, 0xd8, 0x17, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x1f, 0xf7, 0x14, 0xf7, 0x9c, 0x9e, 0xef, 0x85, 0x16, 0xec, 0xe9, 0xea, 0xc9, 0x89, 0xb1, 0x20, 0xec, 0x55, 0xe1, 0x58, 0xbd, 0xf3, 0x60, 0x9f, 0x60, 0xa3, 0x7c, 0x4f, 0x98, 0x63, 0x86, 0xbd, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x52, 0x9a, 0x20, 0x73, 0x24, 0x02, 0x12, 0xbe, 0x93, 0x42, 0x72, 0xd5, 0xe1, 0xc0, 0x06, 0x99, 0x3d, 0xc1, 0x0d, 0xa3, 0xbb, 0x35, 0xc4, 0xa9, 0x89, 0xfb, 0xa1, 0x45, 0x5f, 0x20, 0x50, 0xa7, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_763(ch_763, ch_763 + sizeof(ch_763) -1);
CDataStream stream_763(vch_763, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_763;
stream_763 >> txHist_763;

if(block.vtx[0]->GetHash() == txHist_763.GetHash() && nHeight == 1264956) {
return true;
}
unsigned char ch_764[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x3a, 0x4d, 0x13, 0x04, 0x42, 0x17, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x02, 0xe0, 0x45, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_764(ch_764, ch_764 + sizeof(ch_764) -1);
CDataStream stream_764(vch_764, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_764;
stream_764 >> txHist_764;

if(block.vtx[0]->GetHash() == txHist_764.GetHash() && nHeight == 1264954) {
return true;
}
unsigned char ch_765[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x39, 0x4d, 0x13, 0x04, 0xeb, 0x16, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xfa, 0xc4, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_765(ch_765, ch_765 + sizeof(ch_765) -1);
CDataStream stream_765(vch_765, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_765;
stream_765 >> txHist_765;

if(block.vtx[0]->GetHash() == txHist_765.GetHash() && nHeight == 1264953) {
return true;
}
unsigned char ch_766[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x37, 0x4d, 0x13, 0x04, 0x8e, 0x16, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb4, 0x75, 0x2e, 0x78, 0x40, 0xfb, 0x46, 0x07, 0x4b, 0x44, 0xcc, 0x99, 0x15, 0x7b, 0x5e, 0x92, 0x19, 0x93, 0x34, 0x7b, 0xf6, 0x8b, 0x3c, 0x17, 0x68, 0x8d, 0x28, 0x9d, 0x9c, 0xff, 0xd6, 0x52, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_766(ch_766, ch_766 + sizeof(ch_766) -1);
CDataStream stream_766(vch_766, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_766;
stream_766 >> txHist_766;

if(block.vtx[0]->GetHash() == txHist_766.GetHash() && nHeight == 1264951) {
return true;
}
unsigned char ch_767[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x36, 0x4d, 0x13, 0x04, 0x48, 0x16, 0x37, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0xb8, 0x17, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_767(ch_767, ch_767 + sizeof(ch_767) -1);
CDataStream stream_767(vch_767, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_767;
stream_767 >> txHist_767;

if(block.vtx[0]->GetHash() == txHist_767.GetHash() && nHeight == 1264950) {
return true;
}
unsigned char ch_768[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x6e, 0x4c, 0x13, 0x04, 0xeb, 0xce, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf1, 0xd5, 0xab, 0xb8, 0x74, 0x4f, 0x20, 0xc2, 0x9c, 0xcd, 0x72, 0xa7, 0x88, 0x33, 0x97, 0xac, 0x07, 0x34, 0x15, 0x55, 0x15, 0xaf, 0x76, 0xf7, 0x0b, 0x25, 0xad, 0x19, 0xd3, 0xa0, 0x1f, 0x29, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa7, 0x1f, 0xba, 0x49, 0x2e, 0xc4, 0x54, 0x47, 0x22, 0xa9, 0x76, 0x7b, 0xb7, 0x0c, 0xbe, 0x4e, 0x79, 0x86, 0x2e, 0xce, 0xce, 0x10, 0x29, 0x9c, 0xe7, 0x03, 0x00, 0xd1, 0x6c, 0x5c, 0xcd, 0x62, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_768(ch_768, ch_768 + sizeof(ch_768) -1);
CDataStream stream_768(vch_768, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_768;
stream_768 >> txHist_768;

if(block.vtx[0]->GetHash() == txHist_768.GetHash() && nHeight == 1264750) {
return true;
}
unsigned char ch_769[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x6a, 0x4c, 0x13, 0x04, 0x2e, 0xce, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0b, 0x11, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x3f, 0xd9, 0x02, 0x02, 0xfc, 0xf8, 0x61, 0xd9, 0xb2, 0xa6, 0xc1, 0x5b, 0xa6, 0x69, 0x44, 0xa9, 0xf7, 0xeb, 0x12, 0x98, 0x9d, 0xe1, 0xc0, 0x61, 0x07, 0x7a, 0x67, 0x04, 0xe1, 0x7c, 0xcc, 0x35, 0x40, 0x63, 0x82, 0x15, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x60, 0xe0, 0xe8, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xe0, 0x61, 0x8c, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_769(ch_769, ch_769 + sizeof(ch_769) -1);
CDataStream stream_769(vch_769, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_769;
stream_769 >> txHist_769;

if(block.vtx[0]->GetHash() == txHist_769.GetHash() && nHeight == 1264746) {
return true;
}
unsigned char ch_770[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x09, 0x4d, 0x13, 0x04, 0xe4, 0x01, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfd, 0xf4, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_770(ch_770, ch_770 + sizeof(ch_770) -1);
CDataStream stream_770(vch_770, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_770;
stream_770 >> txHist_770;

if(block.vtx[0]->GetHash() == txHist_770.GetHash() && nHeight == 1264905) {
return true;
}
unsigned char ch_771[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x13, 0x4c, 0x13, 0x04, 0xbc, 0xaf, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x06, 0x44, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_771(ch_771, ch_771 + sizeof(ch_771) -1);
CDataStream stream_771(vch_771, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_771;
stream_771 >> txHist_771;

if(block.vtx[0]->GetHash() == txHist_771.GetHash() && nHeight == 1264659) {
return true;
}
unsigned char ch_772[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x0e, 0x4c, 0x13, 0x04, 0xc5, 0xad, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb6, 0x68, 0xef, 0x08, 0x6c, 0xc1, 0xba, 0x0e, 0xe5, 0x04, 0x57, 0x06, 0xb4, 0x97, 0xaf, 0x4b, 0xec, 0x06, 0xfb, 0x94, 0x25, 0xc3, 0x8d, 0x11, 0x6e, 0xbd, 0x56, 0xc7, 0xf0, 0xbf, 0xfb, 0xcd, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x4b, 0x88, 0xae, 0x27, 0xba, 0xad, 0x07, 0x46, 0x6e, 0x50, 0x00, 0x51, 0x50, 0x39, 0xdd, 0x4a, 0xac, 0x08, 0x9e, 0xdc, 0xd1, 0x42, 0x7c, 0xf6, 0x47, 0x90, 0x17, 0xfb, 0xbf, 0xb1, 0x84, 0xe6, 0xb0, 0xf4, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_772(ch_772, ch_772 + sizeof(ch_772) -1);
CDataStream stream_772(vch_772, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_772;
stream_772 >> txHist_772;

if(block.vtx[0]->GetHash() == txHist_772.GetHash() && nHeight == 1264654) {
return true;
}
unsigned char ch_773[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x02, 0x4c, 0x13, 0x04, 0xfb, 0xa8, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x1f, 0xa5, 0x65, 0x25, 0x32, 0xa8, 0x77, 0x10, 0x48, 0xbe, 0x7d, 0x23, 0x72, 0x05, 0xc6, 0x1d, 0x39, 0x98, 0x74, 0xab, 0xb4, 0x00, 0x7d, 0xf7, 0xab, 0xcb, 0x1b, 0xe4, 0x62, 0x39, 0x59, 0x24, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xff, 0xfe, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_773(ch_773, ch_773 + sizeof(ch_773) -1);
CDataStream stream_773(vch_773, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_773;
stream_773 >> txHist_773;

if(block.vtx[0]->GetHash() == txHist_773.GetHash() && nHeight == 1264642) {
return true;
}
unsigned char ch_774[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf6, 0x4b, 0x13, 0x04, 0x6e, 0xa3, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x18, 0x66, 0x73, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_774(ch_774, ch_774 + sizeof(ch_774) -1);
CDataStream stream_774(vch_774, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_774;
stream_774 >> txHist_774;

if(block.vtx[0]->GetHash() == txHist_774.GetHash() && nHeight == 1264630) {
return true;
}
unsigned char ch_775[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x04, 0x4d, 0x13, 0x04, 0x07, 0x01, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x19, 0x07, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa5, 0x42, 0xf1, 0x51, 0x71, 0x58, 0xfb, 0x67, 0x7f, 0x9e, 0x62, 0x0d, 0x7c, 0xfb, 0x37, 0x06, 0x9f, 0xdd, 0x26, 0xd1, 0xc8, 0x82, 0x86, 0x49, 0xee, 0x56, 0xb7, 0x7a, 0x71, 0x79, 0x11, 0xae, 0xf0, 0x5e, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_775(ch_775, ch_775 + sizeof(ch_775) -1);
CDataStream stream_775(vch_775, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_775;
stream_775 >> txHist_775;

if(block.vtx[0]->GetHash() == txHist_775.GetHash() && nHeight == 1264900) {
return true;
}
unsigned char ch_776[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x00, 0x4d, 0x13, 0x04, 0xcb, 0x00, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x0c, 0x4e, 0x48, 0xe0, 0xcf, 0x78, 0x3a, 0x22, 0xe6, 0x86, 0x3e, 0x53, 0xda, 0xdd, 0xf6, 0x59, 0xed, 0xe2, 0x46, 0x86, 0x0f, 0x5b, 0x11, 0x3a, 0xbe, 0x31, 0xa3, 0x56, 0x55, 0x93, 0x56, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xfe, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_776(ch_776, ch_776 + sizeof(ch_776) -1);
CDataStream stream_776(vch_776, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_776;
stream_776 >> txHist_776;

if(block.vtx[0]->GetHash() == txHist_776.GetHash() && nHeight == 1264896) {
return true;
}
unsigned char ch_777[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xff, 0x4c, 0x13, 0x04, 0x8d, 0x00, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x2b, 0xd3, 0x02, 0x31, 0x46, 0x4e, 0x7f, 0x18, 0x3e, 0xe1, 0xfd, 0x7c, 0xbc, 0x6e, 0x81, 0xc7, 0xaa, 0x3f, 0x77, 0x99, 0xf2, 0x1a, 0x49, 0x9d, 0x70, 0xdd, 0x16, 0x3e, 0x80, 0x89, 0x00, 0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0x27, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x59, 0x59, 0xfa, 0xdc, 0x2c, 0x44, 0xa6, 0x64, 0x62, 0x46, 0x2c, 0x3d, 0xd9, 0x5a, 0xf2, 0xde, 0x7d, 0xdf, 0xc6, 0xe4, 0x25, 0x1e, 0x1c, 0x32, 0x38, 0xa1, 0xe1, 0x7e, 0x0a, 0x2c, 0x30, 0xd0, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_777(ch_777, ch_777 + sizeof(ch_777) -1);
CDataStream stream_777(vch_777, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_777;
stream_777 >> txHist_777;

if(block.vtx[0]->GetHash() == txHist_777.GetHash() && nHeight == 1264895) {
return true;
}
unsigned char ch_778[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xeb, 0x4c, 0x13, 0x04, 0x94, 0xfb, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x74, 0x44, 0x27, 0x28, 0x1a, 0x3b, 0x45, 0x52, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0b, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_778(ch_778, ch_778 + sizeof(ch_778) -1);
CDataStream stream_778(vch_778, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_778;
stream_778 >> txHist_778;

if(block.vtx[0]->GetHash() == txHist_778.GetHash() && nHeight == 1264875) {
return true;
}
unsigned char ch_779[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x91, 0x4c, 0x13, 0x04, 0x71, 0xd9, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x12, 0xa9, 0xa9, 0x92, 0x9c, 0xdd, 0xc3, 0x1d, 0x14, 0x6a, 0xff, 0xc0, 0x61, 0x4e, 0xc7, 0xd0, 0x62, 0xd6, 0xf8, 0x87, 0xf6, 0x98, 0x95, 0x6e, 0x6f, 0x50, 0xe4, 0xc5, 0xe0, 0xf8, 0xd0, 0x63, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x3a, 0xe8, 0x25, 0x03, 0xfe, 0x74, 0x21, 0xc7, 0xda, 0x51, 0xfc, 0x60, 0x08, 0x5d, 0x52, 0x76, 0x73, 0x5a, 0xd3, 0xc5, 0x40, 0xaa, 0xa2, 0x01, 0xea, 0x06, 0x68, 0x78, 0xf6, 0x73, 0xd1, 0xb3, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_779(ch_779, ch_779 + sizeof(ch_779) -1);
CDataStream stream_779(vch_779, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_779;
stream_779 >> txHist_779;

if(block.vtx[0]->GetHash() == txHist_779.GetHash() && nHeight == 1264785) {
return true;
}
unsigned char ch_780[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x8d, 0x4c, 0x13, 0x04, 0xc7, 0xd7, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x08, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_780(ch_780, ch_780 + sizeof(ch_780) -1);
CDataStream stream_780(vch_780, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_780;
stream_780 >> txHist_780;

if(block.vtx[0]->GetHash() == txHist_780.GetHash() && nHeight == 1264781) {
return true;
}
unsigned char ch_781[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x81, 0x4c, 0x13, 0x04, 0x23, 0xd5, 0x36, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x09, 0xb1, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x34, 0x25, 0x8f, 0xc3, 0xad, 0x71, 0x39, 0x52, 0x63, 0xc5, 0x35, 0xaa, 0xaf, 0x72, 0x85, 0xd1, 0xb6, 0xab, 0xaf, 0xe6, 0xc3, 0x4b, 0xab, 0xf5, 0x4a, 0x29, 0xc4, 0xfa, 0x53, 0xc0, 0x5b, 0x58, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_781(ch_781, ch_781 + sizeof(ch_781) -1);
CDataStream stream_781(vch_781, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_781;
stream_781 >> txHist_781;

if(block.vtx[0]->GetHash() == txHist_781.GetHash() && nHeight == 1264769) {
return true;
}
unsigned char ch_782[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x34, 0x4d, 0x13, 0x04, 0x7a, 0x15, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x05, 0xff, 0x36, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x8f, 0x56, 0xbb, 0xb9, 0xfe, 0x29, 0x91, 0x8d, 0xe2, 0x84, 0x4b, 0x5a, 0xe7, 0xb0, 0x5d, 0xfe, 0xd5, 0xa0, 0x15, 0xce, 0xd4, 0xc5, 0xb1, 0x10, 0x8c, 0x5f, 0xae, 0x8f, 0xfd, 0xa4, 0x67, 0x0e, 0x70, 0xc9, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_782(ch_782, ch_782 + sizeof(ch_782) -1);
CDataStream stream_782(vch_782, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_782;
stream_782 >> txHist_782;

if(block.vtx[0]->GetHash() == txHist_782.GetHash() && nHeight == 1264948) {
return true;
}
unsigned char ch_783[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xe6, 0x4c, 0x13, 0x04, 0xe4, 0xf8, 0x36, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0x47, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_783(ch_783, ch_783 + sizeof(ch_783) -1);
CDataStream stream_783(vch_783, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_783;
stream_783 >> txHist_783;

if(block.vtx[0]->GetHash() == txHist_783.GetHash() && nHeight == 1264870) {
return true;
}
unsigned char ch_784[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x79, 0x4c, 0x13, 0x04, 0xec, 0xd1, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x09, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_784(ch_784, ch_784 + sizeof(ch_784) -1);
CDataStream stream_784(vch_784, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_784;
stream_784 >> txHist_784;

if(block.vtx[0]->GetHash() == txHist_784.GetHash() && nHeight == 1264761) {
return true;
}
unsigned char ch_785[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xe4, 0x4c, 0x13, 0x04, 0x9a, 0xf8, 0x36, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfd, 0xa2, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_785(ch_785, ch_785 + sizeof(ch_785) -1);
CDataStream stream_785(vch_785, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_785;
stream_785 >> txHist_785;

if(block.vtx[0]->GetHash() == txHist_785.GetHash() && nHeight == 1264868) {
return true;
}
unsigned char ch_786[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x76, 0x4c, 0x13, 0x04, 0x6b, 0xd1, 0x36, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x3d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x70, 0xad, 0x72, 0xaf, 0x63, 0x9f, 0x51, 0x95, 0xf5, 0x99, 0x8a, 0xeb, 0xed, 0xbb, 0x92, 0x4f, 0x5e, 0xdb, 0x23, 0x0f, 0xbe, 0x8e, 0xb0, 0x94, 0x15, 0x07, 0x4c, 0x4e, 0x74, 0xc5, 0x01, 0x16, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_786(ch_786, ch_786 + sizeof(ch_786) -1);
CDataStream stream_786(vch_786, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_786;
stream_786 >> txHist_786;

if(block.vtx[0]->GetHash() == txHist_786.GetHash() && nHeight == 1264758) {
return true;
}
unsigned char ch_787[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x31, 0x4d, 0x13, 0x04, 0x22, 0x14, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x03, 0x09, 0x07, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xcc, 0x24, 0xdb, 0x66, 0xb4, 0x8f, 0x4c, 0xd4, 0xd0, 0xe5, 0x49, 0xab, 0xec, 0x7c, 0xf2, 0x6b, 0xb8, 0xb8, 0x3c, 0xc2, 0x17, 0xfd, 0xd2, 0xa5, 0x0f, 0xee, 0xd1, 0xef, 0xa4, 0xa3, 0x4c, 0x7b, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_787(ch_787, ch_787 + sizeof(ch_787) -1);
CDataStream stream_787(vch_787, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_787;
stream_787 >> txHist_787;

if(block.vtx[0]->GetHash() == txHist_787.GetHash() && nHeight == 1264945) {
return true;
}
unsigned char ch_788[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x2f, 0x4d, 0x13, 0x04, 0x21, 0x13, 0x37, 0x5b, 0x08, 0x20, 0x00, 0x02, 0xe0, 0xb3, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x46, 0xf0, 0xa0, 0x1d, 0xf3, 0x42, 0x89, 0xb0, 0x4e, 0x1a, 0x41, 0x09, 0xea, 0x34, 0x3b, 0x84, 0xa3, 0xd3, 0xc3, 0x85, 0xdd, 0x1a, 0xba, 0xa1, 0xa4, 0xf6, 0xf2, 0xbb, 0x65, 0x3a, 0xaf, 0x33, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_788(ch_788, ch_788 + sizeof(ch_788) -1);
CDataStream stream_788(vch_788, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_788;
stream_788 >> txHist_788;

if(block.vtx[0]->GetHash() == txHist_788.GetHash() && nHeight == 1264943) {
return true;
}
unsigned char ch_789[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2d, 0x4d, 0x13, 0x04, 0x1a, 0x12, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x3c, 0x51, 0x12, 0x51, 0x2d, 0xa9, 0x32, 0x0e, 0x69, 0x7d, 0x26, 0xcf, 0x5a, 0xd6, 0x46, 0x57, 0x8d, 0xfa, 0xac, 0x99, 0x64, 0x68, 0x7f, 0x26, 0xe8, 0x63, 0x02, 0x72, 0xf8, 0xac, 0x7a, 0xe1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xff, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_789(ch_789, ch_789 + sizeof(ch_789) -1);
CDataStream stream_789(vch_789, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_789;
stream_789 >> txHist_789;

if(block.vtx[0]->GetHash() == txHist_789.GetHash() && nHeight == 1264941) {
return true;
}
unsigned char ch_790[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2b, 0x4d, 0x13, 0x04, 0xbb, 0x11, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb1, 0xc3, 0xfc, 0xe4, 0xef, 0x27, 0xa0, 0xb5, 0x7c, 0x2a, 0x16, 0x44, 0x2c, 0xdc, 0x8e, 0xbb, 0x1c, 0xaf, 0x3e, 0x73, 0x3f, 0xdd, 0xbf, 0x4b, 0x15, 0x0a, 0x6a, 0x60, 0x2f, 0x27, 0x01, 0xbb, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_790(ch_790, ch_790 + sizeof(ch_790) -1);
CDataStream stream_790(vch_790, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_790;
stream_790 >> txHist_790;

if(block.vtx[0]->GetHash() == txHist_790.GetHash() && nHeight == 1264939) {
return true;
}
unsigned char ch_791[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x27, 0x4d, 0x13, 0x04, 0x5f, 0x0f, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0x1a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_791(ch_791, ch_791 + sizeof(ch_791) -1);
CDataStream stream_791(vch_791, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_791;
stream_791 >> txHist_791;

if(block.vtx[0]->GetHash() == txHist_791.GetHash() && nHeight == 1264935) {
return true;
}
unsigned char ch_792[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x25, 0x4d, 0x13, 0x04, 0x2e, 0x0f, 0x37, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9f, 0xb5, 0x55, 0x65, 0x20, 0x8c, 0xc5, 0xe6, 0x24, 0x1f, 0x97, 0xe7, 0x77, 0xda, 0xd9, 0x0c, 0x70, 0x44, 0xca, 0xe1, 0x42, 0x08, 0x41, 0x51, 0xda, 0x4a, 0x0d, 0x0b, 0xe4, 0xbf, 0x4e, 0xfe, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_792(ch_792, ch_792 + sizeof(ch_792) -1);
CDataStream stream_792(vch_792, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_792;
stream_792 >> txHist_792;

if(block.vtx[0]->GetHash() == txHist_792.GetHash() && nHeight == 1264933) {
return true;
}
unsigned char ch_793[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x21, 0x4d, 0x13, 0x04, 0x33, 0x0e, 0x37, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x08, 0x2b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x69, 0xf8, 0xf4, 0xf0, 0x65, 0x78, 0xdb, 0xff, 0x4f, 0x47, 0x7f, 0x3a, 0x9d, 0x6c, 0x19, 0x26, 0xc1, 0x05, 0xf4, 0x3c, 0xd0, 0x61, 0x44, 0x9b, 0x77, 0xc3, 0xb6, 0x21, 0x5a, 0xab, 0xc1, 0x06, 0x48, 0x5f, 0x71, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_793(ch_793, ch_793 + sizeof(ch_793) -1);
CDataStream stream_793(vch_793, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_793;
stream_793 >> txHist_793;

if(block.vtx[0]->GetHash() == txHist_793.GetHash() && nHeight == 1264929) {
return true;
}
unsigned char ch_794[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x1d, 0x4d, 0x13, 0x04, 0x0a, 0x0a, 0x37, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfa, 0x99, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x76, 0x4f, 0x12, 0x1f, 0xdc, 0x9b, 0xfd, 0xe5, 0xad, 0x53, 0x47, 0x4a, 0x9f, 0xc9, 0x62, 0x0c, 0xbb, 0x54, 0x56, 0x22, 0xc5, 0x4d, 0xef, 0x69, 0x14, 0x68, 0x58, 0x2e, 0x29, 0x2f, 0x48, 0x25, 0x30, 0xe3, 0x64, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_794(ch_794, ch_794 + sizeof(ch_794) -1);
CDataStream stream_794(vch_794, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_794;
stream_794 >> txHist_794;

if(block.vtx[0]->GetHash() == txHist_794.GetHash() && nHeight == 1264925) {
return true;
}
unsigned char ch_795[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xfc, 0x4c, 0x13, 0x04, 0x97, 0xff, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9c, 0x47, 0x80, 0x97, 0xb7, 0xea, 0xbb, 0xd5, 0x2c, 0x57, 0xd4, 0xe6, 0xeb, 0x19, 0x0a, 0x48, 0x0a, 0x72, 0xee, 0x6a, 0x9e, 0xb6, 0xf0, 0x19, 0xda, 0x08, 0x88, 0x51, 0x6d, 0xc7, 0xd1, 0xe0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_795(ch_795, ch_795 + sizeof(ch_795) -1);
CDataStream stream_795(vch_795, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_795;
stream_795 >> txHist_795;

if(block.vtx[0]->GetHash() == txHist_795.GetHash() && nHeight == 1264892) {
return true;
}
unsigned char ch_796[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf8, 0x4c, 0x13, 0x04, 0x10, 0xff, 0x36, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf9, 0x0b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_796(ch_796, ch_796 + sizeof(ch_796) -1);
CDataStream stream_796(vch_796, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_796;
stream_796 >> txHist_796;

if(block.vtx[0]->GetHash() == txHist_796.GetHash() && nHeight == 1264888) {
return true;
}
unsigned char ch_797[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xee, 0x4c, 0x13, 0x04, 0x21, 0xfc, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7e, 0x2a, 0xd3, 0x77, 0xf9, 0x97, 0x62, 0x56, 0x95, 0xd6, 0xb6, 0xc1, 0xcf, 0xc3, 0x1b, 0x3b, 0xd8, 0xff, 0x84, 0x75, 0xf1, 0xb9, 0xe5, 0xff, 0xd2, 0xdd, 0xd4, 0xa7, 0x87, 0x58, 0x28, 0x1f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xfe, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_797(ch_797, ch_797 + sizeof(ch_797) -1);
CDataStream stream_797(vch_797, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_797;
stream_797 >> txHist_797;

if(block.vtx[0]->GetHash() == txHist_797.GetHash() && nHeight == 1264878) {
return true;
}
unsigned char ch_798[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb0, 0x4c, 0x13, 0x04, 0xdc, 0xe5, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x03, 0x0d, 0x08, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x57, 0x29, 0x50, 0x15, 0xc3, 0x88, 0x6b, 0x00, 0xc4, 0x51, 0x16, 0x3a, 0x1d, 0xc1, 0xce, 0xff, 0x7b, 0x67, 0x4f, 0x0d, 0x38, 0xf9, 0x12, 0x64, 0x6d, 0xd3, 0x82, 0xd1, 0x2c, 0xb7, 0xad, 0xa5, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_798(ch_798, ch_798 + sizeof(ch_798) -1);
CDataStream stream_798(vch_798, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_798;
stream_798 >> txHist_798;

if(block.vtx[0]->GetHash() == txHist_798.GetHash() && nHeight == 1264816) {
return true;
}
unsigned char ch_799[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xae, 0x4c, 0x13, 0x04, 0xf9, 0xe4, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe7, 0x15, 0xfd, 0x41, 0x5c, 0x8e, 0x49, 0xbf, 0xe6, 0xf7, 0xdf, 0x3d, 0x97, 0x8c, 0xf3, 0x2a, 0x8c, 0xa6, 0x5a, 0x83, 0x42, 0xa2, 0x10, 0x95, 0x97, 0x7d, 0x1d, 0x9e, 0xa0, 0x0d, 0x99, 0xb4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xff, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_799(ch_799, ch_799 + sizeof(ch_799) -1);
CDataStream stream_799(vch_799, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_799;
stream_799 >> txHist_799;

if(block.vtx[0]->GetHash() == txHist_799.GetHash() && nHeight == 1264814) {
return true;
}
unsigned char ch_800[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xde, 0x4c, 0x13, 0x04, 0x34, 0xf7, 0x36, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x08, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xc3, 0x58, 0xfa, 0xae, 0xb7, 0x99, 0xd8, 0x17, 0x1d, 0x08, 0xd3, 0x84, 0x76, 0x7a, 0x06, 0x44, 0x94, 0xb4, 0x0a, 0x60, 0x1e, 0x34, 0x2a, 0x6a, 0x32, 0xed, 0xb2, 0x0c, 0x4b, 0x69, 0xaf, 0xf5, 0xd0, 0x68, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_800(ch_800, ch_800 + sizeof(ch_800) -1);
CDataStream stream_800(vch_800, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_800;
stream_800 >> txHist_800;

if(block.vtx[0]->GetHash() == txHist_800.GetHash() && nHeight == 1264862) {
return true;
}
unsigned char ch_801[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xdc, 0x4c, 0x13, 0x04, 0x24, 0xf6, 0x36, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfd, 0x6a, 0x07, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xdf, 0xb0, 0xe7, 0x70, 0x79, 0x41, 0x51, 0x8c, 0x7e, 0xcf, 0xb2, 0xad, 0x83, 0xbc, 0x37, 0x8d, 0x30, 0xf0, 0x14, 0x97, 0x89, 0xe0, 0x2b, 0xda, 0x92, 0x79, 0x1f, 0xc6, 0x8b, 0xf4, 0xdb, 0x30, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_801(ch_801, ch_801 + sizeof(ch_801) -1);
CDataStream stream_801(vch_801, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_801;
stream_801 >> txHist_801;

if(block.vtx[0]->GetHash() == txHist_801.GetHash() && nHeight == 1264860) {
return true;
}
unsigned char ch_802[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xab, 0x4c, 0x13, 0x04, 0xeb, 0xe3, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x68, 0xa8, 0x68, 0xda, 0x79, 0x1b, 0x22, 0xd1, 0x59, 0x37, 0x28, 0x8e, 0x4d, 0x90, 0xec, 0xb7, 0x90, 0x04, 0xa7, 0x25, 0x78, 0x80, 0x72, 0x9e, 0x9e, 0x08, 0xd7, 0x30, 0x2b, 0x88, 0xfd, 0x4d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xff, 0xfe, 0x18, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_802(ch_802, ch_802 + sizeof(ch_802) -1);
CDataStream stream_802(vch_802, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_802;
stream_802 >> txHist_802;

if(block.vtx[0]->GetHash() == txHist_802.GetHash() && nHeight == 1264811) {
return true;
}
unsigned char ch_803[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xaa, 0x4c, 0x13, 0x04, 0x55, 0xe3, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x12, 0xbe, 0x9b, 0xac, 0x5f, 0xb9, 0x58, 0xed, 0x11, 0x5d, 0x55, 0x64, 0x43, 0x5e, 0x8d, 0x2d, 0x13, 0xb0, 0xbc, 0xfd, 0x15, 0x1f, 0x37, 0xaf, 0x5e, 0x8a, 0x2e, 0x60, 0x79, 0x3c, 0xa8, 0xc2, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_803(ch_803, ch_803 + sizeof(ch_803) -1);
CDataStream stream_803(vch_803, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_803;
stream_803 >> txHist_803;

if(block.vtx[0]->GetHash() == txHist_803.GetHash() && nHeight == 1264810) {
return true;
}
unsigned char ch_804[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4a, 0x4c, 0x13, 0x04, 0x92, 0xc1, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x8e, 0xbf, 0x70, 0x63, 0xfe, 0xe6, 0xbd, 0xb5, 0xc2, 0x4b, 0x4c, 0x6a, 0xb9, 0xe0, 0xf5, 0xab, 0x92, 0x7a, 0xe2, 0x55, 0xbb, 0xbf, 0xcd, 0x59, 0xce, 0x97, 0xf5, 0x81, 0x3e, 0x40, 0x4b, 0x5d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xfe, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x97, 0x9e, 0x4f, 0x33, 0x5d, 0x3f, 0x52, 0x99, 0x22, 0x25, 0xf2, 0xab, 0x4e, 0x9e, 0x47, 0xf6, 0x7c, 0xd1, 0x05, 0x42, 0x40, 0x57, 0xc5, 0x1a, 0x25, 0x91, 0x1e, 0x4b, 0xe1, 0xfc, 0x4b, 0x3b, 0x18, 0xc3, 0x6a, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_804(ch_804, ch_804 + sizeof(ch_804) -1);
CDataStream stream_804(vch_804, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_804;
stream_804 >> txHist_804;

if(block.vtx[0]->GetHash() == txHist_804.GetHash() && nHeight == 1264714) {
return true;
}
unsigned char ch_805[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x6b, 0x4c, 0x13, 0x04, 0x83, 0xce, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x30, 0x3f, 0x5e, 0x8c, 0x87, 0x85, 0x33, 0x02, 0x20, 0x72, 0xd1, 0x34, 0x91, 0xb9, 0x4b, 0x5c, 0x74, 0x71, 0xe9, 0xc0, 0x20, 0xa5, 0xfe, 0x2c, 0x5c, 0x3d, 0xfe, 0xb6, 0x15, 0x58, 0xb3, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xfe, 0x24, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_805(ch_805, ch_805 + sizeof(ch_805) -1);
CDataStream stream_805(vch_805, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_805;
stream_805 >> txHist_805;

if(block.vtx[0]->GetHash() == txHist_805.GetHash() && nHeight == 1264747) {
return true;
}
unsigned char ch_806[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x16, 0x4c, 0x13, 0x04, 0x56, 0xb0, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x04, 0x74, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd4, 0x7c, 0x89, 0x1d, 0x05, 0x17, 0x1a, 0x97, 0xa9, 0xa8, 0xf4, 0xf8, 0x53, 0xec, 0xb9, 0x74, 0xc4, 0xe4, 0x24, 0xed, 0x03, 0xd6, 0x68, 0xb2, 0x96, 0x87, 0xe9, 0x68, 0xe2, 0x9a, 0xbb, 0x5a, 0xb0, 0xf4, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_806(ch_806, ch_806 + sizeof(ch_806) -1);
CDataStream stream_806(vch_806, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_806;
stream_806 >> txHist_806;

if(block.vtx[0]->GetHash() == txHist_806.GetHash() && nHeight == 1264662) {
return true;
}
unsigned char ch_807[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x67, 0x4c, 0x13, 0x04, 0x9f, 0xcc, 0x36, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf8, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xdf, 0x38, 0x98, 0xff, 0xda, 0xdf, 0x70, 0xd9, 0xe2, 0x55, 0xd3, 0xe5, 0xdd, 0xd6, 0x1e, 0xfd, 0x3f, 0xbf, 0x24, 0x35, 0xcd, 0x28, 0x97, 0x7c, 0x7e, 0x90, 0x12, 0xfc, 0x3f, 0xc2, 0x51, 0xd6, 0xd8, 0xad, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_807(ch_807, ch_807 + sizeof(ch_807) -1);
CDataStream stream_807(vch_807, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_807;
stream_807 >> txHist_807;

if(block.vtx[0]->GetHash() == txHist_807.GetHash() && nHeight == 1264743) {
return true;
}
unsigned char ch_808[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x11, 0x4c, 0x13, 0x04, 0x75, 0xaf, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x14, 0x28, 0x14, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x51, 0x3b, 0x88, 0xe5, 0x2b, 0x84, 0xd8, 0x83, 0xb4, 0xb1, 0x18, 0x2d, 0x5c, 0x2b, 0xd1, 0x34, 0x6d, 0xf7, 0xaf, 0x38, 0x4b, 0xc4, 0xc0, 0xb8, 0x69, 0x2c, 0xcf, 0xd0, 0x31, 0xc5, 0x9e, 0x4e, 0xe0, 0x44, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_808(ch_808, ch_808 + sizeof(ch_808) -1);
CDataStream stream_808(vch_808, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_808;
stream_808 >> txHist_808;

if(block.vtx[0]->GetHash() == txHist_808.GetHash() && nHeight == 1264657) {
return true;
}
unsigned char ch_809[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x0c, 0x4c, 0x13, 0x04, 0x3e, 0xad, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x21, 0x65, 0x29, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x80, 0x35, 0x08, 0xa5, 0x2a, 0x5d, 0xe1, 0xa8, 0xb0, 0xac, 0x20, 0xd0, 0x47, 0xe4, 0x1f, 0xe8, 0xe9, 0xb6, 0x8c, 0xb4, 0x90, 0xd1, 0xbc, 0xe7, 0xaf, 0xe5, 0x48, 0x7a, 0x72, 0x57, 0xfc, 0x48, 0x00, 0xa5, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_809(ch_809, ch_809 + sizeof(ch_809) -1);
CDataStream stream_809(vch_809, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_809;
stream_809 >> txHist_809;

if(block.vtx[0]->GetHash() == txHist_809.GetHash() && nHeight == 1264652) {
return true;
}
unsigned char ch_810[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x00, 0x4c, 0x13, 0x04, 0x91, 0xa6, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x19, 0xd0, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_810(ch_810, ch_810 + sizeof(ch_810) -1);
CDataStream stream_810(vch_810, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_810;
stream_810 >> txHist_810;

if(block.vtx[0]->GetHash() == txHist_810.GetHash() && nHeight == 1264640) {
return true;
}
unsigned char ch_811[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xfa, 0x4b, 0x13, 0x04, 0x47, 0xa4, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x14, 0x14, 0x07, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd8, 0x57, 0x6c, 0x19, 0x5d, 0xb0, 0xe3, 0x3b, 0xaf, 0xfd, 0xea, 0x34, 0x8b, 0x49, 0x9b, 0xc8, 0x4e, 0x7c, 0x7e, 0x7f, 0xa2, 0x6e, 0xe7, 0xa9, 0x3c, 0x65, 0x39, 0x4a, 0x1a, 0xf4, 0x0a, 0xc5, 0x80, 0x79, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_811(ch_811, ch_811 + sizeof(ch_811) -1);
CDataStream stream_811(vch_811, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_811;
stream_811 >> txHist_811;

if(block.vtx[0]->GetHash() == txHist_811.GetHash() && nHeight == 1264634) {
return true;
}
unsigned char ch_812[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf4, 0x4b, 0x13, 0x04, 0x98, 0xa2, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe3, 0xc6, 0xf1, 0x98, 0x24, 0x2e, 0xc2, 0x80, 0xf3, 0x86, 0xdd, 0x05, 0xc6, 0xad, 0xac, 0xda, 0x5a, 0xd3, 0x66, 0xa6, 0x3b, 0xe2, 0x76, 0x1a, 0xce, 0x87, 0x1f, 0xd4, 0x68, 0x0f, 0x39, 0x12, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_812(ch_812, ch_812 + sizeof(ch_812) -1);
CDataStream stream_812(vch_812, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_812;
stream_812 >> txHist_812;

if(block.vtx[0]->GetHash() == txHist_812.GetHash() && nHeight == 1264628) {
return true;
}
unsigned char ch_813[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xee, 0x4b, 0x13, 0x04, 0xc0, 0xa0, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x14, 0xc4, 0x08, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_813(ch_813, ch_813 + sizeof(ch_813) -1);
CDataStream stream_813(vch_813, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_813;
stream_813 >> txHist_813;

if(block.vtx[0]->GetHash() == txHist_813.GetHash() && nHeight == 1264622) {
return true;
}
unsigned char ch_814[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xe9, 0x4b, 0x13, 0x04, 0xbf, 0x9e, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x18, 0x66, 0x2e, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x01, 0x87, 0xa6, 0xa9, 0x6b, 0x56, 0x4e, 0x35, 0xfd, 0xe1, 0x26, 0xf8, 0x73, 0xcb, 0x4a, 0x6b, 0x65, 0x25, 0x20, 0x13, 0xe6, 0x90, 0xe7, 0x66, 0x03, 0x1f, 0xcd, 0xdc, 0xbe, 0x11, 0x47, 0x18, 0xf0, 0x4c, 0x63, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_814(ch_814, ch_814 + sizeof(ch_814) -1);
CDataStream stream_814(vch_814, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_814;
stream_814 >> txHist_814;

if(block.vtx[0]->GetHash() == txHist_814.GetHash() && nHeight == 1264617) {
return true;
}
unsigned char ch_815[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xbe, 0x4c, 0x13, 0x04, 0xfb, 0xe9, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x39, 0xc2, 0xd7, 0x73, 0x6e, 0xde, 0xe7, 0xba, 0x65, 0x6d, 0xaf, 0x7b, 0xd1, 0x69, 0xbb, 0xfe, 0x96, 0x32, 0xe0, 0x41, 0x1b, 0x2a, 0xf0, 0xbf, 0x7c, 0x3c, 0xa4, 0x14, 0x17, 0x1c, 0xd9, 0x2f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_815(ch_815, ch_815 + sizeof(ch_815) -1);
CDataStream stream_815(vch_815, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_815;
stream_815 >> txHist_815;

if(block.vtx[0]->GetHash() == txHist_815.GetHash() && nHeight == 1264830) {
return true;
}
unsigned char ch_816[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xbb, 0x4c, 0x13, 0x04, 0x37, 0xe9, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x27, 0x10, 0xe7, 0xac, 0x06, 0x03, 0xf5, 0xad, 0x6b, 0x36, 0xd2, 0x49, 0xdd, 0x78, 0xc5, 0x21, 0x36, 0xa7, 0x19, 0xad, 0x72, 0x8e, 0x5e, 0xcf, 0x00, 0x13, 0x4c, 0xba, 0xac, 0x88, 0xee, 0x79, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0b, 0x54, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x32, 0xbe, 0x09, 0x90, 0x2e, 0xa3, 0x4c, 0x01, 0x86, 0xb5, 0x52, 0x09, 0x43, 0x59, 0xb2, 0x85, 0x53, 0x38, 0x31, 0xc0, 0x17, 0xa4, 0x60, 0x02, 0xaf, 0x5b, 0x51, 0x77, 0xdf, 0x5d, 0x02, 0x48, 0x10, 0x52, 0xf4, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x78, 0x5d, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0x58, 0xd3, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_816(ch_816, ch_816 + sizeof(ch_816) -1);
CDataStream stream_816(vch_816, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_816;
stream_816 >> txHist_816;

if(block.vtx[0]->GetHash() == txHist_816.GetHash() && nHeight == 1264827) {
return true;
}
unsigned char ch_817[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xba, 0x4c, 0x13, 0x04, 0xbf, 0xe8, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa1, 0x0d, 0x79, 0x9a, 0xef, 0xb4, 0x76, 0x81, 0x6a, 0x10, 0x34, 0x0f, 0x33, 0x0b, 0x39, 0x96, 0x54, 0x6e, 0xe7, 0xd7, 0x7d, 0x5a, 0x66, 0x39, 0xf6, 0x61, 0x01, 0xbf, 0x13, 0xe9, 0x6b, 0xaa, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xfe, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x2d, 0x22, 0xcf, 0x0e, 0xd4, 0x5b, 0x2a, 0xe1, 0x57, 0x6f, 0x8e, 0x91, 0xa3, 0xb2, 0x99, 0xaf, 0x54, 0xff, 0x66, 0xe4, 0xd1, 0xc5, 0x65, 0x0c, 0xa7, 0x23, 0x90, 0x4f, 0x65, 0x47, 0x44, 0x87, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_817(ch_817, ch_817 + sizeof(ch_817) -1);
CDataStream stream_817(vch_817, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_817;
stream_817 >> txHist_817;

if(block.vtx[0]->GetHash() == txHist_817.GetHash() && nHeight == 1264826) {
return true;
}
unsigned char ch_818[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb9, 0x4c, 0x13, 0x04, 0x79, 0xe8, 0x36, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfd, 0x26, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_818(ch_818, ch_818 + sizeof(ch_818) -1);
CDataStream stream_818(vch_818, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_818;
stream_818 >> txHist_818;

if(block.vtx[0]->GetHash() == txHist_818.GetHash() && nHeight == 1264825) {
return true;
}
unsigned char ch_819[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb8, 0x4c, 0x13, 0x04, 0x4c, 0xe8, 0x36, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0x74, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x43, 0x31, 0x93, 0x76, 0xf1, 0x63, 0x63, 0x6f, 0xd6, 0x49, 0x83, 0x39, 0x1a, 0x7f, 0x70, 0x19, 0x1a, 0x0b, 0x70, 0x49, 0xa1, 0x50, 0x62, 0xe7, 0xb6, 0xba, 0x60, 0xf0, 0xf1, 0x22, 0xd2, 0xb5, 0x50, 0xec, 0xf9, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_819(ch_819, ch_819 + sizeof(ch_819) -1);
CDataStream stream_819(vch_819, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_819;
stream_819 >> txHist_819;

if(block.vtx[0]->GetHash() == txHist_819.GetHash() && nHeight == 1264824) {
return true;
}
unsigned char ch_820[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xda, 0x4c, 0x13, 0x04, 0xd3, 0xf5, 0x36, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0x54, 0x08, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x90, 0x64, 0x1e, 0x41, 0xac, 0x09, 0xcf, 0x92, 0x2a, 0xb9, 0xb0, 0x1e, 0x23, 0xb2, 0x50, 0xe0, 0xc0, 0x16, 0x90, 0x02, 0x50, 0xd0, 0x6f, 0xcb, 0xd8, 0x36, 0x15, 0x4b, 0x58, 0x12, 0x56, 0xaf, 0xf8, 0xe2, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_820(ch_820, ch_820 + sizeof(ch_820) -1);
CDataStream stream_820(vch_820, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_820;
stream_820 >> txHist_820;

if(block.vtx[0]->GetHash() == txHist_820.GetHash() && nHeight == 1264858) {
return true;
}
unsigned char ch_821[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x4f, 0x4c, 0x13, 0x04, 0xd5, 0xc3, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x08, 0x76, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x64, 0x4c, 0x7f, 0x97, 0xd0, 0xde, 0xe6, 0x50, 0xd5, 0x7c, 0x6a, 0xd6, 0xc0, 0x03, 0x64, 0x2b, 0x37, 0xbb, 0x29, 0x0e, 0x70, 0xe8, 0xca, 0xaf, 0xf9, 0x6d, 0xde, 0x01, 0xd8, 0x96, 0x8f, 0xb5, 0xd0, 0xa6, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_821(ch_821, ch_821 + sizeof(ch_821) -1);
CDataStream stream_821(vch_821, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_821;
stream_821 >> txHist_821;

if(block.vtx[0]->GetHash() == txHist_821.GetHash() && nHeight == 1264719) {
return true;
}
unsigned char ch_822[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd8, 0x4c, 0x13, 0x04, 0x36, 0xf5, 0x36, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0x2e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_822(ch_822, ch_822 + sizeof(ch_822) -1);
CDataStream stream_822(vch_822, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_822;
stream_822 >> txHist_822;

if(block.vtx[0]->GetHash() == txHist_822.GetHash() && nHeight == 1264856) {
return true;
}
unsigned char ch_823[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4b, 0x4c, 0x13, 0x04, 0xed, 0xc2, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0xa2, 0xa0, 0x73, 0x84, 0x33, 0xc4, 0x5e, 0xa2, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0b, 0xf5, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x9e, 0xeb, 0x8a, 0x74, 0x05, 0x6c, 0x2a, 0x15, 0xe1, 0x68, 0x21, 0x0e, 0x4f, 0x34, 0xa0, 0xc7, 0x77, 0x07, 0xfe, 0x6d, 0x48, 0xb7, 0xd5, 0xf7, 0xe6, 0x5c, 0x6e, 0xbc, 0xf2, 0xed, 0x19, 0x38, 0x60, 0xe5, 0xf3, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x50, 0x5c, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0x90, 0xcd, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_823(ch_823, ch_823 + sizeof(ch_823) -1);
CDataStream stream_823(vch_823, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_823;
stream_823 >> txHist_823;

if(block.vtx[0]->GetHash() == txHist_823.GetHash() && nHeight == 1264715) {
return true;
}
unsigned char ch_824[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd5, 0x4c, 0x13, 0x04, 0xfb, 0xf3, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x74, 0xd1, 0xd3, 0x9a, 0x7c, 0x0c, 0xdf, 0xc7, 0x6e, 0xef, 0xde, 0x0e, 0xec, 0x7e, 0x36, 0x1a, 0x9e, 0xca, 0x9d, 0xea, 0x06, 0x00, 0xd4, 0x5a, 0x45, 0xd3, 0x95, 0x13, 0x58, 0x4a, 0xae, 0xf5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xfe, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_824(ch_824, ch_824 + sizeof(ch_824) -1);
CDataStream stream_824(vch_824, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_824;
stream_824 >> txHist_824;

if(block.vtx[0]->GetHash() == txHist_824.GetHash() && nHeight == 1264853) {
return true;
}
unsigned char ch_825[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x47, 0x4c, 0x13, 0x04, 0x2c, 0xbf, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x14, 0x40, 0x0f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x49, 0xc1, 0x2f, 0x3c, 0x5b, 0x1f, 0x7f, 0xf2, 0xe6, 0x49, 0x61, 0xad, 0xbe, 0x1c, 0xf4, 0x38, 0x66, 0xc5, 0x52, 0x48, 0x66, 0xae, 0x3e, 0x5f, 0x9d, 0x72, 0xaa, 0x52, 0xb5, 0x74, 0x8c, 0x6d, 0x88, 0x93, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_825(ch_825, ch_825 + sizeof(ch_825) -1);
CDataStream stream_825(vch_825, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_825;
stream_825 >> txHist_825;

if(block.vtx[0]->GetHash() == txHist_825.GetHash() && nHeight == 1264711) {
return true;
}
unsigned char ch_826[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd4, 0x4c, 0x13, 0x04, 0xbe, 0xf3, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe4, 0xd3, 0x51, 0xed, 0x06, 0xfd, 0x8f, 0x4c, 0x10, 0xdd, 0x0e, 0x36, 0x05, 0x2b, 0x65, 0x44, 0xf2, 0x73, 0xaa, 0xd4, 0xa3, 0xbc, 0x23, 0xa4, 0x60, 0x1e, 0xd1, 0x03, 0x8f, 0x76, 0xf5, 0x18, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xfe, 0x26, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_826(ch_826, ch_826 + sizeof(ch_826) -1);
CDataStream stream_826(vch_826, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_826;
stream_826 >> txHist_826;

if(block.vtx[0]->GetHash() == txHist_826.GetHash() && nHeight == 1264852) {
return true;
}
unsigned char ch_827[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x46, 0x4c, 0x13, 0x04, 0x94, 0xbe, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x20, 0x4f, 0x07, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x53, 0x10, 0xdd, 0x4e, 0x3c, 0xb6, 0x47, 0xa3, 0x33, 0x40, 0xbc, 0xd0, 0x67, 0x29, 0x7c, 0x55, 0xe9, 0xa4, 0x52, 0x8c, 0x8a, 0x45, 0x76, 0xc3, 0xb4, 0x44, 0x1c, 0xbe, 0x17, 0xce, 0x61, 0x5c, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_827(ch_827, ch_827 + sizeof(ch_827) -1);
CDataStream stream_827(vch_827, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_827;
stream_827 >> txHist_827;

if(block.vtx[0]->GetHash() == txHist_827.GetHash() && nHeight == 1264710) {
return true;
}
unsigned char ch_828[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd3, 0x4c, 0x13, 0x04, 0x5e, 0xf3, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x08, 0x6c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x88, 0x3d, 0x6e, 0x17, 0x15, 0xe9, 0xe4, 0xae, 0x43, 0x52, 0xc5, 0x28, 0xd8, 0xdf, 0x9c, 0x6c, 0x2b, 0x5a, 0xf0, 0x26, 0xef, 0x70, 0x0e, 0x46, 0xc3, 0x0e, 0xe5, 0xa7, 0xe0, 0xb5, 0xfc, 0x6a, 0x80, 0x79, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_828(ch_828, ch_828 + sizeof(ch_828) -1);
CDataStream stream_828(vch_828, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_828;
stream_828 >> txHist_828;

if(block.vtx[0]->GetHash() == txHist_828.GetHash() && nHeight == 1264851) {
return true;
}
unsigned char ch_829[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x45, 0x4c, 0x13, 0x04, 0x33, 0xbe, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x02, 0xb6, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_829(ch_829, ch_829 + sizeof(ch_829) -1);
CDataStream stream_829(vch_829, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_829;
stream_829 >> txHist_829;

if(block.vtx[0]->GetHash() == txHist_829.GetHash() && nHeight == 1264709) {
return true;
}
unsigned char ch_830[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd2, 0x4c, 0x13, 0x04, 0xc6, 0xf2, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x05, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x8b, 0xbc, 0x0d, 0x7c, 0x0d, 0xa6, 0xb9, 0x7e, 0x2f, 0xb9, 0x67, 0xa3, 0xfd, 0x9d, 0xfe, 0x2c, 0x7d, 0xd5, 0xa2, 0x70, 0xc5, 0x6c, 0x1c, 0xec, 0x93, 0x30, 0xd9, 0x08, 0x7c, 0xb7, 0x50, 0xe4, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_830(ch_830, ch_830 + sizeof(ch_830) -1);
CDataStream stream_830(vch_830, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_830;
stream_830 >> txHist_830;

if(block.vtx[0]->GetHash() == txHist_830.GetHash() && nHeight == 1264850) {
return true;
}
unsigned char ch_831[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x44, 0x4c, 0x13, 0x04, 0x15, 0xbe, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x45, 0x52, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x07, 0x11, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_831(ch_831, ch_831 + sizeof(ch_831) -1);
CDataStream stream_831(vch_831, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_831;
stream_831 >> txHist_831;

if(block.vtx[0]->GetHash() == txHist_831.GetHash() && nHeight == 1264708) {
return true;
}
unsigned char ch_832[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x43, 0x4c, 0x13, 0x04, 0x1b, 0xbe, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x69, 0x8e, 0x4c, 0x0b, 0xfb, 0xc4, 0x91, 0x3d, 0x50, 0x1f, 0xdd, 0x31, 0x70, 0x7f, 0x57, 0x8e, 0x9f, 0x80, 0x6e, 0x60, 0x11, 0xda, 0xb4, 0xe2, 0x9a, 0xe9, 0x8d, 0xb9, 0xb5, 0x16, 0x72, 0x1e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x66, 0x41, 0x4a, 0xfd, 0x7c, 0x6c, 0x0a, 0x29, 0x3e, 0x84, 0x4f, 0x2d, 0x4e, 0xf3, 0xf8, 0x3c, 0x63, 0xe0, 0x8d, 0x7d, 0xd6, 0xc8, 0x9a, 0x9b, 0x10, 0x18, 0x1b, 0x60, 0x4d, 0xec, 0xaf, 0x75, 0xc0, 0x0f, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_832(ch_832, ch_832 + sizeof(ch_832) -1);
CDataStream stream_832(vch_832, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_832;
stream_832 >> txHist_832;

if(block.vtx[0]->GetHash() == txHist_832.GetHash() && nHeight == 1264707) {
return true;
}
unsigned char ch_833[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb2, 0x4c, 0x13, 0x04, 0x46, 0xe6, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x1d, 0x3f, 0x06, 0xa4, 0xfa, 0x82, 0x87, 0xf1, 0x40, 0x57, 0xad, 0x77, 0x24, 0x9f, 0xf2, 0x72, 0x80, 0x08, 0xe1, 0xc6, 0x6f, 0x99, 0x2e, 0xc9, 0xb4, 0x0e, 0xa4, 0xcf, 0x0c, 0xbc, 0xc3, 0xdf, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xfe, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x8f, 0xb5, 0xa7, 0x27, 0x9b, 0x8c, 0x95, 0xb6, 0xa7, 0x98, 0x07, 0xa9, 0x73, 0xf6, 0xcf, 0x01, 0x8b, 0xc3, 0xc6, 0xd3, 0x20, 0x32, 0x8c, 0x5d, 0x11, 0xa9, 0xe2, 0x81, 0x5b, 0xe6, 0x10, 0xdc, 0x70, 0x33, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_833(ch_833, ch_833 + sizeof(ch_833) -1);
CDataStream stream_833(vch_833, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_833;
stream_833 >> txHist_833;

if(block.vtx[0]->GetHash() == txHist_833.GetHash() && nHeight == 1264818) {
return true;
}
unsigned char ch_834[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa7, 0x4c, 0x13, 0x04, 0x64, 0xe2, 0x36, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0x3b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x96, 0xe1, 0x83, 0x65, 0xec, 0xea, 0x2e, 0x55, 0xe2, 0xf1, 0x46, 0x12, 0xb8, 0x94, 0xcc, 0x50, 0x2f, 0x94, 0x6a, 0x46, 0x1f, 0x67, 0xd2, 0xbe, 0x5f, 0x3e, 0x53, 0x68, 0x97, 0x22, 0x8d, 0x8b, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_834(ch_834, ch_834 + sizeof(ch_834) -1);
CDataStream stream_834(vch_834, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_834;
stream_834 >> txHist_834;

if(block.vtx[0]->GetHash() == txHist_834.GetHash() && nHeight == 1264807) {
return true;
}
unsigned char ch_835[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x61, 0x4c, 0x13, 0x04, 0x3d, 0xca, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x34, 0x9f, 0xe5, 0x45, 0x3d, 0xc4, 0x9e, 0x3f, 0x60, 0xab, 0xc8, 0x62, 0xb0, 0xa3, 0x29, 0x30, 0xd3, 0xf8, 0x01, 0x09, 0xf1, 0x63, 0x72, 0x05, 0x48, 0x5a, 0x8c, 0xa1, 0x85, 0xdc, 0x3a, 0x78, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_835(ch_835, ch_835 + sizeof(ch_835) -1);
CDataStream stream_835(vch_835, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_835;
stream_835 >> txHist_835;

if(block.vtx[0]->GetHash() == txHist_835.GetHash() && nHeight == 1264737) {
return true;
}
unsigned char ch_836[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa5, 0x4c, 0x13, 0x04, 0xe2, 0xe1, 0x36, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_836(ch_836, ch_836 + sizeof(ch_836) -1);
CDataStream stream_836(vch_836, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_836;
stream_836 >> txHist_836;

if(block.vtx[0]->GetHash() == txHist_836.GetHash() && nHeight == 1264805) {
return true;
}
unsigned char ch_837[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa3, 0x4c, 0x13, 0x04, 0x2a, 0xe1, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x19, 0x26, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_837(ch_837, ch_837 + sizeof(ch_837) -1);
CDataStream stream_837(vch_837, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_837;
stream_837 >> txHist_837;

if(block.vtx[0]->GetHash() == txHist_837.GetHash() && nHeight == 1264803) {
return true;
}
unsigned char ch_838[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd0, 0x4c, 0x13, 0x04, 0x4a, 0xf2, 0x36, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_838(ch_838, ch_838 + sizeof(ch_838) -1);
CDataStream stream_838(vch_838, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_838;
stream_838 >> txHist_838;

if(block.vtx[0]->GetHash() == txHist_838.GetHash() && nHeight == 1264848) {
return true;
}
unsigned char ch_839[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xcf, 0x4c, 0x13, 0x04, 0x41, 0xf2, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x1f, 0xd3, 0x3b, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x0d, 0xb0, 0xfc, 0x77, 0x9a, 0x6d, 0xf1, 0x34, 0x3b, 0x0f, 0xe0, 0x84, 0xf1, 0x96, 0x41, 0x7b, 0xa6, 0x00, 0x29, 0x59, 0xbf, 0xc0, 0x6d, 0xc4, 0xb1, 0x88, 0x61, 0xe5, 0xaf, 0x21, 0xf9, 0xa1, 0x60, 0x8c, 0x03, 0xdb, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_839(ch_839, ch_839 + sizeof(ch_839) -1);
CDataStream stream_839(vch_839, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_839;
stream_839 >> txHist_839;

if(block.vtx[0]->GetHash() == txHist_839.GetHash() && nHeight == 1264847) {
return true;
}
unsigned char ch_840[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc7, 0x4c, 0x13, 0x04, 0x52, 0xed, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x1f, 0xee, 0x17, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xfe, 0xe5, 0xb5, 0x84, 0x22, 0x40, 0xd0, 0x29, 0xd8, 0x63, 0x00, 0x82, 0x9d, 0x67, 0x4b, 0x13, 0x90, 0xc3, 0x77, 0xc1, 0x90, 0x44, 0x6e, 0x7c, 0x8d, 0x66, 0x1b, 0x0a, 0x33, 0xea, 0xd9, 0x70, 0xa0, 0xae, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_840(ch_840, ch_840 + sizeof(ch_840) -1);
CDataStream stream_840(vch_840, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_840;
stream_840 >> txHist_840;

if(block.vtx[0]->GetHash() == txHist_840.GetHash() && nHeight == 1264839) {
return true;
}
unsigned char ch_841[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc4, 0x4c, 0x13, 0x04, 0x88, 0xeb, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x08, 0x2b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x1e, 0x15, 0x36, 0x6a, 0x07, 0x1a, 0xa5, 0xc1, 0x02, 0x1f, 0x3d, 0x17, 0xfb, 0x54, 0x17, 0xd2, 0x32, 0xcd, 0x11, 0x57, 0xa9, 0x34, 0x29, 0xfd, 0x2d, 0xc7, 0x3e, 0xb4, 0x80, 0xa3, 0xf2, 0x1a, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_841(ch_841, ch_841 + sizeof(ch_841) -1);
CDataStream stream_841(vch_841, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_841;
stream_841 >> txHist_841;

if(block.vtx[0]->GetHash() == txHist_841.GetHash() && nHeight == 1264836) {
return true;
}
unsigned char ch_842[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc3, 0x4c, 0x13, 0x04, 0x48, 0xeb, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x60, 0x5c, 0x94, 0xbf, 0x97, 0x34, 0x54, 0x0f, 0x0a, 0xa1, 0xdf, 0x48, 0x19, 0xb0, 0xb5, 0xac, 0xb9, 0xbb, 0xa2, 0x19, 0x08, 0x05, 0x9b, 0x33, 0x8d, 0x75, 0x5c, 0x19, 0x41, 0x6d, 0x03, 0xc8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xff, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_842(ch_842, ch_842 + sizeof(ch_842) -1);
CDataStream stream_842(vch_842, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_842;
stream_842 >> txHist_842;

if(block.vtx[0]->GetHash() == txHist_842.GetHash() && nHeight == 1264835) {
return true;
}
unsigned char ch_843[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc2, 0x4c, 0x13, 0x04, 0xa0, 0xea, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x08, 0x62, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_843(ch_843, ch_843 + sizeof(ch_843) -1);
CDataStream stream_843(vch_843, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_843;
stream_843 >> txHist_843;

if(block.vtx[0]->GetHash() == txHist_843.GetHash() && nHeight == 1264834) {
return true;
}
unsigned char ch_844[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa4, 0x4c, 0x13, 0x04, 0xe2, 0xe1, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe1, 0xf8, 0x95, 0xc3, 0xbb, 0x67, 0xf3, 0xf7, 0x5d, 0x60, 0xfe, 0x1d, 0x74, 0x84, 0xcf, 0xdc, 0x04, 0xaa, 0xbd, 0xd0, 0x3f, 0x4d, 0x98, 0xa6, 0x52, 0x6b, 0x32, 0x83, 0x52, 0x04, 0xaf, 0x32, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x32, 0x9e, 0x71, 0x58, 0xc8, 0x4a, 0x75, 0xa1, 0x75, 0xfe, 0xb9, 0x9a, 0xce, 0x4e, 0x71, 0xe5, 0x43, 0xe1, 0xa4, 0x6b, 0x40, 0xcf, 0x0c, 0x48, 0x66, 0xde, 0x9e, 0x78, 0x59, 0x00, 0x8c, 0x13, 0x50, 0xfe, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_844(ch_844, ch_844 + sizeof(ch_844) -1);
CDataStream stream_844(vch_844, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_844;
stream_844 >> txHist_844;

if(block.vtx[0]->GetHash() == txHist_844.GetHash() && nHeight == 1264804) {
return true;
}
unsigned char ch_845[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa2, 0x4c, 0x13, 0x04, 0x1c, 0xe1, 0x36, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x0b, 0x2d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xf7, 0x1a, 0x1a, 0x85, 0xb0, 0x7c, 0xf7, 0xf7, 0xd0, 0x39, 0x7c, 0xfc, 0x2d, 0xd8, 0xbf, 0x9b, 0xad, 0x31, 0xb5, 0x2c, 0xf5, 0x2a, 0xa4, 0x7f, 0xbe, 0x1b, 0xed, 0x65, 0xbf, 0x80, 0x73, 0xd7, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_845(ch_845, ch_845 + sizeof(ch_845) -1);
CDataStream stream_845(vch_845, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_845;
stream_845 >> txHist_845;

if(block.vtx[0]->GetHash() == txHist_845.GetHash() && nHeight == 1264802) {
return true;
}
unsigned char ch_846[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9d, 0x4c, 0x13, 0x04, 0xd4, 0xdf, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x86, 0x17, 0x80, 0xfd, 0x7c, 0x04, 0xae, 0x78, 0x31, 0x87, 0x12, 0x1c, 0x8c, 0x09, 0x71, 0x12, 0x84, 0xcf, 0x5d, 0xac, 0x07, 0x5d, 0xf4, 0x03, 0x91, 0xef, 0xc8, 0x84, 0x96, 0xa7, 0xd5, 0x43, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd1, 0xaa, 0x3a, 0xc0, 0xb6, 0xaf, 0x50, 0x8f, 0xfd, 0x76, 0xfe, 0xc9, 0x39, 0x21, 0xf5, 0x80, 0x64, 0x22, 0x80, 0x02, 0x0e, 0xc4, 0xa2, 0x78, 0x24, 0xca, 0x33, 0x2e, 0x52, 0x72, 0x5d, 0xab, 0x00, 0xe4, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_846(ch_846, ch_846 + sizeof(ch_846) -1);
CDataStream stream_846(vch_846, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_846;
stream_846 >> txHist_846;

if(block.vtx[0]->GetHash() == txHist_846.GetHash() && nHeight == 1264797) {
return true;
}
unsigned char ch_847[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x99, 0x4c, 0x13, 0x04, 0xd3, 0xdb, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0b, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_847(ch_847, ch_847 + sizeof(ch_847) -1);
CDataStream stream_847(vch_847, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_847;
stream_847 >> txHist_847;

if(block.vtx[0]->GetHash() == txHist_847.GetHash() && nHeight == 1264793) {
return true;
}
unsigned char ch_848[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x98, 0x4c, 0x13, 0x04, 0xcf, 0xdb, 0x36, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xde, 0x37, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xdd, 0xaa, 0x2a, 0xe7, 0x82, 0xe8, 0x97, 0xe8, 0x7b, 0xe6, 0x93, 0x56, 0xdd, 0x71, 0x25, 0x05, 0xd9, 0x9f, 0xe1, 0x10, 0x6c, 0xec, 0x14, 0x9b, 0xb9, 0xed, 0x35, 0xa6, 0xec, 0x7d, 0x4c, 0xa7, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_848(ch_848, ch_848 + sizeof(ch_848) -1);
CDataStream stream_848(vch_848, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_848;
stream_848 >> txHist_848;

if(block.vtx[0]->GetHash() == txHist_848.GetHash() && nHeight == 1264792) {
return true;
}
unsigned char ch_849[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x97, 0x4c, 0x13, 0x04, 0x9e, 0xdb, 0x36, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xf7, 0xfb, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd1, 0xa8, 0x38, 0xe6, 0xbf, 0x4b, 0xdb, 0xde, 0xd1, 0xb6, 0x23, 0x6b, 0xeb, 0x54, 0x20, 0xdd, 0x4a, 0x8d, 0x49, 0x82, 0x9d, 0x54, 0xad, 0x2e, 0x40, 0x08, 0x56, 0x9b, 0xbd, 0x29, 0xea, 0x3d, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_849(ch_849, ch_849 + sizeof(ch_849) -1);
CDataStream stream_849(vch_849, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_849;
stream_849 >> txHist_849;

if(block.vtx[0]->GetHash() == txHist_849.GetHash() && nHeight == 1264791) {
return true;
}
unsigned char ch_850[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x2c, 0x4c, 0x13, 0x04, 0x91, 0xb7, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x14, 0xe6, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x4b, 0x85, 0x6a, 0x90, 0xb0, 0x91, 0x70, 0x2a, 0x22, 0x26, 0xb4, 0x8d, 0xc0, 0x08, 0xad, 0x13, 0x08, 0x5f, 0x65, 0xec, 0x86, 0xd3, 0xd2, 0x6c, 0x76, 0x5b, 0x48, 0x4b, 0xe6, 0x41, 0x1a, 0x43, 0x00, 0xfd, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_850(ch_850, ch_850 + sizeof(ch_850) -1);
CDataStream stream_850(vch_850, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_850;
stream_850 >> txHist_850;

if(block.vtx[0]->GetHash() == txHist_850.GetHash() && nHeight == 1264684) {
return true;
}
unsigned char ch_851[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x95, 0x4c, 0x13, 0x04, 0x4c, 0xda, 0x36, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0x80, 0x08, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xf9, 0x74, 0x7e, 0xf5, 0x97, 0xd8, 0x4c, 0xcc, 0x05, 0x54, 0x2f, 0x7b, 0xd0, 0xe1, 0xa8, 0x70, 0x12, 0x27, 0x2f, 0xd4, 0x25, 0x6f, 0x1d, 0xe2, 0xdd, 0x6d, 0x5c, 0xdf, 0x2a, 0x9b, 0xfa, 0x7c, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_851(ch_851, ch_851 + sizeof(ch_851) -1);
CDataStream stream_851(vch_851, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_851;
stream_851 >> txHist_851;

if(block.vtx[0]->GetHash() == txHist_851.GetHash() && nHeight == 1264789) {
return true;
}
unsigned char ch_852[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x20, 0x4c, 0x13, 0x04, 0xfb, 0xb3, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x04, 0x1e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_852(ch_852, ch_852 + sizeof(ch_852) -1);
CDataStream stream_852(vch_852, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_852;
stream_852 >> txHist_852;

if(block.vtx[0]->GetHash() == txHist_852.GetHash() && nHeight == 1264672) {
return true;
}
unsigned char ch_853[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1c, 0x4c, 0x13, 0x04, 0xfb, 0xb1, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xfe, 0x6e, 0xf9, 0xc4, 0x07, 0xa1, 0x83, 0xfc, 0x5f, 0x67, 0x5a, 0xda, 0xf2, 0x39, 0x33, 0xd5, 0xb0, 0x65, 0x3e, 0x6d, 0xfc, 0xcf, 0x81, 0x2f, 0xeb, 0xce, 0x68, 0x86, 0x97, 0x69, 0x24, 0x3e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x70, 0x28, 0x0c, 0x16, 0xea, 0x21, 0x13, 0x5a, 0xf5, 0xdc, 0xa1, 0x51, 0x51, 0x9a, 0xf3, 0xbe, 0x17, 0xb6, 0x02, 0x53, 0x7a, 0xa1, 0x16, 0x31, 0x7f, 0xf4, 0x1f, 0x37, 0x8d, 0xb8, 0xba, 0xd4, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_853(ch_853, ch_853 + sizeof(ch_853) -1);
CDataStream stream_853(vch_853, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_853;
stream_853 >> txHist_853;

if(block.vtx[0]->GetHash() == txHist_853.GetHash() && nHeight == 1264668) {
return true;
}
unsigned char ch_854[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x19, 0x4c, 0x13, 0x04, 0x10, 0xb1, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x18, 0x66, 0x3b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_854(ch_854, ch_854 + sizeof(ch_854) -1);
CDataStream stream_854(vch_854, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_854;
stream_854 >> txHist_854;

if(block.vtx[0]->GetHash() == txHist_854.GetHash() && nHeight == 1264665) {
return true;
}
unsigned char ch_855[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x14, 0x4c, 0x13, 0x04, 0xcb, 0xaf, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf9, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_855(ch_855, ch_855 + sizeof(ch_855) -1);
CDataStream stream_855(vch_855, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_855;
stream_855 >> txHist_855;

if(block.vtx[0]->GetHash() == txHist_855.GetHash() && nHeight == 1264660) {
return true;
}
unsigned char ch_856[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5d, 0x4c, 0x13, 0x04, 0x23, 0xc9, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x3a, 0x66, 0x5f, 0xe8, 0xb9, 0x57, 0xc1, 0x07, 0x8c, 0x4a, 0x25, 0x70, 0xb4, 0x4e, 0x9a, 0x10, 0x9b, 0xc5, 0x20, 0x4d, 0x95, 0x74, 0xf5, 0xe9, 0xe8, 0x99, 0x29, 0x49, 0x84, 0xb5, 0xa9, 0x75, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xff, 0xff, 0x28, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd2, 0x04, 0x43, 0xfe, 0x15, 0x35, 0x6f, 0xd1, 0x7e, 0x7e, 0xec, 0xbc, 0x57, 0x1e, 0x5f, 0xad, 0x2e, 0x45, 0xbb, 0x53, 0xf3, 0x51, 0x8e, 0x64, 0x74, 0xf0, 0xcc, 0x88, 0x0b, 0xcb, 0x07, 0x84, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_856(ch_856, ch_856 + sizeof(ch_856) -1);
CDataStream stream_856(vch_856, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_856;
stream_856 >> txHist_856;

if(block.vtx[0]->GetHash() == txHist_856.GetHash() && nHeight == 1264733) {
return true;
}
unsigned char ch_857[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x58, 0x4c, 0x13, 0x04, 0xe4, 0xc6, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5d, 0xa0, 0x34, 0x4b, 0x39, 0x6e, 0x3b, 0x06, 0x54, 0x6b, 0xa8, 0xd7, 0x68, 0x70, 0x88, 0xf4, 0x6f, 0x10, 0xb1, 0x46, 0xcd, 0x11, 0xef, 0xfc, 0xfa, 0x05, 0x5b, 0x4f, 0x18, 0x9d, 0xdc, 0xcf, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe4, 0x65, 0xbf, 0xe6, 0x1c, 0xf8, 0xec, 0xe5, 0xfd, 0x67, 0x18, 0x39, 0xd2, 0x53, 0x2e, 0xf4, 0x8c, 0x64, 0xe5, 0x46, 0x14, 0xc3, 0x00, 0x27, 0xe2, 0xea, 0x76, 0xd7, 0x47, 0x58, 0xe1, 0xa0, 0x58, 0x6f, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_857(ch_857, ch_857 + sizeof(ch_857) -1);
CDataStream stream_857(vch_857, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_857;
stream_857 >> txHist_857;

if(block.vtx[0]->GetHash() == txHist_857.GetHash() && nHeight == 1264728) {
return true;
}
unsigned char ch_858[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x56, 0x4c, 0x13, 0x04, 0x37, 0xc5, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x02, 0x69, 0x10, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_858(ch_858, ch_858 + sizeof(ch_858) -1);
CDataStream stream_858(vch_858, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_858;
stream_858 >> txHist_858;

if(block.vtx[0]->GetHash() == txHist_858.GetHash() && nHeight == 1264726) {
return true;
}
unsigned char ch_859[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x52, 0x4c, 0x13, 0x04, 0x75, 0xc4, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x1a, 0xa9, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_859(ch_859, ch_859 + sizeof(ch_859) -1);
CDataStream stream_859(vch_859, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_859;
stream_859 >> txHist_859;

if(block.vtx[0]->GetHash() == txHist_859.GetHash() && nHeight == 1264722) {
return true;
}
unsigned char ch_860[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x51, 0x4c, 0x13, 0x04, 0x6b, 0xc4, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x21, 0x80, 0x07, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x45, 0x46, 0x4d, 0x6d, 0x64, 0xdf, 0x89, 0x90, 0x43, 0xd1, 0xd9, 0xe8, 0x34, 0x49, 0x64, 0x2c, 0x03, 0xd3, 0x9a, 0xb8, 0x01, 0x1a, 0xdd, 0x84, 0x03, 0x0a, 0x69, 0x49, 0x90, 0x5b, 0x08, 0xf6, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_860(ch_860, ch_860 + sizeof(ch_860) -1);
CDataStream stream_860(vch_860, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_860;
stream_860 >> txHist_860;

if(block.vtx[0]->GetHash() == txHist_860.GetHash() && nHeight == 1264721) {
return true;
}
unsigned char ch_861[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x09, 0x4c, 0x13, 0x04, 0x4e, 0xab, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x45, 0x52, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0b, 0xf5, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x3e, 0x94, 0x5d, 0x02, 0x90, 0x91, 0x78, 0x06, 0x5b, 0xd4, 0x2c, 0x03, 0x14, 0x46, 0x1e, 0x74, 0x57, 0x2c, 0xc6, 0xab, 0x46, 0xaf, 0x80, 0x77, 0xa5, 0x17, 0xee, 0x62, 0x3c, 0x17, 0xa4, 0x65, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_861(ch_861, ch_861 + sizeof(ch_861) -1);
CDataStream stream_861(vch_861, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_861;
stream_861 >> txHist_861;

if(block.vtx[0]->GetHash() == txHist_861.GetHash() && nHeight == 1264649) {
return true;
}
unsigned char ch_862[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xfd, 0x4b, 0x13, 0x04, 0x80, 0xa5, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x22, 0x67, 0x12, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xac, 0x87, 0xe9, 0x9b, 0x77, 0x4f, 0x95, 0xcc, 0xfa, 0xf6, 0x60, 0x6a, 0x49, 0xc7, 0x6f, 0x61, 0x8c, 0xec, 0x2f, 0xaf, 0x28, 0xb9, 0xeb, 0xc2, 0x0d, 0xf1, 0x82, 0xbf, 0x70, 0x85, 0x53, 0x97, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_862(ch_862, ch_862 + sizeof(ch_862) -1);
CDataStream stream_862(vch_862, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_862;
stream_862 >> txHist_862;

if(block.vtx[0]->GetHash() == txHist_862.GetHash() && nHeight == 1264637) {
return true;
}
unsigned char ch_863[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf1, 0x4b, 0x13, 0x04, 0xc1, 0xa1, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xea, 0xdd, 0xb0, 0xe1, 0x85, 0x10, 0x90, 0xd1, 0xca, 0x8a, 0xc1, 0xa0, 0xa5, 0x40, 0xd9, 0xec, 0x8f, 0x8a, 0xdd, 0x0d, 0x93, 0x62, 0x5b, 0x35, 0x54, 0x53, 0xb9, 0x69, 0x28, 0x02, 0x0d, 0xee, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xbf, 0x56, 0x99, 0xdd, 0x15, 0x67, 0x27, 0x38, 0x00, 0xba, 0x7d, 0xe6, 0xcd, 0xd2, 0x9f, 0x28, 0x7c, 0xb7, 0xad, 0xef, 0xe8, 0x8c, 0xcd, 0xce, 0x76, 0x11, 0xc5, 0xef, 0x07, 0x07, 0x9e, 0xfa, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_863(ch_863, ch_863 + sizeof(ch_863) -1);
CDataStream stream_863(vch_863, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_863;
stream_863 >> txHist_863;

if(block.vtx[0]->GetHash() == txHist_863.GetHash() && nHeight == 1264625) {
return true;
}
unsigned char ch_864[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x88, 0x4c, 0x13, 0x04, 0x64, 0xd6, 0x36, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0x9a, 0x08, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x33, 0xe4, 0xa3, 0x9c, 0x3f, 0x00, 0xfe, 0xe3, 0x99, 0x1c, 0x47, 0x57, 0xb5, 0xad, 0x74, 0xf7, 0x3f, 0xde, 0x15, 0x68, 0xc4, 0xc0, 0x0f, 0x37, 0x3e, 0x05, 0x55, 0xad, 0x62, 0x86, 0xd1, 0x58, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_864(ch_864, ch_864 + sizeof(ch_864) -1);
CDataStream stream_864(vch_864, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_864;
stream_864 >> txHist_864;

if(block.vtx[0]->GetHash() == txHist_864.GetHash() && nHeight == 1264776) {
return true;
}
unsigned char ch_865[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x86, 0x4c, 0x13, 0x04, 0x32, 0xd6, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x24, 0xe6, 0x00, 0x2c, 0x5a, 0x70, 0x27, 0xd5, 0xc1, 0xb8, 0x38, 0x24, 0x3a, 0x8b, 0x08, 0x4b, 0xbd, 0x61, 0x5a, 0x45, 0x6c, 0x59, 0x14, 0x53, 0x2d, 0xd6, 0x7a, 0xbc, 0xbc, 0x11, 0xdb, 0x61, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xff, 0xfe, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_865(ch_865, ch_865 + sizeof(ch_865) -1);
CDataStream stream_865(vch_865, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_865;
stream_865 >> txHist_865;

if(block.vtx[0]->GetHash() == txHist_865.GetHash() && nHeight == 1264774) {
return true;
}
unsigned char ch_866[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xec, 0x4b, 0x13, 0x04, 0x49, 0xa0, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x22, 0x05, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x49, 0x10, 0x2e, 0x72, 0x19, 0xc1, 0xda, 0x0a, 0x20, 0x49, 0xbe, 0x4a, 0xe5, 0x47, 0xf7, 0xe9, 0xcb, 0x64, 0x94, 0xee, 0x5b, 0xc2, 0xb1, 0x85, 0x84, 0xd5, 0xa6, 0xdf, 0x7c, 0x9a, 0xc1, 0x86, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_866(ch_866, ch_866 + sizeof(ch_866) -1);
CDataStream stream_866(vch_866, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_866;
stream_866 >> txHist_866;

if(block.vtx[0]->GetHash() == txHist_866.GetHash() && nHeight == 1264620) {
return true;
}
unsigned char ch_867[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x84, 0x4c, 0x13, 0x04, 0x9a, 0xd5, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x03, 0x30, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_867(ch_867, ch_867 + sizeof(ch_867) -1);
CDataStream stream_867(vch_867, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_867;
stream_867 >> txHist_867;

if(block.vtx[0]->GetHash() == txHist_867.GetHash() && nHeight == 1264772) {
return true;
}
unsigned char ch_868[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x82, 0x4c, 0x13, 0x04, 0x82, 0xd5, 0x36, 0x5b, 0x08, 0x57, 0xff, 0xff, 0xfb, 0x2d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_868(ch_868, ch_868 + sizeof(ch_868) -1);
CDataStream stream_868(vch_868, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_868;
stream_868 >> txHist_868;

if(block.vtx[0]->GetHash() == txHist_868.GetHash() && nHeight == 1264770) {
return true;
}
unsigned char ch_869[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x80, 0x4c, 0x13, 0x04, 0x51, 0xd4, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5a, 0xdb, 0xe9, 0x29, 0xa3, 0x6e, 0x1f, 0xba, 0x55, 0x74, 0x8d, 0xa3, 0xf0, 0xcd, 0x2d, 0xf6, 0x6e, 0xc6, 0xc4, 0x29, 0x41, 0x78, 0x45, 0x9d, 0x74, 0x89, 0xc0, 0x0a, 0x4d, 0xca, 0xd9, 0x7d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xfe, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x34, 0x29, 0x6d, 0x75, 0xda, 0x58, 0x17, 0x08, 0x52, 0x8c, 0xa6, 0x4f, 0x27, 0xde, 0xf8, 0x0d, 0x94, 0xc1, 0x9c, 0x3c, 0xd1, 0xe5, 0xc1, 0x8f, 0xa8, 0xf7, 0xb7, 0xae, 0x81, 0xd7, 0x79, 0x9a, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_869(ch_869, ch_869 + sizeof(ch_869) -1);
CDataStream stream_869(vch_869, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_869;
stream_869 >> txHist_869;

if(block.vtx[0]->GetHash() == txHist_869.GetHash() && nHeight == 1264768) {
return true;
}
unsigned char ch_870[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x72, 0x4c, 0x13, 0x04, 0x36, 0xd0, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5f, 0x96, 0x2b, 0x98, 0x98, 0xa7, 0xa4, 0xe0, 0x57, 0x94, 0xd9, 0x9f, 0x25, 0x3c, 0x6c, 0x0c, 0x7d, 0x5b, 0xf9, 0x33, 0xe2, 0x51, 0x85, 0x9a, 0x75, 0xd3, 0x86, 0x22, 0x9f, 0xd2, 0x66, 0x21, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_870(ch_870, ch_870 + sizeof(ch_870) -1);
CDataStream stream_870(vch_870, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_870;
stream_870 >> txHist_870;

if(block.vtx[0]->GetHash() == txHist_870.GetHash() && nHeight == 1264754) {
return true;
}
unsigned char ch_871[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x70, 0x4c, 0x13, 0x04, 0xa7, 0xcf, 0x36, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x20, 0x56, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x7e, 0x46, 0x43, 0x95, 0xad, 0x82, 0xa7, 0x48, 0xe1, 0x06, 0x2d, 0x72, 0x65, 0xe8, 0x02, 0xcc, 0xe6, 0x95, 0xe5, 0x83, 0x5b, 0x0c, 0x99, 0xbd, 0xf1, 0x7f, 0xb4, 0x4e, 0x99, 0x56, 0xe4, 0xcc, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_871(ch_871, ch_871 + sizeof(ch_871) -1);
CDataStream stream_871(vch_871, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_871;
stream_871 >> txHist_871;

if(block.vtx[0]->GetHash() == txHist_871.GetHash() && nHeight == 1264752) {
return true;
}
unsigned char ch_872[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x5f, 0x4c, 0x13, 0x04, 0xca, 0xc9, 0x36, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x09, 0x61, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_872(ch_872, ch_872 + sizeof(ch_872) -1);
CDataStream stream_872(vch_872, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_872;
stream_872 >> txHist_872;

if(block.vtx[0]->GetHash() == txHist_872.GetHash() && nHeight == 1264735) {
return true;
}
unsigned char ch_873[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x3f, 0x4c, 0x13, 0x04, 0x31, 0xbc, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x21, 0x7f, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_873(ch_873, ch_873 + sizeof(ch_873) -1);
CDataStream stream_873(vch_873, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_873;
stream_873 >> txHist_873;

if(block.vtx[0]->GetHash() == txHist_873.GetHash() && nHeight == 1264703) {
return true;
}
unsigned char ch_874[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x5e, 0x4c, 0x13, 0x04, 0x4e, 0xc9, 0x36, 0x5b, 0x08, 0x18, 0x00, 0x00, 0x09, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x52, 0x32, 0x31, 0x9a, 0x36, 0x0c, 0x37, 0x20, 0x0e, 0x90, 0x3a, 0xa1, 0xfb, 0xf5, 0x1b, 0xbf, 0x50, 0x4f, 0xf4, 0x71, 0xe4, 0x7f, 0xfb, 0x0b, 0x9e, 0x0d, 0x16, 0x23, 0x7f, 0x42, 0xc3, 0xe2, 0x38, 0xda, 0x6f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_874(ch_874, ch_874 + sizeof(ch_874) -1);
CDataStream stream_874(vch_874, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_874;
stream_874 >> txHist_874;

if(block.vtx[0]->GetHash() == txHist_874.GetHash() && nHeight == 1264734) {
return true;
}
unsigned char ch_875[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x3e, 0x4c, 0x13, 0x04, 0x28, 0xbc, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x06, 0x10, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x87, 0x64, 0x61, 0x5c, 0x26, 0x9b, 0xb5, 0x64, 0x5b, 0x90, 0x2f, 0x8e, 0xd8, 0x83, 0xde, 0xfb, 0xd6, 0xb0, 0x36, 0xd5, 0x07, 0xd4, 0xfd, 0x94, 0xdc, 0xe4, 0x39, 0x30, 0x9c, 0x93, 0xe0, 0x0d, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_875(ch_875, ch_875 + sizeof(ch_875) -1);
CDataStream stream_875(vch_875, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_875;
stream_875 >> txHist_875;

if(block.vtx[0]->GetHash() == txHist_875.GetHash() && nHeight == 1264702) {
return true;
}
unsigned char ch_876[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x3d, 0x4c, 0x13, 0x04, 0xdc, 0xba, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x20, 0x2a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_876(ch_876, ch_876 + sizeof(ch_876) -1);
CDataStream stream_876(vch_876, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_876;
stream_876 >> txHist_876;

if(block.vtx[0]->GetHash() == txHist_876.GetHash() && nHeight == 1264701) {
return true;
}
unsigned char ch_877[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x2e, 0x4c, 0x13, 0x04, 0xdf, 0xb7, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf9, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_877(ch_877, ch_877 + sizeof(ch_877) -1);
CDataStream stream_877(vch_877, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_877;
stream_877 >> txHist_877;

if(block.vtx[0]->GetHash() == txHist_877.GetHash() && nHeight == 1264686) {
return true;
}
unsigned char ch_878[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3b, 0x4c, 0x13, 0x04, 0x96, 0xba, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x65, 0x57, 0x62, 0x35, 0xa0, 0x85, 0x09, 0x78, 0x65, 0x75, 0x72, 0xc5, 0x06, 0x4e, 0x7e, 0xb3, 0x35, 0x80, 0x89, 0x51, 0x86, 0x3f, 0x69, 0x60, 0x45, 0x50, 0x05, 0x02, 0xf8, 0x48, 0x78, 0x66, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_878(ch_878, ch_878 + sizeof(ch_878) -1);
CDataStream stream_878(vch_878, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_878;
stream_878 >> txHist_878;

if(block.vtx[0]->GetHash() == txHist_878.GetHash() && nHeight == 1264699) {
return true;
}
unsigned char ch_879[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x3a, 0x4c, 0x13, 0x04, 0x71, 0xba, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x18, 0x66, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_879(ch_879, ch_879 + sizeof(ch_879) -1);
CDataStream stream_879(vch_879, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_879;
stream_879 >> txHist_879;

if(block.vtx[0]->GetHash() == txHist_879.GetHash() && nHeight == 1264698) {
return true;
}
unsigned char ch_880[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x39, 0x4c, 0x13, 0x04, 0x68, 0xba, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x07, 0x10, 0xb1, 0x71, 0xcb, 0x1b, 0x4e, 0x8e, 0x72, 0x19, 0xc8, 0x2e, 0xc0, 0x5f, 0xb2, 0xf1, 0xbf, 0x3e, 0x2c, 0xd9, 0xa9, 0xfa, 0xc6, 0x9b, 0x00, 0x84, 0x01, 0x52, 0x68, 0x83, 0xb6, 0xea, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xf6, 0xcd, 0x37, 0x46, 0xb7, 0xb5, 0x2c, 0x73, 0xd5, 0x17, 0xbd, 0x69, 0x1e, 0x07, 0x4c, 0x9b, 0x04, 0x33, 0x90, 0x11, 0x8e, 0x4b, 0xcb, 0x63, 0x50, 0xe5, 0x7f, 0x27, 0x45, 0x15, 0x92, 0x21, 0x70, 0x8b, 0x63, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_880(ch_880, ch_880 + sizeof(ch_880) -1);
CDataStream stream_880(vch_880, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_880;
stream_880 >> txHist_880;

if(block.vtx[0]->GetHash() == txHist_880.GetHash() && nHeight == 1264697) {
return true;
}
unsigned char ch_881[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x38, 0x4c, 0x13, 0x04, 0x0c, 0xba, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x21, 0x16, 0x0a, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_881(ch_881, ch_881 + sizeof(ch_881) -1);
CDataStream stream_881(vch_881, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_881;
stream_881 >> txHist_881;

if(block.vtx[0]->GetHash() == txHist_881.GetHash() && nHeight == 1264696) {
return true;
}
unsigned char ch_882[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x37, 0x4c, 0x13, 0x04, 0xd8, 0xb9, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x18, 0x1f, 0x9d, 0x09, 0x62, 0xe2, 0x45, 0x12, 0xaf, 0x0a, 0x27, 0x15, 0xed, 0x6f, 0x09, 0x59, 0x2f, 0xdf, 0x6d, 0x79, 0x15, 0x58, 0x8d, 0xab, 0x01, 0xea, 0x00, 0xa9, 0x0c, 0xbb, 0xf7, 0xd3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_882(ch_882, ch_882 + sizeof(ch_882) -1);
CDataStream stream_882(vch_882, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_882;
stream_882 >> txHist_882;

if(block.vtx[0]->GetHash() == txHist_882.GetHash() && nHeight == 1264695) {
return true;
}
unsigned char ch_883[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x36, 0x4c, 0x13, 0x04, 0x9c, 0xb9, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x02, 0xba, 0x06, 0x11, 0x99, 0x7c, 0x6d, 0x44, 0x97, 0xeb, 0x54, 0x5e, 0xb4, 0x1e, 0x29, 0x26, 0xbb, 0x70, 0x8e, 0xd2, 0x7b, 0xe5, 0x84, 0xfe, 0x4d, 0x73, 0xce, 0x71, 0x49, 0xe0, 0x36, 0x3e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_883(ch_883, ch_883 + sizeof(ch_883) -1);
CDataStream stream_883(vch_883, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_883;
stream_883 >> txHist_883;

if(block.vtx[0]->GetHash() == txHist_883.GetHash() && nHeight == 1264694) {
return true;
}
unsigned char ch_884[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x05, 0x4c, 0x13, 0x04, 0x50, 0xa9, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x21, 0x06, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_884(ch_884, ch_884 + sizeof(ch_884) -1);
CDataStream stream_884(vch_884, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_884;
stream_884 >> txHist_884;

if(block.vtx[0]->GetHash() == txHist_884.GetHash() && nHeight == 1264645) {
return true;
}
unsigned char ch_885[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x35, 0x4c, 0x13, 0x04, 0x68, 0xb9, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa3, 0x82, 0xe4, 0xa2, 0xfd, 0xe7, 0x44, 0x54, 0xd1, 0xa0, 0x10, 0x5c, 0x75, 0x47, 0xf4, 0x68, 0x09, 0x22, 0xce, 0xf6, 0x31, 0x57, 0x20, 0xbb, 0x76, 0x29, 0x4e, 0xe2, 0xc2, 0x31, 0x3d, 0xa3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_885(ch_885, ch_885 + sizeof(ch_885) -1);
CDataStream stream_885(vch_885, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_885;
stream_885 >> txHist_885;

if(block.vtx[0]->GetHash() == txHist_885.GetHash() && nHeight == 1264693) {
return true;
}
unsigned char ch_886[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x34, 0x4c, 0x13, 0x04, 0x5a, 0xb9, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x19, 0xd0, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_886(ch_886, ch_886 + sizeof(ch_886) -1);
CDataStream stream_886(vch_886, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_886;
stream_886 >> txHist_886;

if(block.vtx[0]->GetHash() == txHist_886.GetHash() && nHeight == 1264692) {
return true;
}
unsigned char ch_887[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x40, 0x4c, 0x13, 0x04, 0x83, 0xbc, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x52, 0x4d, 0xbc, 0x80, 0x43, 0x83, 0xcd, 0xd2, 0x5b, 0x8d, 0x5b, 0xb1, 0xe8, 0x98, 0xd0, 0x55, 0xbb, 0x33, 0x09, 0x27, 0xd5, 0x1f, 0x44, 0xe5, 0x41, 0xa9, 0xfe, 0x5a, 0x6e, 0x19, 0xb9, 0x1e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xff, 0xfe, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_887(ch_887, ch_887 + sizeof(ch_887) -1);
CDataStream stream_887(vch_887, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_887;
stream_887 >> txHist_887;

if(block.vtx[0]->GetHash() == txHist_887.GetHash() && nHeight == 1264704) {
return true;
}
unsigned char ch_888[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf9, 0x4b, 0x13, 0x04, 0xf8, 0xa3, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf8, 0x11, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_888(ch_888, ch_888 + sizeof(ch_888) -1);
CDataStream stream_888(vch_888, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_888;
stream_888 >> txHist_888;

if(block.vtx[0]->GetHash() == txHist_888.GetHash() && nHeight == 1264633) {
return true;
}
unsigned char ch_889[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x31, 0x4c, 0x13, 0x04, 0xae, 0xb8, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x17, 0x5f, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x8f, 0xa7, 0x2e, 0x00, 0x10, 0xdc, 0xc3, 0xfc, 0x23, 0x3f, 0xe4, 0x21, 0x78, 0x7d, 0xf4, 0x3e, 0xd8, 0x40, 0x3b, 0xa6, 0x48, 0x3b, 0xa1, 0xda, 0xef, 0xde, 0x93, 0x1e, 0xc4, 0xcb, 0x0c, 0xbf, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_889(ch_889, ch_889 + sizeof(ch_889) -1);
CDataStream stream_889(vch_889, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_889;
stream_889 >> txHist_889;

if(block.vtx[0]->GetHash() == txHist_889.GetHash() && nHeight == 1264689) {
return true;
}
unsigned char ch_890[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x3c, 0x4c, 0x13, 0x04, 0xd4, 0xba, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x18, 0x66, 0x31, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_890(ch_890, ch_890 + sizeof(ch_890) -1);
CDataStream stream_890(vch_890, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_890;
stream_890 >> txHist_890;

if(block.vtx[0]->GetHash() == txHist_890.GetHash() && nHeight == 1264700) {
return true;
}
unsigned char ch_891[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf3, 0x4b, 0x13, 0x04, 0x6e, 0xa2, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x21, 0x3c, 0xa7, 0x86, 0x1d, 0xba, 0x4a, 0x02, 0x78, 0x84, 0x5c, 0x84, 0x75, 0x15, 0x7b, 0xa4, 0xec, 0xa7, 0x77, 0xcf, 0x12, 0x75, 0x27, 0x9d, 0xee, 0x59, 0x83, 0xc5, 0xc4, 0x5d, 0xcc, 0xc7, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xfe, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_891(ch_891, ch_891 + sizeof(ch_891) -1);
CDataStream stream_891(vch_891, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_891;
stream_891 >> txHist_891;

if(block.vtx[0]->GetHash() == txHist_891.GetHash() && nHeight == 1264627) {
return true;
}
unsigned char ch_892[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x2d, 0x4c, 0x13, 0x04, 0xa7, 0xb7, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf9, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_892(ch_892, ch_892 + sizeof(ch_892) -1);
CDataStream stream_892(vch_892, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_892;
stream_892 >> txHist_892;

if(block.vtx[0]->GetHash() == txHist_892.GetHash() && nHeight == 1264685) {
return true;
}
unsigned char ch_893[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xdd, 0x4b, 0x13, 0x04, 0xc6, 0x98, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x22, 0x82, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_893(ch_893, ch_893 + sizeof(ch_893) -1);
CDataStream stream_893(vch_893, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_893;
stream_893 >> txHist_893;

if(block.vtx[0]->GetHash() == txHist_893.GetHash() && nHeight == 1264605) {
return true;
}
unsigned char ch_894[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xde, 0x4b, 0x13, 0x04, 0xe9, 0x99, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x02, 0xf4, 0x21, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x3a, 0xcb, 0xb3, 0xd8, 0x8a, 0x10, 0x0e, 0x0f, 0x2e, 0xb9, 0x53, 0x3a, 0xb8, 0x93, 0xab, 0xb6, 0xe3, 0x8d, 0xc6, 0xd3, 0xf6, 0xe6, 0xa4, 0x7e, 0xaf, 0x2b, 0x55, 0x3a, 0xc1, 0xf2, 0xc2, 0xb4, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_894(ch_894, ch_894 + sizeof(ch_894) -1);
CDataStream stream_894(vch_894, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_894;
stream_894 >> txHist_894;

if(block.vtx[0]->GetHash() == txHist_894.GetHash() && nHeight == 1264606) {
return true;
}
unsigned char ch_895[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x29, 0x4c, 0x13, 0x04, 0xa2, 0xb6, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x13, 0xc2, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_895(ch_895, ch_895 + sizeof(ch_895) -1);
CDataStream stream_895(vch_895, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_895;
stream_895 >> txHist_895;

if(block.vtx[0]->GetHash() == txHist_895.GetHash() && nHeight == 1264681) {
return true;
}
unsigned char ch_896[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xdb, 0x4b, 0x13, 0x04, 0x8f, 0x98, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x18, 0x6f, 0x47, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xda, 0xd3, 0xf7, 0xfe, 0x7d, 0xd6, 0xd9, 0x45, 0xab, 0x1f, 0xc4, 0xfa, 0xc4, 0xa4, 0x13, 0x02, 0xd2, 0xbd, 0xe4, 0x49, 0x89, 0x90, 0xc2, 0xe0, 0x7e, 0xbe, 0xbb, 0x71, 0xb4, 0xec, 0xbe, 0x23, 0xf8, 0xe2, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_896(ch_896, ch_896 + sizeof(ch_896) -1);
CDataStream stream_896(vch_896, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_896;
stream_896 >> txHist_896;

if(block.vtx[0]->GetHash() == txHist_896.GetHash() && nHeight == 1264603) {
return true;
}
unsigned char ch_897[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb7, 0x4b, 0x13, 0x04, 0x8e, 0x8c, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x1b, 0xc1, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x76, 0x06, 0xd8, 0xc4, 0x4b, 0x25, 0xba, 0x87, 0xd9, 0xb7, 0x73, 0x8b, 0xfe, 0x4b, 0x66, 0xd9, 0xe6, 0x64, 0x5a, 0x14, 0x01, 0xde, 0x3e, 0x73, 0x06, 0xd1, 0xcc, 0xeb, 0xef, 0x14, 0xb8, 0x61, 0x20, 0xda, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_897(ch_897, ch_897 + sizeof(ch_897) -1);
CDataStream stream_897(vch_897, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_897;
stream_897 >> txHist_897;

if(block.vtx[0]->GetHash() == txHist_897.GetHash() && nHeight == 1264567) {
return true;
}
unsigned char ch_898[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb2, 0x4b, 0x13, 0x04, 0xfe, 0x8a, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x21, 0x25, 0xe8, 0x54, 0x9c, 0x1c, 0x7f, 0x7e, 0x95, 0x88, 0x24, 0xc7, 0x81, 0x7e, 0x56, 0xf1, 0xd5, 0x83, 0x6e, 0x31, 0x1d, 0x7f, 0x96, 0x7d, 0xbf, 0x35, 0x7c, 0xea, 0xd5, 0xae, 0xf2, 0x96, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xf9, 0x25, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_898(ch_898, ch_898 + sizeof(ch_898) -1);
CDataStream stream_898(vch_898, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_898;
stream_898 >> txHist_898;

if(block.vtx[0]->GetHash() == txHist_898.GetHash() && nHeight == 1264562) {
return true;
}
unsigned char ch_899[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xad, 0x4b, 0x13, 0x04, 0x44, 0x89, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x08, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x41, 0xea, 0x00, 0xc2, 0x52, 0x75, 0xf4, 0x44, 0x0e, 0xe6, 0x5c, 0xde, 0x54, 0xf1, 0xba, 0x6a, 0x21, 0xbb, 0x7e, 0x72, 0xf6, 0x89, 0x3c, 0x80, 0x3f, 0xb6, 0x53, 0x4e, 0x2d, 0xd4, 0x5a, 0x0b, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_899(ch_899, ch_899 + sizeof(ch_899) -1);
CDataStream stream_899(vch_899, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_899;
stream_899 >> txHist_899;

if(block.vtx[0]->GetHash() == txHist_899.GetHash() && nHeight == 1264557) {
return true;
}
unsigned char ch_900[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x50, 0x4c, 0x13, 0x04, 0x0c, 0xc4, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x1a, 0xa9, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_900(ch_900, ch_900 + sizeof(ch_900) -1);
CDataStream stream_900(vch_900, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_900;
stream_900 >> txHist_900;

if(block.vtx[0]->GetHash() == txHist_900.GetHash() && nHeight == 1264720) {
return true;
}
unsigned char ch_901[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xaa, 0x4b, 0x13, 0x04, 0x86, 0x88, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x31, 0x31, 0xcc, 0xe4, 0x39, 0xea, 0x8e, 0x80, 0x73, 0xc0, 0xf5, 0x38, 0x54, 0x3f, 0xa1, 0xf8, 0x2a, 0x62, 0x92, 0xa3, 0x18, 0x95, 0xec, 0x4e, 0xf5, 0x2d, 0xe2, 0x6a, 0x82, 0xb6, 0xd9, 0x23, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_901(ch_901, ch_901 + sizeof(ch_901) -1);
CDataStream stream_901(vch_901, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_901;
stream_901 >> txHist_901;

if(block.vtx[0]->GetHash() == txHist_901.GetHash() && nHeight == 1264554) {
return true;
}
unsigned char ch_902[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xce, 0x4b, 0x13, 0x04, 0x3a, 0x94, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x22, 0x00, 0x07, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x03, 0x79, 0x9f, 0xfb, 0xdb, 0xe7, 0x1a, 0x0a, 0xd0, 0xea, 0x83, 0x2d, 0x39, 0x78, 0x14, 0x34, 0xba, 0x8a, 0xf3, 0xf3, 0x9f, 0xa9, 0x1f, 0xc6, 0x63, 0x84, 0x44, 0xe5, 0xe2, 0xc0, 0x97, 0x4b, 0x30, 0x16, 0x69, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_902(ch_902, ch_902 + sizeof(ch_902) -1);
CDataStream stream_902(vch_902, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_902;
stream_902 >> txHist_902;

if(block.vtx[0]->GetHash() == txHist_902.GetHash() && nHeight == 1264590) {
return true;
}
unsigned char ch_903[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xca, 0x4b, 0x13, 0x04, 0xaa, 0x92, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x02, 0x8d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_903(ch_903, ch_903 + sizeof(ch_903) -1);
CDataStream stream_903(vch_903, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_903;
stream_903 >> txHist_903;

if(block.vtx[0]->GetHash() == txHist_903.GetHash() && nHeight == 1264586) {
return true;
}
unsigned char ch_904[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc7, 0x4b, 0x13, 0x04, 0x35, 0x92, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x19, 0xd0, 0x7c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xac, 0x1c, 0x3f, 0xc0, 0x28, 0xb1, 0xfd, 0x50, 0x56, 0xae, 0xd9, 0x79, 0x8a, 0x99, 0x7b, 0x65, 0xb2, 0x2a, 0x9d, 0x4f, 0xe8, 0xca, 0xff, 0xc1, 0x65, 0x74, 0x01, 0xd1, 0xd3, 0x61, 0x12, 0x8e, 0xa0, 0xf4, 0x65, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_904(ch_904, ch_904 + sizeof(ch_904) -1);
CDataStream stream_904(vch_904, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_904;
stream_904 >> txHist_904;

if(block.vtx[0]->GetHash() == txHist_904.GetHash() && nHeight == 1264583) {
return true;
}
unsigned char ch_905[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb6, 0x4b, 0x13, 0x04, 0x57, 0x8c, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x0d, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_905(ch_905, ch_905 + sizeof(ch_905) -1);
CDataStream stream_905(vch_905, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_905;
stream_905 >> txHist_905;

if(block.vtx[0]->GetHash() == txHist_905.GetHash() && nHeight == 1264566) {
return true;
}
unsigned char ch_906[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb1, 0x4b, 0x13, 0x04, 0xd0, 0x8a, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xef, 0x71, 0x13, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x65, 0xad, 0xa9, 0x0f, 0xdc, 0x3d, 0x43, 0x9c, 0xf2, 0xb0, 0xba, 0x75, 0x33, 0x06, 0xab, 0x02, 0xc0, 0xe1, 0xac, 0x76, 0x9a, 0x12, 0x30, 0xfd, 0x60, 0xcd, 0x85, 0x16, 0x2e, 0x91, 0x87, 0x0c, 0xc8, 0x8d, 0x63, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_906(ch_906, ch_906 + sizeof(ch_906) -1);
CDataStream stream_906(vch_906, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_906;
stream_906 >> txHist_906;

if(block.vtx[0]->GetHash() == txHist_906.GetHash() && nHeight == 1264561) {
return true;
}
unsigned char ch_907[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa9, 0x4b, 0x13, 0x04, 0x61, 0x88, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x19, 0xd0, 0x11, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_907(ch_907, ch_907 + sizeof(ch_907) -1);
CDataStream stream_907(vch_907, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_907;
stream_907 >> txHist_907;

if(block.vtx[0]->GetHash() == txHist_907.GetHash() && nHeight == 1264553) {
return true;
}
unsigned char ch_908[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa2, 0x4b, 0x13, 0x04, 0x10, 0x86, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x1b, 0xc1, 0xa8, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_908(ch_908, ch_908 + sizeof(ch_908) -1);
CDataStream stream_908(vch_908, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_908;
stream_908 >> txHist_908;

if(block.vtx[0]->GetHash() == txHist_908.GetHash() && nHeight == 1264546) {
return true;
}
unsigned char ch_909[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x9a, 0x4b, 0x13, 0x04, 0xd5, 0x7f, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x02, 0xff, 0x10, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_909(ch_909, ch_909 + sizeof(ch_909) -1);
CDataStream stream_909(vch_909, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_909;
stream_909 >> txHist_909;

if(block.vtx[0]->GetHash() == txHist_909.GetHash() && nHeight == 1264538) {
return true;
}
unsigned char ch_910[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x96, 0x4b, 0x13, 0x04, 0xbc, 0x7e, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x1a, 0xa9, 0x3a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_910(ch_910, ch_910 + sizeof(ch_910) -1);
CDataStream stream_910(vch_910, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_910;
stream_910 >> txHist_910;

if(block.vtx[0]->GetHash() == txHist_910.GetHash() && nHeight == 1264534) {
return true;
}
unsigned char ch_911[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x92, 0x4b, 0x13, 0x04, 0x1e, 0x7e, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x04, 0x2f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_911(ch_911, ch_911 + sizeof(ch_911) -1);
CDataStream stream_911(vch_911, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_911;
stream_911 >> txHist_911;

if(block.vtx[0]->GetHash() == txHist_911.GetHash() && nHeight == 1264530) {
return true;
}
unsigned char ch_912[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x8f, 0x4b, 0x13, 0x04, 0x29, 0x7d, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9b, 0xca, 0x0b, 0xcb, 0xe4, 0x70, 0xc6, 0x19, 0xa1, 0xb9, 0x18, 0x11, 0x04, 0x07, 0xde, 0x45, 0xed, 0x8c, 0xc6, 0x84, 0xe3, 0x81, 0xc2, 0x37, 0x01, 0x56, 0xf8, 0x1d, 0x8d, 0xcc, 0xe0, 0x37, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x39, 0x07, 0xc1, 0xa0, 0xb2, 0x0f, 0xbc, 0xb7, 0x6d, 0x97, 0x87, 0xa3, 0x40, 0x2d, 0x68, 0xa5, 0x3c, 0xcd, 0x41, 0xe1, 0xdd, 0x59, 0x9e, 0x4e, 0xf3, 0xcc, 0x83, 0xf5, 0xef, 0x32, 0xe9, 0xdc, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_912(ch_912, ch_912 + sizeof(ch_912) -1);
CDataStream stream_912(vch_912, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_912;
stream_912 >> txHist_912;

if(block.vtx[0]->GetHash() == txHist_912.GetHash() && nHeight == 1264527) {
return true;
}
unsigned char ch_913[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x8c, 0x4b, 0x13, 0x04, 0x28, 0x7b, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x57, 0x63, 0x61, 0xb4, 0x9b, 0x3b, 0x40, 0x43, 0xb7, 0x85, 0xb8, 0x7d, 0x05, 0xc9, 0x87, 0x47, 0x77, 0xe5, 0x1b, 0xe6, 0x30, 0x03, 0x53, 0x34, 0x8f, 0xed, 0x6e, 0x36, 0x6e, 0x5f, 0x23, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xf9, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_913(ch_913, ch_913 + sizeof(ch_913) -1);
CDataStream stream_913(vch_913, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_913;
stream_913 >> txHist_913;

if(block.vtx[0]->GetHash() == txHist_913.GetHash() && nHeight == 1264524) {
return true;
}
unsigned char ch_914[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xda, 0x4b, 0x13, 0x04, 0x2e, 0x98, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x08, 0x76, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_914(ch_914, ch_914 + sizeof(ch_914) -1);
CDataStream stream_914(vch_914, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_914;
stream_914 >> txHist_914;

if(block.vtx[0]->GetHash() == txHist_914.GetHash() && nHeight == 1264602) {
return true;
}
unsigned char ch_915[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd9, 0x4b, 0x13, 0x04, 0x09, 0x98, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x04, 0x3b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa0, 0x5e, 0x69, 0x5a, 0x28, 0x8b, 0xf6, 0xf9, 0x60, 0xb4, 0x10, 0x4c, 0xdb, 0x09, 0xb7, 0x36, 0xfc, 0xa9, 0xdd, 0x07, 0x1d, 0xc1, 0x0c, 0x93, 0x8a, 0xfa, 0xd1, 0x8e, 0x4b, 0x4a, 0x29, 0xf7, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_915(ch_915, ch_915 + sizeof(ch_915) -1);
CDataStream stream_915(vch_915, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_915;
stream_915 >> txHist_915;

if(block.vtx[0]->GetHash() == txHist_915.GetHash() && nHeight == 1264601) {
return true;
}
unsigned char ch_916[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd8, 0x4b, 0x13, 0x04, 0xd6, 0x97, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x6d, 0x3d, 0xec, 0xd2, 0x85, 0xd4, 0x39, 0x5e, 0x54, 0x89, 0x9a, 0x16, 0x72, 0xf8, 0x09, 0x5a, 0x16, 0x21, 0x08, 0xe7, 0x5e, 0x3e, 0x98, 0x3e, 0xa0, 0x96, 0xcb, 0xe8, 0xdf, 0x84, 0x4e, 0x58, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_916(ch_916, ch_916 + sizeof(ch_916) -1);
CDataStream stream_916(vch_916, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_916;
stream_916 >> txHist_916;

if(block.vtx[0]->GetHash() == txHist_916.GetHash() && nHeight == 1264600) {
return true;
}
unsigned char ch_917[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd6, 0x4b, 0x13, 0x04, 0x9b, 0x97, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb1, 0x5d, 0xb2, 0x2b, 0xdb, 0xe9, 0xa3, 0x8e, 0x94, 0x48, 0xda, 0xfb, 0xa4, 0xc4, 0xf8, 0xb3, 0x57, 0xb5, 0x81, 0x41, 0x6d, 0x36, 0x54, 0x4c, 0x08, 0x5e, 0x6d, 0x10, 0x20, 0x5e, 0x30, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xf9, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x9a, 0x30, 0xc6, 0xee, 0x1e, 0x88, 0xa4, 0x27, 0x52, 0x40, 0x1f, 0xb2, 0x83, 0x70, 0x60, 0xb3, 0x33, 0xe9, 0x12, 0x9e, 0x70, 0x5c, 0xe8, 0x3a, 0x6c, 0x0f, 0xb9, 0x58, 0xbc, 0x1a, 0x3c, 0xbc, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_917(ch_917, ch_917 + sizeof(ch_917) -1);
CDataStream stream_917(vch_917, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_917;
stream_917 >> txHist_917;

if(block.vtx[0]->GetHash() == txHist_917.GetHash() && nHeight == 1264598) {
return true;
}
unsigned char ch_918[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd5, 0x4b, 0x13, 0x04, 0x7c, 0x97, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf8, 0x2e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_918(ch_918, ch_918 + sizeof(ch_918) -1);
CDataStream stream_918(vch_918, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_918;
stream_918 >> txHist_918;

if(block.vtx[0]->GetHash() == txHist_918.GetHash() && nHeight == 1264597) {
return true;
}
unsigned char ch_919[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd4, 0x4b, 0x13, 0x04, 0x30, 0x97, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x60, 0xd6, 0xc4, 0xe6, 0xee, 0x80, 0xe5, 0x4d, 0xa9, 0x1a, 0xe1, 0x60, 0xfd, 0x93, 0x06, 0x03, 0x37, 0xb5, 0x01, 0xfc, 0x3e, 0x8d, 0xa8, 0xec, 0x6c, 0xf8, 0x47, 0x8e, 0xf0, 0xd4, 0xac, 0x99, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x01, 0x11, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x87, 0xfa, 0xb5, 0x33, 0x4a, 0x80, 0xfe, 0x85, 0x16, 0xb1, 0x9c, 0x4f, 0x03, 0x53, 0x17, 0x78, 0x3c, 0x8c, 0x91, 0x78, 0x5a, 0x09, 0x9c, 0x1d, 0xda, 0xd8, 0xbc, 0x86, 0x1d, 0x08, 0x10, 0x8e, 0x80, 0x6f, 0x6a, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_919(ch_919, ch_919 + sizeof(ch_919) -1);
CDataStream stream_919(vch_919, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_919;
stream_919 >> txHist_919;

if(block.vtx[0]->GetHash() == txHist_919.GetHash() && nHeight == 1264596) {
return true;
}
unsigned char ch_920[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd0, 0x4b, 0x13, 0x04, 0x81, 0x94, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x18, 0x6f, 0x48, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa4, 0x18, 0xe4, 0x39, 0xba, 0x76, 0x5b, 0x28, 0xe8, 0xbd, 0xd2, 0xcd, 0x49, 0x9c, 0x7b, 0x5f, 0x0e, 0xe2, 0x57, 0x2d, 0xbe, 0xb2, 0x61, 0x28, 0x87, 0x50, 0x11, 0x52, 0x28, 0xa0, 0x39, 0x18, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_920(ch_920, ch_920 + sizeof(ch_920) -1);
CDataStream stream_920(vch_920, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_920;
stream_920 >> txHist_920;

if(block.vtx[0]->GetHash() == txHist_920.GetHash() && nHeight == 1264592) {
return true;
}
unsigned char ch_921[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xcf, 0x4b, 0x13, 0x04, 0x3f, 0x94, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x14, 0xd6, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_921(ch_921, ch_921 + sizeof(ch_921) -1);
CDataStream stream_921(vch_921, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_921;
stream_921 >> txHist_921;

if(block.vtx[0]->GetHash() == txHist_921.GetHash() && nHeight == 1264591) {
return true;
}
unsigned char ch_922[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x1a, 0x4c, 0x13, 0x04, 0x61, 0xb1, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x18, 0x6f, 0x31, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_922(ch_922, ch_922 + sizeof(ch_922) -1);
CDataStream stream_922(vch_922, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_922;
stream_922 >> txHist_922;

if(block.vtx[0]->GetHash() == txHist_922.GetHash() && nHeight == 1264666) {
return true;
}
unsigned char ch_923[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x15, 0x4c, 0x13, 0x04, 0xe1, 0xaf, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xab, 0xbe, 0xd5, 0xa2, 0x1d, 0xc8, 0xd8, 0x11, 0x9c, 0x62, 0xd0, 0x64, 0xaa, 0x5f, 0x95, 0x04, 0xdc, 0xde, 0xe6, 0x45, 0x6a, 0x76, 0x49, 0xf1, 0xc6, 0xbd, 0x91, 0xc8, 0xca, 0x2a, 0x72, 0xf8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xfe, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_923(ch_923, ch_923 + sizeof(ch_923) -1);
CDataStream stream_923(vch_923, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_923;
stream_923 >> txHist_923;

if(block.vtx[0]->GetHash() == txHist_923.GetHash() && nHeight == 1264661) {
return true;
}
unsigned char ch_924[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x10, 0x4c, 0x13, 0x04, 0xc9, 0xae, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x75, 0xda, 0xe2, 0x4a, 0xaf, 0x7f, 0x00, 0x3e, 0x22, 0xa8, 0x81, 0xf7, 0x94, 0xe7, 0xd4, 0x80, 0xcc, 0x0f, 0xba, 0x84, 0xf3, 0xb7, 0x98, 0x27, 0xdf, 0x64, 0xcc, 0x91, 0x0b, 0xd5, 0xee, 0x98, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x57, 0x6f, 0x9f, 0x71, 0xb3, 0x8b, 0xdb, 0x93, 0x63, 0x98, 0xc8, 0x22, 0x51, 0xe7, 0x46, 0x43, 0x35, 0xe7, 0xdc, 0x4c, 0x58, 0x84, 0x59, 0x93, 0x28, 0x83, 0x53, 0xf4, 0x9f, 0xd7, 0x44, 0x9c, 0x30, 0x33, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_924(ch_924, ch_924 + sizeof(ch_924) -1);
CDataStream stream_924(vch_924, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_924;
stream_924 >> txHist_924;

if(block.vtx[0]->GetHash() == txHist_924.GetHash() && nHeight == 1264656) {
return true;
}
unsigned char ch_925[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x0a, 0x4c, 0x13, 0x04, 0x52, 0xab, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x1d, 0xf4, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_925(ch_925, ch_925 + sizeof(ch_925) -1);
CDataStream stream_925(vch_925, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_925;
stream_925 >> txHist_925;

if(block.vtx[0]->GetHash() == txHist_925.GetHash() && nHeight == 1264650) {
return true;
}
unsigned char ch_926[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xfe, 0x4b, 0x13, 0x04, 0x73, 0xa6, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x18, 0x6f, 0xbf, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xc5, 0xcf, 0x1c, 0x7b, 0xb4, 0x8e, 0x5e, 0xbe, 0x7f, 0x7a, 0xdd, 0xa6, 0x0c, 0xb9, 0x1b, 0xd8, 0x43, 0x49, 0xe9, 0xe0, 0x24, 0x8e, 0xab, 0x28, 0xd9, 0xd8, 0xe7, 0x25, 0x9b, 0xa9, 0xf9, 0x4d, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_926(ch_926, ch_926 + sizeof(ch_926) -1);
CDataStream stream_926(vch_926, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_926;
stream_926 >> txHist_926;

if(block.vtx[0]->GetHash() == txHist_926.GetHash() && nHeight == 1264638) {
return true;
}
unsigned char ch_927[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf8, 0x4b, 0x13, 0x04, 0xea, 0xa3, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa2, 0x11, 0x0f, 0xeb, 0x89, 0x30, 0xc6, 0x4e, 0xa6, 0x98, 0x10, 0x7e, 0xde, 0x1f, 0xa5, 0xe1, 0x97, 0xc5, 0x2a, 0x71, 0x1c, 0xa9, 0xd9, 0x45, 0x47, 0x59, 0x60, 0x8d, 0x5a, 0xea, 0xea, 0xe1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xff, 0xfe, 0x0c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_927(ch_927, ch_927 + sizeof(ch_927) -1);
CDataStream stream_927(vch_927, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_927;
stream_927 >> txHist_927;

if(block.vtx[0]->GetHash() == txHist_927.GetHash() && nHeight == 1264632) {
return true;
}
unsigned char ch_928[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf2, 0x4b, 0x13, 0x04, 0x62, 0xa2, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x21, 0x3c, 0xa7, 0x86, 0x1d, 0xba, 0x4a, 0x02, 0x78, 0x84, 0x5c, 0x84, 0x75, 0x15, 0x7b, 0xa4, 0xec, 0xa7, 0x77, 0xcf, 0x12, 0x75, 0x27, 0x9d, 0xee, 0x59, 0x83, 0xc5, 0xc4, 0x5d, 0xcc, 0xc7, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x3d, 0xc3, 0xd2, 0xd2, 0x12, 0x7f, 0x83, 0x99, 0xf2, 0x9a, 0x79, 0x40, 0x33, 0x6e, 0x2f, 0x6f, 0xcd, 0x53, 0x6f, 0x63, 0xa0, 0xe4, 0xd7, 0xdc, 0x20, 0x21, 0x8e, 0xbe, 0x8b, 0x36, 0x8c, 0x56, 0x68, 0xc8, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_928(ch_928, ch_928 + sizeof(ch_928) -1);
CDataStream stream_928(vch_928, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_928;
stream_928 >> txHist_928;

if(block.vtx[0]->GetHash() == txHist_928.GetHash() && nHeight == 1264626) {
return true;
}
unsigned char ch_929[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc4, 0x4b, 0x13, 0x04, 0xc4, 0x90, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf8, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_929(ch_929, ch_929 + sizeof(ch_929) -1);
CDataStream stream_929(vch_929, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_929;
stream_929 >> txHist_929;

if(block.vtx[0]->GetHash() == txHist_929.GetHash() && nHeight == 1264580) {
return true;
}
unsigned char ch_930[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc8, 0x4b, 0x13, 0x04, 0x6f, 0x92, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x13, 0xc0, 0x06, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_930(ch_930, ch_930 + sizeof(ch_930) -1);
CDataStream stream_930(vch_930, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_930;
stream_930 >> txHist_930;

if(block.vtx[0]->GetHash() == txHist_930.GetHash() && nHeight == 1264584) {
return true;
}
unsigned char ch_931[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc1, 0x4b, 0x13, 0x04, 0xba, 0x90, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x47, 0x3f, 0x93, 0x01, 0xdb, 0x90, 0x57, 0x80, 0x2a, 0x3d, 0xcb, 0x86, 0xf2, 0x2e, 0xe4, 0x61, 0x08, 0xdc, 0x43, 0xdf, 0xcb, 0x01, 0x0b, 0x7f, 0x7c, 0x83, 0xfd, 0x4b, 0x2b, 0x86, 0x08, 0xaa, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xff, 0xfe, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x62, 0x07, 0x57, 0x7e, 0xd2, 0x5d, 0x99, 0x5f, 0x2b, 0x57, 0x71, 0x55, 0x2b, 0xf7, 0x3f, 0xbf, 0x44, 0x4f, 0x7c, 0x28, 0xbc, 0x3e, 0x22, 0x94, 0x95, 0x14, 0xf6, 0xba, 0x23, 0xe0, 0xe8, 0x0e, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_931(ch_931, ch_931 + sizeof(ch_931) -1);
CDataStream stream_931(vch_931, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_931;
stream_931 >> txHist_931;

if(block.vtx[0]->GetHash() == txHist_931.GetHash() && nHeight == 1264577) {
return true;
}
unsigned char ch_932[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x6e, 0x4b, 0x13, 0x04, 0x43, 0x71, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x13, 0xc4, 0x06, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x52, 0xa1, 0x66, 0xcd, 0x4c, 0xcc, 0xd4, 0x23, 0x61, 0x19, 0xe6, 0xa6, 0x1c, 0x0f, 0xc3, 0x16, 0x0e, 0xe5, 0xe6, 0x3c, 0x04, 0xef, 0x64, 0x7b, 0xae, 0xce, 0xad, 0xc7, 0x6e, 0xdd, 0x29, 0x16, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_932(ch_932, ch_932 + sizeof(ch_932) -1);
CDataStream stream_932(vch_932, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_932;
stream_932 >> txHist_932;

if(block.vtx[0]->GetHash() == txHist_932.GetHash() && nHeight == 1264494) {
return true;
}
unsigned char ch_933[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xbe, 0x4b, 0x13, 0x04, 0x38, 0x8f, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe7, 0xb7, 0x2c, 0x14, 0x2c, 0xaf, 0x4a, 0x8a, 0xbd, 0xd7, 0x6a, 0xc5, 0x0d, 0xd1, 0xc8, 0xf3, 0xb2, 0xb3, 0xf6, 0x68, 0xa6, 0x25, 0x47, 0x25, 0xea, 0x9e, 0x27, 0x11, 0xc6, 0xfb, 0x39, 0x28, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_933(ch_933, ch_933 + sizeof(ch_933) -1);
CDataStream stream_933(vch_933, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_933;
stream_933 >> txHist_933;

if(block.vtx[0]->GetHash() == txHist_933.GetHash() && nHeight == 1264574) {
return true;
}
unsigned char ch_934[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc2, 0x4b, 0x13, 0x04, 0xb0, 0x90, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x20, 0xb1, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_934(ch_934, ch_934 + sizeof(ch_934) -1);
CDataStream stream_934(vch_934, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_934;
stream_934 >> txHist_934;

if(block.vtx[0]->GetHash() == txHist_934.GetHash() && nHeight == 1264578) {
return true;
}
unsigned char ch_935[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x5d, 0x4b, 0x13, 0x04, 0x4d, 0x6c, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x18, 0x66, 0x2e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x95, 0x89, 0xb9, 0x30, 0x3b, 0x7a, 0x80, 0x6c, 0x18, 0x9e, 0x92, 0xb2, 0xd0, 0x80, 0xd0, 0xc2, 0x9d, 0x10, 0x70, 0x2f, 0x02, 0x8e, 0xcb, 0x78, 0xa7, 0x57, 0x3a, 0xba, 0x18, 0xb5, 0x49, 0x45, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_935(ch_935, ch_935 + sizeof(ch_935) -1);
CDataStream stream_935(vch_935, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_935;
stream_935 >> txHist_935;

if(block.vtx[0]->GetHash() == txHist_935.GetHash() && nHeight == 1264477) {
return true;
}
unsigned char ch_936[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xba, 0x4b, 0x13, 0x04, 0x76, 0x8d, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x8e, 0x4b, 0x96, 0x82, 0xa1, 0x55, 0xb1, 0x35, 0x09, 0xdd, 0xe7, 0xb0, 0x70, 0xfe, 0x89, 0x38, 0xa5, 0x46, 0x91, 0x83, 0x73, 0x6c, 0xe7, 0x87, 0x44, 0xe9, 0x24, 0x9c, 0x02, 0xee, 0x7d, 0xac, 0x28, 0x85, 0xfc, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_936(ch_936, ch_936 + sizeof(ch_936) -1);
CDataStream stream_936(vch_936, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_936;
stream_936 >> txHist_936;

if(block.vtx[0]->GetHash() == txHist_936.GetHash() && nHeight == 1264570) {
return true;
}
unsigned char ch_937[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc9, 0x4b, 0x13, 0x04, 0x8f, 0x92, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x13, 0x45, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_937(ch_937, ch_937 + sizeof(ch_937) -1);
CDataStream stream_937(vch_937, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_937;
stream_937 >> txHist_937;

if(block.vtx[0]->GetHash() == txHist_937.GetHash() && nHeight == 1264585) {
return true;
}
unsigned char ch_938[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x5a, 0x4b, 0x13, 0x04, 0x2d, 0x6b, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xef, 0x95, 0x07, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xcf, 0xa1, 0xd4, 0x76, 0x45, 0x2d, 0xde, 0xdb, 0x7b, 0xa0, 0x01, 0x4f, 0x58, 0x1b, 0x97, 0x6a, 0x5c, 0xd3, 0x87, 0x10, 0x33, 0xe2, 0x52, 0x2c, 0xdd, 0xcc, 0x79, 0x67, 0x22, 0x82, 0x9c, 0x1d, 0xb0, 0xf4, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_938(ch_938, ch_938 + sizeof(ch_938) -1);
CDataStream stream_938(vch_938, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_938;
stream_938 >> txHist_938;

if(block.vtx[0]->GetHash() == txHist_938.GetHash() && nHeight == 1264474) {
return true;
}
unsigned char ch_939[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb5, 0x4b, 0x13, 0x04, 0x30, 0x8c, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0b, 0x5e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x5d, 0xe9, 0x97, 0xda, 0x43, 0x58, 0x6c, 0x16, 0xe5, 0xc4, 0xe2, 0x43, 0x0f, 0x9f, 0x5e, 0xdf, 0xfb, 0xb0, 0xac, 0x91, 0x3c, 0x51, 0xc6, 0xaf, 0xfb, 0x7f, 0x01, 0x91, 0x2b, 0xc1, 0x56, 0xc1, 0x78, 0x9a, 0xf3, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x84, 0x5b, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0x94, 0xc9, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_939(ch_939, ch_939 + sizeof(ch_939) -1);
CDataStream stream_939(vch_939, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_939;
stream_939 >> txHist_939;

if(block.vtx[0]->GetHash() == txHist_939.GetHash() && nHeight == 1264565) {
return true;
}
unsigned char ch_940[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb8, 0x4b, 0x13, 0x04, 0x97, 0x8c, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x04, 0x2a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_940(ch_940, ch_940 + sizeof(ch_940) -1);
CDataStream stream_940(vch_940, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_940;
stream_940 >> txHist_940;

if(block.vtx[0]->GetHash() == txHist_940.GetHash() && nHeight == 1264568) {
return true;
}
unsigned char ch_941[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb0, 0x4b, 0x13, 0x04, 0x28, 0x8a, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x19, 0xd0, 0x2e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_941(ch_941, ch_941 + sizeof(ch_941) -1);
CDataStream stream_941(vch_941, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_941;
stream_941 >> txHist_941;

if(block.vtx[0]->GetHash() == txHist_941.GetHash() && nHeight == 1264560) {
return true;
}
unsigned char ch_942[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc3, 0x4b, 0x13, 0x04, 0xb8, 0x90, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x02, 0x2b, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_942(ch_942, ch_942 + sizeof(ch_942) -1);
CDataStream stream_942(vch_942, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_942;
stream_942 >> txHist_942;

if(block.vtx[0]->GetHash() == txHist_942.GetHash() && nHeight == 1264579) {
return true;
}
unsigned char ch_943[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb3, 0x4b, 0x13, 0x04, 0x24, 0x8b, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x06, 0x2a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_943(ch_943, ch_943 + sizeof(ch_943) -1);
CDataStream stream_943(vch_943, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_943;
stream_943 >> txHist_943;

if(block.vtx[0]->GetHash() == txHist_943.GetHash() && nHeight == 1264563) {
return true;
}
unsigned char ch_944[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x54, 0x4b, 0x13, 0x04, 0x02, 0x6a, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x18, 0x6f, 0x31, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x89, 0xc2, 0x28, 0x93, 0x77, 0xdd, 0x3d, 0xe7, 0xbe, 0x15, 0xa1, 0xe7, 0x48, 0x71, 0xc5, 0x6f, 0x4a, 0xeb, 0xcf, 0x3a, 0xbf, 0xd7, 0x31, 0x10, 0x98, 0xc4, 0xa6, 0xf4, 0x86, 0xcf, 0x95, 0x98, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_944(ch_944, ch_944 + sizeof(ch_944) -1);
CDataStream stream_944(vch_944, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_944;
stream_944 >> txHist_944;

if(block.vtx[0]->GetHash() == txHist_944.GetHash() && nHeight == 1264468) {
return true;
}
unsigned char ch_945[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xae, 0x4b, 0x13, 0x04, 0xd9, 0x89, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x13, 0x9b, 0x0c, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x5b, 0xf6, 0xed, 0x00, 0x25, 0xe8, 0x36, 0x95, 0xe5, 0x17, 0x21, 0x0c, 0xbe, 0x64, 0x0c, 0x25, 0x63, 0x99, 0xe5, 0x70, 0xe8, 0xdc, 0x71, 0x0e, 0x6d, 0xc1, 0xe3, 0x57, 0xce, 0x94, 0x0c, 0x3b, 0x58, 0x6f, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_945(ch_945, ch_945 + sizeof(ch_945) -1);
CDataStream stream_945(vch_945, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_945;
stream_945 >> txHist_945;

if(block.vtx[0]->GetHash() == txHist_945.GetHash() && nHeight == 1264558) {
return true;
}
unsigned char ch_946[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x93, 0x4b, 0x13, 0x04, 0x22, 0x7e, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x14, 0x6c, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_946(ch_946, ch_946 + sizeof(ch_946) -1);
CDataStream stream_946(vch_946, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_946;
stream_946 >> txHist_946;

if(block.vtx[0]->GetHash() == txHist_946.GetHash() && nHeight == 1264531) {
return true;
}
unsigned char ch_947[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x51, 0x4b, 0x13, 0x04, 0x3b, 0x69, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf9, 0x60, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x11, 0x39, 0x13, 0x1e, 0x7d, 0xfb, 0x7e, 0x53, 0x9c, 0x6c, 0x05, 0xc7, 0xa9, 0x41, 0xe2, 0x6e, 0xd5, 0xad, 0x93, 0xf1, 0x3a, 0x9b, 0xea, 0xa8, 0x50, 0xc8, 0x6c, 0x98, 0xcb, 0x5a, 0xdb, 0x62, 0x10, 0x2a, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_947(ch_947, ch_947 + sizeof(ch_947) -1);
CDataStream stream_947(vch_947, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_947;
stream_947 >> txHist_947;

if(block.vtx[0]->GetHash() == txHist_947.GetHash() && nHeight == 1264465) {
return true;
}
unsigned char ch_948[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5f, 0x4b, 0x13, 0x04, 0xc5, 0x6c, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x6f, 0xa6, 0xae, 0xdf, 0x93, 0x5e, 0xcf, 0xc5, 0xc1, 0x45, 0x3d, 0x58, 0x07, 0x6c, 0xc1, 0xc1, 0x8b, 0x67, 0x39, 0xb9, 0xc6, 0x08, 0x83, 0xab, 0xb3, 0xee, 0xd9, 0x62, 0xee, 0x99, 0xd0, 0x5a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x08, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_948(ch_948, ch_948 + sizeof(ch_948) -1);
CDataStream stream_948(vch_948, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_948;
stream_948 >> txHist_948;

if(block.vtx[0]->GetHash() == txHist_948.GetHash() && nHeight == 1264479) {
return true;
}
unsigned char ch_949[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xbd, 0x4b, 0x13, 0x04, 0x23, 0x8f, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x18, 0x6f, 0x2f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x3b, 0xd9, 0xf8, 0xa9, 0xc7, 0x77, 0x02, 0x57, 0xd8, 0x95, 0x9d, 0x71, 0x23, 0xd6, 0x9d, 0xce, 0x2b, 0xe8, 0xff, 0xac, 0xdb, 0x20, 0x2c, 0x64, 0xa2, 0x52, 0x2d, 0x13, 0x00, 0x82, 0x7d, 0x5f, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_949(ch_949, ch_949 + sizeof(ch_949) -1);
CDataStream stream_949(vch_949, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_949;
stream_949 >> txHist_949;

if(block.vtx[0]->GetHash() == txHist_949.GetHash() && nHeight == 1264573) {
return true;
}
unsigned char ch_950[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x6a, 0x4b, 0x13, 0x04, 0xfd, 0x6f, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5c, 0xc3, 0x0a, 0x40, 0xbd, 0x39, 0x82, 0x85, 0x8d, 0x2b, 0xa3, 0xe4, 0x74, 0x95, 0x1e, 0xbc, 0x34, 0x3c, 0x6c, 0x4f, 0x15, 0x80, 0x4c, 0x5b, 0x39, 0x45, 0x77, 0x9a, 0xf0, 0x8b, 0xe9, 0xd4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_950(ch_950, ch_950 + sizeof(ch_950) -1);
CDataStream stream_950(vch_950, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_950;
stream_950 >> txHist_950;

if(block.vtx[0]->GetHash() == txHist_950.GetHash() && nHeight == 1264490) {
return true;
}
unsigned char ch_951[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x69, 0x4b, 0x13, 0x04, 0xce, 0x6f, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x08, 0x63, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x74, 0xf6, 0xdd, 0x6d, 0x7e, 0x5a, 0x22, 0x52, 0x6d, 0x60, 0x7b, 0x3f, 0xa2, 0x36, 0x95, 0xb3, 0xcc, 0xb7, 0x69, 0x1c, 0xfb, 0x01, 0x80, 0xc9, 0xee, 0xca, 0x04, 0x6e, 0xf8, 0xf3, 0x4f, 0x02, 0x70, 0xf5, 0xf8, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_951(ch_951, ch_951 + sizeof(ch_951) -1);
CDataStream stream_951(vch_951, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_951;
stream_951 >> txHist_951;

if(block.vtx[0]->GetHash() == txHist_951.GetHash() && nHeight == 1264489) {
return true;
}
unsigned char ch_952[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x4b, 0x4b, 0x13, 0x04, 0x43, 0x65, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xef, 0x1c, 0x0e, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x1f, 0x6e, 0xd8, 0x58, 0xa6, 0x0a, 0xd5, 0x09, 0x4a, 0x8a, 0xea, 0x4d, 0xa8, 0x27, 0x16, 0xdc, 0xc5, 0xb0, 0x85, 0x97, 0x4d, 0x5d, 0xc3, 0x73, 0x51, 0x36, 0x22, 0x52, 0x6d, 0x63, 0x6c, 0xb7, 0x90, 0x6e, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_952(ch_952, ch_952 + sizeof(ch_952) -1);
CDataStream stream_952(vch_952, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_952;
stream_952 >> txHist_952;

if(block.vtx[0]->GetHash() == txHist_952.GetHash() && nHeight == 1264459) {
return true;
}
unsigned char ch_953[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x59, 0x4b, 0x13, 0x04, 0xef, 0x6a, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x30, 0x4d, 0xed, 0x19, 0x14, 0x8a, 0x22, 0x1f, 0xe6, 0xac, 0x11, 0xf0, 0xd4, 0x9e, 0x4d, 0xc3, 0x3b, 0xcf, 0x4f, 0x1a, 0xc4, 0x36, 0xf3, 0x1e, 0x36, 0x00, 0x39, 0x03, 0x94, 0x9f, 0xa1, 0x24, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xfb, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_953(ch_953, ch_953 + sizeof(ch_953) -1);
CDataStream stream_953(vch_953, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_953;
stream_953 >> txHist_953;

if(block.vtx[0]->GetHash() == txHist_953.GetHash() && nHeight == 1264473) {
return true;
}
unsigned char ch_954[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x81, 0x4b, 0x13, 0x04, 0xfd, 0x76, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x17, 0x0c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_954(ch_954, ch_954 + sizeof(ch_954) -1);
CDataStream stream_954(vch_954, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_954;
stream_954 >> txHist_954;

if(block.vtx[0]->GetHash() == txHist_954.GetHash() && nHeight == 1264513) {
return true;
}
unsigned char ch_955[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9c, 0x4b, 0x13, 0x04, 0x48, 0x84, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x68, 0x46, 0x45, 0x70, 0xe4, 0x9c, 0xcd, 0xc4, 0x81, 0xf9, 0x9a, 0xf3, 0x01, 0xeb, 0x24, 0x2b, 0x57, 0x70, 0xc8, 0x2e, 0x8d, 0xbd, 0x5e, 0x90, 0x2a, 0x71, 0x42, 0xf7, 0xcd, 0x3c, 0xf2, 0xf4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x50, 0x64, 0x2b, 0x6c, 0xea, 0x08, 0xe8, 0xe2, 0xd0, 0xaa, 0xaa, 0x22, 0x53, 0x99, 0xed, 0xa7, 0x74, 0xfc, 0xea, 0xfa, 0x6c, 0x82, 0x71, 0x32, 0xaa, 0xcb, 0x6c, 0xd2, 0xbe, 0xda, 0xea, 0x8e, 0xa8, 0xf4, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_955(ch_955, ch_955 + sizeof(ch_955) -1);
CDataStream stream_955(vch_955, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_955;
stream_955 >> txHist_955;

if(block.vtx[0]->GetHash() == txHist_955.GetHash() && nHeight == 1264540) {
return true;
}
unsigned char ch_956[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x68, 0x4b, 0x13, 0x04, 0x4a, 0x6f, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x10, 0xb3, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x0f, 0x5f, 0x8f, 0x4d, 0xe3, 0x9e, 0xad, 0xc9, 0xb9, 0xab, 0xec, 0x0e, 0x91, 0x8f, 0x9e, 0x3e, 0x55, 0xa2, 0x3e, 0xa0, 0x8e, 0x2b, 0xfa, 0xdf, 0x46, 0x73, 0x66, 0xdb, 0x4d, 0x4f, 0xcb, 0xa7, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_956(ch_956, ch_956 + sizeof(ch_956) -1);
CDataStream stream_956(vch_956, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_956;
stream_956 >> txHist_956;

if(block.vtx[0]->GetHash() == txHist_956.GetHash() && nHeight == 1264488) {
return true;
}
unsigned char ch_957[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x48, 0x4b, 0x13, 0x04, 0x86, 0x64, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x17, 0x01, 0x56, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd3, 0x95, 0xc2, 0xf7, 0x29, 0x55, 0x26, 0xb8, 0x50, 0x76, 0x4e, 0x99, 0xc2, 0x2b, 0x3f, 0xd6, 0xde, 0x18, 0x23, 0x1c, 0xa8, 0x12, 0x50, 0x80, 0x16, 0x6f, 0x71, 0xb1, 0x00, 0x85, 0x9a, 0x74, 0x30, 0xb9, 0x6b, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_957(ch_957, ch_957 + sizeof(ch_957) -1);
CDataStream stream_957(vch_957, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_957;
stream_957 >> txHist_957;

if(block.vtx[0]->GetHash() == txHist_957.GetHash() && nHeight == 1264456) {
return true;
}
unsigned char ch_958[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x7e, 0x4b, 0x13, 0x04, 0xbb, 0x76, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x36, 0x31, 0x32, 0x63, 0x39, 0x37, 0x64, 0x37, 0x32, 0x36, 0x30, 0x61, 0x62, 0x61, 0x33, 0x64, 0x32, 0x38, 0x62, 0x30, 0x30, 0x62, 0x35, 0x62, 0x61, 0x34, 0x66, 0x30, 0x62, 0x61, 0x35, 0x36, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x07, 0x20, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x16, 0x86, 0x7e, 0xed, 0x74, 0x33, 0xb6, 0xed, 0xcf, 0x38, 0xa2, 0xa1, 0xea, 0x8c, 0x14, 0xac, 0xb4, 0xd4, 0x95, 0x10, 0xe1, 0xb3, 0x04, 0xe9, 0x55, 0x08, 0x4c, 0x7f, 0x38, 0x47, 0xb3, 0x88, 0xc0, 0x20, 0x00, 0x15, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xa0, 0x7d, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0x20, 0x74, 0x85, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_958(ch_958, ch_958 + sizeof(ch_958) -1);
CDataStream stream_958(vch_958, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_958;
stream_958 >> txHist_958;

if(block.vtx[0]->GetHash() == txHist_958.GetHash() && nHeight == 1264510) {
return true;
}
unsigned char ch_959[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xaf, 0x4b, 0x13, 0x04, 0xef, 0x89, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x1d, 0xf4, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_959(ch_959, ch_959 + sizeof(ch_959) -1);
CDataStream stream_959(vch_959, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_959;
stream_959 >> txHist_959;

if(block.vtx[0]->GetHash() == txHist_959.GetHash() && nHeight == 1264559) {
return true;
}
unsigned char ch_960[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x98, 0x4b, 0x13, 0x04, 0x60, 0x7f, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x14, 0xb6, 0x0d, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x17, 0x88, 0xa6, 0x71, 0x0c, 0xb0, 0x0d, 0x9d, 0x83, 0xe1, 0xcf, 0x35, 0x8d, 0x24, 0xa2, 0x56, 0x14, 0xcf, 0xa5, 0xbf, 0xf1, 0xb8, 0x01, 0x20, 0x29, 0xf4, 0x45, 0x16, 0x76, 0x47, 0xe2, 0x50, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_960(ch_960, ch_960 + sizeof(ch_960) -1);
CDataStream stream_960(vch_960, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_960;
stream_960 >> txHist_960;

if(block.vtx[0]->GetHash() == txHist_960.GetHash() && nHeight == 1264536) {
return true;
}
unsigned char ch_961[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x67, 0x4b, 0x13, 0x04, 0x26, 0x6f, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf8, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_961(ch_961, ch_961 + sizeof(ch_961) -1);
CDataStream stream_961(vch_961, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_961;
stream_961 >> txHist_961;

if(block.vtx[0]->GetHash() == txHist_961.GetHash() && nHeight == 1264487) {
return true;
}
unsigned char ch_962[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x46, 0x4b, 0x13, 0x04, 0xab, 0x63, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x2c, 0xb3, 0x87, 0x06, 0x33, 0x02, 0x6c, 0x4c, 0x5a, 0x1f, 0x01, 0x35, 0x5f, 0xae, 0xd1, 0x91, 0xe4, 0xf5, 0x1a, 0x31, 0xef, 0xbf, 0x3d, 0x62, 0xff, 0x09, 0xbb, 0x76, 0x35, 0x25, 0x06, 0xa8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x03, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_962(ch_962, ch_962 + sizeof(ch_962) -1);
CDataStream stream_962(vch_962, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_962;
stream_962 >> txHist_962;

if(block.vtx[0]->GetHash() == txHist_962.GetHash() && nHeight == 1264454) {
return true;
}
unsigned char ch_963[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x7b, 0x4b, 0x13, 0x04, 0xcb, 0x74, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x13, 0x2a, 0x08, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_963(ch_963, ch_963 + sizeof(ch_963) -1);
CDataStream stream_963(vch_963, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_963;
stream_963 >> txHist_963;

if(block.vtx[0]->GetHash() == txHist_963.GetHash() && nHeight == 1264507) {
return true;
}
unsigned char ch_964[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xab, 0x4b, 0x13, 0x04, 0x7b, 0x88, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x13, 0x6a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_964(ch_964, ch_964 + sizeof(ch_964) -1);
CDataStream stream_964(vch_964, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_964;
stream_964 >> txHist_964;

if(block.vtx[0]->GetHash() == txHist_964.GetHash() && nHeight == 1264555) {
return true;
}
unsigned char ch_965[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x94, 0x4b, 0x13, 0x04, 0x4c, 0x7e, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x45, 0x52, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x07, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_965(ch_965, ch_965 + sizeof(ch_965) -1);
CDataStream stream_965(vch_965, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_965;
stream_965 >> txHist_965;

if(block.vtx[0]->GetHash() == txHist_965.GetHash() && nHeight == 1264532) {
return true;
}
unsigned char ch_966[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x66, 0x4b, 0x13, 0x04, 0xfb, 0x6e, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x12, 0xd2, 0xc6, 0xcf, 0x47, 0x5a, 0x7c, 0xc4, 0xf8, 0xc1, 0x72, 0x49, 0x96, 0x55, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x05, 0xa4, 0x84, 0xc0, 0xc0, 0xac, 0x88, 0x12, 0xd5, 0x21, 0xec, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfa, 0x45, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_966(ch_966, ch_966 + sizeof(ch_966) -1);
CDataStream stream_966(vch_966, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_966;
stream_966 >> txHist_966;

if(block.vtx[0]->GetHash() == txHist_966.GetHash() && nHeight == 1264486) {
return true;
}
unsigned char ch_967[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x78, 0x4b, 0x13, 0x04, 0xdd, 0x73, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x08, 0x76, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_967(ch_967, ch_967 + sizeof(ch_967) -1);
CDataStream stream_967(vch_967, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_967;
stream_967 >> txHist_967;

if(block.vtx[0]->GetHash() == txHist_967.GetHash() && nHeight == 1264504) {
return true;
}
unsigned char ch_968[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa8, 0x4b, 0x13, 0x04, 0x5d, 0x88, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x31, 0x31, 0xcc, 0xe4, 0x39, 0xea, 0x8e, 0x80, 0x73, 0xc0, 0xf5, 0x38, 0x54, 0x3f, 0xa1, 0xf8, 0x2a, 0x62, 0x92, 0xa3, 0x18, 0x95, 0xec, 0x4e, 0xf5, 0x2d, 0xe2, 0x6a, 0x82, 0xb6, 0xd9, 0x23, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x7f, 0x54, 0x29, 0xc8, 0x09, 0xaa, 0xa4, 0x81, 0x52, 0xb7, 0xfd, 0xfd, 0x08, 0xcd, 0xda, 0xb7, 0x2b, 0x61, 0xc9, 0xb3, 0xd9, 0xf2, 0x11, 0xbd, 0xa8, 0xeb, 0x92, 0x3a, 0x32, 0xfd, 0x22, 0x13, 0xd8, 0xad, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_968(ch_968, ch_968 + sizeof(ch_968) -1);
CDataStream stream_968(vch_968, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_968;
stream_968 >> txHist_968;

if(block.vtx[0]->GetHash() == txHist_968.GetHash() && nHeight == 1264552) {
return true;
}
unsigned char ch_969[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x65, 0x4b, 0x13, 0x04, 0xb6, 0x6e, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x08, 0x76, 0xa7, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_969(ch_969, ch_969 + sizeof(ch_969) -1);
CDataStream stream_969(vch_969, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_969;
stream_969 >> txHist_969;

if(block.vtx[0]->GetHash() == txHist_969.GetHash() && nHeight == 1264485) {
return true;
}
unsigned char ch_970[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x43, 0x4b, 0x13, 0x04, 0xa1, 0x62, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x17, 0x01, 0x97, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd1, 0xae, 0x60, 0xeb, 0x09, 0xd0, 0x6d, 0xf4, 0x50, 0xbb, 0xba, 0xc0, 0x9e, 0x31, 0x75, 0x4c, 0x16, 0xad, 0xbd, 0x78, 0xc3, 0x4f, 0xd0, 0x6e, 0x01, 0xfe, 0xc8, 0x4c, 0x1f, 0x6c, 0x2d, 0xa9, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_970(ch_970, ch_970 + sizeof(ch_970) -1);
CDataStream stream_970(vch_970, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_970;
stream_970 >> txHist_970;

if(block.vtx[0]->GetHash() == txHist_970.GetHash() && nHeight == 1264451) {
return true;
}
unsigned char ch_971[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x4d, 0x4b, 0x13, 0x04, 0xe7, 0x66, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x18, 0x6f, 0x5e, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x6b, 0x3a, 0xf1, 0x4b, 0x41, 0xcf, 0x8e, 0x27, 0x4b, 0xcd, 0x33, 0xf7, 0x19, 0xfe, 0x8b, 0x1c, 0xc8, 0xab, 0x4c, 0xe3, 0x40, 0x18, 0x25, 0x74, 0x88, 0x26, 0xe8, 0xac, 0x81, 0xe4, 0x3a, 0x73, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_971(ch_971, ch_971 + sizeof(ch_971) -1);
CDataStream stream_971(vch_971, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_971;
stream_971 >> txHist_971;

if(block.vtx[0]->GetHash() == txHist_971.GetHash() && nHeight == 1264461) {
return true;
}
unsigned char ch_972[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x8d, 0x4b, 0x13, 0x04, 0x61, 0x7b, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd1, 0x71, 0x3f, 0x1c, 0xf6, 0xe2, 0xed, 0xa9, 0x21, 0xaa, 0x24, 0x6a, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x6d, 0x75, 0x74, 0x61, 0x72, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfa, 0x39, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x91, 0xb3, 0xb5, 0x99, 0xbd, 0xe9, 0xe1, 0x42, 0x08, 0x7c, 0xe2, 0x05, 0xe2, 0x27, 0x5c, 0x7d, 0x10, 0xd6, 0x94, 0x6b, 0xdc, 0x39, 0x1f, 0xe4, 0x16, 0x8e, 0xed, 0x8a, 0x0f, 0x1e, 0x49, 0x57, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_972(ch_972, ch_972 + sizeof(ch_972) -1);
CDataStream stream_972(vch_972, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_972;
stream_972 >> txHist_972;

if(block.vtx[0]->GetHash() == txHist_972.GetHash() && nHeight == 1264525) {
return true;
}
unsigned char ch_973[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x89, 0x4b, 0x13, 0x04, 0x5e, 0x7a, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xef, 0xb2, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_973(ch_973, ch_973 + sizeof(ch_973) -1);
CDataStream stream_973(vch_973, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_973;
stream_973 >> txHist_973;

if(block.vtx[0]->GetHash() == txHist_973.GetHash() && nHeight == 1264521) {
return true;
}
unsigned char ch_974[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x42, 0x4b, 0x13, 0x04, 0xca, 0x61, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x5b, 0x36, 0x60, 0xb7, 0x78, 0xf9, 0xc0, 0x5d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfa, 0x39, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x7c, 0x4b, 0x9e, 0xc0, 0xfa, 0x6f, 0xfe, 0xed, 0xac, 0x95, 0x0c, 0x54, 0x58, 0x9d, 0x1c, 0x0a, 0xda, 0x9a, 0x4a, 0xb1, 0xe8, 0x1c, 0x6c, 0x5f, 0xc5, 0xbf, 0x5a, 0x5e, 0x41, 0x0e, 0x36, 0x67, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_974(ch_974, ch_974 + sizeof(ch_974) -1);
CDataStream stream_974(vch_974, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_974;
stream_974 >> txHist_974;

if(block.vtx[0]->GetHash() == txHist_974.GetHash() && nHeight == 1264450) {
return true;
}
unsigned char ch_975[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa1, 0x4b, 0x13, 0x04, 0x2d, 0x85, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x06, 0x2f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe8, 0x5b, 0x66, 0x77, 0x9d, 0x40, 0xbf, 0x07, 0x9a, 0xdc, 0x1f, 0x27, 0x51, 0xff, 0x27, 0x9c, 0xc6, 0x2c, 0x1c, 0x7b, 0xba, 0xdf, 0xdc, 0x82, 0x23, 0xd2, 0x12, 0xd2, 0x32, 0x2c, 0xb5, 0xe6, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_975(ch_975, ch_975 + sizeof(ch_975) -1);
CDataStream stream_975(vch_975, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_975;
stream_975 >> txHist_975;

if(block.vtx[0]->GetHash() == txHist_975.GetHash() && nHeight == 1264545) {
return true;
}
unsigned char ch_976[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x8a, 0x4b, 0x13, 0x04, 0x09, 0x7b, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x57, 0x63, 0x61, 0xb4, 0x9b, 0x3b, 0x40, 0x43, 0xb7, 0x85, 0xb8, 0x7d, 0x05, 0xc9, 0x87, 0x47, 0x77, 0xe5, 0x1b, 0xe6, 0x30, 0x03, 0x53, 0x34, 0x8f, 0xed, 0x6e, 0x36, 0x6e, 0x5f, 0x23, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xff, 0xfe, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_976(ch_976, ch_976 + sizeof(ch_976) -1);
CDataStream stream_976(vch_976, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_976;
stream_976 >> txHist_976;

if(block.vtx[0]->GetHash() == txHist_976.GetHash() && nHeight == 1264522) {
return true;
}
unsigned char ch_977[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x86, 0x4b, 0x13, 0x04, 0x70, 0x79, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xe3, 0xe8, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_977(ch_977, ch_977 + sizeof(ch_977) -1);
CDataStream stream_977(vch_977, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_977;
stream_977 >> txHist_977;

if(block.vtx[0]->GetHash() == txHist_977.GetHash() && nHeight == 1264518) {
return true;
}
unsigned char ch_978[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x41, 0x4b, 0x13, 0x04, 0x22, 0x60, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x10, 0xb3, 0x1a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_978(ch_978, ch_978 + sizeof(ch_978) -1);
CDataStream stream_978(vch_978, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_978;
stream_978 >> txHist_978;

if(block.vtx[0]->GetHash() == txHist_978.GetHash() && nHeight == 1264449) {
return true;
}
unsigned char ch_979[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x10, 0x4b, 0x13, 0x04, 0x10, 0x4f, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x4e, 0x35, 0x81, 0x82, 0xbe, 0xad, 0x81, 0x11, 0x33, 0x80, 0x70, 0x50, 0x06, 0x2a, 0xa2, 0x75, 0xfa, 0x5e, 0x4f, 0xb4, 0xb8, 0xe1, 0x42, 0x8c, 0xe7, 0xab, 0x47, 0xca, 0xdd, 0xb7, 0xf5, 0xe8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x82, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_979(ch_979, ch_979 + sizeof(ch_979) -1);
CDataStream stream_979(vch_979, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_979;
stream_979 >> txHist_979;

if(block.vtx[0]->GetHash() == txHist_979.GetHash() && nHeight == 1264400) {
return true;
}
unsigned char ch_980[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x9d, 0x4b, 0x13, 0x04, 0x43, 0x84, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x06, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_980(ch_980, ch_980 + sizeof(ch_980) -1);
CDataStream stream_980(vch_980, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_980;
stream_980 >> txHist_980;

if(block.vtx[0]->GetHash() == txHist_980.GetHash() && nHeight == 1264541) {
return true;
}
unsigned char ch_981[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x0f, 0x4b, 0x13, 0x04, 0x0f, 0x4f, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x4e, 0x35, 0x81, 0x82, 0xbe, 0xad, 0x81, 0x11, 0x33, 0x80, 0x70, 0x50, 0x06, 0x2a, 0xa2, 0x75, 0xfa, 0x5e, 0x4f, 0xb4, 0xb8, 0xe1, 0x42, 0x8c, 0xe7, 0xab, 0x47, 0xca, 0xdd, 0xb7, 0xf5, 0xe8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x16, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_981(ch_981, ch_981 + sizeof(ch_981) -1);
CDataStream stream_981(vch_981, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_981;
stream_981 >> txHist_981;

if(block.vtx[0]->GetHash() == txHist_981.GetHash() && nHeight == 1264399) {
return true;
}
unsigned char ch_982[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x99, 0x4b, 0x13, 0x04, 0x61, 0x7f, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x02, 0xc4, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_982(ch_982, ch_982 + sizeof(ch_982) -1);
CDataStream stream_982(vch_982, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_982;
stream_982 >> txHist_982;

if(block.vtx[0]->GetHash() == txHist_982.GetHash() && nHeight == 1264537) {
return true;
}
unsigned char ch_983[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x0e, 0x4b, 0x13, 0x04, 0x0a, 0x4f, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x4e, 0x35, 0x81, 0x82, 0xbe, 0xad, 0x81, 0x11, 0x33, 0x80, 0x70, 0x50, 0x06, 0x2a, 0xa2, 0x75, 0xfa, 0x5e, 0x4f, 0xb4, 0xb8, 0xe1, 0x42, 0x8c, 0xe7, 0xab, 0x47, 0xca, 0xdd, 0xb7, 0xf5, 0xe8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0xff, 0xff, 0x1c, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_983(ch_983, ch_983 + sizeof(ch_983) -1);
CDataStream stream_983(vch_983, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_983;
stream_983 >> txHist_983;

if(block.vtx[0]->GetHash() == txHist_983.GetHash() && nHeight == 1264398) {
return true;
}
unsigned char ch_984[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x95, 0x4b, 0x13, 0x04, 0x73, 0x7e, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x22, 0x78, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_984(ch_984, ch_984 + sizeof(ch_984) -1);
CDataStream stream_984(vch_984, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_984;
stream_984 >> txHist_984;

if(block.vtx[0]->GetHash() == txHist_984.GetHash() && nHeight == 1264533) {
return true;
}
unsigned char ch_985[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x0d, 0x4b, 0x13, 0x04, 0xc6, 0x4e, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x02, 0x42, 0x1f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xef, 0x08, 0xfc, 0x1d, 0xd6, 0x9b, 0xce, 0x4a, 0xd2, 0xe3, 0xe0, 0x30, 0xb0, 0x03, 0x45, 0x8e, 0xe5, 0x6c, 0x5f, 0x42, 0xcf, 0xa8, 0x7e, 0x2b, 0x8a, 0x0f, 0x6f, 0xb6, 0x9b, 0xcf, 0xcb, 0xe0, 0x90, 0x32, 0x6a, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_985(ch_985, ch_985 + sizeof(ch_985) -1);
CDataStream stream_985(vch_985, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_985;
stream_985 >> txHist_985;

if(block.vtx[0]->GetHash() == txHist_985.GetHash() && nHeight == 1264397) {
return true;
}
unsigned char ch_986[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x0a, 0x4b, 0x13, 0x04, 0x5a, 0x4d, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x02, 0x41, 0x07, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_986(ch_986, ch_986 + sizeof(ch_986) -1);
CDataStream stream_986(vch_986, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_986;
stream_986 >> txHist_986;

if(block.vtx[0]->GetHash() == txHist_986.GetHash() && nHeight == 1264394) {
return true;
}
unsigned char ch_987[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x09, 0x4b, 0x13, 0x04, 0x2f, 0x4d, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xef, 0xc3, 0x23, 0xff, 0xf8, 0x7f, 0xe5, 0x94, 0xb5, 0xc8, 0x74, 0x18, 0xdf, 0xb0, 0x4c, 0x93, 0x73, 0xdf, 0xe6, 0xd9, 0xcb, 0xdd, 0xdc, 0x1c, 0xdc, 0x1c, 0x2f, 0x58, 0xb2, 0x2b, 0xbc, 0xc8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xd2, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_987(ch_987, ch_987 + sizeof(ch_987) -1);
CDataStream stream_987(vch_987, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_987;
stream_987 >> txHist_987;

if(block.vtx[0]->GetHash() == txHist_987.GetHash() && nHeight == 1264393) {
return true;
}
unsigned char ch_988[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x3a, 0x4b, 0x13, 0x04, 0xa7, 0x5e, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x08, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_988(ch_988, ch_988 + sizeof(ch_988) -1);
CDataStream stream_988(vch_988, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_988;
stream_988 >> txHist_988;

if(block.vtx[0]->GetHash() == txHist_988.GetHash() && nHeight == 1264442) {
return true;
}
unsigned char ch_989[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x39, 0x4b, 0x13, 0x04, 0x88, 0x5e, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x45, 0x52, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x07, 0x89, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x6f, 0x3e, 0xcd, 0xff, 0x02, 0x7c, 0xc0, 0xa2, 0xed, 0xb2, 0x89, 0xc3, 0x2c, 0x70, 0x1d, 0x40, 0xa8, 0xd2, 0x45, 0x0b, 0xc7, 0xe8, 0xac, 0x50, 0xed, 0x65, 0x77, 0x53, 0x63, 0x17, 0xbd, 0x0d, 0x28, 0x94, 0xf4, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x2c, 0x5e, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xdc, 0xd6, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_989(ch_989, ch_989 + sizeof(ch_989) -1);
CDataStream stream_989(vch_989, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_989;
stream_989 >> txHist_989;

if(block.vtx[0]->GetHash() == txHist_989.GetHash() && nHeight == 1264441) {
return true;
}
unsigned char ch_990[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x38, 0x4b, 0x13, 0x04, 0xd2, 0x5d, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x08, 0x2e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_990(ch_990, ch_990 + sizeof(ch_990) -1);
CDataStream stream_990(vch_990, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_990;
stream_990 >> txHist_990;

if(block.vtx[0]->GetHash() == txHist_990.GetHash() && nHeight == 1264440) {
return true;
}
unsigned char ch_991[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x37, 0x4b, 0x13, 0x04, 0x73, 0x5d, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x18, 0x6f, 0x19, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_991(ch_991, ch_991 + sizeof(ch_991) -1);
CDataStream stream_991(vch_991, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_991;
stream_991 >> txHist_991;

if(block.vtx[0]->GetHash() == txHist_991.GetHash() && nHeight == 1264439) {
return true;
}
unsigned char ch_992[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x36, 0x4b, 0x13, 0x04, 0x3e, 0x5d, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf9, 0x5d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xdc, 0x05, 0xf7, 0x6d, 0x27, 0x9d, 0x43, 0xb4, 0x1c, 0x3d, 0x55, 0x3c, 0x39, 0x8d, 0x7e, 0x20, 0x65, 0x39, 0x0a, 0x95, 0x22, 0x72, 0xad, 0xca, 0x36, 0xdc, 0xe7, 0xe2, 0x10, 0x5a, 0x2e, 0xe6, 0x20, 0x1f, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_992(ch_992, ch_992 + sizeof(ch_992) -1);
CDataStream stream_992(vch_992, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_992;
stream_992 >> txHist_992;

if(block.vtx[0]->GetHash() == txHist_992.GetHash() && nHeight == 1264438) {
return true;
}
unsigned char ch_993[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x34, 0x4b, 0x13, 0x04, 0x48, 0x5c, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x21, 0x6a, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_993(ch_993, ch_993 + sizeof(ch_993) -1);
CDataStream stream_993(vch_993, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_993;
stream_993 >> txHist_993;

if(block.vtx[0]->GetHash() == txHist_993.GetHash() && nHeight == 1264436) {
return true;
}
unsigned char ch_994[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x33, 0x4b, 0x13, 0x04, 0x1b, 0x5c, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa0, 0xdd, 0x24, 0x3c, 0xe9, 0xbb, 0xaa, 0x68, 0x42, 0x4b, 0xa2, 0xc6, 0x62, 0x20, 0xa0, 0x3e, 0x4e, 0x75, 0xe3, 0xf9, 0xe1, 0x88, 0x42, 0x79, 0xa1, 0xbf, 0xec, 0xfc, 0x3a, 0x12, 0x10, 0x77, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xef, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x58, 0xcf, 0xee, 0x04, 0xd6, 0x78, 0x73, 0xd3, 0x5f, 0x20, 0x28, 0x8d, 0xce, 0x04, 0xc9, 0x2d, 0x76, 0xb5, 0x8d, 0x95, 0x8d, 0x8f, 0x22, 0xa3, 0x40, 0x14, 0x10, 0x06, 0xe5, 0x68, 0xd2, 0x03, 0x98, 0xe6, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_994(ch_994, ch_994 + sizeof(ch_994) -1);
CDataStream stream_994(vch_994, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_994;
stream_994 >> txHist_994;

if(block.vtx[0]->GetHash() == txHist_994.GetHash() && nHeight == 1264435) {
return true;
}
unsigned char ch_995[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x32, 0x4b, 0x13, 0x04, 0x1f, 0x5b, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf9, 0x6d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x62, 0xaf, 0xa8, 0x62, 0x0a, 0x87, 0x98, 0x62, 0x63, 0xda, 0xb2, 0x76, 0x3a, 0x7e, 0xc7, 0x85, 0xbd, 0x39, 0x13, 0x23, 0x76, 0xec, 0x5b, 0xbe, 0xdb, 0xdf, 0xba, 0x0d, 0xaf, 0x74, 0x0f, 0xa5, 0xf0, 0x5e, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_995(ch_995, ch_995 + sizeof(ch_995) -1);
CDataStream stream_995(vch_995, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_995;
stream_995 >> txHist_995;

if(block.vtx[0]->GetHash() == txHist_995.GetHash() && nHeight == 1264434) {
return true;
}
unsigned char ch_996[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x30, 0x4b, 0x13, 0x04, 0x1c, 0x59, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x19, 0xd0, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_996(ch_996, ch_996 + sizeof(ch_996) -1);
CDataStream stream_996(vch_996, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_996;
stream_996 >> txHist_996;

if(block.vtx[0]->GetHash() == txHist_996.GetHash() && nHeight == 1264432) {
return true;
}
unsigned char ch_997[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x2f, 0x4b, 0x13, 0x04, 0x15, 0x59, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_997(ch_997, ch_997 + sizeof(ch_997) -1);
CDataStream stream_997(vch_997, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_997;
stream_997 >> txHist_997;

if(block.vtx[0]->GetHash() == txHist_997.GetHash() && nHeight == 1264431) {
return true;
}
unsigned char ch_998[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x2e, 0x4b, 0x13, 0x04, 0xfa, 0x58, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x02, 0x86, 0x13, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xef, 0xc7, 0x71, 0x43, 0x62, 0x90, 0x38, 0xf1, 0x1e, 0xc8, 0x0c, 0x2e, 0xc6, 0x0c, 0xae, 0xd6, 0xce, 0x48, 0x94, 0x4e, 0x43, 0x4c, 0x2a, 0x42, 0x47, 0xef, 0xdc, 0x7b, 0x24, 0x27, 0x5d, 0x87, 0xe8, 0x1f, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_998(ch_998, ch_998 + sizeof(ch_998) -1);
CDataStream stream_998(vch_998, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_998;
stream_998 >> txHist_998;

if(block.vtx[0]->GetHash() == txHist_998.GetHash() && nHeight == 1264430) {
return true;
}
unsigned char ch_999[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x64, 0x4b, 0x13, 0x04, 0xd5, 0x6d, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd1, 0xdd, 0x8a, 0x19, 0xc2, 0x86, 0xc3, 0x58, 0x79, 0x89, 0x87, 0xba, 0x00, 0xf5, 0x30, 0x79, 0xa5, 0x4c, 0x2a, 0xc7, 0xd7, 0x19, 0xe5, 0xa0, 0x94, 0x7b, 0xd8, 0x39, 0xd3, 0x13, 0x42, 0x70, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x08, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_999(ch_999, ch_999 + sizeof(ch_999) -1);
CDataStream stream_999(vch_999, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_999;
stream_999 >> txHist_999;

if(block.vtx[0]->GetHash() == txHist_999.GetHash() && nHeight == 1264484) {
return true;
}
unsigned char ch_1000[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x63, 0x4b, 0x13, 0x04, 0xc1, 0x6d, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf8, 0x2a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa6, 0x38, 0xda, 0x66, 0xbd, 0x97, 0x2b, 0xe1, 0x06, 0x80, 0x08, 0x1e, 0x8e, 0xda, 0xed, 0xaf, 0xec, 0x8e, 0xd1, 0x69, 0x2f, 0xcd, 0xe7, 0x13, 0xa6, 0x26, 0x1b, 0x21, 0xf8, 0x83, 0xb8, 0x61, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1000(ch_1000, ch_1000 + sizeof(ch_1000) -1);
CDataStream stream_1000(vch_1000, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1000;
stream_1000 >> txHist_1000;

if(block.vtx[0]->GetHash() == txHist_1000.GetHash() && nHeight == 1264483) {
return true;
}
unsigned char ch_1001[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x91, 0x4b, 0x13, 0x04, 0xbd, 0x7d, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x14, 0x8e, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1001(ch_1001, ch_1001 + sizeof(ch_1001) -1);
CDataStream stream_1001(vch_1001, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1001;
stream_1001 >> txHist_1001;

if(block.vtx[0]->GetHash() == txHist_1001.GetHash() && nHeight == 1264529) {
return true;
}
unsigned char ch_1002[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x62, 0x4b, 0x13, 0x04, 0x85, 0x6d, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xef, 0x04, 0x07, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x6e, 0x40, 0x4d, 0x65, 0x7e, 0x61, 0x44, 0xf1, 0x09, 0x48, 0x5d, 0x40, 0xaa, 0x30, 0xb3, 0x5a, 0xe1, 0x3a, 0xb2, 0xb6, 0x46, 0xe5, 0xef, 0x5d, 0x78, 0x3d, 0xd4, 0xb7, 0x99, 0xa5, 0x84, 0x5b, 0xb8, 0x78, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1002(ch_1002, ch_1002 + sizeof(ch_1002) -1);
CDataStream stream_1002(vch_1002, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1002;
stream_1002 >> txHist_1002;

if(block.vtx[0]->GetHash() == txHist_1002.GetHash() && nHeight == 1264482) {
return true;
}
unsigned char ch_1003[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x8e, 0x4b, 0x13, 0x04, 0x80, 0x7b, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x21, 0x0d, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x10, 0x25, 0x13, 0xac, 0x0c, 0x03, 0x7f, 0x9e, 0x2d, 0x5b, 0xd5, 0x47, 0xc7, 0x51, 0x43, 0x90, 0x7b, 0xb6, 0xbf, 0x0a, 0xf6, 0x55, 0x80, 0xff, 0xcb, 0xc4, 0x73, 0x69, 0x41, 0xd3, 0xe4, 0x4c, 0x20, 0xbd, 0x68, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1003(ch_1003, ch_1003 + sizeof(ch_1003) -1);
CDataStream stream_1003(vch_1003, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1003;
stream_1003 >> txHist_1003;

if(block.vtx[0]->GetHash() == txHist_1003.GetHash() && nHeight == 1264526) {
return true;
}
unsigned char ch_1004[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x61, 0x4b, 0x13, 0x04, 0x48, 0x6d, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x20, 0x0e, 0x0f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x75, 0x5a, 0x62, 0xff, 0xff, 0xdb, 0xf4, 0x55, 0x74, 0x29, 0xa5, 0x87, 0x88, 0xc2, 0x78, 0xf2, 0x2a, 0xde, 0xce, 0xbf, 0x13, 0x8d, 0x33, 0xc5, 0xdc, 0x9f, 0xcc, 0xd2, 0x25, 0xe1, 0xfe, 0x5d, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1004(ch_1004, ch_1004 + sizeof(ch_1004) -1);
CDataStream stream_1004(vch_1004, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1004;
stream_1004 >> txHist_1004;

if(block.vtx[0]->GetHash() == txHist_1004.GetHash() && nHeight == 1264481) {
return true;
}
unsigned char ch_1005[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x82, 0x4b, 0x13, 0x04, 0x85, 0x77, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x04, 0x67, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x66, 0x91, 0xab, 0x4d, 0x2c, 0x62, 0xe8, 0x1b, 0x25, 0x71, 0x92, 0x61, 0xf5, 0x3a, 0x33, 0x11, 0xb9, 0xdd, 0xa4, 0x39, 0x85, 0x2c, 0x3c, 0x48, 0xfa, 0xdc, 0x81, 0x53, 0xa0, 0xc2, 0xeb, 0x98, 0xe0, 0x18, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1005(ch_1005, ch_1005 + sizeof(ch_1005) -1);
CDataStream stream_1005(vch_1005, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1005;
stream_1005 >> txHist_1005;

if(block.vtx[0]->GetHash() == txHist_1005.GetHash() && nHeight == 1264514) {
return true;
}
unsigned char ch_1006[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x60, 0x4b, 0x13, 0x04, 0xd0, 0x6c, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x02, 0x91, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1006(ch_1006, ch_1006 + sizeof(ch_1006) -1);
CDataStream stream_1006(vch_1006, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1006;
stream_1006 >> txHist_1006;

if(block.vtx[0]->GetHash() == txHist_1006.GetHash() && nHeight == 1264480) {
return true;
}
unsigned char ch_1007[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x7f, 0x4b, 0x13, 0x04, 0xc8, 0x76, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x04, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1007(ch_1007, ch_1007 + sizeof(ch_1007) -1);
CDataStream stream_1007(vch_1007, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1007;
stream_1007 >> txHist_1007;

if(block.vtx[0]->GetHash() == txHist_1007.GetHash() && nHeight == 1264511) {
return true;
}
unsigned char ch_1008[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x85, 0x4b, 0x13, 0x04, 0x56, 0x79, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x1a, 0xa9, 0xdb, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd1, 0x8c, 0xe9, 0xf1, 0x30, 0xa7, 0x68, 0x9b, 0xc3, 0x08, 0xe3, 0x40, 0xe8, 0x2d, 0x8d, 0x70, 0xcd, 0x01, 0x2b, 0xa9, 0xb6, 0x2c, 0x02, 0x30, 0x2f, 0xcd, 0xfa, 0xa6, 0x91, 0x84, 0x4e, 0xd1, 0x58, 0x6f, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1008(ch_1008, ch_1008 + sizeof(ch_1008) -1);
CDataStream stream_1008(vch_1008, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1008;
stream_1008 >> txHist_1008;

if(block.vtx[0]->GetHash() == txHist_1008.GetHash() && nHeight == 1264517) {
return true;
}
unsigned char ch_1009[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x3f, 0x4b, 0x13, 0x04, 0xee, 0x5f, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x02, 0x9b, 0x07, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1009(ch_1009, ch_1009 + sizeof(ch_1009) -1);
CDataStream stream_1009(vch_1009, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1009;
stream_1009 >> txHist_1009;

if(block.vtx[0]->GetHash() == txHist_1009.GetHash() && nHeight == 1264447) {
return true;
}
unsigned char ch_1010[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5b, 0x4b, 0x13, 0x04, 0x62, 0x6b, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x45, 0x1a, 0xec, 0x30, 0xc3, 0x6e, 0xab, 0x65, 0xde, 0xe9, 0x22, 0xe4, 0xf9, 0x93, 0x97, 0xa6, 0xd8, 0xd9, 0xb5, 0xd4, 0xeb, 0xfc, 0xe9, 0xdf, 0xbe, 0x7d, 0xdf, 0x64, 0x8b, 0x03, 0x34, 0x54, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xef, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xc7, 0x1b, 0x34, 0xf8, 0x3d, 0x2b, 0x50, 0x82, 0x4e, 0x72, 0xac, 0xf6, 0x51, 0xe7, 0x5e, 0x01, 0x4d, 0x6f, 0x62, 0xe8, 0xe2, 0x57, 0x3b, 0x0d, 0x89, 0x60, 0xf2, 0x95, 0x1c, 0x03, 0xde, 0xca, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1010(ch_1010, ch_1010 + sizeof(ch_1010) -1);
CDataStream stream_1010(vch_1010, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1010;
stream_1010 >> txHist_1010;

if(block.vtx[0]->GetHash() == txHist_1010.GetHash() && nHeight == 1264475) {
return true;
}
unsigned char ch_1011[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x83, 0x4b, 0x13, 0x04, 0x25, 0x78, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe7, 0x1e, 0x0d, 0x9b, 0x2e, 0xd8, 0xc2, 0x3c, 0xd4, 0xcf, 0xce, 0x7f, 0x30, 0x5c, 0x07, 0xb8, 0x40, 0x90, 0x16, 0x35, 0xbc, 0xfb, 0x04, 0x68, 0xd8, 0xa5, 0xd8, 0xbe, 0x89, 0x78, 0xa2, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xf9, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1011(ch_1011, ch_1011 + sizeof(ch_1011) -1);
CDataStream stream_1011(vch_1011, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1011;
stream_1011 >> txHist_1011;

if(block.vtx[0]->GetHash() == txHist_1011.GetHash() && nHeight == 1264515) {
return true;
}
unsigned char ch_1012[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x7c, 0x4b, 0x13, 0x04, 0xe0, 0x74, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x1a, 0xa9, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1012(ch_1012, ch_1012 + sizeof(ch_1012) -1);
CDataStream stream_1012(vch_1012, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1012;
stream_1012 >> txHist_1012;

if(block.vtx[0]->GetHash() == txHist_1012.GetHash() && nHeight == 1264508) {
return true;
}
unsigned char ch_1013[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3e, 0x4b, 0x13, 0x04, 0x99, 0x5f, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x34, 0xe2, 0x4d, 0x79, 0x5b, 0x15, 0x5b, 0xac, 0x0b, 0x8b, 0x39, 0x4b, 0x0e, 0x32, 0xfc, 0x36, 0x8e, 0x22, 0x7c, 0x28, 0xfd, 0x90, 0xaa, 0xd7, 0xba, 0x30, 0x53, 0x75, 0x11, 0xad, 0xb8, 0xfd, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xef, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x72, 0x6a, 0x3e, 0xca, 0x28, 0xcc, 0xcd, 0x2e, 0x84, 0xb2, 0xcf, 0x51, 0x6e, 0xe0, 0x75, 0xdf, 0x77, 0xa2, 0xd7, 0x11, 0x3a, 0x9d, 0x37, 0x9d, 0xcf, 0x44, 0x04, 0xfe, 0x2f, 0x85, 0xd4, 0xf6, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1013(ch_1013, ch_1013 + sizeof(ch_1013) -1);
CDataStream stream_1013(vch_1013, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1013;
stream_1013 >> txHist_1013;

if(block.vtx[0]->GetHash() == txHist_1013.GetHash() && nHeight == 1264446) {
return true;
}
unsigned char ch_1014[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x58, 0x4b, 0x13, 0x04, 0xb0, 0x6a, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x2f, 0x47, 0xf3, 0xe3, 0xa2, 0x00, 0x45, 0x52, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfa, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1014(ch_1014, ch_1014 + sizeof(ch_1014) -1);
CDataStream stream_1014(vch_1014, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1014;
stream_1014 >> txHist_1014;

if(block.vtx[0]->GetHash() == txHist_1014.GetHash() && nHeight == 1264472) {
return true;
}
unsigned char ch_1015[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x55, 0x4b, 0x13, 0x04, 0x1a, 0x6a, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe4, 0x98, 0x44, 0xbd, 0x53, 0xa2, 0x7f, 0x7a, 0x7a, 0x0e, 0xab, 0x79, 0xab, 0xe9, 0x28, 0x83, 0xa0, 0x08, 0xfb, 0xc6, 0x62, 0x93, 0xd3, 0xb8, 0xab, 0x54, 0xb8, 0xe9, 0x13, 0xf3, 0x75, 0xa9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xff, 0xfe, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1015(ch_1015, ch_1015 + sizeof(ch_1015) -1);
CDataStream stream_1015(vch_1015, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1015;
stream_1015 >> txHist_1015;

if(block.vtx[0]->GetHash() == txHist_1015.GetHash() && nHeight == 1264469) {
return true;
}
unsigned char ch_1016[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x7d, 0x4b, 0x13, 0x04, 0x15, 0x75, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x20, 0x75, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1016(ch_1016, ch_1016 + sizeof(ch_1016) -1);
CDataStream stream_1016(vch_1016, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1016;
stream_1016 >> txHist_1016;

if(block.vtx[0]->GetHash() == txHist_1016.GetHash() && nHeight == 1264509) {
return true;
}
unsigned char ch_1017[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x76, 0x4b, 0x13, 0x04, 0x2d, 0x73, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x44, 0x76, 0x00, 0x66, 0x74, 0x8f, 0xd1, 0x89, 0x86, 0x01, 0xfd, 0x5b, 0xed, 0xdc, 0x98, 0x56, 0xe7, 0x61, 0xa4, 0xa8, 0xfb, 0x02, 0xdf, 0xe3, 0xe6, 0x74, 0x85, 0xbc, 0x96, 0xb6, 0x37, 0x34, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xeb, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1017(ch_1017, ch_1017 + sizeof(ch_1017) -1);
CDataStream stream_1017(vch_1017, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1017;
stream_1017 >> txHist_1017;

if(block.vtx[0]->GetHash() == txHist_1017.GetHash() && nHeight == 1264502) {
return true;
}
unsigned char ch_1018[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2a, 0x4b, 0x13, 0x04, 0xc3, 0x57, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xce, 0xa9, 0x4e, 0x85, 0x2f, 0x57, 0x5b, 0x88, 0x6e, 0xf0, 0xb5, 0xf1, 0x38, 0xdc, 0xf2, 0xda, 0xe1, 0x9e, 0x4b, 0xfa, 0x55, 0x0a, 0x1d, 0xb2, 0x9f, 0xe7, 0xfb, 0x8d, 0x23, 0x65, 0xe6, 0xa0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x06, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1018(ch_1018, ch_1018 + sizeof(ch_1018) -1);
CDataStream stream_1018(vch_1018, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1018;
stream_1018 >> txHist_1018;

if(block.vtx[0]->GetHash() == txHist_1018.GetHash() && nHeight == 1264426) {
return true;
}
unsigned char ch_1019[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x52, 0x4b, 0x13, 0x04, 0x51, 0x69, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x19, 0xd0, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1019(ch_1019, ch_1019 + sizeof(ch_1019) -1);
CDataStream stream_1019(vch_1019, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1019;
stream_1019 >> txHist_1019;

if(block.vtx[0]->GetHash() == txHist_1019.GetHash() && nHeight == 1264466) {
return true;
}
unsigned char ch_1020[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x7a, 0x4b, 0x13, 0x04, 0x9c, 0x74, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x2d, 0xaa, 0x9c, 0x35, 0x5e, 0x9f, 0xfb, 0x61, 0x5f, 0xd1, 0xad, 0x07, 0xcf, 0xd7, 0x64, 0x0f, 0x99, 0xa8, 0x42, 0xff, 0xd8, 0xd4, 0x2a, 0xba, 0xcf, 0x25, 0x79, 0x6c, 0xf9, 0xd7, 0x4d, 0xaa, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0xff, 0xff, 0xf8, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1020(ch_1020, ch_1020 + sizeof(ch_1020) -1);
CDataStream stream_1020(vch_1020, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1020;
stream_1020 >> txHist_1020;

if(block.vtx[0]->GetHash() == txHist_1020.GetHash() && nHeight == 1264506) {
return true;
}
unsigned char ch_1021[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x73, 0x4b, 0x13, 0x04, 0x7a, 0x72, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x19, 0xd0, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1021(ch_1021, ch_1021 + sizeof(ch_1021) -1);
CDataStream stream_1021(vch_1021, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1021;
stream_1021 >> txHist_1021;

if(block.vtx[0]->GetHash() == txHist_1021.GetHash() && nHeight == 1264499) {
return true;
}
unsigned char ch_1022[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x29, 0x4b, 0x13, 0x04, 0x81, 0x57, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x6a, 0x6a, 0x32, 0x7c, 0xf7, 0xd6, 0xcd, 0x3e, 0xc8, 0x07, 0x5e, 0x92, 0x1d, 0x9e, 0x94, 0xe5, 0x41, 0xaf, 0x10, 0x0e, 0xb1, 0xad, 0x56, 0x9a, 0x64, 0x1b, 0x0b, 0xa9, 0xf6, 0x43, 0xb9, 0x47, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x03, 0x19, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1022(ch_1022, ch_1022 + sizeof(ch_1022) -1);
CDataStream stream_1022(vch_1022, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1022;
stream_1022 >> txHist_1022;

if(block.vtx[0]->GetHash() == txHist_1022.GetHash() && nHeight == 1264425) {
return true;
}
unsigned char ch_1023[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xfe, 0x4a, 0x13, 0x04, 0x73, 0x4a, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x76, 0xbb, 0xf3, 0x10, 0x18, 0x91, 0x69, 0x42, 0x87, 0xee, 0x42, 0xa4, 0x06, 0x34, 0xfd, 0x3e, 0x92, 0xcc, 0x7a, 0x20, 0x8c, 0x86, 0xde, 0x70, 0x17, 0x6c, 0x02, 0xda, 0x56, 0xc9, 0x4d, 0x9b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0x72, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1023(ch_1023, ch_1023 + sizeof(ch_1023) -1);
CDataStream stream_1023(vch_1023, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1023;
stream_1023 >> txHist_1023;

if(block.vtx[0]->GetHash() == txHist_1023.GetHash() && nHeight == 1264382) {
return true;
}
unsigned char ch_1024[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x77, 0x4b, 0x13, 0x04, 0xd5, 0x73, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x5f, 0xe9, 0x35, 0x4c, 0x1b, 0x7f, 0x64, 0x11, 0x5b, 0x36, 0x73, 0x30, 0xce, 0xb4, 0xf1, 0x71, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x07, 0x7e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x6f, 0x3b, 0x5c, 0x88, 0xd6, 0x31, 0x37, 0x82, 0x10, 0x08, 0x3d, 0x57, 0xd6, 0x1e, 0x58, 0x53, 0x19, 0x31, 0x2d, 0x13, 0x0d, 0x91, 0xab, 0x4e, 0x57, 0x93, 0x6c, 0x24, 0xa8, 0x30, 0xf2, 0xa1, 0xbc, 0x99, 0xf3, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x82, 0x5b, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0x8a, 0xc9, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1024(ch_1024, ch_1024 + sizeof(ch_1024) -1);
CDataStream stream_1024(vch_1024, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1024;
stream_1024 >> txHist_1024;

if(block.vtx[0]->GetHash() == txHist_1024.GetHash() && nHeight == 1264503) {
return true;
}
unsigned char ch_1025[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x28, 0x4b, 0x13, 0x04, 0x5e, 0x57, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x18, 0x66, 0x3b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1025(ch_1025, ch_1025 + sizeof(ch_1025) -1);
CDataStream stream_1025(vch_1025, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1025;
stream_1025 >> txHist_1025;

if(block.vtx[0]->GetHash() == txHist_1025.GetHash() && nHeight == 1264424) {
return true;
}
unsigned char ch_1026[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xfd, 0x4a, 0x13, 0x04, 0x72, 0x4a, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x76, 0xbb, 0xf3, 0x10, 0x18, 0x91, 0x69, 0x42, 0x87, 0xee, 0x42, 0xa4, 0x06, 0x34, 0xfd, 0x3e, 0x92, 0xcc, 0x7a, 0x20, 0x8c, 0x86, 0xde, 0x70, 0x17, 0x6c, 0x02, 0xda, 0x56, 0xc9, 0x4d, 0x9b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0xff, 0xff, 0x70, 0xff, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1026(ch_1026, ch_1026 + sizeof(ch_1026) -1);
CDataStream stream_1026(vch_1026, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1026;
stream_1026 >> txHist_1026;

if(block.vtx[0]->GetHash() == txHist_1026.GetHash() && nHeight == 1264381) {
return true;
}
unsigned char ch_1027[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xfc, 0x4a, 0x13, 0x04, 0x70, 0x4a, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x76, 0xbb, 0xf3, 0x10, 0x18, 0x91, 0x69, 0x42, 0x87, 0xee, 0x42, 0xa4, 0x06, 0x34, 0xfd, 0x3e, 0x92, 0xcc, 0x7a, 0x20, 0x8c, 0x86, 0xde, 0x70, 0x17, 0x6c, 0x02, 0xda, 0x56, 0xc9, 0x4d, 0x9b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x03, 0x21, 0x0f, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x1c, 0x5a, 0xe6, 0x64, 0x26, 0xe5, 0x9b, 0xe7, 0x52, 0x1b, 0x92, 0x79, 0xa1, 0x4c, 0xa6, 0x92, 0x74, 0xdc, 0xb4, 0x63, 0x72, 0x0e, 0xf5, 0x05, 0x67, 0x2f, 0x5b, 0x4c, 0x02, 0xe7, 0xde, 0x86, 0x68, 0x01, 0x64, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1027(ch_1027, ch_1027 + sizeof(ch_1027) -1);
CDataStream stream_1027(vch_1027, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1027;
stream_1027 >> txHist_1027;

if(block.vtx[0]->GetHash() == txHist_1027.GetHash() && nHeight == 1264380) {
return true;
}
unsigned char ch_1028[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf9, 0x4a, 0x13, 0x04, 0x90, 0x47, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x74, 0x07, 0x5f, 0x18, 0x1c, 0xcb, 0x2a, 0x26, 0xcc, 0xda, 0x56, 0x0f, 0x8e, 0xbd, 0xc7, 0xb9, 0x05, 0x7b, 0xdf, 0x33, 0xc8, 0x3d, 0xb3, 0xb1, 0xb8, 0x6f, 0x29, 0x19, 0xd0, 0x6a, 0x62, 0x29, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xfd, 0xb4, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1028(ch_1028, ch_1028 + sizeof(ch_1028) -1);
CDataStream stream_1028(vch_1028, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1028;
stream_1028 >> txHist_1028;

if(block.vtx[0]->GetHash() == txHist_1028.GetHash() && nHeight == 1264377) {
return true;
}
unsigned char ch_1029[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x26, 0x4b, 0x13, 0x04, 0xfa, 0x56, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x21, 0x2a, 0x3b, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x26, 0x84, 0x1c, 0x43, 0xb7, 0x9e, 0xdf, 0xaf, 0x69, 0x8e, 0xa4, 0xe3, 0xe0, 0xdd, 0xdf, 0x0f, 0xeb, 0xe7, 0xd7, 0x13, 0x1f, 0x35, 0x55, 0x21, 0x5d, 0xee, 0x81, 0xdd, 0xef, 0x1b, 0x0c, 0xd1, 0x38, 0x24, 0x6c, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1029(ch_1029, ch_1029 + sizeof(ch_1029) -1);
CDataStream stream_1029(vch_1029, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1029;
stream_1029 >> txHist_1029;

if(block.vtx[0]->GetHash() == txHist_1029.GetHash() && nHeight == 1264422) {
return true;
}
unsigned char ch_1030[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x71, 0x4b, 0x13, 0x04, 0xea, 0x71, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x04, 0x48, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd8, 0x6e, 0x32, 0xcc, 0x5e, 0x7d, 0x10, 0xbe, 0x9b, 0xe4, 0x69, 0x1c, 0xc5, 0x0d, 0xf9, 0x68, 0xd5, 0x82, 0xe4, 0xae, 0x83, 0x81, 0xa5, 0xa5, 0x9c, 0x4f, 0x04, 0x1e, 0x8f, 0x42, 0x26, 0xe0, 0x10, 0x94, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1030(ch_1030, ch_1030 + sizeof(ch_1030) -1);
CDataStream stream_1030(vch_1030, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1030;
stream_1030 >> txHist_1030;

if(block.vtx[0]->GetHash() == txHist_1030.GetHash() && nHeight == 1264497) {
return true;
}
unsigned char ch_1031[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x25, 0x4b, 0x13, 0x04, 0xcd, 0x54, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x10, 0xb3, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1031(ch_1031, ch_1031 + sizeof(ch_1031) -1);
CDataStream stream_1031(vch_1031, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1031;
stream_1031 >> txHist_1031;

if(block.vtx[0]->GetHash() == txHist_1031.GetHash() && nHeight == 1264421) {
return true;
}
unsigned char ch_1032[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf8, 0x4a, 0x13, 0x04, 0x8e, 0x47, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x74, 0x07, 0x5f, 0x18, 0x1c, 0xcb, 0x2a, 0x26, 0xcc, 0xda, 0x56, 0x0f, 0x8e, 0xbd, 0xc7, 0xb9, 0x05, 0x7b, 0xdf, 0x33, 0xc8, 0x3d, 0xb3, 0xb1, 0xb8, 0x6f, 0x29, 0x19, 0xd0, 0x6a, 0x62, 0x29, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0xff, 0xff, 0xbc, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1032(ch_1032, ch_1032 + sizeof(ch_1032) -1);
CDataStream stream_1032(vch_1032, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1032;
stream_1032 >> txHist_1032;

if(block.vtx[0]->GetHash() == txHist_1032.GetHash() && nHeight == 1264376) {
return true;
}
unsigned char ch_1033[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x20, 0x4b, 0x13, 0x04, 0x3e, 0x54, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa5, 0x0c, 0x6f, 0x05, 0xb0, 0x69, 0x74, 0x75, 0x23, 0xfa, 0xcb, 0xf2, 0x2c, 0x86, 0x20, 0xf8, 0x4d, 0xf1, 0x16, 0xd1, 0x61, 0xae, 0xc7, 0x06, 0x7a, 0x86, 0x46, 0xa1, 0x50, 0x25, 0x54, 0x81, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0xff, 0xfd, 0xb8, 0x15, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xde, 0x56, 0x38, 0x10, 0xf4, 0x5f, 0x1c, 0x5f, 0x8b, 0xba, 0xd9, 0xb0, 0x90, 0x14, 0x8a, 0x37, 0x43, 0x26, 0x3d, 0x65, 0x44, 0x2c, 0x58, 0xac, 0xd2, 0xbe, 0xe5, 0x68, 0x9c, 0xa0, 0x10, 0x28, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1033(ch_1033, ch_1033 + sizeof(ch_1033) -1);
CDataStream stream_1033(vch_1033, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1033;
stream_1033 >> txHist_1033;

if(block.vtx[0]->GetHash() == txHist_1033.GetHash() && nHeight == 1264416) {
return true;
}
unsigned char ch_1034[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf3, 0x4a, 0x13, 0x04, 0x4b, 0x43, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x13, 0x76, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1034(ch_1034, ch_1034 + sizeof(ch_1034) -1);
CDataStream stream_1034(vch_1034, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1034;
stream_1034 >> txHist_1034;

if(block.vtx[0]->GetHash() == txHist_1034.GetHash() && nHeight == 1264371) {
return true;
}
unsigned char ch_1035[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x24, 0x4b, 0x13, 0x04, 0xb9, 0x54, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x18, 0x66, 0x68, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x41, 0x43, 0x23, 0x04, 0xcf, 0x4c, 0xcd, 0x0a, 0x1a, 0x90, 0x18, 0x1e, 0xb5, 0x0c, 0xc7, 0x82, 0x16, 0x33, 0x27, 0x56, 0x5f, 0x95, 0x02, 0xde, 0xe0, 0xdd, 0x9f, 0x4c, 0x1f, 0x99, 0x59, 0xab, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1035(ch_1035, ch_1035 + sizeof(ch_1035) -1);
CDataStream stream_1035(vch_1035, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1035;
stream_1035 >> txHist_1035;

if(block.vtx[0]->GetHash() == txHist_1035.GetHash() && nHeight == 1264420) {
return true;
}
unsigned char ch_1036[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf5, 0x4a, 0x13, 0x04, 0x95, 0x45, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe6, 0xbe, 0xd2, 0x72, 0x09, 0xff, 0x13, 0x62, 0xa1, 0xc5, 0x18, 0x3b, 0x30, 0x27, 0x37, 0xee, 0xcd, 0x9e, 0x7c, 0x01, 0xa4, 0x33, 0x89, 0x89, 0xd8, 0x04, 0x1a, 0x78, 0x54, 0xa0, 0xa3, 0x28, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0xff, 0xfe, 0xed, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1036(ch_1036, ch_1036 + sizeof(ch_1036) -1);
CDataStream stream_1036(vch_1036, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1036;
stream_1036 >> txHist_1036;

if(block.vtx[0]->GetHash() == txHist_1036.GetHash() && nHeight == 1264373) {
return true;
}
unsigned char ch_1037[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1f, 0x4b, 0x13, 0x04, 0x04, 0x54, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x17, 0x5e, 0xf3, 0x34, 0xef, 0x0a, 0x80, 0x61, 0x48, 0x4b, 0x2d, 0xb1, 0x20, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x20, 0xb1, 0x2d, 0x4b, 0x48, 0x61, 0x80, 0x0a, 0xef, 0x34, 0xf3, 0x5e, 0x17, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x07, 0x96, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1037(ch_1037, ch_1037 + sizeof(ch_1037) -1);
CDataStream stream_1037(vch_1037, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1037;
stream_1037 >> txHist_1037;

if(block.vtx[0]->GetHash() == txHist_1037.GetHash() && nHeight == 1264415) {
return true;
}
unsigned char ch_1038[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf0, 0x4a, 0x13, 0x04, 0xc1, 0x42, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x71, 0xfb, 0xc9, 0x78, 0x22, 0x53, 0x18, 0x47, 0xf4, 0xca, 0x26, 0x72, 0xc5, 0xd0, 0xdd, 0x04, 0x22, 0xd8, 0xce, 0x42, 0xcd, 0xe5, 0x51, 0x9c, 0x85, 0xab, 0x22, 0x6b, 0xfd, 0xf7, 0x83, 0x46, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x74, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1038(ch_1038, ch_1038 + sizeof(ch_1038) -1);
CDataStream stream_1038(vch_1038, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1038;
stream_1038 >> txHist_1038;

if(block.vtx[0]->GetHash() == txHist_1038.GetHash() && nHeight == 1264368) {
return true;
}
unsigned char ch_1039[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf2, 0x4a, 0x13, 0x04, 0x41, 0x43, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x04, 0x5c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x48, 0xb0, 0x4c, 0xcb, 0x0d, 0x15, 0xbb, 0xfe, 0x35, 0x01, 0x29, 0x31, 0xc0, 0x79, 0x18, 0x85, 0x29, 0x30, 0x7b, 0x74, 0xc0, 0xed, 0xce, 0x21, 0x40, 0xc8, 0xa1, 0x01, 0xaf, 0xa8, 0xf2, 0x57, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1039(ch_1039, ch_1039 + sizeof(ch_1039) -1);
CDataStream stream_1039(vch_1039, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1039;
stream_1039 >> txHist_1039;

if(block.vtx[0]->GetHash() == txHist_1039.GetHash() && nHeight == 1264370) {
return true;
}
unsigned char ch_1040[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xed, 0x4a, 0x13, 0x04, 0xa7, 0x40, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x22, 0x94, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1040(ch_1040, ch_1040 + sizeof(ch_1040) -1);
CDataStream stream_1040(vch_1040, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1040;
stream_1040 >> txHist_1040;

if(block.vtx[0]->GetHash() == txHist_1040.GetHash() && nHeight == 1264365) {
return true;
}
unsigned char ch_1041[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x22, 0x4b, 0x13, 0x04, 0x45, 0x54, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa5, 0x0c, 0x6f, 0x05, 0xb0, 0x69, 0x74, 0x75, 0x23, 0xfa, 0xcb, 0xf2, 0x2c, 0x86, 0x20, 0xf8, 0x4d, 0xf1, 0x16, 0xd1, 0x61, 0xae, 0xc7, 0x06, 0x7a, 0x86, 0x46, 0xa1, 0x50, 0x25, 0x54, 0x81, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0xb8, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1041(ch_1041, ch_1041 + sizeof(ch_1041) -1);
CDataStream stream_1041(vch_1041, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1041;
stream_1041 >> txHist_1041;

if(block.vtx[0]->GetHash() == txHist_1041.GetHash() && nHeight == 1264418) {
return true;
}
unsigned char ch_1042[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xef, 0x4a, 0x13, 0x04, 0xc0, 0x42, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x71, 0xfb, 0xc9, 0x78, 0x22, 0x53, 0x18, 0x47, 0xf4, 0xca, 0x26, 0x72, 0xc5, 0xd0, 0xdd, 0x04, 0x22, 0xd8, 0xce, 0x42, 0xcd, 0xe5, 0x51, 0x9c, 0x85, 0xab, 0x22, 0x6b, 0xfd, 0xf7, 0x83, 0x46, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x26, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1042(ch_1042, ch_1042 + sizeof(ch_1042) -1);
CDataStream stream_1042(vch_1042, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1042;
stream_1042 >> txHist_1042;

if(block.vtx[0]->GetHash() == txHist_1042.GetHash() && nHeight == 1264367) {
return true;
}
unsigned char ch_1043[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1d, 0x4b, 0x13, 0x04, 0x05, 0x53, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x45, 0x52, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfa, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1043(ch_1043, ch_1043 + sizeof(ch_1043) -1);
CDataStream stream_1043(vch_1043, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1043;
stream_1043 >> txHist_1043;

if(block.vtx[0]->GetHash() == txHist_1043.GetHash() && nHeight == 1264413) {
return true;
}
unsigned char ch_1044[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xec, 0x4a, 0x13, 0x04, 0xb2, 0x40, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x36, 0xce, 0xac, 0xb3, 0x07, 0x1d, 0x4b, 0x7d, 0x03, 0x69, 0x14, 0x72, 0x89, 0xe7, 0x0a, 0xf0, 0xcc, 0xf4, 0x15, 0xbd, 0x57, 0x59, 0xc5, 0x0f, 0xa6, 0x78, 0xf5, 0xd7, 0x0e, 0xbd, 0xb2, 0x6e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x05, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1044(ch_1044, ch_1044 + sizeof(ch_1044) -1);
CDataStream stream_1044(vch_1044, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1044;
stream_1044 >> txHist_1044;

if(block.vtx[0]->GetHash() == txHist_1044.GetHash() && nHeight == 1264364) {
return true;
}
unsigned char ch_1045[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x1c, 0x4b, 0x13, 0x04, 0xf5, 0x52, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x06, 0x5e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1045(ch_1045, ch_1045 + sizeof(ch_1045) -1);
CDataStream stream_1045(vch_1045, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1045;
stream_1045 >> txHist_1045;

if(block.vtx[0]->GetHash() == txHist_1045.GetHash() && nHeight == 1264412) {
return true;
}
unsigned char ch_1046[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe5, 0x4a, 0x13, 0x04, 0xca, 0x3c, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf2, 0xdb, 0x4d, 0x52, 0x81, 0x21, 0x3d, 0x47, 0x46, 0x99, 0xd5, 0x8f, 0xad, 0xbc, 0x31, 0xce, 0x49, 0xea, 0x5f, 0x4e, 0x9d, 0xcb, 0xd4, 0x5f, 0x86, 0xf6, 0xa6, 0x61, 0x79, 0x2f, 0x3a, 0x5a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4f, 0xff, 0xfe, 0xfa, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1046(ch_1046, ch_1046 + sizeof(ch_1046) -1);
CDataStream stream_1046(vch_1046, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1046;
stream_1046 >> txHist_1046;

if(block.vtx[0]->GetHash() == txHist_1046.GetHash() && nHeight == 1264357) {
return true;
}
unsigned char ch_1047[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xe1, 0x4a, 0x13, 0x04, 0xe3, 0x3b, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x04, 0x95, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1047(ch_1047, ch_1047 + sizeof(ch_1047) -1);
CDataStream stream_1047(vch_1047, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1047;
stream_1047 >> txHist_1047;

if(block.vtx[0]->GetHash() == txHist_1047.GetHash() && nHeight == 1264353) {
return true;
}
unsigned char ch_1048[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xe4, 0x4a, 0x13, 0x04, 0xa6, 0x3c, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x17, 0x01, 0x88, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x12, 0xa0, 0x76, 0x0d, 0x22, 0xa7, 0xf9, 0xf7, 0x19, 0x87, 0xc7, 0x5a, 0x46, 0x60, 0x99, 0xa2, 0xa2, 0x81, 0xcb, 0x1e, 0xfe, 0x76, 0xab, 0x33, 0x1f, 0x74, 0x81, 0x45, 0x24, 0x58, 0x7e, 0x2c, 0xc0, 0xe3, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1048(ch_1048, ch_1048 + sizeof(ch_1048) -1);
CDataStream stream_1048(vch_1048, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1048;
stream_1048 >> txHist_1048;

if(block.vtx[0]->GetHash() == txHist_1048.GetHash() && nHeight == 1264356) {
return true;
}
unsigned char ch_1049[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xdd, 0x4a, 0x13, 0x04, 0x09, 0x3a, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9a, 0xaa, 0xa3, 0x0d, 0x57, 0xf4, 0x6f, 0x13, 0x51, 0x4c, 0x48, 0x9d, 0xe9, 0x4e, 0xfe, 0xa7, 0xb7, 0x23, 0x4e, 0xb1, 0x95, 0x5b, 0x63, 0x47, 0x6d, 0x67, 0xc9, 0xf5, 0xe2, 0x6b, 0xf8, 0xb0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x3c, 0xc1, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1049(ch_1049, ch_1049 + sizeof(ch_1049) -1);
CDataStream stream_1049(vch_1049, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1049;
stream_1049 >> txHist_1049;

if(block.vtx[0]->GetHash() == txHist_1049.GetHash() && nHeight == 1264349) {
return true;
}
unsigned char ch_1050[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x19, 0x4b, 0x13, 0x04, 0x5f, 0x52, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x83, 0x4b, 0x4a, 0xa9, 0xee, 0x65, 0x6c, 0xa0, 0x37, 0x08, 0x88, 0x10, 0x7f, 0xa3, 0x55, 0xfa, 0xbe, 0x3a, 0xa0, 0xf0, 0x8b, 0xc6, 0x43, 0x06, 0xcf, 0x99, 0xe4, 0x4a, 0x98, 0xe3, 0x21, 0x54, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x01, 0x12, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1050(ch_1050, ch_1050 + sizeof(ch_1050) -1);
CDataStream stream_1050(vch_1050, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1050;
stream_1050 >> txHist_1050;

if(block.vtx[0]->GetHash() == txHist_1050.GetHash() && nHeight == 1264409) {
return true;
}
unsigned char ch_1051[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd9, 0x4a, 0x13, 0x04, 0x42, 0x39, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfa, 0x2e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1051(ch_1051, ch_1051 + sizeof(ch_1051) -1);
CDataStream stream_1051(vch_1051, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1051;
stream_1051 >> txHist_1051;

if(block.vtx[0]->GetHash() == txHist_1051.GetHash() && nHeight == 1264345) {
return true;
}
unsigned char ch_1052[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x18, 0x4b, 0x13, 0x04, 0x5e, 0x52, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x83, 0x4b, 0x4a, 0xa9, 0xee, 0x65, 0x6c, 0xa0, 0x37, 0x08, 0x88, 0x10, 0x7f, 0xa3, 0x55, 0xfa, 0xbe, 0x3a, 0xa0, 0xf0, 0x8b, 0xc6, 0x43, 0x06, 0xcf, 0x99, 0xe4, 0x4a, 0x98, 0xe3, 0x21, 0x54, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xfd, 0x13, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1052(ch_1052, ch_1052 + sizeof(ch_1052) -1);
CDataStream stream_1052(vch_1052, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1052;
stream_1052 >> txHist_1052;

if(block.vtx[0]->GetHash() == txHist_1052.GetHash() && nHeight == 1264408) {
return true;
}
unsigned char ch_1053[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd6, 0x4a, 0x13, 0x04, 0xe1, 0x38, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x07, 0x99, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xaf, 0xb3, 0xd1, 0x65, 0x18, 0x58, 0x14, 0x02, 0x0f, 0x4f, 0x74, 0xea, 0xd6, 0xc7, 0x13, 0x97, 0x3c, 0x5e, 0x39, 0x5d, 0x91, 0x39, 0x98, 0xb8, 0x78, 0xa4, 0xbd, 0x9f, 0xec, 0x91, 0xc8, 0x19, 0x94, 0xbd, 0xf5, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x56, 0x61, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xae, 0xe6, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1053(ch_1053, ch_1053 + sizeof(ch_1053) -1);
CDataStream stream_1053(vch_1053, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1053;
stream_1053 >> txHist_1053;

if(block.vtx[0]->GetHash() == txHist_1053.GetHash() && nHeight == 1264342) {
return true;
}
unsigned char ch_1054[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x17, 0x4b, 0x13, 0x04, 0x5c, 0x52, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x83, 0x4b, 0x4a, 0xa9, 0xee, 0x65, 0x6c, 0xa0, 0x37, 0x08, 0x88, 0x10, 0x7f, 0xa3, 0x55, 0xfa, 0xbe, 0x3a, 0xa0, 0xf0, 0x8b, 0xc6, 0x43, 0x06, 0xcf, 0x99, 0xe4, 0x4a, 0x98, 0xe3, 0x21, 0x54, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0x3d, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1054(ch_1054, ch_1054 + sizeof(ch_1054) -1);
CDataStream stream_1054(vch_1054, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1054;
stream_1054 >> txHist_1054;

if(block.vtx[0]->GetHash() == txHist_1054.GetHash() && nHeight == 1264407) {
return true;
}
unsigned char ch_1055[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd3, 0x4a, 0x13, 0x04, 0x44, 0x35, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x10, 0xb3, 0xf6, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1055(ch_1055, ch_1055 + sizeof(ch_1055) -1);
CDataStream stream_1055(vch_1055, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1055;
stream_1055 >> txHist_1055;

if(block.vtx[0]->GetHash() == txHist_1055.GetHash() && nHeight == 1264339) {
return true;
}
unsigned char ch_1056[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x16, 0x4b, 0x13, 0x04, 0x59, 0x52, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x83, 0x4b, 0x4a, 0xa9, 0xee, 0x65, 0x6c, 0xa0, 0x37, 0x08, 0x88, 0x10, 0x7f, 0xa3, 0x55, 0xfa, 0xbe, 0x3a, 0xa0, 0xf0, 0x8b, 0xc6, 0x43, 0x06, 0xcf, 0x99, 0xe4, 0x4a, 0x98, 0xe3, 0x21, 0x54, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0xf6, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1056(ch_1056, ch_1056 + sizeof(ch_1056) -1);
CDataStream stream_1056(vch_1056, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1056;
stream_1056 >> txHist_1056;

if(block.vtx[0]->GetHash() == txHist_1056.GetHash() && nHeight == 1264406) {
return true;
}
unsigned char ch_1057[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd0, 0x4a, 0x13, 0x04, 0x15, 0x34, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x14, 0xf5, 0x25, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xb8, 0x1a, 0x0f, 0x46, 0x1f, 0x61, 0x0a, 0x9f, 0xf5, 0xec, 0x96, 0xc0, 0x46, 0xb7, 0xeb, 0xf1, 0x4a, 0x6b, 0xfa, 0x90, 0x85, 0xc6, 0x40, 0x7e, 0x04, 0x4b, 0xa9, 0x9d, 0x91, 0xd1, 0x2b, 0x5d, 0x18, 0x06, 0xfa, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1057(ch_1057, ch_1057 + sizeof(ch_1057) -1);
CDataStream stream_1057(vch_1057, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1057;
stream_1057 >> txHist_1057;

if(block.vtx[0]->GetHash() == txHist_1057.GetHash() && nHeight == 1264336) {
return true;
}
unsigned char ch_1058[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x49, 0x4b, 0x13, 0x04, 0x95, 0x64, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xef, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1058(ch_1058, ch_1058 + sizeof(ch_1058) -1);
CDataStream stream_1058(vch_1058, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1058;
stream_1058 >> txHist_1058;

if(block.vtx[0]->GetHash() == txHist_1058.GetHash() && nHeight == 1264457) {
return true;
}
unsigned char ch_1059[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x15, 0x4b, 0x13, 0x04, 0x40, 0x52, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x83, 0x4b, 0x4a, 0xa9, 0xee, 0x65, 0x6c, 0xa0, 0x37, 0x08, 0x88, 0x10, 0x7f, 0xa3, 0x55, 0xfa, 0xbe, 0x3a, 0xa0, 0xf0, 0x8b, 0xc6, 0x43, 0x06, 0xcf, 0x99, 0xe4, 0x4a, 0x98, 0xe3, 0x21, 0x54, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x06, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x8e, 0xd3, 0x49, 0xbb, 0xe1, 0x89, 0x4d, 0x59, 0xd7, 0x4e, 0x38, 0x77, 0x8e, 0x02, 0xd1, 0x15, 0xe6, 0xa6, 0x06, 0x77, 0x58, 0xae, 0x3d, 0xad, 0x77, 0x88, 0x3b, 0xf7, 0x4a, 0xda, 0x8b, 0x69, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1059(ch_1059, ch_1059 + sizeof(ch_1059) -1);
CDataStream stream_1059(vch_1059, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1059;
stream_1059 >> txHist_1059;

if(block.vtx[0]->GetHash() == txHist_1059.GetHash() && nHeight == 1264405) {
return true;
}
unsigned char ch_1060[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xcd, 0x4a, 0x13, 0x04, 0x74, 0x32, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbf, 0x12, 0x6e, 0xc2, 0x67, 0x8d, 0x9a, 0xd3, 0xbc, 0x72, 0x57, 0xa2, 0x37, 0x2d, 0x32, 0x19, 0x57, 0xa4, 0xa2, 0x7f, 0xe7, 0x64, 0xbc, 0xa8, 0x31, 0x76, 0x92, 0x47, 0xba, 0x6c, 0x54, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x0b, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1060(ch_1060, ch_1060 + sizeof(ch_1060) -1);
CDataStream stream_1060(vch_1060, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1060;
stream_1060 >> txHist_1060;

if(block.vtx[0]->GetHash() == txHist_1060.GetHash() && nHeight == 1264333) {
return true;
}
unsigned char ch_1061[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x47, 0x4b, 0x13, 0x04, 0xe3, 0x63, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf9, 0x46, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1061(ch_1061, ch_1061 + sizeof(ch_1061) -1);
CDataStream stream_1061(vch_1061, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1061;
stream_1061 >> txHist_1061;

if(block.vtx[0]->GetHash() == txHist_1061.GetHash() && nHeight == 1264455) {
return true;
}
unsigned char ch_1062[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x14, 0x4b, 0x13, 0x04, 0x0e, 0x50, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x17, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x8e, 0xb5, 0xfc, 0x57, 0x8b, 0xab, 0x53, 0x99, 0x7d, 0xae, 0x01, 0xa1, 0x44, 0xe1, 0xce, 0x7c, 0xc0, 0xc4, 0x39, 0x3e, 0x04, 0xbf, 0xe1, 0xf2, 0x43, 0x8a, 0x92, 0xd5, 0x10, 0x39, 0x2a, 0x5c, 0x80, 0xa5, 0xf7, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1062(ch_1062, ch_1062 + sizeof(ch_1062) -1);
CDataStream stream_1062(vch_1062, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1062;
stream_1062 >> txHist_1062;

if(block.vtx[0]->GetHash() == txHist_1062.GetHash() && nHeight == 1264404) {
return true;
}
unsigned char ch_1063[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc9, 0x4a, 0x13, 0x04, 0x49, 0x32, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x22, 0x11, 0x4a, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x6d, 0xb4, 0x83, 0x7d, 0xfc, 0x1d, 0xd4, 0xf4, 0xb9, 0x55, 0x13, 0x88, 0xe3, 0x04, 0x61, 0x7c, 0xdd, 0xed, 0xa3, 0x32, 0xd3, 0xe5, 0x4a, 0x5d, 0xb3, 0xed, 0xc8, 0x59, 0xb2, 0x80, 0x18, 0x30, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1063(ch_1063, ch_1063 + sizeof(ch_1063) -1);
CDataStream stream_1063(vch_1063, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1063;
stream_1063 >> txHist_1063;

if(block.vtx[0]->GetHash() == txHist_1063.GetHash() && nHeight == 1264329) {
return true;
}
unsigned char ch_1064[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x45, 0x4b, 0x13, 0x04, 0x66, 0x63, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x14, 0x90, 0x0e, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1064(ch_1064, ch_1064 + sizeof(ch_1064) -1);
CDataStream stream_1064(vch_1064, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1064;
stream_1064 >> txHist_1064;

if(block.vtx[0]->GetHash() == txHist_1064.GetHash() && nHeight == 1264453) {
return true;
}
unsigned char ch_1065[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x13, 0x4b, 0x13, 0x04, 0xfc, 0x4f, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x10, 0xb3, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1065(ch_1065, ch_1065 + sizeof(ch_1065) -1);
CDataStream stream_1065(vch_1065, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1065;
stream_1065 >> txHist_1065;

if(block.vtx[0]->GetHash() == txHist_1065.GetHash() && nHeight == 1264403) {
return true;
}
unsigned char ch_1066[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc4, 0x4a, 0x13, 0x04, 0x93, 0x2e, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd7, 0x67, 0xba, 0xbb, 0x52, 0xab, 0x1f, 0x11, 0x52, 0xe1, 0x1b, 0x77, 0xa9, 0xb6, 0xf8, 0x66, 0x2f, 0x4a, 0x95, 0x13, 0x91, 0x7b, 0x00, 0x11, 0x6e, 0x20, 0xe9, 0x57, 0xbf, 0x5d, 0x14, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x99, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1066(ch_1066, ch_1066 + sizeof(ch_1066) -1);
CDataStream stream_1066(vch_1066, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1066;
stream_1066 >> txHist_1066;

if(block.vtx[0]->GetHash() == txHist_1066.GetHash() && nHeight == 1264324) {
return true;
}
unsigned char ch_1067[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x11, 0x4b, 0x13, 0x04, 0xa9, 0x4f, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x08, 0x76, 0x7d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x2e, 0xa4, 0x88, 0x21, 0x17, 0x1b, 0x3e, 0xcf, 0x64, 0xeb, 0x89, 0xc1, 0x4a, 0xe4, 0x14, 0x2c, 0x55, 0xbe, 0x19, 0xf0, 0x82, 0x42, 0x3d, 0x96, 0x75, 0xd3, 0x0e, 0x92, 0x21, 0x86, 0x78, 0x4c, 0xf8, 0xe2, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1067(ch_1067, ch_1067 + sizeof(ch_1067) -1);
CDataStream stream_1067(vch_1067, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1067;
stream_1067 >> txHist_1067;

if(block.vtx[0]->GetHash() == txHist_1067.GetHash() && nHeight == 1264401) {
return true;
}
unsigned char ch_1068[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x40, 0x4b, 0x13, 0x04, 0xf4, 0x5f, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x04, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1068(ch_1068, ch_1068 + sizeof(ch_1068) -1);
CDataStream stream_1068(vch_1068, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1068;
stream_1068 >> txHist_1068;

if(block.vtx[0]->GetHash() == txHist_1068.GetHash() && nHeight == 1264448) {
return true;
}
unsigned char ch_1069[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xcc, 0x4a, 0x13, 0x04, 0x64, 0x32, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb3, 0x73, 0x27, 0xf6, 0x9a, 0xea, 0xab, 0xfa, 0xbf, 0xde, 0xe2, 0x30, 0x55, 0xba, 0xb7, 0x96, 0x7a, 0x90, 0xa6, 0xcf, 0xcf, 0x9a, 0x79, 0x95, 0xd1, 0xfd, 0x10, 0xa1, 0x7c, 0xe5, 0x3d, 0xa2, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4f, 0xff, 0xff, 0x04, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1069(ch_1069, ch_1069 + sizeof(ch_1069) -1);
CDataStream stream_1069(vch_1069, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1069;
stream_1069 >> txHist_1069;

if(block.vtx[0]->GetHash() == txHist_1069.GetHash() && nHeight == 1264332) {
return true;
}
unsigned char ch_1070[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc3, 0x4a, 0x13, 0x04, 0x8f, 0x2e, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd7, 0x67, 0xba, 0xbb, 0x52, 0xab, 0x1f, 0x11, 0x52, 0xe1, 0x1b, 0x77, 0xa9, 0xb6, 0xf8, 0x66, 0x2f, 0x4a, 0x95, 0x13, 0x91, 0x7b, 0x00, 0x11, 0x6e, 0x20, 0xe9, 0x57, 0xbf, 0x5d, 0x14, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xbf, 0x05, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1070(ch_1070, ch_1070 + sizeof(ch_1070) -1);
CDataStream stream_1070(vch_1070, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1070;
stream_1070 >> txHist_1070;

if(block.vtx[0]->GetHash() == txHist_1070.GetHash() && nHeight == 1264323) {
return true;
}
unsigned char ch_1071[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x21, 0x4b, 0x13, 0x04, 0x43, 0x54, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa5, 0x0c, 0x6f, 0x05, 0xb0, 0x69, 0x74, 0x75, 0x23, 0xfa, 0xcb, 0xf2, 0x2c, 0x86, 0x20, 0xf8, 0x4d, 0xf1, 0x16, 0xd1, 0x61, 0xae, 0xc7, 0x06, 0x7a, 0x86, 0x46, 0xa1, 0x50, 0x25, 0x54, 0x81, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x6c, 0xb3, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1071(ch_1071, ch_1071 + sizeof(ch_1071) -1);
CDataStream stream_1071(vch_1071, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1071;
stream_1071 >> txHist_1071;

if(block.vtx[0]->GetHash() == txHist_1071.GetHash() && nHeight == 1264417) {
return true;
}
unsigned char ch_1072[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc2, 0x4a, 0x13, 0x04, 0x82, 0x2e, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x10, 0x2d, 0x93, 0xe4, 0xd6, 0x1c, 0x6d, 0x98, 0x1e, 0x15, 0x70, 0x1f, 0xc6, 0xef, 0x94, 0x1f, 0x2e, 0x68, 0xc3, 0x5e, 0xc8, 0x48, 0x28, 0xf0, 0xe5, 0x2b, 0xb3, 0x1b, 0x41, 0xa0, 0xd2, 0xa1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xfb, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x12, 0x85, 0x9e, 0xcd, 0xa4, 0x56, 0x3c, 0x56, 0xfd, 0xf1, 0xff, 0xf8, 0x4f, 0xf1, 0x18, 0x44, 0xb0, 0x85, 0x15, 0x02, 0x91, 0xa6, 0xa5, 0xd9, 0xc3, 0x8c, 0x28, 0xc3, 0xfe, 0x43, 0xb4, 0x32, 0x10, 0xa8, 0x65, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1072(ch_1072, ch_1072 + sizeof(ch_1072) -1);
CDataStream stream_1072(vch_1072, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1072;
stream_1072 >> txHist_1072;

if(block.vtx[0]->GetHash() == txHist_1072.GetHash() && nHeight == 1264322) {
return true;
}
unsigned char ch_1073[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb2, 0x4a, 0x13, 0x04, 0x76, 0x27, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x13, 0x72, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1073(ch_1073, ch_1073 + sizeof(ch_1073) -1);
CDataStream stream_1073(vch_1073, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1073;
stream_1073 >> txHist_1073;

if(block.vtx[0]->GetHash() == txHist_1073.GetHash() && nHeight == 1264306) {
return true;
}
unsigned char ch_1074[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xaa, 0x4a, 0x13, 0x04, 0x72, 0x24, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbf, 0x3c, 0x6d, 0x9f, 0x3b, 0x32, 0xf8, 0x22, 0x28, 0xe0, 0x0b, 0x10, 0x36, 0x53, 0xfc, 0x4d, 0x60, 0x73, 0x7d, 0xa9, 0x86, 0xbd, 0x22, 0x17, 0x07, 0xd1, 0x3d, 0xde, 0x6c, 0x7d, 0x7c, 0xce, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x6b, 0xd1, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1074(ch_1074, ch_1074 + sizeof(ch_1074) -1);
CDataStream stream_1074(vch_1074, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1074;
stream_1074 >> txHist_1074;

if(block.vtx[0]->GetHash() == txHist_1074.GetHash() && nHeight == 1264298) {
return true;
}
unsigned char ch_1075[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa2, 0x4a, 0x13, 0x04, 0xc4, 0x1f, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xba, 0x45, 0xc9, 0xd0, 0x35, 0x0b, 0x14, 0xbf, 0x33, 0x92, 0xf5, 0x15, 0xb3, 0xd9, 0xed, 0xa9, 0x21, 0xaa, 0x24, 0x6a, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfa, 0x96, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x23, 0x5c, 0xc1, 0x4b, 0x55, 0x0d, 0x6b, 0x6a, 0xf7, 0xd3, 0x4a, 0xf2, 0x02, 0x91, 0xc8, 0x3e, 0x16, 0x7b, 0x68, 0xf3, 0x05, 0x8f, 0x84, 0xad, 0x6a, 0x34, 0x9f, 0xe9, 0x49, 0x07, 0x5e, 0xad, 0x08, 0xf8, 0xf4, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x3c, 0x5f, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0x2c, 0xdc, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1075(ch_1075, ch_1075 + sizeof(ch_1075) -1);
CDataStream stream_1075(vch_1075, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1075;
stream_1075 >> txHist_1075;

if(block.vtx[0]->GetHash() == txHist_1075.GetHash() && nHeight == 1264290) {
return true;
}
unsigned char ch_1076[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x02, 0x4b, 0x13, 0x04, 0xdd, 0x4b, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x10, 0xee, 0xdd, 0x74, 0x68, 0x79, 0x72, 0x95, 0x3e, 0x44, 0x4f, 0x95, 0xd7, 0x4e, 0x34, 0xf4, 0x69, 0x2f, 0x45, 0x62, 0xcb, 0xb7, 0x5f, 0x90, 0xab, 0xef, 0x78, 0x2f, 0x85, 0x75, 0x60, 0x2e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0xac, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1076(ch_1076, ch_1076 + sizeof(ch_1076) -1);
CDataStream stream_1076(vch_1076, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1076;
stream_1076 >> txHist_1076;

if(block.vtx[0]->GetHash() == txHist_1076.GetHash() && nHeight == 1264386) {
return true;
}
unsigned char ch_1077[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x01, 0x4b, 0x13, 0x04, 0xc5, 0x4b, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x8f, 0xcd, 0x36, 0x0c, 0x6e, 0x79, 0xdd, 0x50, 0x86, 0xd8, 0x3d, 0xa3, 0xfa, 0x63, 0xef, 0x1e, 0x16, 0x4c, 0x01, 0xa8, 0x99, 0x67, 0x19, 0xf6, 0xeb, 0xd7, 0x7d, 0xb9, 0xed, 0x96, 0x7e, 0x88, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xef, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x79, 0xeb, 0x15, 0x2f, 0xc4, 0xd7, 0xd1, 0xa9, 0xb8, 0xa3, 0x33, 0x14, 0x83, 0x54, 0x33, 0xd0, 0xe5, 0x37, 0x4a, 0xdc, 0x8c, 0x7a, 0x45, 0x58, 0xa4, 0xc2, 0x4c, 0x99, 0x61, 0x6c, 0x5f, 0x3e, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1077(ch_1077, ch_1077 + sizeof(ch_1077) -1);
CDataStream stream_1077(vch_1077, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1077;
stream_1077 >> txHist_1077;

if(block.vtx[0]->GetHash() == txHist_1077.GetHash() && nHeight == 1264385) {
return true;
}
unsigned char ch_1078[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xff, 0x4a, 0x13, 0x04, 0x74, 0x4a, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb3, 0x7b, 0x8f, 0xac, 0x64, 0x6f, 0x8f, 0x49, 0x2d, 0x3b, 0x8b, 0x78, 0xb1, 0xcd, 0x21, 0x67, 0xbc, 0xae, 0xb9, 0x65, 0xa3, 0x61, 0xe2, 0x3f, 0xb2, 0x10, 0xfd, 0x64, 0x24, 0xa3, 0xf5, 0x7e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1078(ch_1078, ch_1078 + sizeof(ch_1078) -1);
CDataStream stream_1078(vch_1078, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1078;
stream_1078 >> txHist_1078;

if(block.vtx[0]->GetHash() == txHist_1078.GetHash() && nHeight == 1264383) {
return true;
}
unsigned char ch_1079[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xeb, 0x4a, 0x13, 0x04, 0xaf, 0x40, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x36, 0xce, 0xac, 0xb3, 0x07, 0x1d, 0x4b, 0x7d, 0x03, 0x69, 0x14, 0x72, 0x89, 0xe7, 0x0a, 0xf0, 0xcc, 0xf4, 0x15, 0xbd, 0x57, 0x59, 0xc5, 0x0f, 0xa6, 0x78, 0xf5, 0xd7, 0x0e, 0xbd, 0xb2, 0x6e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xd8, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1079(ch_1079, ch_1079 + sizeof(ch_1079) -1);
CDataStream stream_1079(vch_1079, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1079;
stream_1079 >> txHist_1079;

if(block.vtx[0]->GetHash() == txHist_1079.GetHash() && nHeight == 1264363) {
return true;
}
unsigned char ch_1080[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x08, 0x4b, 0x13, 0x04, 0x2d, 0x4d, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xef, 0xc3, 0x23, 0xff, 0xf8, 0x7f, 0xe5, 0x94, 0xb5, 0xc8, 0x74, 0x18, 0xdf, 0xb0, 0x4c, 0x93, 0x73, 0xdf, 0xe6, 0xd9, 0xcb, 0xdd, 0xdc, 0x1c, 0xdc, 0x1c, 0x2f, 0x58, 0xb2, 0x2b, 0xbc, 0xc8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xdd, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1080(ch_1080, ch_1080 + sizeof(ch_1080) -1);
CDataStream stream_1080(vch_1080, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1080;
stream_1080 >> txHist_1080;

if(block.vtx[0]->GetHash() == txHist_1080.GetHash() && nHeight == 1264392) {
return true;
}
unsigned char ch_1081[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe7, 0x4a, 0x13, 0x04, 0xcd, 0x3c, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf2, 0xdb, 0x4d, 0x52, 0x81, 0x21, 0x3d, 0x47, 0x46, 0x99, 0xd5, 0x8f, 0xad, 0xbc, 0x31, 0xce, 0x49, 0xea, 0x5f, 0x4e, 0x9d, 0xcb, 0xd4, 0x5f, 0x86, 0xf6, 0xa6, 0x61, 0x79, 0x2f, 0x3a, 0x5a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x01, 0x25, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1081(ch_1081, ch_1081 + sizeof(ch_1081) -1);
CDataStream stream_1081(vch_1081, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1081;
stream_1081 >> txHist_1081;

if(block.vtx[0]->GetHash() == txHist_1081.GetHash() && nHeight == 1264359) {
return true;
}
unsigned char ch_1082[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc0, 0x4a, 0x13, 0x04, 0x4f, 0x2c, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x19, 0x2f, 0xb0, 0xac, 0xd8, 0x83, 0xda, 0x3f, 0x77, 0xfc, 0x56, 0x64, 0xf5, 0x6c, 0x99, 0xfe, 0x77, 0x41, 0xb9, 0x9b, 0xdb, 0x1c, 0xc4, 0x25, 0xce, 0x83, 0x4f, 0x8a, 0x11, 0xa5, 0x7a, 0xc3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x19, 0x84, 0x64, 0xfa, 0x3e, 0xb1, 0xc1, 0xf8, 0x1c, 0x68, 0xa2, 0x6e, 0x73, 0x96, 0xee, 0xea, 0xb9, 0x92, 0xff, 0x9f, 0x23, 0xbf, 0x37, 0xfd, 0x9b, 0x52, 0x0e, 0x8e, 0x15, 0xf0, 0x5e, 0x08, 0x58, 0x6f, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1082(ch_1082, ch_1082 + sizeof(ch_1082) -1);
CDataStream stream_1082(vch_1082, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1082;
stream_1082 >> txHist_1082;

if(block.vtx[0]->GetHash() == txHist_1082.GetHash() && nHeight == 1264320) {
return true;
}
unsigned char ch_1083[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x07, 0x4b, 0x13, 0x04, 0x2d, 0x4d, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xef, 0xc3, 0x23, 0xff, 0xf8, 0x7f, 0xe5, 0x94, 0xb5, 0xc8, 0x74, 0x18, 0xdf, 0xb0, 0x4c, 0x93, 0x73, 0xdf, 0xe6, 0xd9, 0xcb, 0xdd, 0xdc, 0x1c, 0xdc, 0x1c, 0x2f, 0x58, 0xb2, 0x2b, 0xbc, 0xc8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0xff, 0xff, 0xb7, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1083(ch_1083, ch_1083 + sizeof(ch_1083) -1);
CDataStream stream_1083(vch_1083, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1083;
stream_1083 >> txHist_1083;

if(block.vtx[0]->GetHash() == txHist_1083.GetHash() && nHeight == 1264391) {
return true;
}
unsigned char ch_1084[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xe3, 0x4a, 0x13, 0x04, 0xfd, 0x3b, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xef, 0x8d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1084(ch_1084, ch_1084 + sizeof(ch_1084) -1);
CDataStream stream_1084(vch_1084, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1084;
stream_1084 >> txHist_1084;

if(block.vtx[0]->GetHash() == txHist_1084.GetHash() && nHeight == 1264355) {
return true;
}
unsigned char ch_1085[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb8, 0x4a, 0x13, 0x04, 0x86, 0x2a, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x6a, 0xdc, 0x7a, 0x31, 0xf2, 0xb9, 0x5a, 0xf2, 0x18, 0xff, 0x7d, 0xf7, 0x01, 0x5d, 0x5a, 0x69, 0x06, 0x94, 0x71, 0xbe, 0xa0, 0x0e, 0x29, 0x3b, 0x33, 0x5f, 0x12, 0x1c, 0x26, 0xfd, 0xca, 0xd0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x31, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1085(ch_1085, ch_1085 + sizeof(ch_1085) -1);
CDataStream stream_1085(vch_1085, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1085;
stream_1085 >> txHist_1085;

if(block.vtx[0]->GetHash() == txHist_1085.GetHash() && nHeight == 1264312) {
return true;
}
unsigned char ch_1086[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x06, 0x4b, 0x13, 0x04, 0x2d, 0x4d, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xef, 0xc3, 0x23, 0xff, 0xf8, 0x7f, 0xe5, 0x94, 0xb5, 0xc8, 0x74, 0x18, 0xdf, 0xb0, 0x4c, 0x93, 0x73, 0xdf, 0xe6, 0xd9, 0xcb, 0xdd, 0xdc, 0x1c, 0xdc, 0x1c, 0x2f, 0x58, 0xb2, 0x2b, 0xbc, 0xc8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x03, 0x04, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd0, 0x38, 0xd2, 0xe1, 0x1a, 0xc9, 0xaf, 0xbc, 0xca, 0x72, 0x46, 0xc1, 0x9f, 0xde, 0x62, 0x27, 0xfd, 0x46, 0xbc, 0xa2, 0x89, 0xb8, 0xa1, 0xc0, 0x2f, 0x5d, 0x60, 0xd3, 0x3b, 0xa9, 0x96, 0x2c, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1086(ch_1086, ch_1086 + sizeof(ch_1086) -1);
CDataStream stream_1086(vch_1086, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1086;
stream_1086 >> txHist_1086;

if(block.vtx[0]->GetHash() == txHist_1086.GetHash() && nHeight == 1264390) {
return true;
}
unsigned char ch_1087[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xdf, 0x4a, 0x13, 0x04, 0x15, 0x3b, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x08, 0x76, 0xdb, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1087(ch_1087, ch_1087 + sizeof(ch_1087) -1);
CDataStream stream_1087(vch_1087, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1087;
stream_1087 >> txHist_1087;

if(block.vtx[0]->GetHash() == txHist_1087.GetHash() && nHeight == 1264351) {
return true;
}
unsigned char ch_1088[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb0, 0x4a, 0x13, 0x04, 0x29, 0x27, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe7, 0x3c, 0x3d, 0xaa, 0xd0, 0x2d, 0xcf, 0x3c, 0x16, 0xc7, 0x0b, 0xbd, 0xa2, 0x22, 0x82, 0x27, 0x8b, 0x76, 0x60, 0xe7, 0x05, 0xc2, 0x75, 0xf0, 0xc5, 0x7b, 0x82, 0xa0, 0x71, 0xc1, 0x08, 0x8e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x0c, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1088(ch_1088, ch_1088 + sizeof(ch_1088) -1);
CDataStream stream_1088(vch_1088, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1088;
stream_1088 >> txHist_1088;

if(block.vtx[0]->GetHash() == txHist_1088.GetHash() && nHeight == 1264304) {
return true;
}
unsigned char ch_1089[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xdb, 0x4a, 0x13, 0x04, 0x06, 0x3a, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9a, 0xaa, 0xa3, 0x0d, 0x57, 0xf4, 0x6f, 0x13, 0x51, 0x4c, 0x48, 0x9d, 0xe9, 0x4e, 0xfe, 0xa7, 0xb7, 0x23, 0x4e, 0xb1, 0x95, 0x5b, 0x63, 0x47, 0x6d, 0x67, 0xc9, 0xf5, 0xe2, 0x6b, 0xf8, 0xb0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x3a, 0x0a, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1089(ch_1089, ch_1089 + sizeof(ch_1089) -1);
CDataStream stream_1089(vch_1089, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1089;
stream_1089 >> txHist_1089;

if(block.vtx[0]->GetHash() == txHist_1089.GetHash() && nHeight == 1264347) {
return true;
}
unsigned char ch_1090[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa8, 0x4a, 0x13, 0x04, 0xb5, 0x23, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x10, 0x81, 0x49, 0x1b, 0x86, 0x07, 0x00, 0x00, 0x60, 0xfd, 0x22, 0x15, 0x8d, 0x00, 0x90, 0x1d, 0xc9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x07, 0x2c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1090(ch_1090, ch_1090 + sizeof(ch_1090) -1);
CDataStream stream_1090(vch_1090, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1090;
stream_1090 >> txHist_1090;

if(block.vtx[0]->GetHash() == txHist_1090.GetHash() && nHeight == 1264296) {
return true;
}
unsigned char ch_1091[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd8, 0x4a, 0x13, 0x04, 0x16, 0x39, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc7, 0x61, 0x8e, 0xcb, 0x0c, 0x9a, 0x5f, 0x03, 0x98, 0x68, 0x59, 0xc0, 0x8d, 0x5a, 0x04, 0xa3, 0xfe, 0x4d, 0x81, 0x42, 0x2e, 0x85, 0x12, 0x90, 0xa6, 0xb6, 0x4e, 0x4e, 0x11, 0x09, 0xa3, 0x45, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xfc, 0xd1, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1091(ch_1091, ch_1091 + sizeof(ch_1091) -1);
CDataStream stream_1091(vch_1091, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1091;
stream_1091 >> txHist_1091;

if(block.vtx[0]->GetHash() == txHist_1091.GetHash() && nHeight == 1264344) {
return true;
}
unsigned char ch_1092[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x03, 0x4b, 0x13, 0x04, 0x0a, 0x4c, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x10, 0xee, 0xdd, 0x74, 0x68, 0x79, 0x72, 0x95, 0x3e, 0x44, 0x4f, 0x95, 0xd7, 0x4e, 0x34, 0xf4, 0x69, 0x2f, 0x45, 0x62, 0xcb, 0xb7, 0x5f, 0x90, 0xab, 0xef, 0x78, 0x2f, 0x85, 0x75, 0x60, 0x2e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xfe, 0x0f, 0x15, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1092(ch_1092, ch_1092 + sizeof(ch_1092) -1);
CDataStream stream_1092(vch_1092, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1092;
stream_1092 >> txHist_1092;

if(block.vtx[0]->GetHash() == txHist_1092.GetHash() && nHeight == 1264387) {
return true;
}
unsigned char ch_1093[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd5, 0x4a, 0x13, 0x04, 0x7c, 0x35, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x2d, 0xc9, 0x07, 0x40, 0x9a, 0xcc, 0x10, 0x14, 0x27, 0xb5, 0x14, 0x54, 0xf3, 0x89, 0xf8, 0x00, 0x8e, 0x54, 0xcb, 0xc0, 0x2a, 0xb1, 0xde, 0xab, 0xdc, 0xb7, 0x90, 0x77, 0xde, 0x42, 0xff, 0xc2, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xfd, 0x5b, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1093(ch_1093, ch_1093 + sizeof(ch_1093) -1);
CDataStream stream_1093(vch_1093, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1093;
stream_1093 >> txHist_1093;

if(block.vtx[0]->GetHash() == txHist_1093.GetHash() && nHeight == 1264341) {
return true;
}
unsigned char ch_1094[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x98, 0x4a, 0x13, 0x04, 0xcf, 0x1b, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x60, 0x7e, 0xa6, 0x31, 0x97, 0xde, 0x9b, 0x41, 0xab, 0xa3, 0x46, 0x18, 0xb6, 0x93, 0xc0, 0xc8, 0x49, 0xe4, 0xe7, 0xbb, 0x54, 0xea, 0x3e, 0x0b, 0x09, 0x6e, 0xee, 0xf3, 0x84, 0xe3, 0x3d, 0x2d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xaa, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x60, 0xe9, 0xea, 0x56, 0xa9, 0x31, 0xa7, 0x31, 0xda, 0x43, 0x40, 0x00, 0x2d, 0x7d, 0xb0, 0x94, 0x7a, 0xfb, 0x3f, 0x17, 0x93, 0x5d, 0x39, 0xfe, 0x97, 0xdc, 0xca, 0x5c, 0x32, 0x81, 0xab, 0xee, 0xc0, 0xe3, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1094(ch_1094, ch_1094 + sizeof(ch_1094) -1);
CDataStream stream_1094(vch_1094, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1094;
stream_1094 >> txHist_1094;

if(block.vtx[0]->GetHash() == txHist_1094.GetHash() && nHeight == 1264280) {
return true;
}
unsigned char ch_1095[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd2, 0x4a, 0x13, 0x04, 0x3b, 0x34, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa7, 0x8a, 0xb0, 0xed, 0x21, 0x9d, 0xac, 0x2e, 0x4a, 0x1b, 0xee, 0xa8, 0x89, 0x04, 0xec, 0x40, 0x47, 0x83, 0xd8, 0x62, 0x53, 0x58, 0x0c, 0xab, 0xae, 0x62, 0x81, 0x0e, 0x89, 0x26, 0xb1, 0xc3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0xc2, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1095(ch_1095, ch_1095 + sizeof(ch_1095) -1);
CDataStream stream_1095(vch_1095, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1095;
stream_1095 >> txHist_1095;

if(block.vtx[0]->GetHash() == txHist_1095.GetHash() && nHeight == 1264338) {
return true;
}
unsigned char ch_1096[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x90, 0x4a, 0x13, 0x04, 0x5b, 0x17, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x10, 0x81, 0x88, 0x48, 0xa9, 0x83, 0x74, 0x2f, 0x5a, 0x8d, 0x19, 0x26, 0x71, 0x12, 0xfd, 0x41, 0x2b, 0xb6, 0xd6, 0x33, 0x57, 0x16, 0x59, 0x6e, 0xea, 0x08, 0x4e, 0xcf, 0xcf, 0xf7, 0xa1, 0xda, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xfb, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xc4, 0x52, 0xdf, 0xfb, 0x38, 0xb1, 0xc1, 0x6c, 0xf1, 0xd3, 0x3c, 0x08, 0x5e, 0x68, 0x10, 0xe4, 0xe8, 0x3e, 0x73, 0x08, 0xbf, 0x7a, 0x9a, 0xd4, 0x30, 0x24, 0xc3, 0x2a, 0xb2, 0x10, 0x6b, 0x20, 0x71, 0x64, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1096(ch_1096, ch_1096 + sizeof(ch_1096) -1);
CDataStream stream_1096(vch_1096, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1096;
stream_1096 >> txHist_1096;

if(block.vtx[0]->GetHash() == txHist_1096.GetHash() && nHeight == 1264272) {
return true;
}
unsigned char ch_1097[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xbf, 0x4a, 0x13, 0x04, 0xff, 0x2b, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb0, 0x7b, 0xa6, 0x84, 0x82, 0xfb, 0x85, 0xc9, 0x8c, 0x1f, 0x7c, 0x40, 0x6e, 0xce, 0x9e, 0x73, 0xbf, 0xe9, 0x1f, 0x5d, 0x23, 0x0e, 0x75, 0xb6, 0x75, 0x63, 0x7c, 0x7f, 0x20, 0x1c, 0x80, 0xa3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xda, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1097(ch_1097, ch_1097 + sizeof(ch_1097) -1);
CDataStream stream_1097(vch_1097, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1097;
stream_1097 >> txHist_1097;

if(block.vtx[0]->GetHash() == txHist_1097.GetHash() && nHeight == 1264319) {
return true;
}
unsigned char ch_1098[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xcf, 0x4a, 0x13, 0x04, 0x98, 0x32, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x06, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x93, 0x40, 0xc1, 0x54, 0x02, 0x4a, 0x79, 0x62, 0x17, 0x43, 0xd1, 0xb9, 0x01, 0xe3, 0x48, 0x69, 0xd0, 0x29, 0xaf, 0x0c, 0xe7, 0x0d, 0x3c, 0xb6, 0xc1, 0x56, 0xe2, 0xc4, 0x1a, 0x30, 0x17, 0xdd, 0xc8, 0x4e, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1098(ch_1098, ch_1098 + sizeof(ch_1098) -1);
CDataStream stream_1098(vch_1098, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1098;
stream_1098 >> txHist_1098;

if(block.vtx[0]->GetHash() == txHist_1098.GetHash() && nHeight == 1264335) {
return true;
}
unsigned char ch_1099[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x88, 0x4a, 0x13, 0x04, 0xd9, 0x12, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x87, 0xf0, 0xf4, 0xf0, 0x74, 0xf1, 0x83, 0xab, 0x62, 0xbf, 0x31, 0xdf, 0xdc, 0xae, 0xce, 0xbc, 0x77, 0xad, 0xbe, 0xd5, 0x4f, 0x80, 0xdf, 0x9d, 0x16, 0xed, 0x6d, 0xc6, 0x45, 0xaf, 0xfe, 0xf5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xfd, 0xed, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1099(ch_1099, ch_1099 + sizeof(ch_1099) -1);
CDataStream stream_1099(vch_1099, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1099;
stream_1099 >> txHist_1099;

if(block.vtx[0]->GetHash() == txHist_1099.GetHash() && nHeight == 1264264) {
return true;
}
unsigned char ch_1100[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xcb, 0x4a, 0x13, 0x04, 0x64, 0x32, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb3, 0x73, 0x27, 0xf6, 0x9a, 0xea, 0xab, 0xfa, 0xbf, 0xde, 0xe2, 0x30, 0x55, 0xba, 0xb7, 0x96, 0x7a, 0x90, 0xa6, 0xcf, 0xcf, 0x9a, 0x79, 0x95, 0xd1, 0xfd, 0x10, 0xa1, 0x7c, 0xe5, 0x3d, 0xa2, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x04, 0x91, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1100(ch_1100, ch_1100 + sizeof(ch_1100) -1);
CDataStream stream_1100(vch_1100, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1100;
stream_1100 >> txHist_1100;

if(block.vtx[0]->GetHash() == txHist_1100.GetHash() && nHeight == 1264331) {
return true;
}
unsigned char ch_1101[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x78, 0x4a, 0x13, 0x04, 0xeb, 0x0b, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xef, 0xa6, 0x33, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x14, 0x5a, 0xe2, 0x95, 0x0a, 0x79, 0x15, 0xe7, 0x95, 0x30, 0x0d, 0xae, 0xd7, 0x02, 0x26, 0xd6, 0xa9, 0x46, 0xea, 0xff, 0x8e, 0x8b, 0x3e, 0xb7, 0xb8, 0x1a, 0x40, 0x60, 0x33, 0x53, 0x71, 0x95, 0xe0, 0x2c, 0x66, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1101(ch_1101, ch_1101 + sizeof(ch_1101) -1);
CDataStream stream_1101(vch_1101, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1101;
stream_1101 >> txHist_1101;

if(block.vtx[0]->GetHash() == txHist_1101.GetHash() && nHeight == 1264248) {
return true;
}
unsigned char ch_1102[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x70, 0x4a, 0x13, 0x04, 0xe2, 0x06, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x22, 0x37, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1102(ch_1102, ch_1102 + sizeof(ch_1102) -1);
CDataStream stream_1102(vch_1102, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1102;
stream_1102 >> txHist_1102;

if(block.vtx[0]->GetHash() == txHist_1102.GetHash() && nHeight == 1264240) {
return true;
}
unsigned char ch_1103[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x68, 0x4a, 0x13, 0x04, 0x94, 0x04, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x08, 0x76, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1103(ch_1103, ch_1103 + sizeof(ch_1103) -1);
CDataStream stream_1103(vch_1103, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1103;
stream_1103 >> txHist_1103;

if(block.vtx[0]->GetHash() == txHist_1103.GetHash() && nHeight == 1264232) {
return true;
}
unsigned char ch_1104[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xdc, 0x4a, 0x13, 0x04, 0x08, 0x3a, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9a, 0xaa, 0xa3, 0x0d, 0x57, 0xf4, 0x6f, 0x13, 0x51, 0x4c, 0x48, 0x9d, 0xe9, 0x4e, 0xfe, 0xa7, 0xb7, 0x23, 0x4e, 0xb1, 0x95, 0x5b, 0x63, 0x47, 0x6d, 0x67, 0xc9, 0xf5, 0xe2, 0x6b, 0xf8, 0xb0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x6b, 0xf2, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1104(ch_1104, ch_1104 + sizeof(ch_1104) -1);
CDataStream stream_1104(vch_1104, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1104;
stream_1104 >> txHist_1104;

if(block.vtx[0]->GetHash() == txHist_1104.GetHash() && nHeight == 1264348) {
return true;
}
unsigned char ch_1105[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb9, 0x4a, 0x13, 0x04, 0x87, 0x2a, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x6a, 0xdc, 0x7a, 0x31, 0xf2, 0xb9, 0x5a, 0xf2, 0x18, 0xff, 0x7d, 0xf7, 0x01, 0x5d, 0x5a, 0x69, 0x06, 0x94, 0x71, 0xbe, 0xa0, 0x0e, 0x29, 0x3b, 0x33, 0x5f, 0x12, 0x1c, 0x26, 0xfd, 0xca, 0xd0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xe7, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1105(ch_1105, ch_1105 + sizeof(ch_1105) -1);
CDataStream stream_1105(vch_1105, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1105;
stream_1105 >> txHist_1105;

if(block.vtx[0]->GetHash() == txHist_1105.GetHash() && nHeight == 1264313) {
return true;
}
unsigned char ch_1106[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb1, 0x4a, 0x13, 0x04, 0x55, 0x27, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x13, 0x37, 0x08, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1106(ch_1106, ch_1106 + sizeof(ch_1106) -1);
CDataStream stream_1106(vch_1106, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1106;
stream_1106 >> txHist_1106;

if(block.vtx[0]->GetHash() == txHist_1106.GetHash() && nHeight == 1264305) {
return true;
}
unsigned char ch_1107[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xbb, 0x4a, 0x13, 0x04, 0xb1, 0x2a, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x13, 0xe0, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1107(ch_1107, ch_1107 + sizeof(ch_1107) -1);
CDataStream stream_1107(vch_1107, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1107;
stream_1107 >> txHist_1107;

if(block.vtx[0]->GetHash() == txHist_1107.GetHash() && nHeight == 1264315) {
return true;
}
unsigned char ch_1108[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xab, 0x4a, 0x13, 0x04, 0x74, 0x24, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbf, 0x3c, 0x6d, 0x9f, 0x3b, 0x32, 0xf8, 0x22, 0x28, 0xe0, 0x0b, 0x10, 0x36, 0x53, 0xfc, 0x4d, 0x60, 0x73, 0x7d, 0xa9, 0x86, 0xbd, 0x22, 0x17, 0x07, 0xd1, 0x3d, 0xde, 0x6c, 0x7d, 0x7c, 0xce, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xfb, 0x53, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1108(ch_1108, ch_1108 + sizeof(ch_1108) -1);
CDataStream stream_1108(vch_1108, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1108;
stream_1108 >> txHist_1108;

if(block.vtx[0]->GetHash() == txHist_1108.GetHash() && nHeight == 1264299) {
return true;
}
unsigned char ch_1109[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa3, 0x4a, 0x13, 0x04, 0xe4, 0x1f, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x64, 0x47, 0xb7, 0x09, 0xf6, 0x80, 0xe9, 0xfd, 0xfc, 0x5b, 0xc6, 0xab, 0x26, 0xac, 0x0e, 0x5c, 0xfe, 0x16, 0xc5, 0x26, 0x0d, 0x62, 0x36, 0xd8, 0x96, 0x2a, 0xaa, 0x50, 0x5b, 0x2d, 0xa8, 0x87, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x7d, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1109(ch_1109, ch_1109 + sizeof(ch_1109) -1);
CDataStream stream_1109(vch_1109, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1109;
stream_1109 >> txHist_1109;

if(block.vtx[0]->GetHash() == txHist_1109.GetHash() && nHeight == 1264291) {
return true;
}
unsigned char ch_1110[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9b, 0x4a, 0x13, 0x04, 0xd2, 0x1b, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x60, 0x7e, 0xa6, 0x31, 0x97, 0xde, 0x9b, 0x41, 0xab, 0xa3, 0x46, 0x18, 0xb6, 0x93, 0xc0, 0xc8, 0x49, 0xe4, 0xe7, 0xbb, 0x54, 0xea, 0x3e, 0x0b, 0x09, 0x6e, 0xee, 0xf3, 0x84, 0xe3, 0x3d, 0x2d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xfa, 0x7f, 0x60, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1110(ch_1110, ch_1110 + sizeof(ch_1110) -1);
CDataStream stream_1110(vch_1110, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1110;
stream_1110 >> txHist_1110;

if(block.vtx[0]->GetHash() == txHist_1110.GetHash() && nHeight == 1264283) {
return true;
}
unsigned char ch_1111[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x93, 0x4a, 0x13, 0x04, 0x17, 0x1a, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x0f, 0x57, 0x9b, 0x77, 0xa2, 0x4f, 0x4a, 0xec, 0x83, 0xb4, 0x66, 0xd6, 0x99, 0x01, 0x74, 0xc9, 0x88, 0xe0, 0x92, 0xac, 0x95, 0x4e, 0x08, 0x26, 0x6d, 0x01, 0x0b, 0x55, 0xe9, 0x5b, 0xba, 0xb7, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xf8, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x2b, 0xb6, 0x8c, 0x77, 0x8c, 0x57, 0xd1, 0x4d, 0x27, 0x73, 0x7e, 0x8d, 0x01, 0x2d, 0xa6, 0x81, 0x06, 0xb0, 0x98, 0x97, 0x22, 0x3c, 0x5f, 0x25, 0x4e, 0xed, 0xa8, 0x40, 0x79, 0x3d, 0x26, 0x3e, 0xf8, 0xa4, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1111(ch_1111, ch_1111 + sizeof(ch_1111) -1);
CDataStream stream_1111(vch_1111, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1111;
stream_1111 >> txHist_1111;

if(block.vtx[0]->GetHash() == txHist_1111.GetHash() && nHeight == 1264275) {
return true;
}
unsigned char ch_1112[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x8b, 0x4a, 0x13, 0x04, 0x68, 0x14, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x01, 0x05, 0xfa, 0x2d, 0x96, 0x13, 0xca, 0x5e, 0x9a, 0xab, 0x10, 0x28, 0xd4, 0x23, 0x54, 0x47, 0x31, 0x38, 0xd0, 0x92, 0x65, 0x39, 0x49, 0xe2, 0x8e, 0xf3, 0x12, 0x46, 0x73, 0x26, 0x53, 0xef, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xfd, 0x99, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1112(ch_1112, ch_1112 + sizeof(ch_1112) -1);
CDataStream stream_1112(vch_1112, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1112;
stream_1112 >> txHist_1112;

if(block.vtx[0]->GetHash() == txHist_1112.GetHash() && nHeight == 1264267) {
return true;
}
unsigned char ch_1113[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x83, 0x4a, 0x13, 0x04, 0x99, 0x0f, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x66, 0x56, 0xde, 0xcd, 0xf0, 0xf0, 0x87, 0xf5, 0x28, 0x30, 0x5e, 0xc1, 0xca, 0x22, 0x2c, 0xdd, 0x7e, 0xc4, 0xb0, 0x75, 0x0b, 0xb4, 0xa2, 0x5b, 0x42, 0x16, 0xc7, 0x92, 0x33, 0x91, 0x06, 0xf0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xfd, 0xc1, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1113(ch_1113, ch_1113 + sizeof(ch_1113) -1);
CDataStream stream_1113(vch_1113, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1113;
stream_1113 >> txHist_1113;

if(block.vtx[0]->GetHash() == txHist_1113.GetHash() && nHeight == 1264259) {
return true;
}
unsigned char ch_1114[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x73, 0x4a, 0x13, 0x04, 0xd3, 0x07, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x09, 0x97, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1114(ch_1114, ch_1114 + sizeof(ch_1114) -1);
CDataStream stream_1114(vch_1114, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1114;
stream_1114 >> txHist_1114;

if(block.vtx[0]->GetHash() == txHist_1114.GetHash() && nHeight == 1264243) {
return true;
}
unsigned char ch_1115[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5b, 0x4a, 0x13, 0x04, 0xce, 0x01, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9e, 0xcd, 0x15, 0xb3, 0x07, 0x03, 0x58, 0x34, 0x96, 0xdc, 0x15, 0x29, 0x0a, 0x1c, 0x37, 0x13, 0x1b, 0x32, 0xab, 0x32, 0x52, 0x63, 0xcf, 0x1c, 0x9e, 0x32, 0x2c, 0x75, 0x68, 0xfd, 0xbc, 0xbb, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xff, 0xfe, 0x04, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1115(ch_1115, ch_1115 + sizeof(ch_1115) -1);
CDataStream stream_1115(vch_1115, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1115;
stream_1115 >> txHist_1115;

if(block.vtx[0]->GetHash() == txHist_1115.GetHash() && nHeight == 1264219) {
return true;
}
unsigned char ch_1116[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x53, 0x4a, 0x13, 0x04, 0xbf, 0xff, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x4d, 0x43, 0xae, 0x6b, 0x60, 0xfa, 0x1d, 0x92, 0x39, 0x04, 0xed, 0x4f, 0x1f, 0xb6, 0xc4, 0x1c, 0x7b, 0x75, 0xfb, 0x30, 0xe7, 0x93, 0xb1, 0xbc, 0x84, 0x1e, 0x0b, 0xea, 0xdd, 0xa1, 0xe2, 0x1d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0x03, 0x5c, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1116(ch_1116, ch_1116 + sizeof(ch_1116) -1);
CDataStream stream_1116(vch_1116, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1116;
stream_1116 >> txHist_1116;

if(block.vtx[0]->GetHash() == txHist_1116.GetHash() && nHeight == 1264211) {
return true;
}
unsigned char ch_1117[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4b, 0x4a, 0x13, 0x04, 0xe5, 0xfd, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x53, 0xd3, 0x3f, 0x25, 0x15, 0x87, 0xdd, 0x7a, 0x26, 0x47, 0x70, 0xb1, 0xb5, 0x0a, 0xed, 0x0c, 0x27, 0xd9, 0xec, 0x73, 0x7f, 0x93, 0xe2, 0x37, 0x5f, 0x2f, 0xd2, 0x27, 0xc8, 0x82, 0xd2, 0xd7, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xff, 0xfe, 0x38, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1117(ch_1117, ch_1117 + sizeof(ch_1117) -1);
CDataStream stream_1117(vch_1117, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1117;
stream_1117 >> txHist_1117;

if(block.vtx[0]->GetHash() == txHist_1117.GetHash() && nHeight == 1264203) {
return true;
}
unsigned char ch_1118[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xbe, 0x4a, 0x13, 0x04, 0xfd, 0x2b, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb0, 0x7b, 0xa6, 0x84, 0x82, 0xfb, 0x85, 0xc9, 0x8c, 0x1f, 0x7c, 0x40, 0x6e, 0xce, 0x9e, 0x73, 0xbf, 0xe9, 0x1f, 0x5d, 0x23, 0x0e, 0x75, 0xb6, 0x75, 0x63, 0x7c, 0x7f, 0x20, 0x1c, 0x80, 0xa3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x04, 0x87, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1118(ch_1118, ch_1118 + sizeof(ch_1118) -1);
CDataStream stream_1118(vch_1118, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1118;
stream_1118 >> txHist_1118;

if(block.vtx[0]->GetHash() == txHist_1118.GetHash() && nHeight == 1264318) {
return true;
}
unsigned char ch_1119[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9a, 0x4a, 0x13, 0x04, 0xd1, 0x1b, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x60, 0x7e, 0xa6, 0x31, 0x97, 0xde, 0x9b, 0x41, 0xab, 0xa3, 0x46, 0x18, 0xb6, 0x93, 0xc0, 0xc8, 0x49, 0xe4, 0xe7, 0xbb, 0x54, 0xea, 0x3e, 0x0b, 0x09, 0x6e, 0xee, 0xf3, 0x84, 0xe3, 0x3d, 0x2d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xfd, 0xfc, 0x47, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1119(ch_1119, ch_1119 + sizeof(ch_1119) -1);
CDataStream stream_1119(vch_1119, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1119;
stream_1119 >> txHist_1119;

if(block.vtx[0]->GetHash() == txHist_1119.GetHash() && nHeight == 1264282) {
return true;
}
unsigned char ch_1120[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x92, 0x4a, 0x13, 0x04, 0x97, 0x17, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xae, 0x75, 0x4e, 0x2f, 0x4e, 0xf1, 0xa3, 0x00, 0x9f, 0x96, 0x41, 0x92, 0xbc, 0x66, 0x8e, 0x1d, 0xbf, 0x5a, 0xca, 0xb5, 0xf4, 0xfd, 0xcd, 0xca, 0xdf, 0x8b, 0x44, 0x04, 0x43, 0xde, 0xfd, 0x67, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x10, 0x69, 0x3e, 0x01, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1120(ch_1120, ch_1120 + sizeof(ch_1120) -1);
CDataStream stream_1120(vch_1120, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1120;
stream_1120 >> txHist_1120;

if(block.vtx[0]->GetHash() == txHist_1120.GetHash() && nHeight == 1264274) {
return true;
}
unsigned char ch_1121[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x8a, 0x4a, 0x13, 0x04, 0x50, 0x14, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x09, 0x99, 0x3c, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xef, 0xd0, 0x40, 0x7a, 0xaa, 0xe1, 0xd3, 0x81, 0x04, 0x63, 0xb1, 0x65, 0xa3, 0x77, 0xf8, 0xde, 0xa7, 0x0d, 0xa0, 0x10, 0xe4, 0x7f, 0x2d, 0x5c, 0xb1, 0xfc, 0xda, 0x69, 0x63, 0x85, 0xf7, 0x8d, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1121(ch_1121, ch_1121 + sizeof(ch_1121) -1);
CDataStream stream_1121(vch_1121, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1121;
stream_1121 >> txHist_1121;

if(block.vtx[0]->GetHash() == txHist_1121.GetHash() && nHeight == 1264266) {
return true;
}
unsigned char ch_1122[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x82, 0x4a, 0x13, 0x04, 0x75, 0x0f, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x10, 0xb3, 0xee, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa6, 0xfd, 0x17, 0x29, 0x47, 0xad, 0x60, 0x31, 0x27, 0x4f, 0x0d, 0x56, 0x62, 0x6e, 0x92, 0x10, 0x70, 0x8d, 0x96, 0xd0, 0x85, 0x7b, 0x38, 0x76, 0xbe, 0xdf, 0x71, 0xff, 0xf4, 0x22, 0x9d, 0x93, 0x48, 0x55, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1122(ch_1122, ch_1122 + sizeof(ch_1122) -1);
CDataStream stream_1122(vch_1122, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1122;
stream_1122 >> txHist_1122;

if(block.vtx[0]->GetHash() == txHist_1122.GetHash() && nHeight == 1264258) {
return true;
}
unsigned char ch_1123[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x7a, 0x4a, 0x13, 0x04, 0x4d, 0x0c, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x3d, 0x38, 0x1e, 0x68, 0x2b, 0x68, 0x72, 0x9d, 0xae, 0x49, 0x11, 0xba, 0xe7, 0x5a, 0xa2, 0x13, 0xc0, 0x45, 0xc4, 0xe0, 0x50, 0x88, 0xc5, 0x93, 0xf3, 0x6a, 0x94, 0xeb, 0x0e, 0x62, 0x09, 0x94, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x77, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1123(ch_1123, ch_1123 + sizeof(ch_1123) -1);
CDataStream stream_1123(vch_1123, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1123;
stream_1123 >> txHist_1123;

if(block.vtx[0]->GetHash() == txHist_1123.GetHash() && nHeight == 1264250) {
return true;
}
unsigned char ch_1124[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x72, 0x4a, 0x13, 0x04, 0xc7, 0x07, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x02, 0x03, 0x14, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x42, 0xe3, 0x02, 0x76, 0x2b, 0x58, 0xcf, 0x52, 0x07, 0x37, 0x10, 0xe4, 0xe8, 0x9f, 0x78, 0x30, 0xb4, 0x42, 0x47, 0x8d, 0x9b, 0x99, 0x3f, 0x22, 0xaf, 0x89, 0xea, 0x5c, 0x06, 0xda, 0x82, 0x2a, 0xf0, 0x87, 0x6e, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1124(ch_1124, ch_1124 + sizeof(ch_1124) -1);
CDataStream stream_1124(vch_1124, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1124;
stream_1124 >> txHist_1124;

if(block.vtx[0]->GetHash() == txHist_1124.GetHash() && nHeight == 1264242) {
return true;
}
unsigned char ch_1125[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x6a, 0x4a, 0x13, 0x04, 0x79, 0x05, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x21, 0x3d, 0x14, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xae, 0x69, 0xc3, 0x8d, 0xd0, 0xfb, 0xd6, 0x71, 0x36, 0x92, 0x81, 0x98, 0xc5, 0xb8, 0x0f, 0x99, 0xfa, 0x31, 0xf1, 0xf2, 0x98, 0x84, 0xfa, 0xfb, 0xcf, 0xd8, 0xd7, 0xf9, 0x6b, 0xc1, 0xed, 0x90, 0x80, 0x0f, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1125(ch_1125, ch_1125 + sizeof(ch_1125) -1);
CDataStream stream_1125(vch_1125, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1125;
stream_1125 >> txHist_1125;

if(block.vtx[0]->GetHash() == txHist_1125.GetHash() && nHeight == 1264234) {
return true;
}
unsigned char ch_1126[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x52, 0x4a, 0x13, 0x04, 0xba, 0xff, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x4d, 0x43, 0xae, 0x6b, 0x60, 0xfa, 0x1d, 0x92, 0x39, 0x04, 0xed, 0x4f, 0x1f, 0xb6, 0xc4, 0x1c, 0x7b, 0x75, 0xfb, 0x30, 0xe7, 0x93, 0xb1, 0xbc, 0x84, 0x1e, 0x0b, 0xea, 0xdd, 0xa1, 0xe2, 0x1d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x02, 0xa8, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1126(ch_1126, ch_1126 + sizeof(ch_1126) -1);
CDataStream stream_1126(vch_1126, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1126;
stream_1126 >> txHist_1126;

if(block.vtx[0]->GetHash() == txHist_1126.GetHash() && nHeight == 1264210) {
return true;
}
unsigned char ch_1127[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4a, 0x4a, 0x13, 0x04, 0xd5, 0xfd, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x07, 0x7d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xfa, 0x70, 0x63, 0x58, 0xfe, 0x82, 0x2d, 0xb0, 0xe3, 0x7f, 0xdb, 0x51, 0x1c, 0xad, 0xc1, 0xb5, 0x30, 0xce, 0x62, 0xd3, 0xab, 0xba, 0x34, 0xdb, 0xde, 0xb4, 0xe1, 0x6c, 0x6a, 0x89, 0x59, 0x3a, 0x58, 0x90, 0xf6, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x94, 0x63, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xe4, 0xf1, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1127(ch_1127, ch_1127 + sizeof(ch_1127) -1);
CDataStream stream_1127(vch_1127, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1127;
stream_1127 >> txHist_1127;

if(block.vtx[0]->GetHash() == txHist_1127.GetHash() && nHeight == 1264202) {
return true;
}
unsigned char ch_1128[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf7, 0x4a, 0x13, 0x04, 0x60, 0x47, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x17, 0x01, 0xb1, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xb3, 0x14, 0x32, 0x39, 0xf1, 0x96, 0x3d, 0xa8, 0x32, 0x60, 0x22, 0x54, 0x09, 0x00, 0x78, 0x5f, 0x8b, 0xdc, 0x64, 0x98, 0x83, 0xdf, 0xed, 0xe2, 0x46, 0x18, 0xa8, 0xbc, 0xeb, 0x73, 0xfb, 0x13, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1128(ch_1128, ch_1128 + sizeof(ch_1128) -1);
CDataStream stream_1128(vch_1128, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1128;
stream_1128 >> txHist_1128;

if(block.vtx[0]->GetHash() == txHist_1128.GetHash() && nHeight == 1264375) {
return true;
}
unsigned char ch_1129[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf4, 0x4a, 0x13, 0x04, 0x87, 0x45, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe6, 0xbe, 0xd2, 0x72, 0x09, 0xff, 0x13, 0x62, 0xa1, 0xc5, 0x18, 0x3b, 0x30, 0x27, 0x37, 0xee, 0xcd, 0x9e, 0x7c, 0x01, 0xa4, 0x33, 0x89, 0x89, 0xd8, 0x04, 0x1a, 0x78, 0x54, 0xa0, 0xa3, 0x28, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x06, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xea, 0xc5, 0xb2, 0x9f, 0x3e, 0x54, 0x04, 0xaa, 0x92, 0xb5, 0xab, 0xf3, 0xe2, 0xb5, 0x71, 0xb1, 0x16, 0x50, 0x17, 0x58, 0x19, 0xf5, 0xc1, 0xd4, 0xa8, 0xa9, 0x95, 0xbb, 0x18, 0x74, 0x72, 0x0f, 0x40, 0x54, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1129(ch_1129, ch_1129 + sizeof(ch_1129) -1);
CDataStream stream_1129(vch_1129, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1129;
stream_1129 >> txHist_1129;

if(block.vtx[0]->GetHash() == txHist_1129.GetHash() && nHeight == 1264372) {
return true;
}
unsigned char ch_1130[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xee, 0x4a, 0x13, 0x04, 0xb1, 0x42, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x21, 0xcf, 0x35, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x88, 0xdf, 0xf3, 0xee, 0xc1, 0x99, 0x16, 0x5a, 0x12, 0xb1, 0xd2, 0x67, 0x73, 0xab, 0xf3, 0xc7, 0xad, 0x12, 0x62, 0xa1, 0xa1, 0x53, 0xe0, 0xec, 0x21, 0x8f, 0x34, 0x1f, 0xb6, 0xe2, 0xc8, 0x9c, 0x98, 0xcf, 0x6a, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1130(ch_1130, ch_1130 + sizeof(ch_1130) -1);
CDataStream stream_1130(vch_1130, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1130;
stream_1130 >> txHist_1130;

if(block.vtx[0]->GetHash() == txHist_1130.GetHash() && nHeight == 1264366) {
return true;
}
unsigned char ch_1131[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xea, 0x4a, 0x13, 0x04, 0x94, 0x40, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x61, 0x37, 0x65, 0x66, 0x34, 0x30, 0x45, 0x52, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x07, 0x60, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x7f, 0x6c, 0xb0, 0x1e, 0x87, 0x7f, 0x47, 0xf6, 0x56, 0xf3, 0x80, 0x11, 0xf0, 0x67, 0xfd, 0x54, 0xbf, 0x55, 0x4e, 0x48, 0x7b, 0x5d, 0x36, 0xe8, 0x99, 0x8e, 0xe0, 0xf7, 0x0c, 0x20, 0x35, 0x7a, 0xc0, 0xd2, 0xfc, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xa0, 0x74, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0x20, 0x47, 0x85, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1131(ch_1131, ch_1131 + sizeof(ch_1131) -1);
CDataStream stream_1131(vch_1131, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1131;
stream_1131 >> txHist_1131;

if(block.vtx[0]->GetHash() == txHist_1131.GetHash() && nHeight == 1264362) {
return true;
}
unsigned char ch_1132[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe6, 0x4a, 0x13, 0x04, 0xcb, 0x3c, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf2, 0xdb, 0x4d, 0x52, 0x81, 0x21, 0x3d, 0x47, 0x46, 0x99, 0xd5, 0x8f, 0xad, 0xbc, 0x31, 0xce, 0x49, 0xea, 0x5f, 0x4e, 0x9d, 0xcb, 0xd4, 0x5f, 0x86, 0xf6, 0xa6, 0x61, 0x79, 0x2f, 0x3a, 0x5a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4f, 0xff, 0xfd, 0x80, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1132(ch_1132, ch_1132 + sizeof(ch_1132) -1);
CDataStream stream_1132(vch_1132, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1132;
stream_1132 >> txHist_1132;

if(block.vtx[0]->GetHash() == txHist_1132.GetHash() && nHeight == 1264358) {
return true;
}
unsigned char ch_1133[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe2, 0x4a, 0x13, 0x04, 0x08, 0x3c, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xed, 0xb4, 0xf3, 0x5d, 0xfc, 0x65, 0x0d, 0xfc, 0x4f, 0x96, 0x42, 0xad, 0xdd, 0x82, 0x60, 0xc5, 0x32, 0x2e, 0x1a, 0xff, 0x8c, 0x74, 0xcb, 0x9a, 0x2c, 0xd1, 0xcd, 0xed, 0x8e, 0x98, 0x7c, 0xd0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x0d, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x9a, 0x6f, 0x10, 0x8a, 0xd9, 0x4c, 0x1b, 0x4c, 0xa2, 0x63, 0x2d, 0x46, 0x7d, 0xf2, 0x55, 0x0f, 0x7c, 0x24, 0xac, 0xf5, 0x5f, 0xb8, 0x46, 0xc4, 0x9e, 0xff, 0x71, 0xba, 0x63, 0x07, 0xee, 0x05, 0x78, 0x0e, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1133(ch_1133, ch_1133 + sizeof(ch_1133) -1);
CDataStream stream_1133(vch_1133, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1133;
stream_1133 >> txHist_1133;

if(block.vtx[0]->GetHash() == txHist_1133.GetHash() && nHeight == 1264354) {
return true;
}
unsigned char ch_1134[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xde, 0x4a, 0x13, 0x04, 0x0b, 0x3a, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9a, 0xaa, 0xa3, 0x0d, 0x57, 0xf4, 0x6f, 0x13, 0x51, 0x4c, 0x48, 0x9d, 0xe9, 0x4e, 0xfe, 0xa7, 0xb7, 0x23, 0x4e, 0xb1, 0x95, 0x5b, 0x63, 0x47, 0x6d, 0x67, 0xc9, 0xf5, 0xe2, 0x6b, 0xf8, 0xb0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x3c, 0x75, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1134(ch_1134, ch_1134 + sizeof(ch_1134) -1);
CDataStream stream_1134(vch_1134, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1134;
stream_1134 >> txHist_1134;

if(block.vtx[0]->GetHash() == txHist_1134.GetHash() && nHeight == 1264350) {
return true;
}
unsigned char ch_1135[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xda, 0x4a, 0x13, 0x04, 0xfd, 0x39, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9a, 0xaa, 0xa3, 0x0d, 0x57, 0xf4, 0x6f, 0x13, 0x51, 0x4c, 0x48, 0x9d, 0xe9, 0x4e, 0xfe, 0xa7, 0xb7, 0x23, 0x4e, 0xb1, 0x95, 0x5b, 0x63, 0x47, 0x6d, 0x67, 0xc9, 0xf5, 0xe2, 0x6b, 0xf8, 0xb0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xff, 0xfe, 0x07, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1135(ch_1135, ch_1135 + sizeof(ch_1135) -1);
CDataStream stream_1135(vch_1135, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1135;
stream_1135 >> txHist_1135;

if(block.vtx[0]->GetHash() == txHist_1135.GetHash() && nHeight == 1264346) {
return true;
}
unsigned char ch_1136[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd7, 0x4a, 0x13, 0x04, 0x0f, 0x39, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc7, 0x61, 0x8e, 0xcb, 0x0c, 0x9a, 0x5f, 0x03, 0x98, 0x68, 0x59, 0xc0, 0x8d, 0x5a, 0x04, 0xa3, 0xfe, 0x4d, 0x81, 0x42, 0x2e, 0x85, 0x12, 0x90, 0xa6, 0xb6, 0x4e, 0x4e, 0x11, 0x09, 0xa3, 0x45, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1136(ch_1136, ch_1136 + sizeof(ch_1136) -1);
CDataStream stream_1136(vch_1136, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1136;
stream_1136 >> txHist_1136;

if(block.vtx[0]->GetHash() == txHist_1136.GetHash() && nHeight == 1264343) {
return true;
}
unsigned char ch_1137[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd4, 0x4a, 0x13, 0x04, 0x7a, 0x35, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x2d, 0xc9, 0x07, 0x40, 0x9a, 0xcc, 0x10, 0x14, 0x27, 0xb5, 0x14, 0x54, 0xf3, 0x89, 0xf8, 0x00, 0x8e, 0x54, 0xcb, 0xc0, 0x2a, 0xb1, 0xde, 0xab, 0xdc, 0xb7, 0x90, 0x77, 0xde, 0x42, 0xff, 0xc2, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xfd, 0x2e, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x0f, 0xd9, 0xf8, 0xc5, 0x99, 0x60, 0x56, 0x30, 0x2e, 0xea, 0x1d, 0xa0, 0xc2, 0xd4, 0x5e, 0x97, 0x32, 0x47, 0x9b, 0x62, 0x0a, 0x87, 0xbf, 0x96, 0xfd, 0x5f, 0x1c, 0xd9, 0xcf, 0xc6, 0x2a, 0x95, 0x50, 0xfe, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1137(ch_1137, ch_1137 + sizeof(ch_1137) -1);
CDataStream stream_1137(vch_1137, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1137;
stream_1137 >> txHist_1137;

if(block.vtx[0]->GetHash() == txHist_1137.GetHash() && nHeight == 1264340) {
return true;
}
unsigned char ch_1138[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd1, 0x4a, 0x13, 0x04, 0x39, 0x34, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa7, 0x8a, 0xb0, 0xed, 0x21, 0x9d, 0xac, 0x2e, 0x4a, 0x1b, 0xee, 0xa8, 0x89, 0x04, 0xec, 0x40, 0x47, 0x83, 0xd8, 0x62, 0x53, 0x58, 0x0c, 0xab, 0xae, 0x62, 0x81, 0x0e, 0x89, 0x26, 0xb1, 0xc3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xfd, 0xaf, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1138(ch_1138, ch_1138 + sizeof(ch_1138) -1);
CDataStream stream_1138(vch_1138, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1138;
stream_1138 >> txHist_1138;

if(block.vtx[0]->GetHash() == txHist_1138.GetHash() && nHeight == 1264337) {
return true;
}
unsigned char ch_1139[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xce, 0x4a, 0x13, 0x04, 0x6f, 0x32, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x08, 0x1e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1139(ch_1139, ch_1139 + sizeof(ch_1139) -1);
CDataStream stream_1139(vch_1139, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1139;
stream_1139 >> txHist_1139;

if(block.vtx[0]->GetHash() == txHist_1139.GetHash() && nHeight == 1264334) {
return true;
}
unsigned char ch_1140[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xca, 0x4a, 0x13, 0x04, 0x5f, 0x32, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb3, 0x73, 0x27, 0xf6, 0x9a, 0xea, 0xab, 0xfa, 0xbf, 0xde, 0xe2, 0x30, 0x55, 0xba, 0xb7, 0x96, 0x7a, 0x90, 0xa6, 0xcf, 0xcf, 0x9a, 0x79, 0x95, 0xd1, 0xfd, 0x10, 0xa1, 0x7c, 0xe5, 0x3d, 0xa2, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0x95, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1140(ch_1140, ch_1140 + sizeof(ch_1140) -1);
CDataStream stream_1140(vch_1140, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1140;
stream_1140 >> txHist_1140;

if(block.vtx[0]->GetHash() == txHist_1140.GetHash() && nHeight == 1264330) {
return true;
}
unsigned char ch_1141[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc5, 0x4a, 0x13, 0x04, 0x94, 0x2e, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd7, 0x67, 0xba, 0xbb, 0x52, 0xab, 0x1f, 0x11, 0x52, 0xe1, 0x1b, 0x77, 0xa9, 0xb6, 0xf8, 0x66, 0x2f, 0x4a, 0x95, 0x13, 0x91, 0x7b, 0x00, 0x11, 0x6e, 0x20, 0xe9, 0x57, 0xbf, 0x5d, 0x14, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x01, 0x44, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1141(ch_1141, ch_1141 + sizeof(ch_1141) -1);
CDataStream stream_1141(vch_1141, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1141;
stream_1141 >> txHist_1141;

if(block.vtx[0]->GetHash() == txHist_1141.GetHash() && nHeight == 1264325) {
return true;
}
unsigned char ch_1142[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb7, 0x4a, 0x13, 0x04, 0x85, 0x2a, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x6a, 0xdc, 0x7a, 0x31, 0xf2, 0xb9, 0x5a, 0xf2, 0x18, 0xff, 0x7d, 0xf7, 0x01, 0x5d, 0x5a, 0x69, 0x06, 0x94, 0x71, 0xbe, 0xa0, 0x0e, 0x29, 0x3b, 0x33, 0x5f, 0x12, 0x1c, 0x26, 0xfd, 0xca, 0xd0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1142(ch_1142, ch_1142 + sizeof(ch_1142) -1);
CDataStream stream_1142(vch_1142, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1142;
stream_1142 >> txHist_1142;

if(block.vtx[0]->GetHash() == txHist_1142.GetHash() && nHeight == 1264311) {
return true;
}
unsigned char ch_1143[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xaf, 0x4a, 0x13, 0x04, 0x27, 0x27, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe7, 0x3c, 0x3d, 0xaa, 0xd0, 0x2d, 0xcf, 0x3c, 0x16, 0xc7, 0x0b, 0xbd, 0xa2, 0x22, 0x82, 0x27, 0x8b, 0x76, 0x60, 0xe7, 0x05, 0xc2, 0x75, 0xf0, 0xc5, 0x7b, 0x82, 0xa0, 0x71, 0xc1, 0x08, 0x8e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xc3, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1143(ch_1143, ch_1143 + sizeof(ch_1143) -1);
CDataStream stream_1143(vch_1143, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1143;
stream_1143 >> txHist_1143;

if(block.vtx[0]->GetHash() == txHist_1143.GetHash() && nHeight == 1264303) {
return true;
}
unsigned char ch_1144[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa7, 0x4a, 0x13, 0x04, 0x60, 0x23, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x20, 0xbc, 0x0e, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x73, 0xb8, 0x87, 0x38, 0x05, 0x52, 0x8e, 0x7c, 0x04, 0x7f, 0xd8, 0xd8, 0x01, 0x50, 0xb1, 0x1a, 0x62, 0xe0, 0xc5, 0x59, 0xff, 0x8e, 0x5b, 0xbf, 0xa2, 0x41, 0x8e, 0x7a, 0x79, 0x3a, 0x09, 0x21, 0x70, 0xc9, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1144(ch_1144, ch_1144 + sizeof(ch_1144) -1);
CDataStream stream_1144(vch_1144, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1144;
stream_1144 >> txHist_1144;

if(block.vtx[0]->GetHash() == txHist_1144.GetHash() && nHeight == 1264295) {
return true;
}
unsigned char ch_1145[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9f, 0x4a, 0x13, 0x04, 0x98, 0x1c, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x8b, 0xf6, 0x49, 0xec, 0x44, 0x51, 0x4e, 0xd3, 0xb4, 0xdd, 0x93, 0x3a, 0x21, 0x9c, 0xfd, 0x3c, 0x5c, 0x88, 0xb8, 0xe7, 0xdc, 0x36, 0x62, 0x16, 0xae, 0xc0, 0x1d, 0x06, 0x2b, 0x87, 0xea, 0xea, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x03, 0xa7, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1145(ch_1145, ch_1145 + sizeof(ch_1145) -1);
CDataStream stream_1145(vch_1145, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1145;
stream_1145 >> txHist_1145;

if(block.vtx[0]->GetHash() == txHist_1145.GetHash() && nHeight == 1264287) {
return true;
}
unsigned char ch_1146[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x97, 0x4a, 0x13, 0x04, 0xad, 0x1b, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x60, 0x7e, 0xa6, 0x31, 0x97, 0xde, 0x9b, 0x41, 0xab, 0xa3, 0x46, 0x18, 0xb6, 0x93, 0xc0, 0xc8, 0x49, 0xe4, 0xe7, 0xbb, 0x54, 0xea, 0x3e, 0x0b, 0x09, 0x6e, 0xee, 0xf3, 0x84, 0xe3, 0x3d, 0x2d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0xbf, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x69, 0x44, 0x15, 0x64, 0x4d, 0x96, 0xf4, 0x6f, 0x84, 0x13, 0xd4, 0xfc, 0xb8, 0x4e, 0x2b, 0xf6, 0x49, 0x91, 0xe5, 0x6a, 0x6a, 0x67, 0x96, 0x02, 0xd0, 0xf2, 0x14, 0xe2, 0xab, 0x23, 0x28, 0x28, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1146(ch_1146, ch_1146 + sizeof(ch_1146) -1);
CDataStream stream_1146(vch_1146, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1146;
stream_1146 >> txHist_1146;

if(block.vtx[0]->GetHash() == txHist_1146.GetHash() && nHeight == 1264279) {
return true;
}
unsigned char ch_1147[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x87, 0x4a, 0x13, 0x04, 0xb0, 0x12, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x10, 0xb3, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1147(ch_1147, ch_1147 + sizeof(ch_1147) -1);
CDataStream stream_1147(vch_1147, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1147;
stream_1147 >> txHist_1147;

if(block.vtx[0]->GetHash() == txHist_1147.GetHash() && nHeight == 1264263) {
return true;
}
unsigned char ch_1148[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x7f, 0x4a, 0x13, 0x04, 0x41, 0x0d, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x2f, 0x3f, 0xc5, 0xb2, 0x40, 0xd2, 0x6a, 0xd8, 0xb7, 0x54, 0xcc, 0xcf, 0x6e, 0xaa, 0x8b, 0xc2, 0x2f, 0x38, 0xe1, 0x8e, 0x62, 0xbb, 0xe7, 0x9e, 0x7f, 0x43, 0xcd, 0x0e, 0x33, 0xe5, 0xa3, 0x4a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0xff, 0xff, 0xc7, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1148(ch_1148, ch_1148 + sizeof(ch_1148) -1);
CDataStream stream_1148(vch_1148, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1148;
stream_1148 >> txHist_1148;

if(block.vtx[0]->GetHash() == txHist_1148.GetHash() && nHeight == 1264255) {
return true;
}
unsigned char ch_1149[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x6f, 0x4a, 0x13, 0x04, 0xed, 0x06, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x6f, 0xc8, 0x08, 0x7e, 0xe0, 0xcb, 0xee, 0xf2, 0x7d, 0xaa, 0xfd, 0x20, 0x9d, 0xf2, 0xb6, 0x3f, 0x3b, 0x5c, 0x8b, 0x51, 0xe7, 0x51, 0xd7, 0x02, 0xf4, 0x5e, 0xe1, 0x86, 0xc6, 0xfd, 0xcf, 0x64, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xff, 0xfd, 0xd4, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1149(ch_1149, ch_1149 + sizeof(ch_1149) -1);
CDataStream stream_1149(vch_1149, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1149;
stream_1149 >> txHist_1149;

if(block.vtx[0]->GetHash() == txHist_1149.GetHash() && nHeight == 1264239) {
return true;
}
unsigned char ch_1150[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x67, 0x4a, 0x13, 0x04, 0x9f, 0x04, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9b, 0xce, 0x5b, 0xb5, 0x5c, 0xdc, 0x02, 0x82, 0xf8, 0x1f, 0xb7, 0x65, 0x0c, 0x00, 0x8a, 0x2d, 0xd2, 0x29, 0x2b, 0x6d, 0x81, 0xb1, 0xa7, 0xcc, 0x65, 0x42, 0x98, 0xb1, 0x31, 0xc7, 0x55, 0xdd, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xfc, 0xf3, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1150(ch_1150, ch_1150 + sizeof(ch_1150) -1);
CDataStream stream_1150(vch_1150, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1150;
stream_1150 >> txHist_1150;

if(block.vtx[0]->GetHash() == txHist_1150.GetHash() && nHeight == 1264231) {
return true;
}
unsigned char ch_1151[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x57, 0x4a, 0x13, 0x04, 0x5f, 0x00, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfa, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1151(ch_1151, ch_1151 + sizeof(ch_1151) -1);
CDataStream stream_1151(vch_1151, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1151;
stream_1151 >> txHist_1151;

if(block.vtx[0]->GetHash() == txHist_1151.GetHash() && nHeight == 1264215) {
return true;
}
unsigned char ch_1152[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb6, 0x4a, 0x13, 0x04, 0x6c, 0x2a, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x08, 0x76, 0x1f, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x19, 0xbe, 0x51, 0x64, 0x16, 0x3b, 0xc7, 0xd6, 0x01, 0x4f, 0xdb, 0x0d, 0x24, 0x6c, 0x0d, 0xd8, 0xe1, 0xbd, 0x07, 0xdd, 0x0b, 0x0a, 0xe8, 0xc6, 0x4a, 0xcb, 0x00, 0xae, 0xa3, 0xee, 0xf3, 0x05, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1152(ch_1152, ch_1152 + sizeof(ch_1152) -1);
CDataStream stream_1152(vch_1152, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1152;
stream_1152 >> txHist_1152;

if(block.vtx[0]->GetHash() == txHist_1152.GetHash() && nHeight == 1264310) {
return true;
}
unsigned char ch_1153[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xae, 0x4a, 0x13, 0x04, 0x23, 0x27, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe7, 0x3c, 0x3d, 0xaa, 0xd0, 0x2d, 0xcf, 0x3c, 0x16, 0xc7, 0x0b, 0xbd, 0xa2, 0x22, 0x82, 0x27, 0x8b, 0x76, 0x60, 0xe7, 0x05, 0xc2, 0x75, 0xf0, 0xc5, 0x7b, 0x82, 0xa0, 0x71, 0xc1, 0x08, 0x8e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x0b, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x5b, 0x3c, 0x87, 0x7b, 0xcd, 0x70, 0x31, 0xe6, 0x06, 0xf3, 0xbd, 0x55, 0x50, 0x79, 0x7b, 0x95, 0xc2, 0x9b, 0x36, 0x8e, 0x94, 0x1f, 0xca, 0xc7, 0x7e, 0x4a, 0x9d, 0x3e, 0x41, 0x49, 0xc6, 0x16, 0xb0, 0xf4, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1153(ch_1153, ch_1153 + sizeof(ch_1153) -1);
CDataStream stream_1153(vch_1153, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1153;
stream_1153 >> txHist_1153;

if(block.vtx[0]->GetHash() == txHist_1153.GetHash() && nHeight == 1264302) {
return true;
}
unsigned char ch_1154[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa6, 0x4a, 0x13, 0x04, 0xc4, 0x22, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x13, 0x35, 0x86, 0x63, 0xa7, 0x63, 0x2a, 0x1d, 0xf9, 0x6b, 0xbe, 0x00, 0xfc, 0x98, 0x60, 0xcd, 0xa6, 0x0b, 0xfa, 0xf8, 0x23, 0x53, 0x42, 0xab, 0xc9, 0x1b, 0x85, 0x3b, 0x94, 0x36, 0x3b, 0x6a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfe, 0x26, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x57, 0xd8, 0xf8, 0x61, 0xbd, 0x3c, 0xe3, 0x6d, 0x3c, 0xda, 0xa2, 0x7e, 0x8d, 0x8f, 0x84, 0xdc, 0x97, 0x79, 0x04, 0x51, 0x4a, 0x6f, 0x78, 0x4b, 0xfb, 0xb9, 0x5c, 0xd9, 0x4f, 0x36, 0xa2, 0x02, 0xf0, 0xf5, 0xfa, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1154(ch_1154, ch_1154 + sizeof(ch_1154) -1);
CDataStream stream_1154(vch_1154, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1154;
stream_1154 >> txHist_1154;

if(block.vtx[0]->GetHash() == txHist_1154.GetHash() && nHeight == 1264294) {
return true;
}
unsigned char ch_1155[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9e, 0x4a, 0x13, 0x04, 0x94, 0x1c, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x8b, 0xf6, 0x49, 0xec, 0x44, 0x51, 0x4e, 0xd3, 0xb4, 0xdd, 0x93, 0x3a, 0x21, 0x9c, 0xfd, 0x3c, 0x5c, 0x88, 0xb8, 0xe7, 0xdc, 0x36, 0x62, 0x16, 0xae, 0xc0, 0x1d, 0x06, 0x2b, 0x87, 0xea, 0xea, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xfd, 0x7b, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa3, 0xe2, 0x8a, 0x3e, 0xb8, 0xdc, 0x2a, 0x3a, 0x16, 0x6d, 0x2c, 0x50, 0x01, 0x6f, 0xaf, 0x81, 0xcd, 0x6d, 0x99, 0x93, 0x70, 0xf0, 0x4a, 0x53, 0xae, 0xce, 0xa7, 0x7d, 0xf0, 0x7e, 0xca, 0x79, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1155(ch_1155, ch_1155 + sizeof(ch_1155) -1);
CDataStream stream_1155(vch_1155, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1155;
stream_1155 >> txHist_1155;

if(block.vtx[0]->GetHash() == txHist_1155.GetHash() && nHeight == 1264286) {
return true;
}
unsigned char ch_1156[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa9, 0x4a, 0x13, 0x04, 0x5b, 0x24, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbf, 0x3c, 0x6d, 0x9f, 0x3b, 0x32, 0xf8, 0x22, 0x28, 0xe0, 0x0b, 0x10, 0x36, 0x53, 0xfc, 0x4d, 0x60, 0x73, 0x7d, 0xa9, 0x86, 0xbd, 0x22, 0x17, 0x07, 0xd1, 0x3d, 0xde, 0x6c, 0x7d, 0x7c, 0xce, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xf8, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1156(ch_1156, ch_1156 + sizeof(ch_1156) -1);
CDataStream stream_1156(vch_1156, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1156;
stream_1156 >> txHist_1156;

if(block.vtx[0]->GetHash() == txHist_1156.GetHash() && nHeight == 1264297) {
return true;
}
unsigned char ch_1157[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x99, 0x4a, 0x13, 0x04, 0xd0, 0x1b, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x60, 0x7e, 0xa6, 0x31, 0x97, 0xde, 0x9b, 0x41, 0xab, 0xa3, 0x46, 0x18, 0xb6, 0x93, 0xc0, 0xc8, 0x49, 0xe4, 0xe7, 0xbb, 0x54, 0xea, 0x3e, 0x0b, 0x09, 0x6e, 0xee, 0xf3, 0x84, 0xe3, 0x3d, 0x2d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x3e, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1157(ch_1157, ch_1157 + sizeof(ch_1157) -1);
CDataStream stream_1157(vch_1157, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1157;
stream_1157 >> txHist_1157;

if(block.vtx[0]->GetHash() == txHist_1157.GetHash() && nHeight == 1264281) {
return true;
}
unsigned char ch_1158[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x91, 0x4a, 0x13, 0x04, 0x95, 0x17, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xae, 0x75, 0x4e, 0x2f, 0x4e, 0xf1, 0xa3, 0x00, 0x9f, 0x96, 0x41, 0x92, 0xbc, 0x66, 0x8e, 0x1d, 0xbf, 0x5a, 0xca, 0xb5, 0xf4, 0xfd, 0xcd, 0xca, 0xdf, 0x8b, 0x44, 0x04, 0x43, 0xde, 0xfd, 0x67, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xfc, 0xf6, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1158(ch_1158, ch_1158 + sizeof(ch_1158) -1);
CDataStream stream_1158(vch_1158, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1158;
stream_1158 >> txHist_1158;

if(block.vtx[0]->GetHash() == txHist_1158.GetHash() && nHeight == 1264273) {
return true;
}
unsigned char ch_1159[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xbd, 0x4a, 0x13, 0x04, 0xfc, 0x2b, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb0, 0x7b, 0xa6, 0x84, 0x82, 0xfb, 0x85, 0xc9, 0x8c, 0x1f, 0x7c, 0x40, 0x6e, 0xce, 0x9e, 0x73, 0xbf, 0xe9, 0x1f, 0x5d, 0x23, 0x0e, 0x75, 0xb6, 0x75, 0x63, 0x7c, 0x7f, 0x20, 0x1c, 0x80, 0xa3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x03, 0x0d, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1159(ch_1159, ch_1159 + sizeof(ch_1159) -1);
CDataStream stream_1159(vch_1159, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1159;
stream_1159 >> txHist_1159;

if(block.vtx[0]->GetHash() == txHist_1159.GetHash() && nHeight == 1264317) {
return true;
}
unsigned char ch_1160[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xbc, 0x4a, 0x13, 0x04, 0xbc, 0x2b, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x31, 0x64, 0x61, 0x30, 0x38, 0x36, 0x66, 0x66, 0x38, 0x32, 0x38, 0x61, 0x35, 0x33, 0x66, 0x65, 0x63, 0x64, 0x33, 0x32, 0x39, 0x39, 0x31, 0x35, 0x65, 0x65, 0x66, 0x37, 0x39, 0x35, 0x38, 0x34, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfa, 0xbf, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x64, 0x52, 0x61, 0x45, 0x0b, 0x63, 0x06, 0xc6, 0xde, 0x84, 0x7a, 0x00, 0xb7, 0x96, 0x64, 0x79, 0xd2, 0xc1, 0xb7, 0x35, 0xcb, 0xca, 0x3d, 0x5e, 0x37, 0xb3, 0xbb, 0x65, 0x00, 0x42, 0xe8, 0x0c, 0xcc, 0x13, 0xf7, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xfa, 0x64, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xe2, 0xf8, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1160(ch_1160, ch_1160 + sizeof(ch_1160) -1);
CDataStream stream_1160(vch_1160, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1160;
stream_1160 >> txHist_1160;

if(block.vtx[0]->GetHash() == txHist_1160.GetHash() && nHeight == 1264316) {
return true;
}
unsigned char ch_1161[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x89, 0x4a, 0x13, 0x04, 0xda, 0x12, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x87, 0xf0, 0xf4, 0xf0, 0x74, 0xf1, 0x83, 0xab, 0x62, 0xbf, 0x31, 0xdf, 0xdc, 0xae, 0xce, 0xbc, 0x77, 0xad, 0xbe, 0xd5, 0x4f, 0x80, 0xdf, 0x9d, 0x16, 0xed, 0x6d, 0xc6, 0x45, 0xaf, 0xfe, 0xf5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xfb, 0xb0, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1161(ch_1161, ch_1161 + sizeof(ch_1161) -1);
CDataStream stream_1161(vch_1161, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1161;
stream_1161 >> txHist_1161;

if(block.vtx[0]->GetHash() == txHist_1161.GetHash() && nHeight == 1264265) {
return true;
}
unsigned char ch_1162[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb4, 0x4a, 0x13, 0x04, 0xbb, 0x28, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x10, 0xb3, 0xf4, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x03, 0x22, 0xf7, 0xa5, 0xdd, 0xc5, 0xca, 0x98, 0xbb, 0x8d, 0x8c, 0x7a, 0x58, 0x8c, 0x49, 0x6d, 0xcb, 0x37, 0xda, 0x3c, 0x01, 0xa2, 0xa0, 0xf9, 0x2a, 0x6c, 0xe4, 0xba, 0xed, 0x9a, 0x4b, 0xa8, 0x70, 0x29, 0x6b, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1162(ch_1162, ch_1162 + sizeof(ch_1162) -1);
CDataStream stream_1162(vch_1162, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1162;
stream_1162 >> txHist_1162;

if(block.vtx[0]->GetHash() == txHist_1162.GetHash() && nHeight == 1264308) {
return true;
}
unsigned char ch_1163[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xac, 0x4a, 0x13, 0x04, 0x58, 0x26, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x13, 0x03, 0x37, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xfc, 0x5b, 0x38, 0x38, 0xca, 0x1f, 0x74, 0x38, 0xc2, 0xa9, 0x5e, 0x61, 0xd2, 0x18, 0x88, 0x0f, 0x9c, 0x44, 0xfe, 0xfa, 0x40, 0x2d, 0xd1, 0x2b, 0x85, 0x59, 0x16, 0x3b, 0x6c, 0xf3, 0x60, 0x91, 0xf0, 0x8a, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1163(ch_1163, ch_1163 + sizeof(ch_1163) -1);
CDataStream stream_1163(vch_1163, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1163;
stream_1163 >> txHist_1163;

if(block.vtx[0]->GetHash() == txHist_1163.GetHash() && nHeight == 1264300) {
return true;
}
unsigned char ch_1164[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x79, 0x4a, 0x13, 0x04, 0x30, 0x0c, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x3d, 0x38, 0x1e, 0x68, 0x2b, 0x68, 0x72, 0x9d, 0xae, 0x49, 0x11, 0xba, 0xe7, 0x5a, 0xa2, 0x13, 0xc0, 0x45, 0xc4, 0xe0, 0x50, 0x88, 0xc5, 0x93, 0xf3, 0x6a, 0x94, 0xeb, 0x0e, 0x62, 0x09, 0x94, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x03, 0x06, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1164(ch_1164, ch_1164 + sizeof(ch_1164) -1);
CDataStream stream_1164(vch_1164, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1164;
stream_1164 >> txHist_1164;

if(block.vtx[0]->GetHash() == txHist_1164.GetHash() && nHeight == 1264249) {
return true;
}
unsigned char ch_1165[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa5, 0x4a, 0x13, 0x04, 0xea, 0x1f, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x64, 0x47, 0xb7, 0x09, 0xf6, 0x80, 0xe9, 0xfd, 0xfc, 0x5b, 0xc6, 0xab, 0x26, 0xac, 0x0e, 0x5c, 0xfe, 0x16, 0xc5, 0x26, 0x0d, 0x62, 0x36, 0xd8, 0x96, 0x2a, 0xaa, 0x50, 0x5b, 0x2d, 0xa8, 0x87, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xc5, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1165(ch_1165, ch_1165 + sizeof(ch_1165) -1);
CDataStream stream_1165(vch_1165, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1165;
stream_1165 >> txHist_1165;

if(block.vtx[0]->GetHash() == txHist_1165.GetHash() && nHeight == 1264293) {
return true;
}
unsigned char ch_1166[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa4, 0x4a, 0x13, 0x04, 0xe7, 0x1f, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x64, 0x47, 0xb7, 0x09, 0xf6, 0x80, 0xe9, 0xfd, 0xfc, 0x5b, 0xc6, 0xab, 0x26, 0xac, 0x0e, 0x5c, 0xfe, 0x16, 0xc5, 0x26, 0x0d, 0x62, 0x36, 0xd8, 0x96, 0x2a, 0xaa, 0x50, 0x5b, 0x2d, 0xa8, 0x87, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0xaa, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1166(ch_1166, ch_1166 + sizeof(ch_1166) -1);
CDataStream stream_1166(vch_1166, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1166;
stream_1166 >> txHist_1166;

if(block.vtx[0]->GetHash() == txHist_1166.GetHash() && nHeight == 1264292) {
return true;
}
unsigned char ch_1167[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x71, 0x4a, 0x13, 0x04, 0x0e, 0x07, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x21, 0xd8, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1167(ch_1167, ch_1167 + sizeof(ch_1167) -1);
CDataStream stream_1167(vch_1167, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1167;
stream_1167 >> txHist_1167;

if(block.vtx[0]->GetHash() == txHist_1167.GetHash() && nHeight == 1264241) {
return true;
}
unsigned char ch_1168[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x9d, 0x4a, 0x13, 0x04, 0x84, 0x1c, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x20, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1168(ch_1168, ch_1168 + sizeof(ch_1168) -1);
CDataStream stream_1168(vch_1168, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1168;
stream_1168 >> txHist_1168;

if(block.vtx[0]->GetHash() == txHist_1168.GetHash() && nHeight == 1264285) {
return true;
}
unsigned char ch_1169[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x69, 0x4a, 0x13, 0x04, 0xc7, 0x04, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xcd, 0x1f, 0x24, 0x4f, 0x28, 0x6d, 0xcf, 0xcc, 0x1b, 0x6c, 0xec, 0xb4, 0x74, 0x30, 0xa4, 0xfe, 0x02, 0xcc, 0xe0, 0xc8, 0x41, 0xd8, 0x31, 0x3b, 0x9f, 0x7b, 0x44, 0x92, 0xd0, 0x3b, 0x30, 0xc9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xfa, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1169(ch_1169, ch_1169 + sizeof(ch_1169) -1);
CDataStream stream_1169(vch_1169, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1169;
stream_1169 >> txHist_1169;

if(block.vtx[0]->GetHash() == txHist_1169.GetHash() && nHeight == 1264233) {
return true;
}
unsigned char ch_1170[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x96, 0x4a, 0x13, 0x04, 0x5c, 0x1b, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x20, 0xfe, 0x22, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x1d, 0x17, 0x54, 0x82, 0xfc, 0x78, 0x63, 0xe9, 0x4d, 0xc5, 0x08, 0x10, 0x9a, 0x46, 0x59, 0xe1, 0xd3, 0xd7, 0xbd, 0xf9, 0x2e, 0x3a, 0x36, 0xb1, 0x7e, 0xbd, 0x6d, 0xf3, 0xc0, 0x33, 0x17, 0xd0, 0xd8, 0x3d, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1170(ch_1170, ch_1170 + sizeof(ch_1170) -1);
CDataStream stream_1170(vch_1170, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1170;
stream_1170 >> txHist_1170;

if(block.vtx[0]->GetHash() == txHist_1170.GetHash() && nHeight == 1264278) {
return true;
}
unsigned char ch_1171[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x95, 0x4a, 0x13, 0x04, 0x54, 0x1a, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x0f, 0x57, 0x9b, 0x77, 0xa2, 0x4f, 0x4a, 0xec, 0x83, 0xb4, 0x66, 0xd6, 0x99, 0x01, 0x74, 0xc9, 0x88, 0xe0, 0x92, 0xac, 0x95, 0x4e, 0x08, 0x26, 0x6d, 0x01, 0x0b, 0x55, 0xe9, 0x5b, 0xba, 0xb7, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1171(ch_1171, ch_1171 + sizeof(ch_1171) -1);
CDataStream stream_1171(vch_1171, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1171;
stream_1171 >> txHist_1171;

if(block.vtx[0]->GetHash() == txHist_1171.GetHash() && nHeight == 1264277) {
return true;
}
unsigned char ch_1172[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x94, 0x4a, 0x13, 0x04, 0x51, 0x1a, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x1f, 0xf9, 0x7b, 0x14, 0xf8, 0xa7, 0x71, 0xd2, 0x5f, 0xf4, 0xc1, 0xa7, 0xfa, 0x25, 0x26, 0x22, 0x21, 0x8d, 0x54, 0x4d, 0x92, 0xd7, 0x13, 0xd9, 0x44, 0x6e, 0xd9, 0x37, 0x36, 0xec, 0xff, 0xcc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0xde, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1172(ch_1172, ch_1172 + sizeof(ch_1172) -1);
CDataStream stream_1172(vch_1172, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1172;
stream_1172 >> txHist_1172;

if(block.vtx[0]->GetHash() == txHist_1172.GetHash() && nHeight == 1264276) {
return true;
}
unsigned char ch_1173[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x8d, 0x4a, 0x13, 0x04, 0x64, 0x14, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x06, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1173(ch_1173, ch_1173 + sizeof(ch_1173) -1);
CDataStream stream_1173(vch_1173, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1173;
stream_1173 >> txHist_1173;

if(block.vtx[0]->GetHash() == txHist_1173.GetHash() && nHeight == 1264269) {
return true;
}
unsigned char ch_1174[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x8c, 0x4a, 0x13, 0x04, 0x6f, 0x14, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x01, 0x05, 0xfa, 0x2d, 0x96, 0x13, 0xca, 0x5e, 0x9a, 0xab, 0x10, 0x28, 0xd4, 0x23, 0x54, 0x47, 0x31, 0x38, 0xd0, 0x92, 0x65, 0x39, 0x49, 0xe2, 0x8e, 0xf3, 0x12, 0x46, 0x73, 0x26, 0x53, 0xef, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x84, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1174(ch_1174, ch_1174 + sizeof(ch_1174) -1);
CDataStream stream_1174(vch_1174, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1174;
stream_1174 >> txHist_1174;

if(block.vtx[0]->GetHash() == txHist_1174.GetHash() && nHeight == 1264268) {
return true;
}
unsigned char ch_1175[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x59, 0x4a, 0x13, 0x04, 0xc4, 0x01, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9e, 0xcd, 0x15, 0xb3, 0x07, 0x03, 0x58, 0x34, 0x96, 0xdc, 0x15, 0x29, 0x0a, 0x1c, 0x37, 0x13, 0x1b, 0x32, 0xab, 0x32, 0x52, 0x63, 0xcf, 0x1c, 0x9e, 0x32, 0x2c, 0x75, 0x68, 0xfd, 0xbc, 0xbb, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x03, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x10, 0x2c, 0x45, 0x6c, 0x89, 0xe8, 0xb2, 0x99, 0x4d, 0xe7, 0xb1, 0xcb, 0xe4, 0x30, 0x60, 0x3c, 0x7c, 0x8b, 0xae, 0x18, 0x5e, 0x81, 0xde, 0xa7, 0xc2, 0x73, 0x0e, 0x88, 0xd0, 0x10, 0xe4, 0x79, 0x00, 0x8d, 0x63, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1175(ch_1175, ch_1175 + sizeof(ch_1175) -1);
CDataStream stream_1175(vch_1175, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1175;
stream_1175 >> txHist_1175;

if(block.vtx[0]->GetHash() == txHist_1175.GetHash() && nHeight == 1264217) {
return true;
}
unsigned char ch_1176[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x86, 0x4a, 0x13, 0x04, 0x8c, 0x12, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xfd, 0x07, 0x51, 0xd7, 0xd5, 0xdd, 0x31, 0x7f, 0x48, 0xc9, 0xfa, 0x99, 0x72, 0x82, 0x56, 0x90, 0xdf, 0x6e, 0x2b, 0xb8, 0xf2, 0x40, 0xb7, 0x58, 0x6e, 0x45, 0xde, 0xe4, 0x08, 0x09, 0x27, 0x9a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xf8, 0x19, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x19, 0xfe, 0xd7, 0x8a, 0x75, 0xca, 0x57, 0xb7, 0x76, 0xf8, 0x2d, 0xc8, 0xd7, 0xea, 0xd7, 0x83, 0xb4, 0xa8, 0x87, 0xf7, 0x11, 0x91, 0x38, 0xfa, 0xb0, 0xe7, 0x11, 0xfe, 0x44, 0x8c, 0xf3, 0x53, 0xc8, 0xa6, 0x63, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1176(ch_1176, ch_1176 + sizeof(ch_1176) -1);
CDataStream stream_1176(vch_1176, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1176;
stream_1176 >> txHist_1176;

if(block.vtx[0]->GetHash() == txHist_1176.GetHash() && nHeight == 1264262) {
return true;
}
unsigned char ch_1177[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x85, 0x4a, 0x13, 0x04, 0x9c, 0x0f, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x66, 0x56, 0xde, 0xcd, 0xf0, 0xf0, 0x87, 0xf5, 0x28, 0x30, 0x5e, 0xc1, 0xca, 0x22, 0x2c, 0xdd, 0x7e, 0xc4, 0xb0, 0x75, 0x0b, 0xb4, 0xa2, 0x5b, 0x42, 0x16, 0xc7, 0x92, 0x33, 0x91, 0x06, 0xf0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0xff, 0xff, 0x6f, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1177(ch_1177, ch_1177 + sizeof(ch_1177) -1);
CDataStream stream_1177(vch_1177, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1177;
stream_1177 >> txHist_1177;

if(block.vtx[0]->GetHash() == txHist_1177.GetHash() && nHeight == 1264261) {
return true;
}
unsigned char ch_1178[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x84, 0x4a, 0x13, 0x04, 0x9b, 0x0f, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x66, 0x56, 0xde, 0xcd, 0xf0, 0xf0, 0x87, 0xf5, 0x28, 0x30, 0x5e, 0xc1, 0xca, 0x22, 0x2c, 0xdd, 0x7e, 0xc4, 0xb0, 0x75, 0x0b, 0xb4, 0xa2, 0x5b, 0x42, 0x16, 0xc7, 0x92, 0x33, 0x91, 0x06, 0xf0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xfd, 0x2a, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1178(ch_1178, ch_1178 + sizeof(ch_1178) -1);
CDataStream stream_1178(vch_1178, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1178;
stream_1178 >> txHist_1178;

if(block.vtx[0]->GetHash() == txHist_1178.GetHash() && nHeight == 1264260) {
return true;
}
unsigned char ch_1179[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x51, 0x4a, 0x13, 0x04, 0xb6, 0xff, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x4d, 0x43, 0xae, 0x6b, 0x60, 0xfa, 0x1d, 0x92, 0x39, 0x04, 0xed, 0x4f, 0x1f, 0xb6, 0xc4, 0x1c, 0x7b, 0x75, 0xfb, 0x30, 0xe7, 0x93, 0xb1, 0xbc, 0x84, 0x1e, 0x0b, 0xea, 0xdd, 0xa1, 0xe2, 0x1d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0x2e, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1179(ch_1179, ch_1179 + sizeof(ch_1179) -1);
CDataStream stream_1179(vch_1179, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1179;
stream_1179 >> txHist_1179;

if(block.vtx[0]->GetHash() == txHist_1179.GetHash() && nHeight == 1264209) {
return true;
}
unsigned char ch_1180[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x7e, 0x4a, 0x13, 0x04, 0x3e, 0x0d, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x2f, 0x3f, 0xc5, 0xb2, 0x40, 0xd2, 0x6a, 0xd8, 0xb7, 0x54, 0xcc, 0xcf, 0x6e, 0xaa, 0x8b, 0xc2, 0x2f, 0x38, 0xe1, 0x8e, 0x62, 0xbb, 0xe7, 0x9e, 0x7f, 0x43, 0xcd, 0x0e, 0x33, 0xe5, 0xa3, 0x4a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0xff, 0xff, 0xff, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1180(ch_1180, ch_1180 + sizeof(ch_1180) -1);
CDataStream stream_1180(vch_1180, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1180;
stream_1180 >> txHist_1180;

if(block.vtx[0]->GetHash() == txHist_1180.GetHash() && nHeight == 1264254) {
return true;
}
unsigned char ch_1181[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x7d, 0x4a, 0x13, 0x04, 0x3d, 0x0d, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x2f, 0x3f, 0xc5, 0xb2, 0x40, 0xd2, 0x6a, 0xd8, 0xb7, 0x54, 0xcc, 0xcf, 0x6e, 0xaa, 0x8b, 0xc2, 0x2f, 0x38, 0xe1, 0x8e, 0x62, 0xbb, 0xe7, 0x9e, 0x7f, 0x43, 0xcd, 0x0e, 0x33, 0xe5, 0xa3, 0x4a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xff, 0xfe, 0x53, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1181(ch_1181, ch_1181 + sizeof(ch_1181) -1);
CDataStream stream_1181(vch_1181, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1181;
stream_1181 >> txHist_1181;

if(block.vtx[0]->GetHash() == txHist_1181.GetHash() && nHeight == 1264253) {
return true;
}
unsigned char ch_1182[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x7c, 0x4a, 0x13, 0x04, 0x10, 0x0d, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x10, 0xb3, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1182(ch_1182, ch_1182 + sizeof(ch_1182) -1);
CDataStream stream_1182(vch_1182, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1182;
stream_1182 >> txHist_1182;

if(block.vtx[0]->GetHash() == txHist_1182.GetHash() && nHeight == 1264252) {
return true;
}
unsigned char ch_1183[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x76, 0x4a, 0x13, 0x04, 0xbf, 0x08, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x09, 0x99, 0x45, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1183(ch_1183, ch_1183 + sizeof(ch_1183) -1);
CDataStream stream_1183(vch_1183, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1183;
stream_1183 >> txHist_1183;

if(block.vtx[0]->GetHash() == txHist_1183.GetHash() && nHeight == 1264246) {
return true;
}
unsigned char ch_1184[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x74, 0x4a, 0x13, 0x04, 0x4b, 0x08, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x08, 0x76, 0x63, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1184(ch_1184, ch_1184 + sizeof(ch_1184) -1);
CDataStream stream_1184(vch_1184, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1184;
stream_1184 >> txHist_1184;

if(block.vtx[0]->GetHash() == txHist_1184.GetHash() && nHeight == 1264244) {
return true;
}
unsigned char ch_1185[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x6e, 0x4a, 0x13, 0x04, 0xec, 0x06, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x6f, 0xc8, 0x08, 0x7e, 0xe0, 0xcb, 0xee, 0xf2, 0x7d, 0xaa, 0xfd, 0x20, 0x9d, 0xf2, 0xb6, 0x3f, 0x3b, 0x5c, 0x8b, 0x51, 0xe7, 0x51, 0xd7, 0x02, 0xf4, 0x5e, 0xe1, 0x86, 0xc6, 0xfd, 0xcf, 0x64, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xfb, 0x9f, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1185(ch_1185, ch_1185 + sizeof(ch_1185) -1);
CDataStream stream_1185(vch_1185, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1185;
stream_1185 >> txHist_1185;

if(block.vtx[0]->GetHash() == txHist_1185.GetHash() && nHeight == 1264238) {
return true;
}
unsigned char ch_1186[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x6d, 0x4a, 0x13, 0x04, 0xb0, 0x06, 0x36, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x13, 0x3c, 0x0e, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd4, 0x49, 0x91, 0xc7, 0x27, 0x8c, 0xf7, 0x3e, 0x55, 0x7a, 0xf6, 0x74, 0x6c, 0x5b, 0x76, 0x1f, 0xc6, 0x21, 0x9d, 0x8a, 0x08, 0xbf, 0x8c, 0xfd, 0x8c, 0xaa, 0x64, 0x57, 0x7a, 0x41, 0x4c, 0x58, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1186(ch_1186, ch_1186 + sizeof(ch_1186) -1);
CDataStream stream_1186(vch_1186, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1186;
stream_1186 >> txHist_1186;

if(block.vtx[0]->GetHash() == txHist_1186.GetHash() && nHeight == 1264237) {
return true;
}
unsigned char ch_1187[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x66, 0x4a, 0x13, 0x04, 0x9c, 0x04, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9b, 0xce, 0x5b, 0xb5, 0x5c, 0xdc, 0x02, 0x82, 0xf8, 0x1f, 0xb7, 0x65, 0x0c, 0x00, 0x8a, 0x2d, 0xd2, 0x29, 0x2b, 0x6d, 0x81, 0xb1, 0xa7, 0xcc, 0x65, 0x42, 0x98, 0xb1, 0x31, 0xc7, 0x55, 0xdd, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xa2, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1187(ch_1187, ch_1187 + sizeof(ch_1187) -1);
CDataStream stream_1187(vch_1187, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1187;
stream_1187 >> txHist_1187;

if(block.vtx[0]->GetHash() == txHist_1187.GetHash() && nHeight == 1264230) {
return true;
}
unsigned char ch_1188[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x65, 0x4a, 0x13, 0x04, 0x9b, 0x04, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9b, 0xce, 0x5b, 0xb5, 0x5c, 0xdc, 0x02, 0x82, 0xf8, 0x1f, 0xb7, 0x65, 0x0c, 0x00, 0x8a, 0x2d, 0xd2, 0x29, 0x2b, 0x6d, 0x81, 0xb1, 0xa7, 0xcc, 0x65, 0x42, 0x98, 0xb1, 0x31, 0xc7, 0x55, 0xdd, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x03, 0x2a, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1188(ch_1188, ch_1188 + sizeof(ch_1188) -1);
CDataStream stream_1188(vch_1188, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1188;
stream_1188 >> txHist_1188;

if(block.vtx[0]->GetHash() == txHist_1188.GetHash() && nHeight == 1264229) {
return true;
}
unsigned char ch_1189[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x5e, 0x4a, 0x13, 0x04, 0x9a, 0x02, 0x36, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x17, 0x4b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xb6, 0x8d, 0xe4, 0x6a, 0xd3, 0xb8, 0x6a, 0x22, 0x40, 0xcf, 0x7d, 0x35, 0x96, 0xfb, 0x1d, 0x0c, 0x16, 0x42, 0x0e, 0x0c, 0x24, 0xb6, 0x0a, 0x2a, 0x68, 0xec, 0xc7, 0xd9, 0x1a, 0x4a, 0x5f, 0xed, 0x80, 0x79, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1189(ch_1189, ch_1189 + sizeof(ch_1189) -1);
CDataStream stream_1189(vch_1189, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1189;
stream_1189 >> txHist_1189;

if(block.vtx[0]->GetHash() == txHist_1189.GetHash() && nHeight == 1264222) {
return true;
}
unsigned char ch_1190[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x5c, 0x4a, 0x13, 0x04, 0xfa, 0x01, 0x36, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf8, 0x2b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1190(ch_1190, ch_1190 + sizeof(ch_1190) -1);
CDataStream stream_1190(vch_1190, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1190;
stream_1190 >> txHist_1190;

if(block.vtx[0]->GetHash() == txHist_1190.GetHash() && nHeight == 1264220) {
return true;
}
unsigned char ch_1191[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x56, 0x4a, 0x13, 0x04, 0x5b, 0x00, 0x36, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7f, 0x37, 0x01, 0xd9, 0x76, 0xa2, 0x9b, 0x0b, 0x63, 0x25, 0x93, 0xd2, 0xc1, 0x28, 0xe4, 0x26, 0x48, 0xc0, 0x5a, 0xd7, 0xb4, 0x6a, 0x34, 0x7e, 0xdc, 0xfc, 0x71, 0x0d, 0x95, 0x60, 0x7d, 0x1e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1191(ch_1191, ch_1191 + sizeof(ch_1191) -1);
CDataStream stream_1191(vch_1191, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1191;
stream_1191 >> txHist_1191;

if(block.vtx[0]->GetHash() == txHist_1191.GetHash() && nHeight == 1264214) {
return true;
}
unsigned char ch_1192[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x55, 0x4a, 0x13, 0x04, 0x26, 0x00, 0x36, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x14, 0x8e, 0x06, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1192(ch_1192, ch_1192 + sizeof(ch_1192) -1);
CDataStream stream_1192(vch_1192, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1192;
stream_1192 >> txHist_1192;

if(block.vtx[0]->GetHash() == txHist_1192.GetHash() && nHeight == 1264213) {
return true;
}
unsigned char ch_1193[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x54, 0x4a, 0x13, 0x04, 0xb6, 0xff, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf8, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1193(ch_1193, ch_1193 + sizeof(ch_1193) -1);
CDataStream stream_1193(vch_1193, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1193;
stream_1193 >> txHist_1193;

if(block.vtx[0]->GetHash() == txHist_1193.GetHash() && nHeight == 1264212) {
return true;
}
unsigned char ch_1194[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x50, 0x4a, 0x13, 0x04, 0x86, 0xff, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x21, 0x91, 0x08, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1194(ch_1194, ch_1194 + sizeof(ch_1194) -1);
CDataStream stream_1194(vch_1194, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1194;
stream_1194 >> txHist_1194;

if(block.vtx[0]->GetHash() == txHist_1194.GetHash() && nHeight == 1264208) {
return true;
}
unsigned char ch_1195[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x4e, 0x4a, 0x13, 0x04, 0x85, 0xfe, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x02, 0x82, 0x11, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xb9, 0xa4, 0xb3, 0x06, 0x03, 0xc8, 0xe9, 0xd6, 0x26, 0xd7, 0xa5, 0xb5, 0xb0, 0x1d, 0x15, 0x70, 0xa9, 0x97, 0xd7, 0x91, 0xb6, 0x00, 0x6d, 0x61, 0x13, 0x63, 0x5f, 0x02, 0x25, 0x3b, 0x2e, 0x2c, 0x88, 0x29, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1195(ch_1195, ch_1195 + sizeof(ch_1195) -1);
CDataStream stream_1195(vch_1195, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1195;
stream_1195 >> txHist_1195;

if(block.vtx[0]->GetHash() == txHist_1195.GetHash() && nHeight == 1264206) {
return true;
}
unsigned char ch_1196[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4d, 0x4a, 0x13, 0x04, 0xe9, 0xfd, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x53, 0xd3, 0x3f, 0x25, 0x15, 0x87, 0xdd, 0x7a, 0x26, 0x47, 0x70, 0xb1, 0xb5, 0x0a, 0xed, 0x0c, 0x27, 0xd9, 0xec, 0x73, 0x7f, 0x93, 0xe2, 0x37, 0x5f, 0x2f, 0xd2, 0x27, 0xc8, 0x82, 0xd2, 0xd7, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0x03, 0x43, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1196(ch_1196, ch_1196 + sizeof(ch_1196) -1);
CDataStream stream_1196(vch_1196, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1196;
stream_1196 >> txHist_1196;

if(block.vtx[0]->GetHash() == txHist_1196.GetHash() && nHeight == 1264205) {
return true;
}
unsigned char ch_1197[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4c, 0x4a, 0x13, 0x04, 0xe7, 0xfd, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x53, 0xd3, 0x3f, 0x25, 0x15, 0x87, 0xdd, 0x7a, 0x26, 0x47, 0x70, 0xb1, 0xb5, 0x0a, 0xed, 0x0c, 0x27, 0xd9, 0xec, 0x73, 0x7f, 0x93, 0xe2, 0x37, 0x5f, 0x2f, 0xd2, 0x27, 0xc8, 0x82, 0xd2, 0xd7, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x68, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1197(ch_1197, ch_1197 + sizeof(ch_1197) -1);
CDataStream stream_1197(vch_1197, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1197;
stream_1197 >> txHist_1197;

if(block.vtx[0]->GetHash() == txHist_1197.GetHash() && nHeight == 1264204) {
return true;
}
unsigned char ch_1198[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x48, 0x4a, 0x13, 0x04, 0x69, 0xfc, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x91, 0x18, 0x66, 0x65, 0x3c, 0x8d, 0xc5, 0xdb, 0x41, 0x4b, 0xef, 0xd5, 0x5b, 0xd5, 0x87, 0x84, 0x5e, 0xd5, 0x93, 0xc1, 0x92, 0xdb, 0xe1, 0x85, 0xc6, 0x21, 0x5f, 0x69, 0xfe, 0xb0, 0x37, 0x88, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xff, 0x81, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1198(ch_1198, ch_1198 + sizeof(ch_1198) -1);
CDataStream stream_1198(vch_1198, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1198;
stream_1198 >> txHist_1198;

if(block.vtx[0]->GetHash() == txHist_1198.GetHash() && nHeight == 1264200) {
return true;
}
unsigned char ch_1199[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x47, 0x4a, 0x13, 0x04, 0x68, 0xfc, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x91, 0x18, 0x66, 0x65, 0x3c, 0x8d, 0xc5, 0xdb, 0x41, 0x4b, 0xef, 0xd5, 0x5b, 0xd5, 0x87, 0x84, 0x5e, 0xd5, 0x93, 0xc1, 0x92, 0xdb, 0xe1, 0x85, 0xc6, 0x21, 0x5f, 0x69, 0xfe, 0xb0, 0x37, 0x88, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0xff, 0xfb, 0xf9, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1199(ch_1199, ch_1199 + sizeof(ch_1199) -1);
CDataStream stream_1199(vch_1199, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1199;
stream_1199 >> txHist_1199;

if(block.vtx[0]->GetHash() == txHist_1199.GetHash() && nHeight == 1264199) {
return true;
}
unsigned char ch_1200[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x46, 0x4a, 0x13, 0x04, 0x67, 0xfc, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x91, 0x18, 0x66, 0x65, 0x3c, 0x8d, 0xc5, 0xdb, 0x41, 0x4b, 0xef, 0xd5, 0x5b, 0xd5, 0x87, 0x84, 0x5e, 0xd5, 0x93, 0xc1, 0x92, 0xdb, 0xe1, 0x85, 0xc6, 0x21, 0x5f, 0x69, 0xfe, 0xb0, 0x37, 0x88, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x03, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1200(ch_1200, ch_1200 + sizeof(ch_1200) -1);
CDataStream stream_1200(vch_1200, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1200;
stream_1200 >> txHist_1200;

if(block.vtx[0]->GetHash() == txHist_1200.GetHash() && nHeight == 1264198) {
return true;
}
unsigned char ch_1201[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x45, 0x4a, 0x13, 0x04, 0x67, 0xfc, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x91, 0x18, 0x66, 0x65, 0x3c, 0x8d, 0xc5, 0xdb, 0x41, 0x4b, 0xef, 0xd5, 0x5b, 0xd5, 0x87, 0x84, 0x5e, 0xd5, 0x93, 0xc1, 0x92, 0xdb, 0xe1, 0x85, 0xc6, 0x21, 0x5f, 0x69, 0xfe, 0xb0, 0x37, 0x88, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x0b, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1201(ch_1201, ch_1201 + sizeof(ch_1201) -1);
CDataStream stream_1201(vch_1201, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1201;
stream_1201 >> txHist_1201;

if(block.vtx[0]->GetHash() == txHist_1201.GetHash() && nHeight == 1264197) {
return true;
}
unsigned char ch_1202[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x44, 0x4a, 0x13, 0x04, 0x4c, 0xfc, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x40, 0x36, 0xc3, 0xc6, 0x0b, 0xf0, 0xc3, 0xf1, 0x7b, 0xa3, 0x4f, 0xc9, 0x3c, 0x4f, 0x96, 0x4e, 0xc3, 0x1b, 0x0b, 0x45, 0x44, 0x18, 0xdb, 0x58, 0x5c, 0x8c, 0xe3, 0x9e, 0x1f, 0x8e, 0x74, 0x14, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xf3, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xef, 0xc3, 0xb1, 0xc8, 0x2b, 0x22, 0x34, 0x1e, 0xd4, 0x82, 0x8b, 0x0d, 0xc4, 0xc3, 0xc2, 0x96, 0xf0, 0x76, 0xc2, 0x9e, 0x11, 0xaa, 0xed, 0xc3, 0x41, 0x19, 0x63, 0xb6, 0x9a, 0xf4, 0x1c, 0xc9, 0xa0, 0x26, 0x66, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1202(ch_1202, ch_1202 + sizeof(ch_1202) -1);
CDataStream stream_1202(vch_1202, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1202;
stream_1202 >> txHist_1202;

if(block.vtx[0]->GetHash() == txHist_1202.GetHash() && nHeight == 1264196) {
return true;
}
unsigned char ch_1203[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xfd, 0x49, 0x13, 0x04, 0xf2, 0xdf, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x20, 0x41, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1203(ch_1203, ch_1203 + sizeof(ch_1203) -1);
CDataStream stream_1203(vch_1203, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1203;
stream_1203 >> txHist_1203;

if(block.vtx[0]->GetHash() == txHist_1203.GetHash() && nHeight == 1264125) {
return true;
}
unsigned char ch_1204[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x26, 0x4a, 0x13, 0x04, 0xbe, 0xf1, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x02, 0xff, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1204(ch_1204, ch_1204 + sizeof(ch_1204) -1);
CDataStream stream_1204(vch_1204, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1204;
stream_1204 >> txHist_1204;

if(block.vtx[0]->GetHash() == txHist_1204.GetHash() && nHeight == 1264166) {
return true;
}
unsigned char ch_1205[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3f, 0x4a, 0x13, 0x04, 0x86, 0xf7, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x57, 0xc2, 0x5a, 0x24, 0x74, 0x5f, 0xce, 0xbe, 0x41, 0xe8, 0xde, 0x4c, 0x33, 0x0a, 0xcb, 0xb7, 0xd0, 0x0b, 0x29, 0x7e, 0xe1, 0xa9, 0x9c, 0x2c, 0x67, 0x47, 0xff, 0x10, 0xba, 0x94, 0xf1, 0x34, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xfd, 0x0b, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1205(ch_1205, ch_1205 + sizeof(ch_1205) -1);
CDataStream stream_1205(vch_1205, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1205;
stream_1205 >> txHist_1205;

if(block.vtx[0]->GetHash() == txHist_1205.GetHash() && nHeight == 1264191) {
return true;
}
unsigned char ch_1206[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x43, 0x4a, 0x13, 0x04, 0x56, 0xf8, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x13, 0x5e, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1206(ch_1206, ch_1206 + sizeof(ch_1206) -1);
CDataStream stream_1206(vch_1206, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1206;
stream_1206 >> txHist_1206;

if(block.vtx[0]->GetHash() == txHist_1206.GetHash() && nHeight == 1264195) {
return true;
}
unsigned char ch_1207[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x41, 0x4a, 0x13, 0x04, 0xea, 0xf7, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x09, 0x97, 0x31, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1207(ch_1207, ch_1207 + sizeof(ch_1207) -1);
CDataStream stream_1207(vch_1207, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1207;
stream_1207 >> txHist_1207;

if(block.vtx[0]->GetHash() == txHist_1207.GetHash() && nHeight == 1264193) {
return true;
}
unsigned char ch_1208[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x35, 0x4a, 0x13, 0x04, 0xa5, 0xf5, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfa, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1208(ch_1208, ch_1208 + sizeof(ch_1208) -1);
CDataStream stream_1208(vch_1208, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1208;
stream_1208 >> txHist_1208;

if(block.vtx[0]->GetHash() == txHist_1208.GetHash() && nHeight == 1264181) {
return true;
}
unsigned char ch_1209[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xfa, 0x49, 0x13, 0x04, 0xf0, 0xdf, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb8, 0xd6, 0x41, 0x79, 0x0f, 0x85, 0x99, 0xeb, 0x6a, 0x3b, 0x27, 0xbe, 0xc8, 0x69, 0x0f, 0x92, 0x54, 0x70, 0xd6, 0x48, 0xc9, 0x35, 0xbc, 0xc7, 0xd0, 0xd7, 0xea, 0xdc, 0xfe, 0xc5, 0x6a, 0xa9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0x03, 0xe0, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xbe, 0xc9, 0xce, 0xae, 0x1c, 0x30, 0xd5, 0xd3, 0xbf, 0xe3, 0x6e, 0x6d, 0xdb, 0x30, 0xfe, 0xc6, 0x82, 0x91, 0x30, 0x77, 0x78, 0x88, 0xf4, 0xed, 0xa0, 0xa5, 0x5c, 0xb9, 0xb4, 0x03, 0xcd, 0x0d, 0x30, 0xe2, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1209(ch_1209, ch_1209 + sizeof(ch_1209) -1);
CDataStream stream_1209(vch_1209, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1209;
stream_1209 >> txHist_1209;

if(block.vtx[0]->GetHash() == txHist_1209.GetHash() && nHeight == 1264122) {
return true;
}
unsigned char ch_1210[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x25, 0x4a, 0x13, 0x04, 0xc7, 0xf1, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf9, 0x16, 0x94, 0x35, 0x56, 0x96, 0xff, 0x6f, 0xe1, 0xf4, 0x7c, 0x0d, 0xc1, 0xd3, 0x0a, 0xd6, 0x4c, 0x30, 0x0a, 0xf3, 0x2f, 0x1f, 0x95, 0xc9, 0xd9, 0xaa, 0x81, 0x14, 0x2b, 0xf6, 0x37, 0x24, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x5f, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1210(ch_1210, ch_1210 + sizeof(ch_1210) -1);
CDataStream stream_1210(vch_1210, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1210;
stream_1210 >> txHist_1210;

if(block.vtx[0]->GetHash() == txHist_1210.GetHash() && nHeight == 1264165) {
return true;
}
unsigned char ch_1211[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe7, 0x49, 0x13, 0x04, 0xbd, 0xd7, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe1, 0xa0, 0xb8, 0x76, 0xb1, 0x64, 0x26, 0xe5, 0x7d, 0xac, 0x74, 0x07, 0x90, 0x77, 0xe9, 0xdd, 0x19, 0x85, 0xf4, 0x00, 0xcd, 0xfd, 0x95, 0xb8, 0x66, 0x4f, 0x2a, 0x7b, 0x02, 0x68, 0x69, 0xe0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x01, 0xb4, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1211(ch_1211, ch_1211 + sizeof(ch_1211) -1);
CDataStream stream_1211(vch_1211, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1211;
stream_1211 >> txHist_1211;

if(block.vtx[0]->GetHash() == txHist_1211.GetHash() && nHeight == 1264103) {
return true;
}
unsigned char ch_1212[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3e, 0x4a, 0x13, 0x04, 0x82, 0xf7, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x57, 0xc2, 0x5a, 0x24, 0x74, 0x5f, 0xce, 0xbe, 0x41, 0xe8, 0xde, 0x4c, 0x33, 0x0a, 0xcb, 0xb7, 0xd0, 0x0b, 0x29, 0x7e, 0xe1, 0xa9, 0x9c, 0x2c, 0x67, 0x47, 0xff, 0x10, 0xba, 0x94, 0xf1, 0x34, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xff, 0xfd, 0xe1, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1212(ch_1212, ch_1212 + sizeof(ch_1212) -1);
CDataStream stream_1212(vch_1212, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1212;
stream_1212 >> txHist_1212;

if(block.vtx[0]->GetHash() == txHist_1212.GetHash() && nHeight == 1264190) {
return true;
}
unsigned char ch_1213[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3d, 0x4a, 0x13, 0x04, 0x70, 0xf7, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x57, 0xc2, 0x5a, 0x24, 0x74, 0x5f, 0xce, 0xbe, 0x41, 0xe8, 0xde, 0x4c, 0x33, 0x0a, 0xcb, 0xb7, 0xd0, 0x0b, 0x29, 0x7e, 0xe1, 0xa9, 0x9c, 0x2c, 0x67, 0x47, 0xff, 0x10, 0xba, 0x94, 0xf1, 0x34, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xf8, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd3, 0x45, 0x0d, 0x3f, 0x4d, 0x28, 0xfa, 0xc2, 0x88, 0x82, 0xfa, 0x05, 0x6e, 0x29, 0xaf, 0x7b, 0x47, 0xbe, 0x2b, 0x1a, 0x6d, 0x4b, 0xb3, 0x7c, 0xe5, 0xb6, 0xa9, 0x0c, 0xb8, 0x38, 0xd4, 0x4d, 0xd8, 0xec, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1213(ch_1213, ch_1213 + sizeof(ch_1213) -1);
CDataStream stream_1213(vch_1213, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1213;
stream_1213 >> txHist_1213;

if(block.vtx[0]->GetHash() == txHist_1213.GetHash() && nHeight == 1264189) {
return true;
}
unsigned char ch_1214[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x3c, 0x4a, 0x13, 0x04, 0x98, 0xf6, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x21, 0x3d, 0x09, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1214(ch_1214, ch_1214 + sizeof(ch_1214) -1);
CDataStream stream_1214(vch_1214, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1214;
stream_1214 >> txHist_1214;

if(block.vtx[0]->GetHash() == txHist_1214.GetHash() && nHeight == 1264188) {
return true;
}
unsigned char ch_1215[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x2d, 0x4a, 0x13, 0x04, 0x7e, 0xf3, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf9, 0x1e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1215(ch_1215, ch_1215 + sizeof(ch_1215) -1);
CDataStream stream_1215(vch_1215, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1215;
stream_1215 >> txHist_1215;

if(block.vtx[0]->GetHash() == txHist_1215.GetHash() && nHeight == 1264173) {
return true;
}
unsigned char ch_1216[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf8, 0x49, 0x13, 0x04, 0x48, 0xdf, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x45, 0x52, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x45, 0x52, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfa, 0x53, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1216(ch_1216, ch_1216 + sizeof(ch_1216) -1);
CDataStream stream_1216(vch_1216, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1216;
stream_1216 >> txHist_1216;

if(block.vtx[0]->GetHash() == txHist_1216.GetHash() && nHeight == 1264120) {
return true;
}
unsigned char ch_1217[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x24, 0x4a, 0x13, 0x04, 0xb5, 0xf1, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf9, 0x16, 0x94, 0x35, 0x56, 0x96, 0xff, 0x6f, 0xe1, 0xf4, 0x7c, 0x0d, 0xc1, 0xd3, 0x0a, 0xd6, 0x4c, 0x30, 0x0a, 0xf3, 0x2f, 0x1f, 0x95, 0xc9, 0xd9, 0xaa, 0x81, 0x14, 0x2b, 0xf6, 0x37, 0x24, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x04, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x36, 0x9d, 0x19, 0x3f, 0x64, 0xfc, 0xb2, 0x9c, 0x55, 0x7a, 0x04, 0x7d, 0x08, 0xea, 0x9d, 0x99, 0x80, 0x44, 0x9f, 0xdb, 0x79, 0x0c, 0x0b, 0x13, 0x27, 0x2e, 0x24, 0x27, 0x5e, 0xf9, 0xf9, 0x8e, 0x10, 0x94, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1217(ch_1217, ch_1217 + sizeof(ch_1217) -1);
CDataStream stream_1217(vch_1217, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1217;
stream_1217 >> txHist_1217;

if(block.vtx[0]->GetHash() == txHist_1217.GetHash() && nHeight == 1264164) {
return true;
}
unsigned char ch_1218[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe3, 0x49, 0x13, 0x04, 0xdb, 0xd4, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5a, 0xa3, 0x00, 0x3d, 0x7d, 0xc5, 0x9c, 0xda, 0xd0, 0x2a, 0xa4, 0x4f, 0xbb, 0x60, 0x21, 0x11, 0x50, 0x53, 0x3c, 0x60, 0xdd, 0x0e, 0x32, 0x1c, 0xde, 0x39, 0xb0, 0x12, 0xc9, 0xae, 0x45, 0x8c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0xff, 0xff, 0xe2, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1218(ch_1218, ch_1218 + sizeof(ch_1218) -1);
CDataStream stream_1218(vch_1218, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1218;
stream_1218 >> txHist_1218;

if(block.vtx[0]->GetHash() == txHist_1218.GetHash() && nHeight == 1264099) {
return true;
}
unsigned char ch_1219[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x3b, 0x4a, 0x13, 0x04, 0x51, 0xf6, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf8, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1219(ch_1219, ch_1219 + sizeof(ch_1219) -1);
CDataStream stream_1219(vch_1219, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1219;
stream_1219 >> txHist_1219;

if(block.vtx[0]->GetHash() == txHist_1219.GetHash() && nHeight == 1264187) {
return true;
}
unsigned char ch_1220[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x03, 0x4a, 0x13, 0x04, 0x36, 0xe2, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x4b, 0xc9, 0xe7, 0x6e, 0x16, 0xec, 0xcb, 0xb9, 0xc9, 0x76, 0x2f, 0x76, 0x61, 0x8b, 0x0c, 0xef, 0xa2, 0xbb, 0x41, 0xcb, 0xac, 0x3b, 0x0d, 0x54, 0x5c, 0xcc, 0xa4, 0x5d, 0x67, 0x97, 0x53, 0xe7, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xfb, 0x30, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1220(ch_1220, ch_1220 + sizeof(ch_1220) -1);
CDataStream stream_1220(vch_1220, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1220;
stream_1220 >> txHist_1220;

if(block.vtx[0]->GetHash() == txHist_1220.GetHash() && nHeight == 1264131) {
return true;
}
unsigned char ch_1221[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x39, 0x4a, 0x13, 0x04, 0x3b, 0xf6, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x06, 0x44, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1221(ch_1221, ch_1221 + sizeof(ch_1221) -1);
CDataStream stream_1221(vch_1221, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1221;
stream_1221 >> txHist_1221;

if(block.vtx[0]->GetHash() == txHist_1221.GetHash() && nHeight == 1264185) {
return true;
}
unsigned char ch_1222[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2c, 0x4a, 0x13, 0x04, 0x89, 0xf3, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbf, 0xa7, 0x80, 0x87, 0x5d, 0x19, 0x51, 0x27, 0x73, 0x1c, 0xf2, 0xf2, 0x5a, 0x97, 0x81, 0xb6, 0x15, 0x8c, 0x91, 0x88, 0x0e, 0x27, 0x60, 0x19, 0xa3, 0x66, 0x41, 0x0e, 0x53, 0x36, 0x26, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xff, 0xfe, 0x63, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1222(ch_1222, ch_1222 + sizeof(ch_1222) -1);
CDataStream stream_1222(vch_1222, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1222;
stream_1222 >> txHist_1222;

if(block.vtx[0]->GetHash() == txHist_1222.GetHash() && nHeight == 1264172) {
return true;
}
unsigned char ch_1223[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf6, 0x49, 0x13, 0x04, 0x6e, 0xde, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x14, 0x52, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1223(ch_1223, ch_1223 + sizeof(ch_1223) -1);
CDataStream stream_1223(vch_1223, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1223;
stream_1223 >> txHist_1223;

if(block.vtx[0]->GetHash() == txHist_1223.GetHash() && nHeight == 1264118) {
return true;
}
unsigned char ch_1224[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe1, 0x49, 0x13, 0x04, 0xd4, 0xd4, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5a, 0xa3, 0x00, 0x3d, 0x7d, 0xc5, 0x9c, 0xda, 0xd0, 0x2a, 0xa4, 0x4f, 0xbb, 0x60, 0x21, 0x11, 0x50, 0x53, 0x3c, 0x60, 0xdd, 0x0e, 0x32, 0x1c, 0xde, 0x39, 0xb0, 0x12, 0xc9, 0xae, 0x45, 0x8c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb3, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1224(ch_1224, ch_1224 + sizeof(ch_1224) -1);
CDataStream stream_1224(vch_1224, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1224;
stream_1224 >> txHist_1224;

if(block.vtx[0]->GetHash() == txHist_1224.GetHash() && nHeight == 1264097) {
return true;
}
unsigned char ch_1225[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x38, 0x4a, 0x13, 0x04, 0x3a, 0xf6, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x22, 0xe6, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1225(ch_1225, ch_1225 + sizeof(ch_1225) -1);
CDataStream stream_1225(vch_1225, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1225;
stream_1225 >> txHist_1225;

if(block.vtx[0]->GetHash() == txHist_1225.GetHash() && nHeight == 1264184) {
return true;
}
unsigned char ch_1226[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x37, 0x4a, 0x13, 0x04, 0x24, 0xf6, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x08, 0x3a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1226(ch_1226, ch_1226 + sizeof(ch_1226) -1);
CDataStream stream_1226(vch_1226, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1226;
stream_1226 >> txHist_1226;

if(block.vtx[0]->GetHash() == txHist_1226.GetHash() && nHeight == 1264183) {
return true;
}
unsigned char ch_1227[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x02, 0x4a, 0x13, 0x04, 0x34, 0xe2, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x4b, 0xc9, 0xe7, 0x6e, 0x16, 0xec, 0xcb, 0xb9, 0xc9, 0x76, 0x2f, 0x76, 0x61, 0x8b, 0x0c, 0xef, 0xa2, 0xbb, 0x41, 0xcb, 0xac, 0x3b, 0x0d, 0x54, 0x5c, 0xcc, 0xa4, 0x5d, 0x67, 0x97, 0x53, 0xe7, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xff, 0x80, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1227(ch_1227, ch_1227 + sizeof(ch_1227) -1);
CDataStream stream_1227(vch_1227, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1227;
stream_1227 >> txHist_1227;

if(block.vtx[0]->GetHash() == txHist_1227.GetHash() && nHeight == 1264130) {
return true;
}
unsigned char ch_1228[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x36, 0x4a, 0x13, 0x04, 0xdd, 0xf5, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xab, 0x58, 0x1e, 0xb7, 0x81, 0xbe, 0xf0, 0xe8, 0x8b, 0x19, 0x16, 0xf8, 0xa4, 0xd7, 0x42, 0x70, 0x7c, 0xce, 0x9f, 0xea, 0xfa, 0x0b, 0xb8, 0xca, 0xdf, 0x01, 0xad, 0x3f, 0x32, 0xa7, 0xac, 0xf0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfe, 0x0c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1228(ch_1228, ch_1228 + sizeof(ch_1228) -1);
CDataStream stream_1228(vch_1228, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1228;
stream_1228 >> txHist_1228;

if(block.vtx[0]->GetHash() == txHist_1228.GetHash() && nHeight == 1264182) {
return true;
}
unsigned char ch_1229[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2b, 0x4a, 0x13, 0x04, 0x89, 0xf3, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbf, 0xa7, 0x80, 0x87, 0x5d, 0x19, 0x51, 0x27, 0x73, 0x1c, 0xf2, 0xf2, 0x5a, 0x97, 0x81, 0xb6, 0x15, 0x8c, 0x91, 0x88, 0x0e, 0x27, 0x60, 0x19, 0xa3, 0x66, 0x41, 0x0e, 0x53, 0x36, 0x26, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xfd, 0xab, 0x51, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1229(ch_1229, ch_1229 + sizeof(ch_1229) -1);
CDataStream stream_1229(vch_1229, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1229;
stream_1229 >> txHist_1229;

if(block.vtx[0]->GetHash() == txHist_1229.GetHash() && nHeight == 1264171) {
return true;
}
unsigned char ch_1230[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf4, 0x49, 0x13, 0x04, 0x51, 0xde, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe5, 0x1d, 0xa9, 0x06, 0x29, 0x7e, 0xac, 0xc4, 0x8e, 0xbe, 0xf4, 0x27, 0xa3, 0x92, 0x3d, 0x8d, 0xd8, 0xfc, 0xbd, 0xe5, 0x78, 0xc1, 0xd7, 0x65, 0x45, 0x51, 0x6e, 0xdf, 0x9e, 0x44, 0x7a, 0xbb, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xff, 0xfe, 0x16, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1230(ch_1230, ch_1230 + sizeof(ch_1230) -1);
CDataStream stream_1230(vch_1230, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1230;
stream_1230 >> txHist_1230;

if(block.vtx[0]->GetHash() == txHist_1230.GetHash() && nHeight == 1264116) {
return true;
}
unsigned char ch_1231[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1f, 0x4a, 0x13, 0x04, 0x01, 0xed, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7e, 0x0e, 0xac, 0xba, 0x59, 0x00, 0x8d, 0x91, 0x70, 0xbd, 0x68, 0xbc, 0x3f, 0xb7, 0xe7, 0x08, 0x34, 0x94, 0x88, 0x05, 0xe1, 0x4f, 0x4f, 0x15, 0x83, 0x45, 0x9e, 0x0c, 0x3a, 0xe2, 0x73, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xfd, 0xab, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1231(ch_1231, ch_1231 + sizeof(ch_1231) -1);
CDataStream stream_1231(vch_1231, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1231;
stream_1231 >> txHist_1231;

if(block.vtx[0]->GetHash() == txHist_1231.GetHash() && nHeight == 1264159) {
return true;
}
unsigned char ch_1232[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xdf, 0x49, 0x13, 0x04, 0xce, 0xd4, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5a, 0xa3, 0x00, 0x3d, 0x7d, 0xc5, 0x9c, 0xda, 0xd0, 0x2a, 0xa4, 0x4f, 0xbb, 0x60, 0x21, 0x11, 0x50, 0x53, 0x3c, 0x60, 0xdd, 0x0e, 0x32, 0x1c, 0xde, 0x39, 0xb0, 0x12, 0xc9, 0xae, 0x45, 0x8c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xff, 0xff, 0x2c, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1232(ch_1232, ch_1232 + sizeof(ch_1232) -1);
CDataStream stream_1232(vch_1232, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1232;
stream_1232 >> txHist_1232;

if(block.vtx[0]->GetHash() == txHist_1232.GetHash() && nHeight == 1264095) {
return true;
}
unsigned char ch_1233[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x34, 0x4a, 0x13, 0x04, 0xae, 0xf5, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9f, 0xf2, 0x43, 0xfe, 0x94, 0xad, 0xd8, 0xbc, 0x0f, 0x7b, 0xfb, 0x83, 0xf4, 0x49, 0xd2, 0xd1, 0x0a, 0xcc, 0x75, 0x7e, 0xc0, 0x4c, 0xe0, 0x1e, 0x32, 0x1b, 0x59, 0xe2, 0xea, 0xb8, 0x3c, 0x50, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xfb, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1233(ch_1233, ch_1233 + sizeof(ch_1233) -1);
CDataStream stream_1233(vch_1233, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1233;
stream_1233 >> txHist_1233;

if(block.vtx[0]->GetHash() == txHist_1233.GetHash() && nHeight == 1264180) {
return true;
}
unsigned char ch_1234[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x33, 0x4a, 0x13, 0x04, 0x67, 0xf5, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x13, 0x4d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1234(ch_1234, ch_1234 + sizeof(ch_1234) -1);
CDataStream stream_1234(vch_1234, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1234;
stream_1234 >> txHist_1234;

if(block.vtx[0]->GetHash() == txHist_1234.GetHash() && nHeight == 1264179) {
return true;
}
unsigned char ch_1235[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x32, 0x4a, 0x13, 0x04, 0x34, 0xf5, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x07, 0x45, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x1a, 0x11, 0x5c, 0xc1, 0x7b, 0xfb, 0x6f, 0x9d, 0xbc, 0x3b, 0xea, 0x07, 0x3b, 0xe5, 0x1b, 0x71, 0x0d, 0x8a, 0x96, 0x22, 0x4a, 0x43, 0x39, 0xc2, 0x2f, 0x84, 0xe3, 0x86, 0x87, 0x41, 0x9d, 0x6f, 0x70, 0xf5, 0xf8, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1235(ch_1235, ch_1235 + sizeof(ch_1235) -1);
CDataStream stream_1235(vch_1235, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1235;
stream_1235 >> txHist_1235;

if(block.vtx[0]->GetHash() == txHist_1235.GetHash() && nHeight == 1264178) {
return true;
}
unsigned char ch_1236[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2a, 0x4a, 0x13, 0x04, 0x87, 0xf3, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbf, 0xa7, 0x80, 0x87, 0x5d, 0x19, 0x51, 0x27, 0x73, 0x1c, 0xf2, 0xf2, 0x5a, 0x97, 0x81, 0xb6, 0x15, 0x8c, 0x91, 0x88, 0x0e, 0x27, 0x60, 0x19, 0xa3, 0x66, 0x41, 0x0e, 0x53, 0x36, 0x26, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x11, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1236(ch_1236, ch_1236 + sizeof(ch_1236) -1);
CDataStream stream_1236(vch_1236, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1236;
stream_1236 >> txHist_1236;

if(block.vtx[0]->GetHash() == txHist_1236.GetHash() && nHeight == 1264170) {
return true;
}
unsigned char ch_1237[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf2, 0x49, 0x13, 0x04, 0x77, 0xdc, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x07, 0x12, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1237(ch_1237, ch_1237 + sizeof(ch_1237) -1);
CDataStream stream_1237(vch_1237, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1237;
stream_1237 >> txHist_1237;

if(block.vtx[0]->GetHash() == txHist_1237.GetHash() && nHeight == 1264114) {
return true;
}
unsigned char ch_1238[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xdd, 0x49, 0x13, 0x04, 0x9d, 0xd4, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf9, 0x49, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xb0, 0x29, 0x4a, 0xd6, 0x48, 0x4c, 0xb7, 0x20, 0x2c, 0x07, 0x6e, 0xe5, 0xb1, 0x65, 0x00, 0xfb, 0x6f, 0xf5, 0x85, 0x97, 0x04, 0x04, 0xfb, 0x1d, 0x4c, 0x8f, 0xc2, 0xa2, 0xe2, 0xdc, 0xa7, 0xdd, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1238(ch_1238, ch_1238 + sizeof(ch_1238) -1);
CDataStream stream_1238(vch_1238, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1238;
stream_1238 >> txHist_1238;

if(block.vtx[0]->GetHash() == txHist_1238.GetHash() && nHeight == 1264093) {
return true;
}
unsigned char ch_1239[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb2, 0x49, 0x13, 0x04, 0xdf, 0xbd, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x4b, 0x04, 0xcc, 0x85, 0xfb, 0xc1, 0xcc, 0x66, 0x51, 0x68, 0x02, 0xbb, 0x92, 0x06, 0xf5, 0x6a, 0x10, 0xff, 0x93, 0xaf, 0x6a, 0x8f, 0xe2, 0x56, 0x2c, 0x1f, 0x4a, 0x8d, 0xd5, 0x83, 0x7a, 0x5c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0xff, 0xff, 0x56, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1239(ch_1239, ch_1239 + sizeof(ch_1239) -1);
CDataStream stream_1239(vch_1239, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1239;
stream_1239 >> txHist_1239;

if(block.vtx[0]->GetHash() == txHist_1239.GetHash() && nHeight == 1264050) {
return true;
}
unsigned char ch_1240[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x29, 0x4a, 0x13, 0x04, 0x65, 0xf3, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbf, 0xa7, 0x80, 0x87, 0x5d, 0x19, 0x51, 0x27, 0x73, 0x1c, 0xf2, 0xf2, 0x5a, 0x97, 0x81, 0xb6, 0x15, 0x8c, 0x91, 0x88, 0x0e, 0x27, 0x60, 0x19, 0xa3, 0x66, 0x41, 0x0e, 0x53, 0x36, 0x26, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x01, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xab, 0xa8, 0x0f, 0x0f, 0x34, 0x18, 0x8f, 0x74, 0x66, 0x6d, 0xc9, 0x13, 0xf3, 0xaa, 0xb0, 0x69, 0x2c, 0x6e, 0x88, 0xd0, 0x3c, 0xe7, 0x88, 0xd7, 0x76, 0x2c, 0x62, 0xb3, 0xbe, 0x87, 0xe0, 0xb5, 0x70, 0x33, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1240(ch_1240, ch_1240 + sizeof(ch_1240) -1);
CDataStream stream_1240(vch_1240, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1240;
stream_1240 >> txHist_1240;

if(block.vtx[0]->GetHash() == txHist_1240.GetHash() && nHeight == 1264169) {
return true;
}
unsigned char ch_1241[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1a, 0x4a, 0x13, 0x04, 0x85, 0xea, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x52, 0xe3, 0xce, 0xbf, 0x82, 0x78, 0x4e, 0x43, 0x48, 0x47, 0xcf, 0xc7, 0xe6, 0x0f, 0x22, 0xc2, 0x1f, 0x7b, 0xa1, 0xa2, 0x90, 0x09, 0xfd, 0x72, 0xb3, 0xd8, 0xe1, 0x0c, 0xb4, 0x56, 0xb4, 0x06, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xfd, 0x79, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1241(ch_1241, ch_1241 + sizeof(ch_1241) -1);
CDataStream stream_1241(vch_1241, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1241;
stream_1241 >> txHist_1241;

if(block.vtx[0]->GetHash() == txHist_1241.GetHash() && nHeight == 1264154) {
return true;
}
unsigned char ch_1242[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xae, 0x49, 0x13, 0x04, 0x03, 0xba, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x25, 0xe6, 0x82, 0x06, 0x35, 0xf8, 0x94, 0x71, 0x27, 0x29, 0x4f, 0x00, 0xa6, 0x5b, 0x59, 0xf8, 0x81, 0x89, 0xe2, 0xbf, 0x1c, 0xc9, 0x95, 0x30, 0xa8, 0x11, 0x90, 0x16, 0x48, 0xd6, 0x60, 0x99, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0xff, 0xfc, 0x28, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1242(ch_1242, ch_1242 + sizeof(ch_1242) -1);
CDataStream stream_1242(vch_1242, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1242;
stream_1242 >> txHist_1242;

if(block.vtx[0]->GetHash() == txHist_1242.GetHash() && nHeight == 1264046) {
return true;
}
unsigned char ch_1243[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x2f, 0x4a, 0x13, 0x04, 0x43, 0xf4, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xef, 0x37, 0x0b, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe3, 0xa8, 0xfa, 0xa5, 0x2c, 0xd2, 0x57, 0xbe, 0xf1, 0x0e, 0xbb, 0x59, 0x0e, 0x83, 0x5c, 0xdf, 0x10, 0x27, 0xf3, 0xb8, 0x45, 0xad, 0x98, 0x7e, 0x0a, 0xc1, 0xac, 0x87, 0xb2, 0x34, 0x7e, 0x05, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1243(ch_1243, ch_1243 + sizeof(ch_1243) -1);
CDataStream stream_1243(vch_1243, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1243;
stream_1243 >> txHist_1243;

if(block.vtx[0]->GetHash() == txHist_1243.GetHash() && nHeight == 1264175) {
return true;
}
unsigned char ch_1244[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x28, 0x4a, 0x13, 0x04, 0xc6, 0xf2, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x21, 0x6d, 0x0e, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1244(ch_1244, ch_1244 + sizeof(ch_1244) -1);
CDataStream stream_1244(vch_1244, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1244;
stream_1244 >> txHist_1244;

if(block.vtx[0]->GetHash() == txHist_1244.GetHash() && nHeight == 1264168) {
return true;
}
unsigned char ch_1245[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xeb, 0x49, 0x13, 0x04, 0xf0, 0xd9, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf8, 0x10, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xdc, 0x28, 0x38, 0xa8, 0x6d, 0xd5, 0x36, 0x03, 0xf9, 0xb4, 0x20, 0xbc, 0xfc, 0x33, 0xc9, 0x57, 0x82, 0xfd, 0xef, 0x8a, 0xdd, 0xdc, 0xe8, 0x01, 0x8a, 0x59, 0x5b, 0xaf, 0x15, 0x2b, 0x3b, 0xd4, 0x00, 0xe4, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1245(ch_1245, ch_1245 + sizeof(ch_1245) -1);
CDataStream stream_1245(vch_1245, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1245;
stream_1245 >> txHist_1245;

if(block.vtx[0]->GetHash() == txHist_1245.GetHash() && nHeight == 1264107) {
return true;
}
unsigned char ch_1246[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x18, 0x4a, 0x13, 0x04, 0x7e, 0xea, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x03, 0x92, 0x45, 0x04, 0xfd, 0x73, 0xb4, 0x36, 0x1c, 0x91, 0xc5, 0x18, 0xcf, 0x52, 0xee, 0xd3, 0x94, 0xf1, 0x52, 0xb6, 0xdd, 0xa8, 0x38, 0xbf, 0x0f, 0xa2, 0x63, 0xac, 0xbf, 0x8c, 0x93, 0x13, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x1d, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1246(ch_1246, ch_1246 + sizeof(ch_1246) -1);
CDataStream stream_1246(vch_1246, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1246;
stream_1246 >> txHist_1246;

if(block.vtx[0]->GetHash() == txHist_1246.GetHash() && nHeight == 1264152) {
return true;
}
unsigned char ch_1247[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xda, 0x49, 0x13, 0x04, 0xa7, 0xd2, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x04, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1247(ch_1247, ch_1247 + sizeof(ch_1247) -1);
CDataStream stream_1247(vch_1247, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1247;
stream_1247 >> txHist_1247;

if(block.vtx[0]->GetHash() == txHist_1247.GetHash() && nHeight == 1264090) {
return true;
}
unsigned char ch_1248[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xac, 0x49, 0x13, 0x04, 0xfe, 0xb9, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x25, 0xe6, 0x82, 0x06, 0x35, 0xf8, 0x94, 0x71, 0x27, 0x29, 0x4f, 0x00, 0xa6, 0x5b, 0x59, 0xf8, 0x81, 0x89, 0xe2, 0xbf, 0x1c, 0xc9, 0x95, 0x30, 0xa8, 0x11, 0x90, 0x16, 0x48, 0xd6, 0x60, 0x99, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x03, 0x7f, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1248(ch_1248, ch_1248 + sizeof(ch_1248) -1);
CDataStream stream_1248(vch_1248, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1248;
stream_1248 >> txHist_1248;

if(block.vtx[0]->GetHash() == txHist_1248.GetHash() && nHeight == 1264044) {
return true;
}
unsigned char ch_1249[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc8, 0x49, 0x13, 0x04, 0x6b, 0xcb, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xca, 0x7d, 0x8b, 0x98, 0x2c, 0x7c, 0xeb, 0xdd, 0x03, 0xc2, 0x31, 0x0a, 0x21, 0x3e, 0x2b, 0xca, 0x03, 0xf1, 0x0b, 0x1c, 0x05, 0x8b, 0xb1, 0x29, 0x6c, 0x4f, 0x26, 0x73, 0xd4, 0x9e, 0x56, 0x2e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0x7e, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1249(ch_1249, ch_1249 + sizeof(ch_1249) -1);
CDataStream stream_1249(vch_1249, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1249;
stream_1249 >> txHist_1249;

if(block.vtx[0]->GetHash() == txHist_1249.GetHash() && nHeight == 1264072) {
return true;
}
unsigned char ch_1250[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xfc, 0x49, 0x13, 0x04, 0xf4, 0xdf, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb8, 0xd6, 0x41, 0x79, 0x0f, 0x85, 0x99, 0xeb, 0x6a, 0x3b, 0x27, 0xbe, 0xc8, 0x69, 0x0f, 0x92, 0x54, 0x70, 0xd6, 0x48, 0xc9, 0x35, 0xbc, 0xc7, 0xd0, 0xd7, 0xea, 0xdc, 0xfe, 0xc5, 0x6a, 0xa9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xf3, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1250(ch_1250, ch_1250 + sizeof(ch_1250) -1);
CDataStream stream_1250(vch_1250, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1250;
stream_1250 >> txHist_1250;

if(block.vtx[0]->GetHash() == txHist_1250.GetHash() && nHeight == 1264124) {
return true;
}
unsigned char ch_1251[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x27, 0x4a, 0x13, 0x04, 0x5e, 0xf2, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xcc, 0x8e, 0xc2, 0x0b, 0xa7, 0xb7, 0x99, 0xe3, 0xca, 0xc8, 0x22, 0x43, 0x7a, 0x1a, 0xa0, 0xa4, 0xf0, 0x6d, 0xb3, 0x20, 0x31, 0x60, 0xbc, 0x08, 0x7b, 0xf6, 0xa0, 0xb1, 0x64, 0xd2, 0x8a, 0x78, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfe, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1251(ch_1251, ch_1251 + sizeof(ch_1251) -1);
CDataStream stream_1251(vch_1251, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1251;
stream_1251 >> txHist_1251;

if(block.vtx[0]->GetHash() == txHist_1251.GetHash() && nHeight == 1264167) {
return true;
}
unsigned char ch_1252[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe8, 0x49, 0x13, 0x04, 0xad, 0xd8, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x87, 0x2f, 0x49, 0x2e, 0xca, 0xaf, 0x33, 0x8c, 0xa2, 0xf2, 0x36, 0xb1, 0xc3, 0xa4, 0x6b, 0x8c, 0x05, 0x52, 0x33, 0x96, 0xf4, 0x8e, 0xdf, 0x6c, 0x9f, 0x45, 0xe5, 0x2b, 0xa8, 0x82, 0xe9, 0xbd, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0xff, 0xff, 0xf9, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xf1, 0x3c, 0xfd, 0x16, 0x08, 0xe7, 0x63, 0xe5, 0x5b, 0x11, 0x25, 0xae, 0x35, 0x93, 0x23, 0x76, 0xcf, 0x7c, 0x7d, 0x80, 0xba, 0x2e, 0x95, 0xab, 0x08, 0x7d, 0xdf, 0x73, 0x57, 0x64, 0x15, 0x51, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1252(ch_1252, ch_1252 + sizeof(ch_1252) -1);
CDataStream stream_1252(vch_1252, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1252;
stream_1252 >> txHist_1252;

if(block.vtx[0]->GetHash() == txHist_1252.GetHash() && nHeight == 1264104) {
return true;
}
unsigned char ch_1253[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd8, 0x49, 0x13, 0x04, 0xaa, 0xd2, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe2, 0x4c, 0x83, 0x0c, 0xba, 0xac, 0x2b, 0xaf, 0xa7, 0xe4, 0x8b, 0x77, 0xfb, 0xda, 0x00, 0x4e, 0x00, 0xd9, 0xde, 0x3c, 0x09, 0x6b, 0x13, 0x14, 0x8d, 0xda, 0x1f, 0x66, 0x46, 0x88, 0x40, 0xdc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x01, 0x87, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1253(ch_1253, ch_1253 + sizeof(ch_1253) -1);
CDataStream stream_1253(vch_1253, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1253;
stream_1253 >> txHist_1253;

if(block.vtx[0]->GetHash() == txHist_1253.GetHash() && nHeight == 1264088) {
return true;
}
unsigned char ch_1254[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa9, 0x49, 0x13, 0x04, 0xda, 0xb8, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x81, 0x8c, 0x2c, 0xe9, 0x51, 0x75, 0x5b, 0x51, 0x45, 0xe6, 0x26, 0x50, 0x84, 0x39, 0xec, 0x37, 0x88, 0x5d, 0x05, 0xfd, 0x43, 0xec, 0x1a, 0x72, 0x41, 0x94, 0x59, 0xf9, 0x7c, 0x34, 0x90, 0x89, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xfd, 0xe4, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1254(ch_1254, ch_1254 + sizeof(ch_1254) -1);
CDataStream stream_1254(vch_1254, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1254;
stream_1254 >> txHist_1254;

if(block.vtx[0]->GetHash() == txHist_1254.GetHash() && nHeight == 1264041) {
return true;
}
unsigned char ch_1255[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf9, 0x49, 0x13, 0x04, 0xc7, 0xdf, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb8, 0xd6, 0x41, 0x79, 0x0f, 0x85, 0x99, 0xeb, 0x6a, 0x3b, 0x27, 0xbe, 0xc8, 0x69, 0x0f, 0x92, 0x54, 0x70, 0xd6, 0x48, 0xc9, 0x35, 0xbc, 0xc7, 0xd0, 0xd7, 0xea, 0xdc, 0xfe, 0xc5, 0x6a, 0xa9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0xff, 0xff, 0xf9, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1255(ch_1255, ch_1255 + sizeof(ch_1255) -1);
CDataStream stream_1255(vch_1255, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1255;
stream_1255 >> txHist_1255;

if(block.vtx[0]->GetHash() == txHist_1255.GetHash() && nHeight == 1264121) {
return true;
}
unsigned char ch_1256[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x21, 0x4a, 0x13, 0x04, 0x06, 0xed, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7e, 0x0e, 0xac, 0xba, 0x59, 0x00, 0x8d, 0x91, 0x70, 0xbd, 0x68, 0xbc, 0x3f, 0xb7, 0xe7, 0x08, 0x34, 0x94, 0x88, 0x05, 0xe1, 0x4f, 0x4f, 0x15, 0x83, 0x45, 0x9e, 0x0c, 0x3a, 0xe2, 0x73, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xe0, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1256(ch_1256, ch_1256 + sizeof(ch_1256) -1);
CDataStream stream_1256(vch_1256, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1256;
stream_1256 >> txHist_1256;

if(block.vtx[0]->GetHash() == txHist_1256.GetHash() && nHeight == 1264161) {
return true;
}
unsigned char ch_1257[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x20, 0x4a, 0x13, 0x04, 0x04, 0xed, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7e, 0x0e, 0xac, 0xba, 0x59, 0x00, 0x8d, 0x91, 0x70, 0xbd, 0x68, 0xbc, 0x3f, 0xb7, 0xe7, 0x08, 0x34, 0x94, 0x88, 0x05, 0xe1, 0x4f, 0x4f, 0x15, 0x83, 0x45, 0x9e, 0x0c, 0x3a, 0xe2, 0x73, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1257(ch_1257, ch_1257 + sizeof(ch_1257) -1);
CDataStream stream_1257(vch_1257, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1257;
stream_1257 >> txHist_1257;

if(block.vtx[0]->GetHash() == txHist_1257.GetHash() && nHeight == 1264160) {
return true;
}
unsigned char ch_1258[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x13, 0x4a, 0x13, 0x04, 0x76, 0xe8, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x75, 0xd0, 0x54, 0xed, 0x60, 0x03, 0x0c, 0x52, 0x11, 0xae, 0xaf, 0xf6, 0xd9, 0xd2, 0xff, 0xd5, 0x0c, 0x35, 0x62, 0xf2, 0x8a, 0x84, 0x69, 0x4e, 0x8e, 0xd9, 0xff, 0xb1, 0xef, 0xe2, 0xba, 0xcd, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x0c, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1258(ch_1258, ch_1258 + sizeof(ch_1258) -1);
CDataStream stream_1258(vch_1258, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1258;
stream_1258 >> txHist_1258;

if(block.vtx[0]->GetHash() == txHist_1258.GetHash() && nHeight == 1264147) {
return true;
}
unsigned char ch_1259[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd7, 0x49, 0x13, 0x04, 0x96, 0xd2, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe2, 0x4c, 0x83, 0x0c, 0xba, 0xac, 0x2b, 0xaf, 0xa7, 0xe4, 0x8b, 0x77, 0xfb, 0xda, 0x00, 0x4e, 0x00, 0xd9, 0xde, 0x3c, 0x09, 0x6b, 0x13, 0x14, 0x8d, 0xda, 0x1f, 0x66, 0x46, 0x88, 0x40, 0xdc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0xff, 0xff, 0xf9, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x39, 0xbd, 0x71, 0x7f, 0xe5, 0x39, 0xd3, 0x6b, 0x34, 0x1a, 0x26, 0xa4, 0x03, 0xce, 0xac, 0x21, 0xb4, 0x33, 0x9f, 0xd8, 0x6e, 0x05, 0xf3, 0x6d, 0xc7, 0x72, 0x4c, 0x07, 0xb5, 0x2d, 0xbd, 0x2b, 0xd0, 0xbf, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1259(ch_1259, ch_1259 + sizeof(ch_1259) -1);
CDataStream stream_1259(vch_1259, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1259;
stream_1259 >> txHist_1259;

if(block.vtx[0]->GetHash() == txHist_1259.GetHash() && nHeight == 1264087) {
return true;
}
unsigned char ch_1260[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa6, 0x49, 0x13, 0x04, 0xcd, 0xb6, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x13, 0xad, 0xa2, 0x0a, 0xef, 0xc7, 0x2c, 0x5b, 0x31, 0x5b, 0x55, 0x66, 0xcc, 0xc1, 0xe8, 0x29, 0xb7, 0x9f, 0xa1, 0x57, 0x9d, 0xdb, 0x49, 0xb3, 0x67, 0x9b, 0xaa, 0xb6, 0x19, 0x05, 0xfe, 0x59, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfc, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1260(ch_1260, ch_1260 + sizeof(ch_1260) -1);
CDataStream stream_1260(vch_1260, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1260;
stream_1260 >> txHist_1260;

if(block.vtx[0]->GetHash() == txHist_1260.GetHash() && nHeight == 1264038) {
return true;
}
unsigned char ch_1261[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc5, 0x49, 0x13, 0x04, 0xd0, 0xc8, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x75, 0x72, 0x3b, 0xb2, 0x75, 0x86, 0xba, 0x59, 0xd2, 0x99, 0xb8, 0x60, 0x5a, 0xd7, 0x55, 0x86, 0xab, 0xc1, 0x1a, 0x3a, 0x08, 0x6f, 0x92, 0x5e, 0x13, 0x32, 0xda, 0x0d, 0x47, 0xc8, 0x2c, 0x9f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0xff, 0xfe, 0xf1, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1261(ch_1261, ch_1261 + sizeof(ch_1261) -1);
CDataStream stream_1261(vch_1261, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1261;
stream_1261 >> txHist_1261;

if(block.vtx[0]->GetHash() == txHist_1261.GetHash() && nHeight == 1264069) {
return true;
}
unsigned char ch_1262[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf7, 0x49, 0x13, 0x04, 0xd4, 0xde, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x2f, 0x6d, 0x75, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x64, 0x6f, 0x6e, 0x2f, 0x0d, 0x00, 0x00, 0x00, 0x55, 0xfa, 0xff, 0xff, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfa, 0x2c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x62, 0xb5, 0xef, 0x72, 0x20, 0x05, 0xb1, 0x16, 0x5c, 0x66, 0xb0, 0xd3, 0xfa, 0x06, 0x44, 0x1a, 0x4f, 0xe2, 0xe1, 0x6a, 0xf9, 0x45, 0x69, 0x70, 0x3a, 0x14, 0xfd, 0x2e, 0x04, 0xb6, 0x96, 0xd0, 0x6c, 0x3a, 0xf6, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xaa, 0x62, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0x52, 0xed, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1262(ch_1262, ch_1262 + sizeof(ch_1262) -1);
CDataStream stream_1262(vch_1262, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1262;
stream_1262 >> txHist_1262;

if(block.vtx[0]->GetHash() == txHist_1262.GetHash() && nHeight == 1264119) {
return true;
}
unsigned char ch_1263[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x1e, 0x4a, 0x13, 0x04, 0xbf, 0xec, 0x35, 0x5b, 0x08, 0x48, 0x00, 0x10, 0xb3, 0x51, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x1c, 0x0d, 0xff, 0x73, 0xb9, 0xad, 0x11, 0x38, 0x4d, 0xc8, 0x0f, 0xd9, 0x2f, 0x6d, 0xac, 0x54, 0xfe, 0x0d, 0x55, 0x9d, 0x7e, 0x0e, 0xd1, 0x87, 0xed, 0x0e, 0x30, 0x93, 0x2b, 0xf5, 0x8d, 0x3e, 0xb8, 0xf0, 0x65, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1263(ch_1263, ch_1263 + sizeof(ch_1263) -1);
CDataStream stream_1263(vch_1263, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1263;
stream_1263 >> txHist_1263;

if(block.vtx[0]->GetHash() == txHist_1263.GetHash() && nHeight == 1264158) {
return true;
}
unsigned char ch_1264[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xdb, 0x49, 0x13, 0x04, 0xd5, 0xd2, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x21, 0xa4, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1264(ch_1264, ch_1264 + sizeof(ch_1264) -1);
CDataStream stream_1264(vch_1264, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1264;
stream_1264 >> txHist_1264;

if(block.vtx[0]->GetHash() == txHist_1264.GetHash() && nHeight == 1264091) {
return true;
}
unsigned char ch_1265[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x10, 0x4a, 0x13, 0x04, 0x89, 0xe6, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x4d, 0x9b, 0x68, 0x09, 0xdb, 0x70, 0x24, 0x5b, 0xc2, 0x01, 0x06, 0xa2, 0xe6, 0x36, 0x39, 0xa1, 0x3b, 0x19, 0x9b, 0x4f, 0x83, 0xf7, 0xaa, 0x04, 0x22, 0x59, 0x88, 0x0a, 0xc9, 0x45, 0x06, 0xa8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0x25, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1265(ch_1265, ch_1265 + sizeof(ch_1265) -1);
CDataStream stream_1265(vch_1265, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1265;
stream_1265 >> txHist_1265;

if(block.vtx[0]->GetHash() == txHist_1265.GetHash() && nHeight == 1264144) {
return true;
}
unsigned char ch_1266[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd6, 0x49, 0x13, 0x04, 0x98, 0xd0, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xff, 0x1f, 0xd2, 0xdc, 0x8e, 0x36, 0x82, 0x91, 0x96, 0x78, 0x0b, 0xb8, 0x7a, 0xfb, 0xf0, 0xc9, 0x56, 0xa4, 0x8f, 0x96, 0x35, 0x33, 0x3b, 0xbd, 0xd1, 0xd4, 0x63, 0xa2, 0xf4, 0xca, 0x5f, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xfd, 0xf2, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1266(ch_1266, ch_1266 + sizeof(ch_1266) -1);
CDataStream stream_1266(vch_1266, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1266;
stream_1266 >> txHist_1266;

if(block.vtx[0]->GetHash() == txHist_1266.GetHash() && nHeight == 1264086) {
return true;
}
unsigned char ch_1267[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa3, 0x49, 0x13, 0x04, 0x6f, 0xb6, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xce, 0x93, 0xdc, 0x58, 0xd1, 0x58, 0xf5, 0xb7, 0xd3, 0x89, 0x6b, 0xbe, 0x6f, 0x27, 0x38, 0x99, 0x97, 0xa8, 0xe9, 0x95, 0x3a, 0xe0, 0x90, 0x63, 0x8f, 0x7b, 0x51, 0x32, 0x10, 0x84, 0x15, 0x49, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x06, 0x69, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1267(ch_1267, ch_1267 + sizeof(ch_1267) -1);
CDataStream stream_1267(vch_1267, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1267;
stream_1267 >> txHist_1267;

if(block.vtx[0]->GetHash() == txHist_1267.GetHash() && nHeight == 1264035) {
return true;
}
unsigned char ch_1268[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc4, 0x49, 0x13, 0x04, 0xca, 0xc8, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x75, 0x72, 0x3b, 0xb2, 0x75, 0x86, 0xba, 0x59, 0xd2, 0x99, 0xb8, 0x60, 0x5a, 0xd7, 0x55, 0x86, 0xab, 0xc1, 0x1a, 0x3a, 0x08, 0x6f, 0x92, 0x5e, 0x13, 0x32, 0xda, 0x0d, 0x47, 0xc8, 0x2c, 0x9f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0xff, 0xfd, 0x1d, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1268(ch_1268, ch_1268 + sizeof(ch_1268) -1);
CDataStream stream_1268(vch_1268, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1268;
stream_1268 >> txHist_1268;

if(block.vtx[0]->GetHash() == txHist_1268.GetHash() && nHeight == 1264068) {
return true;
}
unsigned char ch_1269[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf5, 0x49, 0x13, 0x04, 0x53, 0xde, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe5, 0x1d, 0xa9, 0x06, 0x29, 0x7e, 0xac, 0xc4, 0x8e, 0xbe, 0xf4, 0x27, 0xa3, 0x92, 0x3d, 0x8d, 0xd8, 0xfc, 0xbd, 0xe5, 0x78, 0xc1, 0xd7, 0x65, 0x45, 0x51, 0x6e, 0xdf, 0x9e, 0x44, 0x7a, 0xbb, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xf8, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1269(ch_1269, ch_1269 + sizeof(ch_1269) -1);
CDataStream stream_1269(vch_1269, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1269;
stream_1269 >> txHist_1269;

if(block.vtx[0]->GetHash() == txHist_1269.GetHash() && nHeight == 1264117) {
return true;
}
unsigned char ch_1270[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x1b, 0x4a, 0x13, 0x04, 0xb1, 0xea, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x07, 0x37, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1270(ch_1270, ch_1270 + sizeof(ch_1270) -1);
CDataStream stream_1270(vch_1270, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1270;
stream_1270 >> txHist_1270;

if(block.vtx[0]->GetHash() == txHist_1270.GetHash() && nHeight == 1264155) {
return true;
}
unsigned char ch_1271[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd9, 0x49, 0x13, 0x04, 0xa3, 0xd2, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x04, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1271(ch_1271, ch_1271 + sizeof(ch_1271) -1);
CDataStream stream_1271(vch_1271, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1271;
stream_1271 >> txHist_1271;

if(block.vtx[0]->GetHash() == txHist_1271.GetHash() && nHeight == 1264089) {
return true;
}
unsigned char ch_1272[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd5, 0x49, 0x13, 0x04, 0x88, 0xd0, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb3, 0x7e, 0x5e, 0x7c, 0x1e, 0x8b, 0xfe, 0xb6, 0x4f, 0xf7, 0x6d, 0xc5, 0x14, 0xe7, 0x4d, 0xab, 0x81, 0x92, 0xba, 0xa5, 0x74, 0xe3, 0xc9, 0x88, 0x9a, 0x6a, 0x8c, 0x41, 0xcc, 0x8f, 0x27, 0xf4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x07, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1272(ch_1272, ch_1272 + sizeof(ch_1272) -1);
CDataStream stream_1272(vch_1272, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1272;
stream_1272 >> txHist_1272;

if(block.vtx[0]->GetHash() == txHist_1272.GetHash() && nHeight == 1264085) {
return true;
}
unsigned char ch_1273[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf3, 0x49, 0x13, 0x04, 0x43, 0xde, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x89, 0x2b, 0x18, 0x17, 0x80, 0x0b, 0xdf, 0x07, 0x75, 0x9a, 0xa9, 0x82, 0xf6, 0xae, 0xa1, 0x43, 0x4f, 0xb8, 0x83, 0x0a, 0xf8, 0x7f, 0xd6, 0x48, 0x6c, 0x99, 0xa7, 0xb2, 0x8f, 0x2b, 0x15, 0xd4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfe, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x82, 0x8b, 0xa6, 0x17, 0xa5, 0xa6, 0xc3, 0x04, 0x2f, 0x40, 0x77, 0x8e, 0x04, 0xf3, 0xe1, 0x91, 0x84, 0xac, 0x2a, 0x3b, 0x81, 0x76, 0x98, 0x05, 0x15, 0x2f, 0x71, 0x5e, 0xef, 0xd2, 0x8e, 0x26, 0x68, 0x97, 0x64, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1273(ch_1273, ch_1273 + sizeof(ch_1273) -1);
CDataStream stream_1273(vch_1273, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1273;
stream_1273 >> txHist_1273;

if(block.vtx[0]->GetHash() == txHist_1273.GetHash() && nHeight == 1264115) {
return true;
}
unsigned char ch_1274[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x19, 0x4a, 0x13, 0x04, 0x82, 0xea, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x03, 0x92, 0x45, 0x04, 0xfd, 0x73, 0xb4, 0x36, 0x1c, 0x91, 0xc5, 0x18, 0xcf, 0x52, 0xee, 0xd3, 0x94, 0xf1, 0x52, 0xb6, 0xdd, 0xa8, 0x38, 0xbf, 0x0f, 0xa2, 0x63, 0xac, 0xbf, 0x8c, 0x93, 0x13, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe6, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1274(ch_1274, ch_1274 + sizeof(ch_1274) -1);
CDataStream stream_1274(vch_1274, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1274;
stream_1274 >> txHist_1274;

if(block.vtx[0]->GetHash() == txHist_1274.GetHash() && nHeight == 1264153) {
return true;
}
unsigned char ch_1275[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x0b, 0x4a, 0x13, 0x04, 0x48, 0xe4, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9a, 0xf1, 0xba, 0xd9, 0xa0, 0x97, 0x62, 0x3b, 0xec, 0x91, 0x2a, 0xf5, 0xfa, 0xfd, 0x72, 0xc0, 0x6b, 0x8a, 0x28, 0x54, 0x4b, 0x1a, 0x9d, 0xba, 0xcb, 0x2b, 0xf7, 0x13, 0x2f, 0x79, 0xb4, 0x5c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0xb4, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1275(ch_1275, ch_1275 + sizeof(ch_1275) -1);
CDataStream stream_1275(vch_1275, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1275;
stream_1275 >> txHist_1275;

if(block.vtx[0]->GetHash() == txHist_1275.GetHash() && nHeight == 1264139) {
return true;
}
unsigned char ch_1276[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd3, 0x49, 0x13, 0x04, 0xe7, 0xcf, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x09, 0x97, 0x44, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1276(ch_1276, ch_1276 + sizeof(ch_1276) -1);
CDataStream stream_1276(vch_1276, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1276;
stream_1276 >> txHist_1276;

if(block.vtx[0]->GetHash() == txHist_1276.GetHash() && nHeight == 1264083) {
return true;
}
unsigned char ch_1277[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x9d, 0x49, 0x13, 0x04, 0xf5, 0xb2, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x22, 0x36, 0x21, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xf2, 0xe9, 0xad, 0x05, 0x97, 0x7c, 0x4a, 0xf7, 0xac, 0xa7, 0x22, 0xda, 0x36, 0xd3, 0x46, 0x56, 0x50, 0x9c, 0x24, 0xa3, 0x9a, 0x73, 0xac, 0x50, 0xb9, 0x48, 0x99, 0xbe, 0x89, 0xaa, 0xc8, 0xf2, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1277(ch_1277, ch_1277 + sizeof(ch_1277) -1);
CDataStream stream_1277(vch_1277, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1277;
stream_1277 >> txHist_1277;

if(block.vtx[0]->GetHash() == txHist_1277.GetHash() && nHeight == 1264029) {
return true;
}
unsigned char ch_1278[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xbf, 0x49, 0x13, 0x04, 0x5e, 0xc4, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x13, 0xc1, 0x06, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa1, 0xd1, 0xcd, 0x4f, 0x52, 0xda, 0x4b, 0x13, 0x87, 0x05, 0x6a, 0xe6, 0x1f, 0x8d, 0xfa, 0xf0, 0x32, 0xa3, 0x26, 0x0e, 0xe0, 0x80, 0x51, 0xc5, 0x07, 0xbf, 0x36, 0x97, 0x42, 0xe4, 0xf9, 0x52, 0xb0, 0x40, 0x64, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1278(ch_1278, ch_1278 + sizeof(ch_1278) -1);
CDataStream stream_1278(vch_1278, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1278;
stream_1278 >> txHist_1278;

if(block.vtx[0]->GetHash() == txHist_1278.GetHash() && nHeight == 1264063) {
return true;
}
unsigned char ch_1279[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf1, 0x49, 0x13, 0x04, 0x74, 0xdc, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x09, 0x97, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1279(ch_1279, ch_1279 + sizeof(ch_1279) -1);
CDataStream stream_1279(vch_1279, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1279;
stream_1279 >> txHist_1279;

if(block.vtx[0]->GetHash() == txHist_1279.GetHash() && nHeight == 1264113) {
return true;
}
unsigned char ch_1280[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x17, 0x4a, 0x13, 0x04, 0x67, 0xea, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x22, 0x2d, 0x13, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x60, 0x72, 0x61, 0x2a, 0x64, 0x55, 0x37, 0x04, 0xfc, 0xfd, 0xdd, 0x5b, 0xb1, 0x53, 0xb3, 0x6d, 0xaa, 0x48, 0x7c, 0x12, 0x61, 0x8f, 0xdc, 0x71, 0xda, 0xde, 0x34, 0xe9, 0xf3, 0x37, 0x7d, 0x87, 0xe8, 0x60, 0x6b, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1280(ch_1280, ch_1280 + sizeof(ch_1280) -1);
CDataStream stream_1280(vch_1280, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1280;
stream_1280 >> txHist_1280;

if(block.vtx[0]->GetHash() == txHist_1280.GetHash() && nHeight == 1264151) {
return true;
}
unsigned char ch_1281[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x0e, 0x4a, 0x13, 0x04, 0x5f, 0xe6, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x4d, 0x9b, 0x68, 0x09, 0xdb, 0x70, 0x24, 0x5b, 0xc2, 0x01, 0x06, 0xa2, 0xe6, 0x36, 0x39, 0xa1, 0x3b, 0x19, 0x9b, 0x4f, 0x83, 0xf7, 0xaa, 0x04, 0x22, 0x59, 0x88, 0x0a, 0xc9, 0x45, 0x06, 0xa8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0xff, 0xff, 0xf9, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x7b, 0x44, 0xbe, 0xdb, 0xb9, 0xb3, 0xae, 0x19, 0xfa, 0x56, 0x1c, 0x1a, 0x7e, 0x16, 0x0a, 0xc0, 0xaa, 0xb2, 0xe5, 0xd6, 0x0f, 0xec, 0x58, 0xbc, 0xec, 0x8c, 0xf6, 0xde, 0xb7, 0xe3, 0x2e, 0x49, 0x98, 0x43, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1281(ch_1281, ch_1281 + sizeof(ch_1281) -1);
CDataStream stream_1281(vch_1281, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1281;
stream_1281 >> txHist_1281;

if(block.vtx[0]->GetHash() == txHist_1281.GetHash() && nHeight == 1264142) {
return true;
}
unsigned char ch_1282[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd2, 0x49, 0x13, 0x04, 0xbb, 0xcf, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd8, 0xe0, 0x80, 0x13, 0x66, 0x10, 0x1e, 0x33, 0x78, 0x18, 0x1e, 0xda, 0x89, 0xa1, 0x9e, 0xad, 0x4b, 0xcd, 0xf8, 0x9f, 0x96, 0x62, 0x9c, 0xab, 0x31, 0x8b, 0xd2, 0xc9, 0x49, 0x2e, 0x2e, 0xb0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xff, 0xb2, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1282(ch_1282, ch_1282 + sizeof(ch_1282) -1);
CDataStream stream_1282(vch_1282, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1282;
stream_1282 >> txHist_1282;

if(block.vtx[0]->GetHash() == txHist_1282.GetHash() && nHeight == 1264082) {
return true;
}
unsigned char ch_1283[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x09, 0x4a, 0x13, 0x04, 0x35, 0xe4, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xef, 0x77, 0x0d, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1283(ch_1283, ch_1283 + sizeof(ch_1283) -1);
CDataStream stream_1283(vch_1283, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1283;
stream_1283 >> txHist_1283;

if(block.vtx[0]->GetHash() == txHist_1283.GetHash() && nHeight == 1264137) {
return true;
}
unsigned char ch_1284[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd1, 0x49, 0x13, 0x04, 0xb8, 0xcf, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd8, 0xe0, 0x80, 0x13, 0x66, 0x10, 0x1e, 0x33, 0x78, 0x18, 0x1e, 0xda, 0x89, 0xa1, 0x9e, 0xad, 0x4b, 0xcd, 0xf8, 0x9f, 0x96, 0x62, 0x9c, 0xab, 0x31, 0x8b, 0xd2, 0xc9, 0x49, 0x2e, 0x2e, 0xb0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xfe, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xf7, 0x9e, 0x9e, 0x53, 0xbe, 0x86, 0xda, 0x23, 0x3e, 0x85, 0xb9, 0x70, 0xc5, 0xb4, 0x14, 0x4f, 0xab, 0x62, 0x3a, 0xc6, 0x40, 0x92, 0x03, 0x11, 0x19, 0xac, 0x8d, 0x33, 0x0b, 0x2c, 0x1c, 0xd0, 0x08, 0x11, 0x64, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1284(ch_1284, ch_1284 + sizeof(ch_1284) -1);
CDataStream stream_1284(vch_1284, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1284;
stream_1284 >> txHist_1284;

if(block.vtx[0]->GetHash() == txHist_1284.GetHash() && nHeight == 1264081) {
return true;
}
unsigned char ch_1285[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xed, 0x49, 0x13, 0x04, 0x34, 0xda, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf5, 0xcf, 0x9c, 0xa5, 0xa2, 0xc4, 0xd4, 0x32, 0xba, 0x70, 0xff, 0x2e, 0x5b, 0x70, 0x48, 0x81, 0xfe, 0xc7, 0x3e, 0x87, 0xc7, 0x37, 0xb9, 0xe3, 0xeb, 0x67, 0xf1, 0x96, 0xed, 0xc9, 0xb9, 0x9a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xfa, 0x89, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1285(ch_1285, ch_1285 + sizeof(ch_1285) -1);
CDataStream stream_1285(vch_1285, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1285;
stream_1285 >> txHist_1285;

if(block.vtx[0]->GetHash() == txHist_1285.GetHash() && nHeight == 1264109) {
return true;
}
unsigned char ch_1286[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x14, 0x4a, 0x13, 0x04, 0x78, 0xe8, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x75, 0xd0, 0x54, 0xed, 0x60, 0x03, 0x0c, 0x52, 0x11, 0xae, 0xaf, 0xf6, 0xd9, 0xd2, 0xff, 0xd5, 0x0c, 0x35, 0x62, 0xf2, 0x8a, 0x84, 0x69, 0x4e, 0x8e, 0xd9, 0xff, 0xb1, 0xef, 0xe2, 0xba, 0xcd, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0x03, 0xbf, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1286(ch_1286, ch_1286 + sizeof(ch_1286) -1);
CDataStream stream_1286(vch_1286, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1286;
stream_1286 >> txHist_1286;

if(block.vtx[0]->GetHash() == txHist_1286.GetHash() && nHeight == 1264148) {
return true;
}
unsigned char ch_1287[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x07, 0x4a, 0x13, 0x04, 0x1d, 0xe3, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x49, 0xd8, 0xca, 0x5b, 0xb4, 0x31, 0xd0, 0xa7, 0xf8, 0x70, 0x92, 0xf0, 0x38, 0x7b, 0xb0, 0xa5, 0x9f, 0x24, 0xe6, 0x7e, 0x36, 0x27, 0xc7, 0x7d, 0x2e, 0x6a, 0x8d, 0x08, 0x45, 0x8f, 0x91, 0x30, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1287(ch_1287, ch_1287 + sizeof(ch_1287) -1);
CDataStream stream_1287(vch_1287, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1287;
stream_1287 >> txHist_1287;

if(block.vtx[0]->GetHash() == txHist_1287.GetHash() && nHeight == 1264135) {
return true;
}
unsigned char ch_1288[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x70, 0x49, 0x13, 0x04, 0x8d, 0xa2, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x40, 0xf8, 0x7b, 0x20, 0x4e, 0x4d, 0x62, 0x12, 0x22, 0x01, 0x69, 0xf0, 0x85, 0x8b, 0x57, 0x65, 0x68, 0x0f, 0x28, 0x8f, 0xf2, 0x0b, 0x72, 0xca, 0x92, 0x32, 0xb0, 0x2b, 0x9f, 0xca, 0x96, 0x3b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfb, 0x24, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1288(ch_1288, ch_1288 + sizeof(ch_1288) -1);
CDataStream stream_1288(vch_1288, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1288;
stream_1288 >> txHist_1288;

if(block.vtx[0]->GetHash() == txHist_1288.GetHash() && nHeight == 1263984) {
return true;
}
unsigned char ch_1289[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x06, 0x4a, 0x13, 0x04, 0xc6, 0xe2, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x79, 0xd1, 0xbd, 0x77, 0x49, 0x57, 0xb8, 0xe4, 0x8b, 0x1c, 0xb9, 0x74, 0xa6, 0x30, 0xc1, 0x4e, 0x86, 0x04, 0x3d, 0x6d, 0xe1, 0x62, 0xc1, 0x63, 0xa7, 0xc9, 0x1b, 0xef, 0xbb, 0xc3, 0x4a, 0x2b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xf8, 0x19, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1289(ch_1289, ch_1289 + sizeof(ch_1289) -1);
CDataStream stream_1289(vch_1289, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1289;
stream_1289 >> txHist_1289;

if(block.vtx[0]->GetHash() == txHist_1289.GetHash() && nHeight == 1264134) {
return true;
}
unsigned char ch_1290[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd0, 0x49, 0x13, 0x04, 0x64, 0xcf, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xfa, 0x7b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x32, 0x72, 0xd7, 0x2b, 0xa2, 0xbc, 0x92, 0xf0, 0x47, 0xda, 0x8c, 0xe1, 0xf1, 0x2c, 0x6c, 0x31, 0x8f, 0x69, 0xdf, 0xf6, 0x31, 0x69, 0x33, 0xdd, 0xa5, 0x84, 0xd6, 0x14, 0xa4, 0xc7, 0x16, 0x78, 0x58, 0x6f, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1290(ch_1290, ch_1290 + sizeof(ch_1290) -1);
CDataStream stream_1290(vch_1290, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1290;
stream_1290 >> txHist_1290;

if(block.vtx[0]->GetHash() == txHist_1290.GetHash() && nHeight == 1264080) {
return true;
}
unsigned char ch_1291[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x99, 0x49, 0x13, 0x04, 0xd3, 0xb0, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xba, 0x37, 0x21, 0x52, 0x88, 0xc9, 0x85, 0x5b, 0x0d, 0x8f, 0x07, 0x9d, 0x6b, 0x54, 0xab, 0xcd, 0x94, 0xf2, 0x7c, 0x76, 0xff, 0xf6, 0x00, 0x61, 0xa5, 0x1d, 0x40, 0x2e, 0x97, 0x7e, 0x2d, 0xcb, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x07, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1291(ch_1291, ch_1291 + sizeof(ch_1291) -1);
CDataStream stream_1291(vch_1291, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1291;
stream_1291 >> txHist_1291;

if(block.vtx[0]->GetHash() == txHist_1291.GetHash() && nHeight == 1264025) {
return true;
}
unsigned char ch_1292[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb9, 0x49, 0x13, 0x04, 0x1f, 0xc3, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x6f, 0x92, 0x5c, 0xd4, 0x5c, 0x71, 0x11, 0xd4, 0x94, 0x66, 0x0b, 0xbf, 0xfc, 0x96, 0x86, 0x22, 0x61, 0xfe, 0x4f, 0x4e, 0x39, 0x43, 0xdf, 0x43, 0xa9, 0xef, 0xdd, 0x23, 0x81, 0x92, 0x9d, 0x8a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfe, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xf3, 0xaf, 0xc5, 0xea, 0x9b, 0x0b, 0x1b, 0x7c, 0x66, 0xb2, 0x2a, 0x6c, 0x78, 0x68, 0xf3, 0xe5, 0x17, 0x94, 0xc3, 0xa6, 0x83, 0x33, 0x84, 0x95, 0xa2, 0x23, 0xd0, 0xa2, 0x0a, 0x72, 0xd1, 0x1b, 0xb0, 0xb0, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1292(ch_1292, ch_1292 + sizeof(ch_1292) -1);
CDataStream stream_1292(vch_1292, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1292;
stream_1292 >> txHist_1292;

if(block.vtx[0]->GetHash() == txHist_1292.GetHash() && nHeight == 1264057) {
return true;
}
unsigned char ch_1293[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xea, 0x49, 0x13, 0x04, 0xb0, 0xd8, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x87, 0x2f, 0x49, 0x2e, 0xca, 0xaf, 0x33, 0x8c, 0xa2, 0xf2, 0x36, 0xb1, 0xc3, 0xa4, 0x6b, 0x8c, 0x05, 0x52, 0x33, 0x96, 0xf4, 0x8e, 0xdf, 0x6c, 0x9f, 0x45, 0xe5, 0x2b, 0xa8, 0x82, 0xe9, 0xbd, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x01, 0x18, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1293(ch_1293, ch_1293 + sizeof(ch_1293) -1);
CDataStream stream_1293(vch_1293, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1293;
stream_1293 >> txHist_1293;

if(block.vtx[0]->GetHash() == txHist_1293.GetHash() && nHeight == 1264106) {
return true;
}
unsigned char ch_1294[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x12, 0x4a, 0x13, 0x04, 0x4c, 0xe8, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x04, 0x11, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0x08, 0x53, 0xff, 0xc9, 0xac, 0xdb, 0xd7, 0x0d, 0x16, 0xa3, 0x76, 0x24, 0x18, 0x79, 0xac, 0x1d, 0x1c, 0x2a, 0xae, 0x46, 0x41, 0x47, 0x5f, 0x34, 0x21, 0xbb, 0xf5, 0x8e, 0xbe, 0xf3, 0x2a, 0xf0, 0x1b, 0x67, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1294(ch_1294, ch_1294 + sizeof(ch_1294) -1);
CDataStream stream_1294(vch_1294, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1294;
stream_1294 >> txHist_1294;

if(block.vtx[0]->GetHash() == txHist_1294.GetHash() && nHeight == 1264146) {
return true;
}
unsigned char ch_1295[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xfe, 0x49, 0x13, 0x04, 0x64, 0xe0, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x13, 0x4f, 0x07, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x5f, 0x29, 0xda, 0x38, 0x08, 0xee, 0x75, 0x82, 0x13, 0x5a, 0xf9, 0x15, 0x2d, 0x93, 0x46, 0x05, 0x66, 0x15, 0x6a, 0x52, 0xb1, 0x0f, 0xa5, 0xd7, 0x26, 0x0e, 0xc0, 0x4d, 0xa0, 0x26, 0x6b, 0x43, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1295(ch_1295, ch_1295 + sizeof(ch_1295) -1);
CDataStream stream_1295(vch_1295, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1295;
stream_1295 >> txHist_1295;

if(block.vtx[0]->GetHash() == txHist_1295.GetHash() && nHeight == 1264126) {
return true;
}
unsigned char ch_1296[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x6f, 0x49, 0x13, 0x04, 0x66, 0xa2, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x19, 0xcc, 0xcb, 0xfb, 0xf7, 0xc9, 0x7d, 0xe7, 0x1f, 0xd5, 0x31, 0x6a, 0xa5, 0xa9, 0x58, 0x13, 0x52, 0x42, 0xe9, 0x14, 0xdf, 0x66, 0xad, 0x6a, 0x43, 0x26, 0x09, 0xe6, 0xd1, 0x70, 0x48, 0x15, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0x0b, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1296(ch_1296, ch_1296 + sizeof(ch_1296) -1);
CDataStream stream_1296(vch_1296, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1296;
stream_1296 >> txHist_1296;

if(block.vtx[0]->GetHash() == txHist_1296.GetHash() && nHeight == 1263983) {
return true;
}
unsigned char ch_1297[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xcf, 0x49, 0x13, 0x04, 0x25, 0xce, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9b, 0x25, 0x48, 0x85, 0x5d, 0x9d, 0x9d, 0x6f, 0x13, 0xe2, 0x37, 0x67, 0x16, 0x80, 0xe3, 0x4a, 0xcd, 0x74, 0x81, 0x40, 0xed, 0x99, 0xd0, 0xa2, 0xd9, 0xdf, 0xbc, 0x88, 0x2c, 0x40, 0xc7, 0x45, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0x01, 0xfb, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1297(ch_1297, ch_1297 + sizeof(ch_1297) -1);
CDataStream stream_1297(vch_1297, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1297;
stream_1297 >> txHist_1297;

if(block.vtx[0]->GetHash() == txHist_1297.GetHash() && nHeight == 1264079) {
return true;
}
unsigned char ch_1298[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x7d, 0x48, 0x13, 0x04, 0xbb, 0x43, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbe, 0x9c, 0x40, 0xbf, 0xbd, 0x38, 0x49, 0x91, 0xdb, 0xb7, 0x10, 0x54, 0xcc, 0xab, 0xac, 0xf8, 0x1b, 0xf0, 0xbf, 0xed, 0x37, 0x70, 0x14, 0x1b, 0x54, 0xb8, 0xf5, 0xf7, 0x3a, 0x41, 0x7c, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0xa7, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1298(ch_1298, ch_1298 + sizeof(ch_1298) -1);
CDataStream stream_1298(vch_1298, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1298;
stream_1298 >> txHist_1298;

if(block.vtx[0]->GetHash() == txHist_1298.GetHash() && nHeight == 1263741) {
return true;
}
unsigned char ch_1299[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb6, 0x49, 0x13, 0x04, 0x84, 0xc1, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xfa, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1299(ch_1299, ch_1299 + sizeof(ch_1299) -1);
CDataStream stream_1299(vch_1299, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1299;
stream_1299 >> txHist_1299;

if(block.vtx[0]->GetHash() == txHist_1299.GetHash() && nHeight == 1264054) {
return true;
}
unsigned char ch_1300[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe6, 0x49, 0x13, 0x04, 0xbc, 0xd7, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe1, 0xa0, 0xb8, 0x76, 0xb1, 0x64, 0x26, 0xe5, 0x7d, 0xac, 0x74, 0x07, 0x90, 0x77, 0xe9, 0xdd, 0x19, 0x85, 0xf4, 0x00, 0xcd, 0xfd, 0x95, 0xb8, 0x66, 0x4f, 0x2a, 0x7b, 0x02, 0x68, 0x69, 0xe0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x03, 0x27, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1300(ch_1300, ch_1300 + sizeof(ch_1300) -1);
CDataStream stream_1300(vch_1300, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1300;
stream_1300 >> txHist_1300;

if(block.vtx[0]->GetHash() == txHist_1300.GetHash() && nHeight == 1264102) {
return true;
}
unsigned char ch_1301[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x0f, 0x4a, 0x13, 0x04, 0x84, 0xe6, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x4d, 0x9b, 0x68, 0x09, 0xdb, 0x70, 0x24, 0x5b, 0xc2, 0x01, 0x06, 0xa2, 0xe6, 0x36, 0x39, 0xa1, 0x3b, 0x19, 0x9b, 0x4f, 0x83, 0xf7, 0xaa, 0x04, 0x22, 0x59, 0x88, 0x0a, 0xc9, 0x45, 0x06, 0xa8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xa8, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1301(ch_1301, ch_1301 + sizeof(ch_1301) -1);
CDataStream stream_1301(vch_1301, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1301;
stream_1301 >> txHist_1301;

if(block.vtx[0]->GetHash() == txHist_1301.GetHash() && nHeight == 1264143) {
return true;
}
unsigned char ch_1302[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xfb, 0x49, 0x13, 0x04, 0xf3, 0xdf, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb8, 0xd6, 0x41, 0x79, 0x0f, 0x85, 0x99, 0xeb, 0x6a, 0x3b, 0x27, 0xbe, 0xc8, 0x69, 0x0f, 0x92, 0x54, 0x70, 0xd6, 0x48, 0xc9, 0x35, 0xbc, 0xc7, 0xd0, 0xd7, 0xea, 0xdc, 0xfe, 0xc5, 0x6a, 0xa9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xfe, 0x71, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1302(ch_1302, ch_1302 + sizeof(ch_1302) -1);
CDataStream stream_1302(vch_1302, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1302;
stream_1302 >> txHist_1302;

if(block.vtx[0]->GetHash() == txHist_1302.GetHash() && nHeight == 1264123) {
return true;
}
unsigned char ch_1303[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x75, 0x48, 0x13, 0x04, 0x3b, 0x41, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x03, 0x9e, 0x3e, 0xd2, 0x0f, 0x22, 0x1f, 0xae, 0x26, 0xc7, 0x3b, 0x7c, 0xc4, 0x77, 0x2c, 0xac, 0xea, 0xf6, 0x6b, 0xb1, 0xe1, 0xb3, 0x20, 0x5b, 0x0c, 0x5c, 0xd6, 0xf0, 0x08, 0xb1, 0xcd, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0x78, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1303(ch_1303, ch_1303 + sizeof(ch_1303) -1);
CDataStream stream_1303(vch_1303, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1303;
stream_1303 >> txHist_1303;

if(block.vtx[0]->GetHash() == txHist_1303.GetHash() && nHeight == 1263733) {
return true;
}
unsigned char ch_1304[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb4, 0x49, 0x13, 0x04, 0x0b, 0xbe, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0xe1, 0xc5, 0xb8, 0xeb, 0xdc, 0xba, 0x45, 0x52, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfa, 0x2c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xff, 0xc9, 0x0f, 0xc7, 0xf8, 0xad, 0x39, 0x73, 0x0b, 0x61, 0x80, 0xc9, 0xbe, 0x26, 0x33, 0x23, 0xe9, 0x81, 0x2a, 0x29, 0xb4, 0x84, 0x2a, 0xe0, 0xdd, 0x55, 0x5f, 0xf4, 0xf0, 0x2f, 0x57, 0x85, 0x68, 0xcc, 0xf3, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x0c, 0x5c, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0x3c, 0xcc, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1304(ch_1304, ch_1304 + sizeof(ch_1304) -1);
CDataStream stream_1304(vch_1304, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1304;
stream_1304 >> txHist_1304;

if(block.vtx[0]->GetHash() == txHist_1304.GetHash() && nHeight == 1264052) {
return true;
}
unsigned char ch_1305[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x88, 0x49, 0x13, 0x04, 0x7a, 0xac, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x20, 0x6c, 0x18, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa2, 0x3e, 0xdc, 0xb6, 0xab, 0xa4, 0x7c, 0xef, 0xf6, 0xc9, 0x8c, 0xa9, 0x50, 0x74, 0x96, 0x5c, 0x71, 0x68, 0x0f, 0xd4, 0x7c, 0x5d, 0xab, 0xa8, 0x35, 0x5d, 0xe2, 0x07, 0xd4, 0x3d, 0x59, 0x41, 0x28, 0x1a, 0x63, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1305(ch_1305, ch_1305 + sizeof(ch_1305) -1);
CDataStream stream_1305(vch_1305, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1305;
stream_1305 >> txHist_1305;

if(block.vtx[0]->GetHash() == txHist_1305.GetHash() && nHeight == 1264008) {
return true;
}
unsigned char ch_1306[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x0c, 0x4a, 0x13, 0x04, 0x3c, 0xe4, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x02, 0xaf, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1306(ch_1306, ch_1306 + sizeof(ch_1306) -1);
CDataStream stream_1306(vch_1306, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1306;
stream_1306 >> txHist_1306;

if(block.vtx[0]->GetHash() == txHist_1306.GetHash() && nHeight == 1264140) {
return true;
}
unsigned char ch_1307[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xce, 0x49, 0x13, 0x04, 0x24, 0xce, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9b, 0x25, 0x48, 0x85, 0x5d, 0x9d, 0x9d, 0x6f, 0x13, 0xe2, 0x37, 0x67, 0x16, 0x80, 0xe3, 0x4a, 0xcd, 0x74, 0x81, 0x40, 0xed, 0x99, 0xd0, 0xa2, 0xd9, 0xdf, 0xbc, 0x88, 0x2c, 0x40, 0xc7, 0x45, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0x6c, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1307(ch_1307, ch_1307 + sizeof(ch_1307) -1);
CDataStream stream_1307(vch_1307, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1307;
stream_1307 >> txHist_1307;

if(block.vtx[0]->GetHash() == txHist_1307.GetHash() && nHeight == 1264078) {
return true;
}
unsigned char ch_1308[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5b, 0x48, 0x13, 0x04, 0x09, 0x3b, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x6f, 0xdd, 0xb4, 0x0d, 0xe6, 0xc2, 0x84, 0xd5, 0xd7, 0xad, 0xc2, 0x08, 0xb8, 0xf7, 0x61, 0xb3, 0x3c, 0x21, 0x4a, 0x64, 0x99, 0xed, 0x5c, 0x8a, 0x84, 0xb3, 0xb6, 0x51, 0x91, 0x6d, 0xc9, 0x47, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xea, 0x12, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1308(ch_1308, ch_1308 + sizeof(ch_1308) -1);
CDataStream stream_1308(vch_1308, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1308;
stream_1308 >> txHist_1308;

if(block.vtx[0]->GetHash() == txHist_1308.GetHash() && nHeight == 1263707) {
return true;
}
unsigned char ch_1309[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb1, 0x49, 0x13, 0x04, 0xdc, 0xbd, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x4b, 0x04, 0xcc, 0x85, 0xfb, 0xc1, 0xcc, 0x66, 0x51, 0x68, 0x02, 0xbb, 0x92, 0x06, 0xf5, 0x6a, 0x10, 0xff, 0x93, 0xaf, 0x6a, 0x8f, 0xe2, 0x56, 0x2c, 0x1f, 0x4a, 0x8d, 0xd5, 0x83, 0x7a, 0x5c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0x02, 0x19, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1309(ch_1309, ch_1309 + sizeof(ch_1309) -1);
CDataStream stream_1309(vch_1309, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1309;
stream_1309 >> txHist_1309;

if(block.vtx[0]->GetHash() == txHist_1309.GetHash() && nHeight == 1264049) {
return true;
}
unsigned char ch_1310[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x0a, 0x4a, 0x13, 0x04, 0x45, 0xe4, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9a, 0xf1, 0xba, 0xd9, 0xa0, 0x97, 0x62, 0x3b, 0xec, 0x91, 0x2a, 0xf5, 0xfa, 0xfd, 0x72, 0xc0, 0x6b, 0x8a, 0x28, 0x54, 0x4b, 0x1a, 0x9d, 0xba, 0xcb, 0x2b, 0xf7, 0x13, 0x2f, 0x79, 0xb4, 0x5c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xa1, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1310(ch_1310, ch_1310 + sizeof(ch_1310) -1);
CDataStream stream_1310(vch_1310, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1310;
stream_1310 >> txHist_1310;

if(block.vtx[0]->GetHash() == txHist_1310.GetHash() && nHeight == 1264138) {
return true;
}
unsigned char ch_1311[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5a, 0x48, 0x13, 0x04, 0xdd, 0x3a, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x54, 0x6c, 0xca, 0xd2, 0x9f, 0xdb, 0x47, 0xb7, 0xab, 0xb1, 0x32, 0xee, 0x94, 0x84, 0xf3, 0x6c, 0xec, 0xfb, 0x19, 0xfe, 0xde, 0xa1, 0xea, 0xb4, 0x45, 0x4e, 0xed, 0x8c, 0x1e, 0xc1, 0x30, 0x8b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x55, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1311(ch_1311, ch_1311 + sizeof(ch_1311) -1);
CDataStream stream_1311(vch_1311, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1311;
stream_1311 >> txHist_1311;

if(block.vtx[0]->GetHash() == txHist_1311.GetHash() && nHeight == 1263706) {
return true;
}
unsigned char ch_1312[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x08, 0x4a, 0x13, 0x04, 0xb7, 0xe3, 0x35, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x06, 0x5e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x6e, 0x54, 0xa3, 0x18, 0x28, 0x76, 0x4d, 0x7b, 0x08, 0xa1, 0xbd, 0x15, 0x40, 0x4d, 0x02, 0x4d, 0xc2, 0x98, 0xb8, 0x91, 0x67, 0x7f, 0x77, 0xf6, 0x63, 0x7d, 0xa0, 0x31, 0xd6, 0x2c, 0x4d, 0x08, 0xf8, 0x78, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1312(ch_1312, ch_1312 + sizeof(ch_1312) -1);
CDataStream stream_1312(vch_1312, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1312;
stream_1312 >> txHist_1312;

if(block.vtx[0]->GetHash() == txHist_1312.GetHash() && nHeight == 1264136) {
return true;
}
unsigned char ch_1313[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x59, 0x48, 0x13, 0x04, 0xd8, 0x3a, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x54, 0x6c, 0xca, 0xd2, 0x9f, 0xdb, 0x47, 0xb7, 0xab, 0xb1, 0x32, 0xee, 0x94, 0x84, 0xf3, 0x6c, 0xec, 0xfb, 0x19, 0xfe, 0xde, 0xa1, 0xea, 0xb4, 0x45, 0x4e, 0xed, 0x8c, 0x1e, 0xc1, 0x30, 0x8b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x3b, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1313(ch_1313, ch_1313 + sizeof(ch_1313) -1);
CDataStream stream_1313(vch_1313, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1313;
stream_1313 >> txHist_1313;

if(block.vtx[0]->GetHash() == txHist_1313.GetHash() && nHeight == 1263705) {
return true;
}
unsigned char ch_1314[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x62, 0x49, 0x13, 0x04, 0x5a, 0x9c, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb3, 0x9c, 0x39, 0xac, 0x00, 0x4e, 0x03, 0x4b, 0x58, 0x2c, 0x87, 0x0a, 0xaf, 0xa1, 0xb3, 0x59, 0x12, 0xcf, 0x1f, 0x7a, 0x41, 0xb9, 0x2d, 0x16, 0x7b, 0x8a, 0xaf, 0x2d, 0xf6, 0xe3, 0xea, 0xd5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0xff, 0xfd, 0x7a, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1314(ch_1314, ch_1314 + sizeof(ch_1314) -1);
CDataStream stream_1314(vch_1314, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1314;
stream_1314 >> txHist_1314;

if(block.vtx[0]->GetHash() == txHist_1314.GetHash() && nHeight == 1263970) {
return true;
}
unsigned char ch_1315[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf0, 0x49, 0x13, 0x04, 0x7f, 0xdc, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x42, 0x18, 0xe4, 0xc3, 0xe9, 0x0f, 0x48, 0xb4, 0x39, 0x1c, 0xb8, 0x93, 0x36, 0xed, 0xa1, 0x2d, 0x7c, 0xd4, 0xa3, 0x89, 0xe9, 0x76, 0xae, 0x1c, 0x30, 0xee, 0xb7, 0x5f, 0x11, 0x8d, 0x22, 0xc4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xf8, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x99, 0x1e, 0x89, 0x8d, 0x0b, 0x12, 0x45, 0xaf, 0x9b, 0x15, 0xd2, 0x51, 0x5c, 0x83, 0x55, 0xaa, 0xc8, 0x00, 0x64, 0xcc, 0x23, 0xf4, 0x3a, 0x86, 0xb1, 0x94, 0x05, 0x55, 0x15, 0x59, 0x34, 0xd9, 0x80, 0xa5, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1315(ch_1315, ch_1315 + sizeof(ch_1315) -1);
CDataStream stream_1315(vch_1315, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1315;
stream_1315 >> txHist_1315;

if(block.vtx[0]->GetHash() == txHist_1315.GetHash() && nHeight == 1264112) {
return true;
}
unsigned char ch_1316[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x60, 0x49, 0x13, 0x04, 0x55, 0x9c, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb3, 0x9c, 0x39, 0xac, 0x00, 0x4e, 0x03, 0x4b, 0x58, 0x2c, 0x87, 0x0a, 0xaf, 0xa1, 0xb3, 0x59, 0x12, 0xcf, 0x1f, 0x7a, 0x41, 0xb9, 0x2d, 0x16, 0x7b, 0x8a, 0xaf, 0x2d, 0xf6, 0xe3, 0xea, 0xd5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0xbd, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1316(ch_1316, ch_1316 + sizeof(ch_1316) -1);
CDataStream stream_1316(vch_1316, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1316;
stream_1316 >> txHist_1316;

if(block.vtx[0]->GetHash() == txHist_1316.GetHash() && nHeight == 1263968) {
return true;
}
unsigned char ch_1317[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xec, 0x49, 0x13, 0x04, 0x31, 0xda, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf5, 0xcf, 0x9c, 0xa5, 0xa2, 0xc4, 0xd4, 0x32, 0xba, 0x70, 0xff, 0x2e, 0x5b, 0x70, 0x48, 0x81, 0xfe, 0xc7, 0x3e, 0x87, 0xc7, 0x37, 0xb9, 0xe3, 0xeb, 0x67, 0xf1, 0x96, 0xed, 0xc9, 0xb9, 0x9a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x67, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x04, 0xf7, 0x42, 0x09, 0xcc, 0x7f, 0xcf, 0xeb, 0xf1, 0x7d, 0xe0, 0x98, 0x7d, 0xe1, 0x2a, 0x13, 0x37, 0xe2, 0xe1, 0x00, 0x8d, 0xb7, 0x05, 0x52, 0x64, 0x55, 0xb6, 0x90, 0xf1, 0x29, 0x72, 0xb3, 0xf0, 0x5e, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1317(ch_1317, ch_1317 + sizeof(ch_1317) -1);
CDataStream stream_1317(vch_1317, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1317;
stream_1317 >> txHist_1317;

if(block.vtx[0]->GetHash() == txHist_1317.GetHash() && nHeight == 1264108) {
return true;
}
unsigned char ch_1318[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x5f, 0x49, 0x13, 0x04, 0x2a, 0x9c, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf9, 0xb1, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x6e, 0x04, 0x26, 0x0f, 0x21, 0xf1, 0xbd, 0x17, 0x81, 0xce, 0x63, 0xff, 0x07, 0x85, 0x63, 0x67, 0x42, 0x7a, 0xbc, 0x35, 0xf0, 0xcf, 0xe2, 0xe0, 0xce, 0xef, 0x08, 0x62, 0x43, 0x81, 0xef, 0x22, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1318(ch_1318, ch_1318 + sizeof(ch_1318) -1);
CDataStream stream_1318(vch_1318, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1318;
stream_1318 >> txHist_1318;

if(block.vtx[0]->GetHash() == txHist_1318.GetHash() && nHeight == 1263967) {
return true;
}
unsigned char ch_1319[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe9, 0x49, 0x13, 0x04, 0xae, 0xd8, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x87, 0x2f, 0x49, 0x2e, 0xca, 0xaf, 0x33, 0x8c, 0xa2, 0xf2, 0x36, 0xb1, 0xc3, 0xa4, 0x6b, 0x8c, 0x05, 0x52, 0x33, 0x96, 0xf4, 0x8e, 0xdf, 0x6c, 0x9f, 0x45, 0xe5, 0x2b, 0xa8, 0x82, 0xe9, 0xbd, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xff, 0xfd, 0xa6, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1319(ch_1319, ch_1319 + sizeof(ch_1319) -1);
CDataStream stream_1319(vch_1319, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1319;
stream_1319 >> txHist_1319;

if(block.vtx[0]->GetHash() == txHist_1319.GetHash() && nHeight == 1264105) {
return true;
}
unsigned char ch_1320[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xe5, 0x49, 0x13, 0x04, 0x9d, 0xd7, 0x35, 0x5b, 0x08, 0x48, 0x00, 0x08, 0x76, 0xa5, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xff, 0x20, 0xc7, 0xea, 0x93, 0x22, 0x4e, 0xd5, 0x4d, 0x53, 0x86, 0x97, 0xfe, 0x46, 0x23, 0xf1, 0x4a, 0xc4, 0x75, 0x24, 0x87, 0x13, 0xfb, 0x43, 0xe3, 0x89, 0x1c, 0x83, 0x7a, 0x79, 0x6a, 0xf8, 0x80, 0xeb, 0xfc, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1320(ch_1320, ch_1320 + sizeof(ch_1320) -1);
CDataStream stream_1320(vch_1320, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1320;
stream_1320 >> txHist_1320;

if(block.vtx[0]->GetHash() == txHist_1320.GetHash() && nHeight == 1264101) {
return true;
}
unsigned char ch_1321[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xcd, 0x49, 0x13, 0x04, 0xf1, 0xcd, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x32, 0xe5, 0x40, 0xd6, 0xac, 0x98, 0x6f, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x00, 0x05, 0xd7, 0x5c, 0x80, 0xac, 0x88, 0x76, 0xfb, 0x46, 0x25, 0x4f, 0xdb, 0xcc, 0x3c, 0x33, 0xcb, 0x24, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfa, 0x7d, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa6, 0x7f, 0x80, 0xa6, 0xe8, 0xb9, 0x86, 0x58, 0xd1, 0x94, 0xc4, 0x22, 0x0f, 0xe9, 0x8f, 0xcf, 0xbb, 0x42, 0x68, 0x99, 0xfd, 0x57, 0x72, 0x25, 0x00, 0x79, 0x09, 0x69, 0x79, 0x22, 0xc9, 0x55, 0x80, 0x56, 0xfe, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x78, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0x5b, 0x85, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1321(ch_1321, ch_1321 + sizeof(ch_1321) -1);
CDataStream stream_1321(vch_1321, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1321;
stream_1321 >> txHist_1321;

if(block.vtx[0]->GetHash() == txHist_1321.GetHash() && nHeight == 1264077) {
return true;
}
unsigned char ch_1322[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xcb, 0x49, 0x13, 0x04, 0x82, 0xcb, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xca, 0x7d, 0x8b, 0x98, 0x2c, 0x7c, 0xeb, 0xdd, 0x03, 0xc2, 0x31, 0x0a, 0x21, 0x3e, 0x2b, 0xca, 0x03, 0xf1, 0x0b, 0x1c, 0x05, 0x8b, 0xb1, 0x29, 0x6c, 0x4f, 0x26, 0x73, 0xd4, 0x9e, 0x56, 0x2e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0x03, 0x52, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1322(ch_1322, ch_1322 + sizeof(ch_1322) -1);
CDataStream stream_1322(vch_1322, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1322;
stream_1322 >> txHist_1322;

if(block.vtx[0]->GetHash() == txHist_1322.GetHash() && nHeight == 1264075) {
return true;
}
unsigned char ch_1323[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xca, 0x49, 0x13, 0x04, 0x80, 0xcb, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xca, 0x7d, 0x8b, 0x98, 0x2c, 0x7c, 0xeb, 0xdd, 0x03, 0xc2, 0x31, 0x0a, 0x21, 0x3e, 0x2b, 0xca, 0x03, 0xf1, 0x0b, 0x1c, 0x05, 0x8b, 0xb1, 0x29, 0x6c, 0x4f, 0x26, 0x73, 0xd4, 0x9e, 0x56, 0x2e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x66, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1323(ch_1323, ch_1323 + sizeof(ch_1323) -1);
CDataStream stream_1323(vch_1323, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1323;
stream_1323 >> txHist_1323;

if(block.vtx[0]->GetHash() == txHist_1323.GetHash() && nHeight == 1264074) {
return true;
}
unsigned char ch_1324[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc9, 0x49, 0x13, 0x04, 0x80, 0xcb, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xca, 0x7d, 0x8b, 0x98, 0x2c, 0x7c, 0xeb, 0xdd, 0x03, 0xc2, 0x31, 0x0a, 0x21, 0x3e, 0x2b, 0xca, 0x03, 0xf1, 0x0b, 0x1c, 0x05, 0x8b, 0xb1, 0x29, 0x6c, 0x4f, 0x26, 0x73, 0xd4, 0x9e, 0x56, 0x2e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0xff, 0xff, 0x31, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1324(ch_1324, ch_1324 + sizeof(ch_1324) -1);
CDataStream stream_1324(vch_1324, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1324;
stream_1324 >> txHist_1324;

if(block.vtx[0]->GetHash() == txHist_1324.GetHash() && nHeight == 1264073) {
return true;
}
unsigned char ch_1325[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc7, 0x49, 0x13, 0x04, 0x29, 0xcb, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfa, 0xcf, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x92, 0x6f, 0x1a, 0x53, 0x3f, 0xdd, 0x53, 0x06, 0x62, 0x77, 0x3f, 0xa9, 0xa4, 0xa0, 0xc4, 0x8b, 0xe7, 0xc5, 0x73, 0x96, 0xba, 0xfd, 0xa0, 0xee, 0xd8, 0x14, 0x01, 0x24, 0x5b, 0x69, 0x7c, 0xe5, 0x70, 0x40, 0xf4, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x48, 0x5d, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0x68, 0xd2, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1325(ch_1325, ch_1325 + sizeof(ch_1325) -1);
CDataStream stream_1325(vch_1325, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1325;
stream_1325 >> txHist_1325;

if(block.vtx[0]->GetHash() == txHist_1325.GetHash() && nHeight == 1264071) {
return true;
}
unsigned char ch_1326[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb6, 0x48, 0x13, 0x04, 0x78, 0x52, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x32, 0xc4, 0x1d, 0x29, 0x41, 0x62, 0x72, 0xcf, 0xd7, 0x0a, 0xb1, 0x8b, 0x18, 0x9d, 0xca, 0x65, 0x71, 0x89, 0x19, 0x98, 0x9d, 0x39, 0x1c, 0x86, 0xc1, 0xed, 0xd9, 0xeb, 0xd6, 0x3c, 0xa6, 0x45, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xe7, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1326(ch_1326, ch_1326 + sizeof(ch_1326) -1);
CDataStream stream_1326(vch_1326, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1326;
stream_1326 >> txHist_1326;

if(block.vtx[0]->GetHash() == txHist_1326.GetHash() && nHeight == 1263798) {
return true;
}
unsigned char ch_1327[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb2, 0x48, 0x13, 0x04, 0x1c, 0x52, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x2a, 0xee, 0x70, 0x1f, 0xbc, 0x10, 0x5d, 0x6b, 0xf3, 0xac, 0xac, 0x63, 0x47, 0xe8, 0x50, 0xc5, 0xea, 0x64, 0xe8, 0x28, 0x23, 0x94, 0x4d, 0xd7, 0xde, 0x8d, 0xb6, 0x87, 0xa5, 0xf0, 0x2a, 0x4a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xb5, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1327(ch_1327, ch_1327 + sizeof(ch_1327) -1);
CDataStream stream_1327(vch_1327, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1327;
stream_1327 >> txHist_1327;

if(block.vtx[0]->GetHash() == txHist_1327.GetHash() && nHeight == 1263794) {
return true;
}
unsigned char ch_1328[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xae, 0x48, 0x13, 0x04, 0x1c, 0x51, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x85, 0x2a, 0x5e, 0xb5, 0x3e, 0xc2, 0x84, 0xb1, 0x40, 0xd2, 0x4d, 0x25, 0x9c, 0x26, 0x32, 0x95, 0x15, 0x5b, 0xe8, 0x38, 0x26, 0xa6, 0xb8, 0xe5, 0x66, 0x97, 0xc9, 0x15, 0x90, 0xec, 0xeb, 0x32, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x23, 0x27, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1328(ch_1328, ch_1328 + sizeof(ch_1328) -1);
CDataStream stream_1328(vch_1328, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1328;
stream_1328 >> txHist_1328;

if(block.vtx[0]->GetHash() == txHist_1328.GetHash() && nHeight == 1263790) {
return true;
}
unsigned char ch_1329[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe2, 0x49, 0x13, 0x04, 0xda, 0xd4, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5a, 0xa3, 0x00, 0x3d, 0x7d, 0xc5, 0x9c, 0xda, 0xd0, 0x2a, 0xa4, 0x4f, 0xbb, 0x60, 0x21, 0x11, 0x50, 0x53, 0x3c, 0x60, 0xdd, 0x0e, 0x32, 0x1c, 0xde, 0x39, 0xb0, 0x12, 0xc9, 0xae, 0x45, 0x8c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1329(ch_1329, ch_1329 + sizeof(ch_1329) -1);
CDataStream stream_1329(vch_1329, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1329;
stream_1329 >> txHist_1329;

if(block.vtx[0]->GetHash() == txHist_1329.GetHash() && nHeight == 1264098) {
return true;
}
unsigned char ch_1330[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa9, 0x48, 0x13, 0x04, 0xb5, 0x4f, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe6, 0x8e, 0x0d, 0x54, 0x22, 0xcc, 0x84, 0xcd, 0x6c, 0x8f, 0xd3, 0x1f, 0x10, 0x82, 0x93, 0xe3, 0xbf, 0x89, 0x36, 0x5b, 0x50, 0x98, 0xff, 0xd8, 0x05, 0xeb, 0x0b, 0xdb, 0x96, 0xab, 0x04, 0xa9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xb2, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1330(ch_1330, ch_1330 + sizeof(ch_1330) -1);
CDataStream stream_1330(vch_1330, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1330;
stream_1330 >> txHist_1330;

if(block.vtx[0]->GetHash() == txHist_1330.GetHash() && nHeight == 1263785) {
return true;
}
unsigned char ch_1331[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe0, 0x49, 0x13, 0x04, 0xd2, 0xd4, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5a, 0xa3, 0x00, 0x3d, 0x7d, 0xc5, 0x9c, 0xda, 0xd0, 0x2a, 0xa4, 0x4f, 0xbb, 0x60, 0x21, 0x11, 0x50, 0x53, 0x3c, 0x60, 0xdd, 0x0e, 0x32, 0x1c, 0xde, 0x39, 0xb0, 0x12, 0xc9, 0xae, 0x45, 0x8c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xff, 0xfe, 0x3f, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1331(ch_1331, ch_1331 + sizeof(ch_1331) -1);
CDataStream stream_1331(vch_1331, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1331;
stream_1331 >> txHist_1331;

if(block.vtx[0]->GetHash() == txHist_1331.GetHash() && nHeight == 1264096) {
return true;
}
unsigned char ch_1332[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xbd, 0x49, 0x13, 0x04, 0xf3, 0xc3, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xda, 0x18, 0x7c, 0x10, 0xc7, 0xda, 0x72, 0x41, 0x59, 0x48, 0x7c, 0x53, 0xa7, 0x76, 0xfd, 0xf2, 0x98, 0x07, 0xde, 0x7b, 0x43, 0xd6, 0xab, 0xe3, 0x76, 0x43, 0x9a, 0x26, 0x3f, 0x77, 0x10, 0x94, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x07, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1332(ch_1332, ch_1332 + sizeof(ch_1332) -1);
CDataStream stream_1332(vch_1332, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1332;
stream_1332 >> txHist_1332;

if(block.vtx[0]->GetHash() == txHist_1332.GetHash() && nHeight == 1264061) {
return true;
}
unsigned char ch_1333[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa4, 0x48, 0x13, 0x04, 0xd4, 0x4d, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5d, 0x1e, 0xf0, 0x9f, 0x3d, 0x0f, 0xd6, 0x96, 0x7b, 0xea, 0x95, 0xf8, 0x4f, 0x7c, 0x8c, 0x31, 0x76, 0x07, 0x10, 0x7a, 0xb4, 0x11, 0x92, 0x24, 0x2f, 0x4e, 0xd0, 0xe6, 0xb2, 0x77, 0x0d, 0x41, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0x4d, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xc2, 0xa2, 0x4d, 0x83, 0xf4, 0x32, 0x6b, 0x39, 0xbf, 0x8b, 0x9d, 0x2a, 0xcd, 0xfa, 0xd8, 0x52, 0xf6, 0xeb, 0xf2, 0xa3, 0xae, 0xde, 0xa5, 0xb2, 0xb3, 0x7c, 0x1b, 0xbc, 0xf5, 0xad, 0x87, 0x3f, 0x10, 0x94, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1333(ch_1333, ch_1333 + sizeof(ch_1333) -1);
CDataStream stream_1333(vch_1333, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1333;
stream_1333 >> txHist_1333;

if(block.vtx[0]->GetHash() == txHist_1333.GetHash() && nHeight == 1263780) {
return true;
}
unsigned char ch_1334[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xde, 0x49, 0x13, 0x04, 0xb3, 0xd4, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5a, 0xa3, 0x00, 0x3d, 0x7d, 0xc5, 0x9c, 0xda, 0xd0, 0x2a, 0xa4, 0x4f, 0xbb, 0x60, 0x21, 0x11, 0x50, 0x53, 0x3c, 0x60, 0xdd, 0x0e, 0x32, 0x1c, 0xde, 0x39, 0xb0, 0x12, 0xc9, 0xae, 0x45, 0x8c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xfc, 0x59, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1334(ch_1334, ch_1334 + sizeof(ch_1334) -1);
CDataStream stream_1334(vch_1334, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1334;
stream_1334 >> txHist_1334;

if(block.vtx[0]->GetHash() == txHist_1334.GetHash() && nHeight == 1264094) {
return true;
}
unsigned char ch_1335[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xba, 0x49, 0x13, 0x04, 0x24, 0xc3, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x06, 0x44, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1335(ch_1335, ch_1335 + sizeof(ch_1335) -1);
CDataStream stream_1335(vch_1335, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1335;
stream_1335 >> txHist_1335;

if(block.vtx[0]->GetHash() == txHist_1335.GetHash() && nHeight == 1264058) {
return true;
}
unsigned char ch_1336[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9f, 0x48, 0x13, 0x04, 0xc2, 0x4c, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd0, 0x5f, 0x46, 0x34, 0x80, 0x38, 0x2a, 0x76, 0xe3, 0xf1, 0xfc, 0xf3, 0xdf, 0x05, 0x0a, 0x4b, 0x4e, 0x0f, 0xb2, 0x12, 0x35, 0x0f, 0xf1, 0x3b, 0x2d, 0xd1, 0x06, 0x3e, 0xb7, 0xa6, 0x7f, 0x65, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xef, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xf1, 0x55, 0x33, 0xdf, 0xe8, 0xf8, 0xfa, 0x02, 0x84, 0xa2, 0xa7, 0xc6, 0x3b, 0x9b, 0x8c, 0xef, 0xb7, 0x11, 0x29, 0x97, 0x83, 0xf4, 0x88, 0xd7, 0xae, 0xae, 0xcc, 0xe9, 0x56, 0xde, 0x32, 0x58, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1336(ch_1336, ch_1336 + sizeof(ch_1336) -1);
CDataStream stream_1336(vch_1336, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1336;
stream_1336 >> txHist_1336;

if(block.vtx[0]->GetHash() == txHist_1336.GetHash() && nHeight == 1263775) {
return true;
}
unsigned char ch_1337[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc3, 0x49, 0x13, 0x04, 0xbc, 0xc8, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf8, 0xce, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x88, 0x7c, 0x84, 0x69, 0xd1, 0x50, 0x35, 0x51, 0xbd, 0x7b, 0xd9, 0xbf, 0x8c, 0xbe, 0x9f, 0xb6, 0x66, 0x91, 0x8a, 0x01, 0x18, 0xce, 0xba, 0xf7, 0x7b, 0xb2, 0x1f, 0x2a, 0x32, 0xd5, 0x38, 0x78, 0xe8, 0xa3, 0x64, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1337(ch_1337, ch_1337 + sizeof(ch_1337) -1);
CDataStream stream_1337(vch_1337, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1337;
stream_1337 >> txHist_1337;

if(block.vtx[0]->GetHash() == txHist_1337.GetHash() && nHeight == 1264067) {
return true;
}
unsigned char ch_1338[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9b, 0x48, 0x13, 0x04, 0x54, 0x4b, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd5, 0x21, 0x1a, 0xed, 0xb7, 0xbb, 0x49, 0x18, 0x50, 0x7c, 0xc4, 0xfa, 0xe9, 0xc1, 0x05, 0x1e, 0x2b, 0xf3, 0xad, 0x9d, 0x0a, 0x87, 0xe3, 0x21, 0x82, 0x88, 0x31, 0x07, 0xb8, 0xb8, 0xa0, 0xfd, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xf2, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1338(ch_1338, ch_1338 + sizeof(ch_1338) -1);
CDataStream stream_1338(vch_1338, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1338;
stream_1338 >> txHist_1338;

if(block.vtx[0]->GetHash() == txHist_1338.GetHash() && nHeight == 1263771) {
return true;
}
unsigned char ch_1339[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x96, 0x48, 0x13, 0x04, 0xfe, 0x49, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x73, 0x88, 0x3a, 0xae, 0x5a, 0xb0, 0x77, 0xb3, 0xa8, 0xd9, 0x02, 0x27, 0x07, 0x56, 0x5d, 0xfb, 0x57, 0x72, 0x02, 0xd3, 0x5f, 0xba, 0xaa, 0xc3, 0x82, 0x4f, 0x87, 0xdc, 0x48, 0x3b, 0x96, 0x95, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x6a, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x14, 0xbc, 0x29, 0x97, 0x52, 0x2b, 0x38, 0xf2, 0x14, 0xcd, 0x15, 0x7f, 0xbf, 0x1a, 0x65, 0x06, 0x82, 0x44, 0x22, 0x79, 0xf5, 0xb0, 0x36, 0x0a, 0x97, 0xec, 0xf1, 0x4c, 0xc2, 0xa0, 0x04, 0xf3, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1339(ch_1339, ch_1339 + sizeof(ch_1339) -1);
CDataStream stream_1339(vch_1339, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1339;
stream_1339 >> txHist_1339;

if(block.vtx[0]->GetHash() == txHist_1339.GetHash() && nHeight == 1263766) {
return true;
}
unsigned char ch_1340[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xbe, 0x49, 0x13, 0x04, 0x06, 0xc4, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x38, 0x54, 0xe9, 0xb5, 0xb7, 0x91, 0xb6, 0xdd, 0x90, 0xf5, 0x3e, 0xe4, 0xa3, 0xca, 0x1e, 0xf6, 0x1b, 0x97, 0x40, 0x47, 0x94, 0x3f, 0xc4, 0x3c, 0xa9, 0x74, 0x90, 0xb4, 0x44, 0x1f, 0x89, 0x05, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0xff, 0xff, 0xf9, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1340(ch_1340, ch_1340 + sizeof(ch_1340) -1);
CDataStream stream_1340(vch_1340, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1340;
stream_1340 >> txHist_1340;

if(block.vtx[0]->GetHash() == txHist_1340.GetHash() && nHeight == 1264062) {
return true;
}
unsigned char ch_1341[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb7, 0x49, 0x13, 0x04, 0x93, 0xc1, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x1f, 0x12, 0x0f, 0x2d, 0x97, 0x56, 0x9e, 0xec, 0x68, 0x80, 0xdb, 0xcc, 0xa6, 0x53, 0x47, 0x2a, 0x22, 0xea, 0x88, 0xd0, 0xdb, 0xf2, 0x8a, 0x1c, 0x57, 0xaf, 0x31, 0x0b, 0x79, 0x33, 0x5d, 0x2b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0x01, 0x59, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1341(ch_1341, ch_1341 + sizeof(ch_1341) -1);
CDataStream stream_1341(vch_1341, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1341;
stream_1341 >> txHist_1341;

if(block.vtx[0]->GetHash() == txHist_1341.GetHash() && nHeight == 1264055) {
return true;
}
unsigned char ch_1342[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x92, 0x48, 0x13, 0x04, 0x63, 0x49, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5c, 0x9f, 0x9e, 0xf1, 0xc3, 0x72, 0xa6, 0x0c, 0xe0, 0x0a, 0x0c, 0x10, 0x59, 0x28, 0xa2, 0x64, 0x01, 0x3f, 0x6a, 0x65, 0xcc, 0x47, 0x1b, 0xb7, 0xde, 0x03, 0x73, 0x5f, 0x83, 0xfa, 0xb4, 0xdc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x36, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1342(ch_1342, ch_1342 + sizeof(ch_1342) -1);
CDataStream stream_1342(vch_1342, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1342;
stream_1342 >> txHist_1342;

if(block.vtx[0]->GetHash() == txHist_1342.GetHash() && nHeight == 1263762) {
return true;
}
unsigned char ch_1343[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x8e, 0x48, 0x13, 0x04, 0x84, 0x48, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x0c, 0x60, 0xad, 0x38, 0xec, 0x07, 0xd1, 0x77, 0x5f, 0x66, 0xfa, 0x9c, 0xb1, 0x91, 0x37, 0x37, 0x0d, 0x6f, 0xfd, 0x18, 0x75, 0x6b, 0x7d, 0xee, 0x71, 0x28, 0x55, 0xae, 0x87, 0x53, 0x0f, 0x4d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xb4, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1343(ch_1343, ch_1343 + sizeof(ch_1343) -1);
CDataStream stream_1343(vch_1343, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1343;
stream_1343 >> txHist_1343;

if(block.vtx[0]->GetHash() == txHist_1343.GetHash() && nHeight == 1263758) {
return true;
}
unsigned char ch_1344[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb8, 0x49, 0x13, 0x04, 0x94, 0xc1, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x1f, 0x12, 0x0f, 0x2d, 0x97, 0x56, 0x9e, 0xec, 0x68, 0x80, 0xdb, 0xcc, 0xa6, 0x53, 0x47, 0x2a, 0x22, 0xea, 0x88, 0xd0, 0xdb, 0xf2, 0x8a, 0x1c, 0x57, 0xaf, 0x31, 0x0b, 0x79, 0x33, 0x5d, 0x2b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x05, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1344(ch_1344, ch_1344 + sizeof(ch_1344) -1);
CDataStream stream_1344(vch_1344, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1344;
stream_1344 >> txHist_1344;

if(block.vtx[0]->GetHash() == txHist_1344.GetHash() && nHeight == 1264056) {
return true;
}
unsigned char ch_1345[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xaf, 0x49, 0x13, 0x04, 0x68, 0xbb, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x3e, 0x0f, 0x4f, 0x55, 0xb3, 0x45, 0xa9, 0xce, 0x22, 0xc5, 0x21, 0x7b, 0x5a, 0xb5, 0x05, 0x4b, 0x7e, 0x52, 0x72, 0x2a, 0x16, 0xef, 0x8f, 0xf6, 0x38, 0x38, 0xc0, 0xa2, 0x14, 0xdc, 0x84, 0x32, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfe, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x88, 0x0e, 0xed, 0x53, 0xc7, 0x7b, 0x67, 0xf2, 0xb2, 0x8a, 0xee, 0x1e, 0xab, 0xa0, 0xd5, 0x8a, 0x7f, 0x53, 0x24, 0xc7, 0xe0, 0x9e, 0x1c, 0x19, 0xfe, 0x76, 0xf7, 0x7c, 0x72, 0xa1, 0x46, 0x58, 0x58, 0x6f, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1345(ch_1345, ch_1345 + sizeof(ch_1345) -1);
CDataStream stream_1345(vch_1345, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1345;
stream_1345 >> txHist_1345;

if(block.vtx[0]->GetHash() == txHist_1345.GetHash() && nHeight == 1264047) {
return true;
}
unsigned char ch_1346[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x8a, 0x48, 0x13, 0x04, 0x78, 0x47, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x90, 0x86, 0x21, 0xc9, 0xa1, 0xda, 0x4b, 0x1a, 0x6a, 0x73, 0xc1, 0xa0, 0x0a, 0x6a, 0x4b, 0x1f, 0x8d, 0xd5, 0xc4, 0xb6, 0x6a, 0xae, 0x27, 0xe6, 0x38, 0x89, 0x41, 0x71, 0x0d, 0x95, 0x82, 0xa0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xcd, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1346(ch_1346, ch_1346 + sizeof(ch_1346) -1);
CDataStream stream_1346(vch_1346, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1346;
stream_1346 >> txHist_1346;

if(block.vtx[0]->GetHash() == txHist_1346.GetHash() && nHeight == 1263754) {
return true;
}
unsigned char ch_1347[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb5, 0x49, 0x13, 0x04, 0x4f, 0xc1, 0x35, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x06, 0xb6, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x24, 0xeb, 0x42, 0x18, 0x1e, 0x12, 0x87, 0x97, 0x50, 0x05, 0x64, 0x3c, 0xe0, 0x78, 0xd7, 0xf2, 0x57, 0xb6, 0x5b, 0xaf, 0xd8, 0x00, 0xbf, 0x47, 0x3b, 0xd8, 0xed, 0x6f, 0xae, 0x12, 0x50, 0x10, 0xb0, 0x20, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1347(ch_1347, ch_1347 + sizeof(ch_1347) -1);
CDataStream stream_1347(vch_1347, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1347;
stream_1347 >> txHist_1347;

if(block.vtx[0]->GetHash() == txHist_1347.GetHash() && nHeight == 1264053) {
return true;
}
unsigned char ch_1348[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x86, 0x48, 0x13, 0x04, 0x17, 0x47, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7c, 0xc9, 0x80, 0x73, 0x39, 0x9a, 0x1e, 0x61, 0x0b, 0x57, 0x49, 0xb9, 0xba, 0xd0, 0xfa, 0xda, 0xb9, 0x3a, 0x99, 0x7c, 0x23, 0xe6, 0x13, 0x04, 0x36, 0xe8, 0x83, 0xd0, 0xda, 0x19, 0xec, 0xfc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xbd, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1348(ch_1348, ch_1348 + sizeof(ch_1348) -1);
CDataStream stream_1348(vch_1348, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1348;
stream_1348 >> txHist_1348;

if(block.vtx[0]->GetHash() == txHist_1348.GetHash() && nHeight == 1263750) {
return true;
}
unsigned char ch_1349[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb3, 0x49, 0x13, 0x04, 0xe0, 0xbd, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x4b, 0x04, 0xcc, 0x85, 0xfb, 0xc1, 0xcc, 0x66, 0x51, 0x68, 0x02, 0xbb, 0x92, 0x06, 0xf5, 0x6a, 0x10, 0xff, 0x93, 0xaf, 0x6a, 0x8f, 0xe2, 0x56, 0x2c, 0x1f, 0x4a, 0x8d, 0xd5, 0x83, 0x7a, 0x5c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0xff, 0xff, 0xc9, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1349(ch_1349, ch_1349 + sizeof(ch_1349) -1);
CDataStream stream_1349(vch_1349, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1349;
stream_1349 >> txHist_1349;

if(block.vtx[0]->GetHash() == txHist_1349.GetHash() && nHeight == 1264051) {
return true;
}
unsigned char ch_1350[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x82, 0x48, 0x13, 0x04, 0x09, 0x45, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x1d, 0x1d, 0xac, 0x95, 0xff, 0x3e, 0xce, 0xc0, 0x43, 0x92, 0x21, 0x43, 0xf5, 0x3a, 0x41, 0x32, 0xc9, 0xdf, 0x2c, 0xd9, 0xed, 0xac, 0xfc, 0xbf, 0x4e, 0x8c, 0xad, 0x0b, 0x5a, 0x84, 0xfa, 0xf9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x28, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1350(ch_1350, ch_1350 + sizeof(ch_1350) -1);
CDataStream stream_1350(vch_1350, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1350;
stream_1350 >> txHist_1350;

if(block.vtx[0]->GetHash() == txHist_1350.GetHash() && nHeight == 1263746) {
return true;
}
unsigned char ch_1351[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb0, 0x49, 0x13, 0x04, 0xc8, 0xbd, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x45, 0x52, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x07, 0xc1, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xff, 0x3e, 0xb8, 0xe8, 0xce, 0x11, 0x02, 0x24, 0xcb, 0x20, 0xe9, 0x07, 0xb8, 0x38, 0x74, 0x20, 0xd5, 0xd8, 0xf8, 0xe0, 0x99, 0x20, 0xa2, 0xa8, 0xea, 0xb3, 0x8e, 0xba, 0x5c, 0x5b, 0x72, 0x43, 0x7c, 0xee, 0xf4, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x22, 0x5f, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xaa, 0xdb, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1351(ch_1351, ch_1351 + sizeof(ch_1351) -1);
CDataStream stream_1351(vch_1351, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1351;
stream_1351 >> txHist_1351;

if(block.vtx[0]->GetHash() == txHist_1351.GetHash() && nHeight == 1264048) {
return true;
}
unsigned char ch_1352[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x7e, 0x48, 0x13, 0x04, 0x6a, 0x44, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb9, 0xd5, 0x32, 0xfa, 0xf4, 0x5b, 0x50, 0x23, 0x18, 0xd2, 0x36, 0x98, 0x5f, 0x7e, 0xe2, 0xd5, 0x1b, 0x67, 0xa1, 0x88, 0x4e, 0x60, 0x47, 0xab, 0xb6, 0x48, 0xb5, 0xba, 0xc2, 0xc5, 0x58, 0x7a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xee, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x93, 0xbd, 0xf3, 0x0f, 0x9d, 0x86, 0x1b, 0x72, 0xaa, 0xa7, 0x23, 0xa4, 0xfb, 0xc8, 0x24, 0x3e, 0x52, 0x55, 0x43, 0x04, 0x3e, 0xc4, 0xdb, 0xe5, 0x3a, 0x2a, 0xc6, 0xeb, 0x66, 0x96, 0x82, 0x38, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1352(ch_1352, ch_1352 + sizeof(ch_1352) -1);
CDataStream stream_1352(vch_1352, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1352;
stream_1352 >> txHist_1352;

if(block.vtx[0]->GetHash() == txHist_1352.GetHash() && nHeight == 1263742) {
return true;
}
unsigned char ch_1353[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xad, 0x49, 0x13, 0x04, 0x02, 0xba, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x25, 0xe6, 0x82, 0x06, 0x35, 0xf8, 0x94, 0x71, 0x27, 0x29, 0x4f, 0x00, 0xa6, 0x5b, 0x59, 0xf8, 0x81, 0x89, 0xe2, 0xbf, 0x1c, 0xc9, 0x95, 0x30, 0xa8, 0x11, 0x90, 0x16, 0x48, 0xd6, 0x60, 0x99, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1353(ch_1353, ch_1353 + sizeof(ch_1353) -1);
CDataStream stream_1353(vch_1353, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1353;
stream_1353 >> txHist_1353;

if(block.vtx[0]->GetHash() == txHist_1353.GetHash() && nHeight == 1264045) {
return true;
}
unsigned char ch_1354[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa7, 0x49, 0x13, 0x04, 0xcf, 0xb6, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x04, 0xd5, 0x0c, 0xc0, 0x50, 0xb8, 0x00, 0x00, 0x04, 0xd5, 0x0c, 0xc0, 0x50, 0xa8, 0x00, 0x00, 0x04, 0xd5, 0x0c, 0xc0, 0x50, 0x98, 0x00, 0x00, 0x04, 0xd5, 0x0c, 0xc0, 0x50, 0x88, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfa, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1354(ch_1354, ch_1354 + sizeof(ch_1354) -1);
CDataStream stream_1354(vch_1354, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1354;
stream_1354 >> txHist_1354;

if(block.vtx[0]->GetHash() == txHist_1354.GetHash() && nHeight == 1264039) {
return true;
}
unsigned char ch_1355[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x79, 0x48, 0x13, 0x04, 0x31, 0x42, 0x35, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x07, 0x55, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1355(ch_1355, ch_1355 + sizeof(ch_1355) -1);
CDataStream stream_1355(vch_1355, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1355;
stream_1355 >> txHist_1355;

if(block.vtx[0]->GetHash() == txHist_1355.GetHash() && nHeight == 1263737) {
return true;
}
unsigned char ch_1356[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x76, 0x48, 0x13, 0x04, 0x76, 0x41, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x09, 0x59, 0xd1, 0xce, 0xf9, 0xff, 0x8a, 0x7f, 0x65, 0xff, 0x2a, 0x5a, 0x33, 0xa7, 0x1c, 0xdd, 0xe3, 0x65, 0xc7, 0x0e, 0xd9, 0x16, 0x54, 0x76, 0xd5, 0xcd, 0xc6, 0xce, 0x44, 0x06, 0xa7, 0x81, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x31, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1356(ch_1356, ch_1356 + sizeof(ch_1356) -1);
CDataStream stream_1356(vch_1356, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1356;
stream_1356 >> txHist_1356;

if(block.vtx[0]->GetHash() == txHist_1356.GetHash() && nHeight == 1263734) {
return true;
}
unsigned char ch_1357[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4c, 0x49, 0x13, 0x04, 0xdc, 0x93, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x23, 0x35, 0x34, 0x8e, 0x8c, 0x59, 0x63, 0x49, 0xfd, 0xfa, 0x69, 0x72, 0xe6, 0x18, 0x56, 0x7b, 0x98, 0xd9, 0x7f, 0x76, 0xcc, 0x4a, 0xd5, 0xfb, 0x7c, 0x9a, 0x61, 0x18, 0xe0, 0x65, 0x8d, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x03, 0xdd, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1357(ch_1357, ch_1357 + sizeof(ch_1357) -1);
CDataStream stream_1357(vch_1357, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1357;
stream_1357 >> txHist_1357;

if(block.vtx[0]->GetHash() == txHist_1357.GetHash() && nHeight == 1263948) {
return true;
}
unsigned char ch_1358[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x49, 0x49, 0x13, 0x04, 0xdb, 0x92, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xfb, 0x6d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xb6, 0x26, 0x81, 0xce, 0x46, 0x27, 0x5b, 0x83, 0x3f, 0xff, 0xff, 0x50, 0x4a, 0x0a, 0x08, 0xba, 0x8c, 0x64, 0x4e, 0x09, 0xc5, 0x07, 0xbe, 0x9f, 0x1c, 0x97, 0x86, 0x61, 0x45, 0x60, 0xc6, 0xfd, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1358(ch_1358, ch_1358 + sizeof(ch_1358) -1);
CDataStream stream_1358(vch_1358, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1358;
stream_1358 >> txHist_1358;

if(block.vtx[0]->GetHash() == txHist_1358.GetHash() && nHeight == 1263945) {
return true;
}
unsigned char ch_1359[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x46, 0x49, 0x13, 0x04, 0x63, 0x8f, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x53, 0x51, 0x35, 0x87, 0x0d, 0x15, 0xef, 0xf8, 0xad, 0x72, 0xa4, 0x48, 0xa8, 0x91, 0x0f, 0x5f, 0x25, 0xc5, 0xeb, 0x70, 0x97, 0xa2, 0xde, 0xc5, 0xf2, 0x78, 0x94, 0xe0, 0x77, 0xb7, 0xe8, 0xbe, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0xff, 0xff, 0xe5, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1359(ch_1359, ch_1359 + sizeof(ch_1359) -1);
CDataStream stream_1359(vch_1359, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1359;
stream_1359 >> txHist_1359;

if(block.vtx[0]->GetHash() == txHist_1359.GetHash() && nHeight == 1263942) {
return true;
}
unsigned char ch_1360[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x43, 0x49, 0x13, 0x04, 0x5e, 0x8f, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x53, 0x51, 0x35, 0x87, 0x0d, 0x15, 0xef, 0xf8, 0xad, 0x72, 0xa4, 0x48, 0xa8, 0x91, 0x0f, 0x5f, 0x25, 0xc5, 0xeb, 0x70, 0x97, 0xa2, 0xde, 0xc5, 0xf2, 0x78, 0x94, 0xe0, 0x77, 0xb7, 0xe8, 0xbe, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xff, 0xff, 0x84, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1360(ch_1360, ch_1360 + sizeof(ch_1360) -1);
CDataStream stream_1360(vch_1360, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1360;
stream_1360 >> txHist_1360;

if(block.vtx[0]->GetHash() == txHist_1360.GetHash() && nHeight == 1263939) {
return true;
}
unsigned char ch_1361[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa4, 0x49, 0x13, 0x04, 0x9b, 0xb6, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x76, 0x9c, 0x72, 0x90, 0xea, 0x60, 0x4f, 0x8b, 0x45, 0x48, 0x77, 0x8d, 0xcc, 0x44, 0xe3, 0x00, 0x0e, 0x14, 0xd1, 0x70, 0xb3, 0x6e, 0x18, 0xd1, 0x91, 0xea, 0xaa, 0x9d, 0x0b, 0x12, 0x8c, 0x26, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xfc, 0xa6, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1361(ch_1361, ch_1361 + sizeof(ch_1361) -1);
CDataStream stream_1361(vch_1361, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1361;
stream_1361 >> txHist_1361;

if(block.vtx[0]->GetHash() == txHist_1361.GetHash() && nHeight == 1264036) {
return true;
}
unsigned char ch_1362[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x6e, 0x49, 0x13, 0x04, 0x5a, 0xa2, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x19, 0xcc, 0xcb, 0xfb, 0xf7, 0xc9, 0x7d, 0xe7, 0x1f, 0xd5, 0x31, 0x6a, 0xa5, 0xa9, 0x58, 0x13, 0x52, 0x42, 0xe9, 0x14, 0xdf, 0x66, 0xad, 0x6a, 0x43, 0x26, 0x09, 0xe6, 0xd1, 0x70, 0x48, 0x15, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfd, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1362(ch_1362, ch_1362 + sizeof(ch_1362) -1);
CDataStream stream_1362(vch_1362, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1362;
stream_1362 >> txHist_1362;

if(block.vtx[0]->GetHash() == txHist_1362.GetHash() && nHeight == 1263982) {
return true;
}
unsigned char ch_1363[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa1, 0x49, 0x13, 0x04, 0x41, 0xb6, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xce, 0x93, 0xdc, 0x58, 0xd1, 0x58, 0xf5, 0xb7, 0xd3, 0x89, 0x6b, 0xbe, 0x6f, 0x27, 0x38, 0x99, 0x97, 0xa8, 0xe9, 0x95, 0x3a, 0xe0, 0x90, 0x63, 0x8f, 0x7b, 0x51, 0x32, 0x10, 0x84, 0x15, 0x49, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xfb, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x0d, 0x06, 0x75, 0x48, 0x03, 0x95, 0xb1, 0x88, 0xe9, 0x60, 0x65, 0x8a, 0x35, 0x5d, 0x60, 0xe6, 0xcd, 0xf5, 0xb5, 0x21, 0x3c, 0x74, 0xa1, 0x8c, 0x58, 0x87, 0x97, 0x9a, 0xd6, 0xad, 0x22, 0x81, 0x98, 0xdd, 0x70, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1363(ch_1363, ch_1363 + sizeof(ch_1363) -1);
CDataStream stream_1363(vch_1363, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1363;
stream_1363 >> txHist_1363;

if(block.vtx[0]->GetHash() == txHist_1363.GetHash() && nHeight == 1264033) {
return true;
}
unsigned char ch_1364[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x37, 0x49, 0x13, 0x04, 0x95, 0x8b, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x79, 0xa6, 0xca, 0x0c, 0xce, 0xb3, 0xcb, 0xf4, 0x46, 0x45, 0x2f, 0x3c, 0x2c, 0x79, 0x1b, 0x7c, 0xe7, 0x3c, 0x85, 0xd4, 0x78, 0xdc, 0xb7, 0x6a, 0xfb, 0x71, 0x11, 0x19, 0x70, 0x4c, 0x64, 0x30, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa0, 0xdb, 0xfd, 0xd3, 0x44, 0x07, 0xca, 0x3f, 0x1a, 0x7d, 0xb5, 0xc5, 0x31, 0x86, 0x97, 0xea, 0xe0, 0x8a, 0xe3, 0x65, 0x01, 0x97, 0xe4, 0x5b, 0x69, 0xae, 0x32, 0x0b, 0x72, 0x0b, 0x8c, 0x39, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1364(ch_1364, ch_1364 + sizeof(ch_1364) -1);
CDataStream stream_1364(vch_1364, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1364;
stream_1364 >> txHist_1364;

if(block.vtx[0]->GetHash() == txHist_1364.GetHash() && nHeight == 1263927) {
return true;
}
unsigned char ch_1365[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x34, 0x49, 0x13, 0x04, 0xba, 0x89, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5a, 0x67, 0x68, 0xeb, 0xf4, 0x20, 0x3b, 0xc0, 0xf5, 0x08, 0x60, 0x84, 0xf7, 0x5d, 0x23, 0xe3, 0xec, 0x4c, 0x81, 0xc3, 0xfb, 0x93, 0x56, 0x9e, 0x45, 0x8b, 0xf0, 0xd8, 0xdd, 0xbe, 0xcd, 0xa4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xff, 0xff, 0x9a, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1365(ch_1365, ch_1365 + sizeof(ch_1365) -1);
CDataStream stream_1365(vch_1365, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1365;
stream_1365 >> txHist_1365;

if(block.vtx[0]->GetHash() == txHist_1365.GetHash() && nHeight == 1263924) {
return true;
}
unsigned char ch_1366[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x6b, 0x49, 0x13, 0x04, 0xa2, 0xa0, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe9, 0x5a, 0xbc, 0x06, 0xd4, 0xbf, 0xc2, 0x3a, 0x16, 0x9a, 0xda, 0xfd, 0x7f, 0xb2, 0x76, 0x65, 0x33, 0xc5, 0xbe, 0x06, 0x58, 0x1d, 0xa8, 0x88, 0x64, 0x5d, 0x72, 0x4c, 0xae, 0x85, 0x67, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0xff, 0xff, 0xf9, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x0e, 0xa9, 0x18, 0xde, 0x41, 0x69, 0x4f, 0xbe, 0x21, 0x05, 0x5c, 0x6b, 0x84, 0xae, 0x2d, 0xce, 0x84, 0x12, 0x34, 0x64, 0xa6, 0xf6, 0x2a, 0xf1, 0x93, 0x6f, 0xd7, 0x5c, 0x9f, 0x0f, 0xa2, 0xab, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1366(ch_1366, ch_1366 + sizeof(ch_1366) -1);
CDataStream stream_1366(vch_1366, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1366;
stream_1366 >> txHist_1366;

if(block.vtx[0]->GetHash() == txHist_1366.GetHash() && nHeight == 1263979) {
return true;
}
unsigned char ch_1367[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x6a, 0x49, 0x13, 0x04, 0x78, 0xa0, 0x35, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x06, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1367(ch_1367, ch_1367 + sizeof(ch_1367) -1);
CDataStream stream_1367(vch_1367, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1367;
stream_1367 >> txHist_1367;

if(block.vtx[0]->GetHash() == txHist_1367.GetHash() && nHeight == 1263978) {
return true;
}
unsigned char ch_1368[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2e, 0x49, 0x13, 0x04, 0x71, 0x85, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x1d, 0xfa, 0x72, 0x2f, 0x9b, 0x46, 0xb3, 0xc4, 0x55, 0xcd, 0x0b, 0x89, 0xee, 0x32, 0xd8, 0x75, 0xa5, 0x69, 0xc4, 0xff, 0x7d, 0xdf, 0x35, 0x2c, 0x5e, 0xed, 0xbe, 0x74, 0x6c, 0xcd, 0xec, 0x0c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfa, 0xd0, 0x46, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1368(ch_1368, ch_1368 + sizeof(ch_1368) -1);
CDataStream stream_1368(vch_1368, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1368;
stream_1368 >> txHist_1368;

if(block.vtx[0]->GetHash() == txHist_1368.GetHash() && nHeight == 1263918) {
return true;
}
unsigned char ch_1369[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x69, 0x49, 0x13, 0x04, 0x4d, 0xa0, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x06, 0x44, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1369(ch_1369, ch_1369 + sizeof(ch_1369) -1);
CDataStream stream_1369(vch_1369, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1369;
stream_1369 >> txHist_1369;

if(block.vtx[0]->GetHash() == txHist_1369.GetHash() && nHeight == 1263977) {
return true;
}
unsigned char ch_1370[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2b, 0x49, 0x13, 0x04, 0xf7, 0x84, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x44, 0xcc, 0x41, 0xd7, 0xdc, 0x4a, 0x48, 0x48, 0x37, 0xc6, 0xb8, 0x89, 0x20, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x20, 0x89, 0xb8, 0xc6, 0x37, 0x48, 0x48, 0x4a, 0xdc, 0xd7, 0x41, 0xcc, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfd, 0x17, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1370(ch_1370, ch_1370 + sizeof(ch_1370) -1);
CDataStream stream_1370(vch_1370, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1370;
stream_1370 >> txHist_1370;

if(block.vtx[0]->GetHash() == txHist_1370.GetHash() && nHeight == 1263915) {
return true;
}
unsigned char ch_1371[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xab, 0x49, 0x13, 0x04, 0xd3, 0xb9, 0x35, 0x5b, 0x08, 0x48, 0x00, 0x08, 0x76, 0x89, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x21, 0xfc, 0x90, 0x3e, 0x55, 0x93, 0x15, 0x9d, 0x90, 0x57, 0x91, 0x4a, 0x92, 0x10, 0x8f, 0xb3, 0x9c, 0x1d, 0x40, 0x0b, 0x6b, 0x63, 0xaa, 0x0f, 0x7e, 0x22, 0x57, 0x95, 0xf8, 0x8d, 0xce, 0x3a, 0x68, 0x32, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1371(ch_1371, ch_1371 + sizeof(ch_1371) -1);
CDataStream stream_1371(vch_1371, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1371;
stream_1371 >> txHist_1371;

if(block.vtx[0]->GetHash() == txHist_1371.GetHash() && nHeight == 1264043) {
return true;
}
unsigned char ch_1372[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9e, 0x49, 0x13, 0x04, 0x10, 0xb3, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xaf, 0xa4, 0xe8, 0x82, 0xc4, 0xd1, 0xe2, 0x15, 0x0c, 0x7e, 0xb6, 0xdf, 0xe6, 0x9a, 0x60, 0xe4, 0xea, 0xef, 0x12, 0xf8, 0x5c, 0x24, 0x0e, 0xea, 0xd0, 0x7d, 0x62, 0xea, 0xa9, 0x44, 0xdc, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xb2, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1372(ch_1372, ch_1372 + sizeof(ch_1372) -1);
CDataStream stream_1372(vch_1372, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1372;
stream_1372 >> txHist_1372;

if(block.vtx[0]->GetHash() == txHist_1372.GetHash() && nHeight == 1264030) {
return true;
}
unsigned char ch_1373[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x68, 0x49, 0x13, 0x04, 0x45, 0xa0, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x09, 0x99, 0x0e, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xcf, 0x4d, 0xc5, 0x11, 0xd9, 0x0b, 0xe6, 0xba, 0xa4, 0x09, 0x95, 0x96, 0xbf, 0x2e, 0xb7, 0x19, 0xab, 0x4b, 0x74, 0xea, 0xc4, 0x85, 0xbd, 0x4c, 0x80, 0xc3, 0x7b, 0x5a, 0x6c, 0x68, 0xbb, 0x66, 0x30, 0xe2, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1373(ch_1373, ch_1373 + sizeof(ch_1373) -1);
CDataStream stream_1373(vch_1373, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1373;
stream_1373 >> txHist_1373;

if(block.vtx[0]->GetHash() == txHist_1373.GetHash() && nHeight == 1263976) {
return true;
}
unsigned char ch_1374[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x28, 0x49, 0x13, 0x04, 0x44, 0x84, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x39, 0xb7, 0x0c, 0xec, 0x9f, 0x2c, 0x59, 0xad, 0xff, 0x3b, 0xdc, 0xc4, 0x40, 0x04, 0x04, 0xcf, 0xa0, 0xff, 0x60, 0x69, 0x63, 0x39, 0x77, 0xcd, 0x98, 0x53, 0xae, 0x3a, 0xc1, 0xb5, 0xce, 0xd6, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfa, 0x77, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1374(ch_1374, ch_1374 + sizeof(ch_1374) -1);
CDataStream stream_1374(vch_1374, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1374;
stream_1374 >> txHist_1374;

if(block.vtx[0]->GetHash() == txHist_1374.GetHash() && nHeight == 1263912) {
return true;
}
unsigned char ch_1375[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa8, 0x49, 0x13, 0x04, 0xcc, 0xb8, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x21, 0x1f, 0x3e, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x75, 0x41, 0x05, 0xe1, 0x85, 0xa3, 0x82, 0x3d, 0x14, 0x30, 0x5e, 0x9f, 0xee, 0xbe, 0x2e, 0x20, 0xe3, 0x28, 0xd9, 0x07, 0x85, 0x3f, 0x28, 0x2f, 0x3d, 0x04, 0xcc, 0xb4, 0xd3, 0x23, 0x2d, 0x50, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1375(ch_1375, ch_1375 + sizeof(ch_1375) -1);
CDataStream stream_1375(vch_1375, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1375;
stream_1375 >> txHist_1375;

if(block.vtx[0]->GetHash() == txHist_1375.GetHash() && nHeight == 1264040) {
return true;
}
unsigned char ch_1376[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x24, 0x49, 0x13, 0x04, 0xeb, 0x83, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x48, 0xac, 0xbb, 0x00, 0x52, 0x3f, 0x7a, 0x51, 0x96, 0x6c, 0x61, 0x11, 0xeb, 0x84, 0x7c, 0xfd, 0x92, 0xae, 0x00, 0x87, 0xd0, 0x2e, 0x57, 0x08, 0x23, 0x95, 0xe7, 0x19, 0xa1, 0xd4, 0x35, 0xb6, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfa, 0xc2, 0x0f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1376(ch_1376, ch_1376 + sizeof(ch_1376) -1);
CDataStream stream_1376(vch_1376, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1376;
stream_1376 >> txHist_1376;

if(block.vtx[0]->GetHash() == txHist_1376.GetHash() && nHeight == 1263908) {
return true;
}
unsigned char ch_1377[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa5, 0x49, 0x13, 0x04, 0xb2, 0xb6, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x76, 0x9c, 0x72, 0x90, 0xea, 0x60, 0x4f, 0x8b, 0x45, 0x48, 0x77, 0x8d, 0xcc, 0x44, 0xe3, 0x00, 0x0e, 0x14, 0xd1, 0x70, 0xb3, 0x6e, 0x18, 0xd1, 0x91, 0xea, 0xaa, 0x9d, 0x0b, 0x12, 0x8c, 0x26, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xae, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1377(ch_1377, ch_1377 + sizeof(ch_1377) -1);
CDataStream stream_1377(vch_1377, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1377;
stream_1377 >> txHist_1377;

if(block.vtx[0]->GetHash() == txHist_1377.GetHash() && nHeight == 1264037) {
return true;
}
unsigned char ch_1378[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x66, 0x49, 0x13, 0x04, 0x95, 0x9e, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x06, 0x44, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1378(ch_1378, ch_1378 + sizeof(ch_1378) -1);
CDataStream stream_1378(vch_1378, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1378;
stream_1378 >> txHist_1378;

if(block.vtx[0]->GetHash() == txHist_1378.GetHash() && nHeight == 1263974) {
return true;
}
unsigned char ch_1379[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x22, 0x49, 0x13, 0x04, 0xbd, 0x83, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5b, 0x35, 0x81, 0xef, 0x02, 0x15, 0x96, 0x2c, 0x9d, 0x8f, 0x25, 0xea, 0xc5, 0xd4, 0xad, 0xa8, 0x0b, 0x8a, 0x5a, 0x22, 0xed, 0x55, 0x6f, 0xe5, 0x93, 0xdc, 0x23, 0xfe, 0x07, 0xcd, 0xbe, 0x45, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfc, 0xf8, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1379(ch_1379, ch_1379 + sizeof(ch_1379) -1);
CDataStream stream_1379(vch_1379, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1379;
stream_1379 >> txHist_1379;

if(block.vtx[0]->GetHash() == txHist_1379.GetHash() && nHeight == 1263906) {
return true;
}
unsigned char ch_1380[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa2, 0x49, 0x13, 0x04, 0x6e, 0xb6, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xce, 0x93, 0xdc, 0x58, 0xd1, 0x58, 0xf5, 0xb7, 0xd3, 0x89, 0x6b, 0xbe, 0x6f, 0x27, 0x38, 0x99, 0x97, 0xa8, 0xe9, 0x95, 0x3a, 0xe0, 0x90, 0x63, 0x8f, 0x7b, 0x51, 0x32, 0x10, 0x84, 0x15, 0x49, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x04, 0x65, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1380(ch_1380, ch_1380 + sizeof(ch_1380) -1);
CDataStream stream_1380(vch_1380, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1380;
stream_1380 >> txHist_1380;

if(block.vtx[0]->GetHash() == txHist_1380.GetHash() && nHeight == 1264034) {
return true;
}
unsigned char ch_1381[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x65, 0x49, 0x13, 0x04, 0x82, 0x9e, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x03, 0x5c, 0xa3, 0x8f, 0xff, 0xeb, 0x73, 0x25, 0x5c, 0x51, 0x9c, 0x21, 0xa6, 0xb5, 0xb0, 0xa5, 0x4d, 0xf9, 0xf8, 0xc4, 0x8c, 0x04, 0x97, 0x06, 0xaa, 0x26, 0xab, 0x67, 0x4c, 0xc6, 0x65, 0x48, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf5, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x5e, 0x9e, 0xec, 0x5f, 0xc5, 0x30, 0x83, 0xb9, 0x9c, 0x5d, 0xbe, 0xed, 0xd0, 0x62, 0xf2, 0x7b, 0x1b, 0xb6, 0xd8, 0xab, 0x7b, 0x9f, 0x8d, 0xeb, 0x80, 0x29, 0x0d, 0xc1, 0x9a, 0x5f, 0x2b, 0xba, 0xe8, 0xfb, 0x66, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1381(ch_1381, ch_1381 + sizeof(ch_1381) -1);
CDataStream stream_1381(vch_1381, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1381;
stream_1381 >> txHist_1381;

if(block.vtx[0]->GetHash() == txHist_1381.GetHash() && nHeight == 1263973) {
return true;
}
unsigned char ch_1382[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xe4, 0x48, 0x13, 0x04, 0x59, 0x68, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xfb, 0x7c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1382(ch_1382, ch_1382 + sizeof(ch_1382) -1);
CDataStream stream_1382(vch_1382, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1382;
stream_1382 >> txHist_1382;

if(block.vtx[0]->GetHash() == txHist_1382.GetHash() && nHeight == 1263844) {
return true;
}
unsigned char ch_1383[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9f, 0x49, 0x13, 0x04, 0x12, 0xb3, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xaf, 0xa4, 0xe8, 0x82, 0xc4, 0xd1, 0xe2, 0x15, 0x0c, 0x7e, 0xb6, 0xdf, 0xe6, 0x9a, 0x60, 0xe4, 0xea, 0xef, 0x12, 0xf8, 0x5c, 0x24, 0x0e, 0xea, 0xd0, 0x7d, 0x62, 0xea, 0xa9, 0x44, 0xdc, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xff, 0xfe, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1383(ch_1383, ch_1383 + sizeof(ch_1383) -1);
CDataStream stream_1383(vch_1383, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1383;
stream_1383 >> txHist_1383;

if(block.vtx[0]->GetHash() == txHist_1383.GetHash() && nHeight == 1264031) {
return true;
}
unsigned char ch_1384[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe3, 0x48, 0x13, 0x04, 0x9f, 0x67, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x06, 0xcd, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd3, 0x12, 0xb8, 0xb5, 0xae, 0x68, 0x63, 0x80, 0x8c, 0x9a, 0xa4, 0xfa, 0xfc, 0x84, 0x90, 0x24, 0xb8, 0xe9, 0x15, 0xe0, 0x6d, 0xb4, 0xfc, 0xf1, 0xa5, 0x6e, 0x42, 0x23, 0x87, 0xaf, 0x43, 0x98, 0x38, 0x62, 0xf4, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xa4, 0x5d, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0x34, 0xd4, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1384(ch_1384, ch_1384 + sizeof(ch_1384) -1);
CDataStream stream_1384(vch_1384, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1384;
stream_1384 >> txHist_1384;

if(block.vtx[0]->GetHash() == txHist_1384.GetHash() && nHeight == 1263843) {
return true;
}
unsigned char ch_1385[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe1, 0x48, 0x13, 0x04, 0x24, 0x66, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc1, 0x12, 0xbe, 0x49, 0x92, 0xc2, 0x7f, 0x6d, 0xd0, 0x1b, 0x58, 0x70, 0x1a, 0x75, 0xa6, 0x2a, 0xc3, 0xe7, 0x16, 0x8d, 0xe8, 0x5e, 0x51, 0xac, 0xca, 0x8e, 0xb3, 0x35, 0x3a, 0x2c, 0x24, 0xab, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x07, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd5, 0xf5, 0xb1, 0x13, 0xbb, 0x28, 0x91, 0xd9, 0x14, 0x2c, 0x95, 0x7d, 0x28, 0xb9, 0x95, 0x2b, 0x93, 0xf4, 0x54, 0xcd, 0x78, 0xb0, 0x25, 0x8d, 0x3d, 0x1e, 0x3c, 0x94, 0x2b, 0xbb, 0xc8, 0xbe, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1385(ch_1385, ch_1385 + sizeof(ch_1385) -1);
CDataStream stream_1385(vch_1385, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1385;
stream_1385 >> txHist_1385;

if(block.vtx[0]->GetHash() == txHist_1385.GetHash() && nHeight == 1263841) {
return true;
}
unsigned char ch_1386[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x63, 0x49, 0x13, 0x04, 0xeb, 0x9d, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x42, 0x20, 0x29, 0xe3, 0xd1, 0xa9, 0xe4, 0x55, 0x59, 0xa8, 0xf0, 0x6f, 0x9f, 0x0b, 0x14, 0xcf, 0xa8, 0x7b, 0x34, 0x2c, 0x11, 0x67, 0x6d, 0xf5, 0xde, 0x28, 0x7e, 0x17, 0x82, 0x97, 0xc2, 0x37, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfb, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xab, 0x8e, 0x6b, 0x4e, 0xc7, 0x42, 0xbd, 0xe2, 0x34, 0x3e, 0xf0, 0x2a, 0x0f, 0x11, 0x3b, 0xff, 0xab, 0xf3, 0x80, 0xd7, 0xf6, 0xdb, 0x4f, 0x32, 0xcb, 0xd8, 0x30, 0xa0, 0x89, 0x7e, 0x02, 0xaf, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1386(ch_1386, ch_1386 + sizeof(ch_1386) -1);
CDataStream stream_1386(vch_1386, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1386;
stream_1386 >> txHist_1386;

if(block.vtx[0]->GetHash() == txHist_1386.GetHash() && nHeight == 1263971) {
return true;
}
unsigned char ch_1387[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x61, 0x49, 0x13, 0x04, 0x58, 0x9c, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb3, 0x9c, 0x39, 0xac, 0x00, 0x4e, 0x03, 0x4b, 0x58, 0x2c, 0x87, 0x0a, 0xaf, 0xa1, 0xb3, 0x59, 0x12, 0xcf, 0x1f, 0x7a, 0x41, 0xb9, 0x2d, 0x16, 0x7b, 0x8a, 0xaf, 0x2d, 0xf6, 0xe3, 0xea, 0xd5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xfb, 0xe7, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1387(ch_1387, ch_1387 + sizeof(ch_1387) -1);
CDataStream stream_1387(vch_1387, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1387;
stream_1387 >> txHist_1387;

if(block.vtx[0]->GetHash() == txHist_1387.GetHash() && nHeight == 1263969) {
return true;
}
unsigned char ch_1388[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xdd, 0x48, 0x13, 0x04, 0x67, 0x62, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe5, 0x69, 0x27, 0xfd, 0x2e, 0xbd, 0xa0, 0xe6, 0x87, 0xf8, 0x2b, 0x2a, 0x1a, 0x4f, 0xee, 0x9d, 0xc1, 0x30, 0x69, 0x50, 0x2a, 0x25, 0x21, 0x69, 0x63, 0x16, 0x1e, 0xd9, 0x9d, 0xb6, 0x86, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf5, 0x26, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd7, 0x3e, 0x53, 0x5f, 0xfc, 0x6b, 0x0b, 0x23, 0x1c, 0xf9, 0x4b, 0x22, 0xca, 0xc3, 0xde, 0x4f, 0xc8, 0xda, 0x4d, 0x96, 0x33, 0xa7, 0x8a, 0x0f, 0xfa, 0x46, 0xcf, 0xeb, 0x3c, 0x3e, 0x96, 0x75, 0xf0, 0x08, 0x98, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1388(ch_1388, ch_1388 + sizeof(ch_1388) -1);
CDataStream stream_1388(vch_1388, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1388;
stream_1388 >> txHist_1388;

if(block.vtx[0]->GetHash() == txHist_1388.GetHash() && nHeight == 1263837) {
return true;
}
unsigned char ch_1389[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xdb, 0x48, 0x13, 0x04, 0x5d, 0x5e, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xaf, 0xd7, 0xfe, 0x09, 0x10, 0x17, 0x9e, 0xaf, 0x33, 0x1d, 0x91, 0x45, 0x48, 0x58, 0x63, 0xc9, 0x74, 0xc9, 0x1b, 0x8b, 0x4f, 0x83, 0x84, 0xfc, 0xda, 0x35, 0x87, 0x08, 0xfd, 0x6c, 0x30, 0xa4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xc1, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1389(ch_1389, ch_1389 + sizeof(ch_1389) -1);
CDataStream stream_1389(vch_1389, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1389;
stream_1389 >> txHist_1389;

if(block.vtx[0]->GetHash() == txHist_1389.GetHash() && nHeight == 1263835) {
return true;
}
unsigned char ch_1390[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd8, 0x48, 0x13, 0x04, 0x5f, 0x5d, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa8, 0x85, 0xfb, 0xa8, 0x58, 0xdd, 0x62, 0x82, 0x90, 0x0f, 0xd6, 0x02, 0x34, 0x7e, 0x77, 0xc8, 0xd2, 0x80, 0xe5, 0x5f, 0x83, 0x1f, 0x66, 0x6a, 0x8e, 0x60, 0x3a, 0x02, 0xb6, 0x96, 0x08, 0xfa, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x2f, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1390(ch_1390, ch_1390 + sizeof(ch_1390) -1);
CDataStream stream_1390(vch_1390, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1390;
stream_1390 >> txHist_1390;

if(block.vtx[0]->GetHash() == txHist_1390.GetHash() && nHeight == 1263832) {
return true;
}
unsigned char ch_1391[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd5, 0x48, 0x13, 0x04, 0xcd, 0x5c, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xec, 0xf7, 0x86, 0x86, 0x83, 0xae, 0x11, 0x4e, 0xa2, 0x94, 0xe1, 0x75, 0x75, 0xd5, 0x37, 0xe0, 0x55, 0x86, 0x36, 0x86, 0x2e, 0x9c, 0x01, 0xb9, 0x5b, 0xa6, 0x0f, 0xc5, 0x07, 0x66, 0x29, 0x8e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0xbc, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1391(ch_1391, ch_1391 + sizeof(ch_1391) -1);
CDataStream stream_1391(vch_1391, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1391;
stream_1391 >> txHist_1391;

if(block.vtx[0]->GetHash() == txHist_1391.GetHash() && nHeight == 1263829) {
return true;
}
unsigned char ch_1392[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd2, 0x48, 0x13, 0x04, 0xed, 0x5a, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe4, 0xe5, 0x6a, 0xd2, 0x58, 0x26, 0x73, 0x91, 0x28, 0x22, 0x5e, 0xdb, 0x53, 0x80, 0x99, 0xc4, 0xc5, 0x07, 0xd8, 0xb4, 0x9f, 0xbf, 0x61, 0x68, 0x6e, 0x29, 0x01, 0x77, 0x31, 0x00, 0x16, 0x94, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x10, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1392(ch_1392, ch_1392 + sizeof(ch_1392) -1);
CDataStream stream_1392(vch_1392, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1392;
stream_1392 >> txHist_1392;

if(block.vtx[0]->GetHash() == txHist_1392.GetHash() && nHeight == 1263826) {
return true;
}
unsigned char ch_1393[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5b, 0x49, 0x13, 0x04, 0xb6, 0x9a, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x12, 0x32, 0x3b, 0x74, 0x3f, 0xf5, 0x2c, 0x0c, 0xc7, 0x75, 0x56, 0xa1, 0x05, 0x1a, 0x20, 0x57, 0xf4, 0xbb, 0x81, 0x47, 0x57, 0x03, 0xfe, 0x0a, 0x13, 0xb9, 0x87, 0xe9, 0xad, 0xe8, 0xa4, 0xf4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x48, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1393(ch_1393, ch_1393 + sizeof(ch_1393) -1);
CDataStream stream_1393(vch_1393, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1393;
stream_1393 >> txHist_1393;

if(block.vtx[0]->GetHash() == txHist_1393.GetHash() && nHeight == 1263963) {
return true;
}
unsigned char ch_1394[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xad, 0x48, 0x13, 0x04, 0x1c, 0x51, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x85, 0x2a, 0x5e, 0xb5, 0x3e, 0xc2, 0x84, 0xb1, 0x40, 0xd2, 0x4d, 0x25, 0x9c, 0x26, 0x32, 0x95, 0x15, 0x5b, 0xe8, 0x38, 0x26, 0xa6, 0xb8, 0xe5, 0x66, 0x97, 0xc9, 0x15, 0x90, 0xec, 0xeb, 0x32, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0x72, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x36, 0x6d, 0x09, 0xa0, 0x27, 0xb9, 0xbe, 0x47, 0xe4, 0x80, 0xc1, 0x24, 0x4d, 0x0b, 0x91, 0xfe, 0x29, 0xac, 0x14, 0xc7, 0x86, 0xb2, 0x6f, 0x7b, 0x71, 0xd9, 0x5b, 0xb5, 0xe5, 0x6d, 0xb0, 0x32, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1394(ch_1394, ch_1394 + sizeof(ch_1394) -1);
CDataStream stream_1394(vch_1394, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1394;
stream_1394 >> txHist_1394;

if(block.vtx[0]->GetHash() == txHist_1394.GetHash() && nHeight == 1263789) {
return true;
}
unsigned char ch_1395[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa8, 0x48, 0x13, 0x04, 0x6b, 0x4f, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe4, 0xd7, 0x34, 0xe1, 0xff, 0x06, 0xef, 0x48, 0x2b, 0xf5, 0x36, 0x18, 0x6e, 0x7d, 0xbb, 0x91, 0x59, 0xfa, 0xe7, 0x58, 0x2a, 0x1b, 0xe2, 0xa2, 0x8f, 0x8a, 0x33, 0xf3, 0x64, 0x86, 0x9f, 0x77, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0x7e, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x9f, 0x6c, 0xa7, 0x0f, 0xb2, 0x37, 0x91, 0x06, 0x02, 0xc2, 0xb8, 0x5f, 0x93, 0x20, 0x59, 0xaa, 0xed, 0x22, 0xee, 0xf1, 0x86, 0xb3, 0x07, 0xac, 0x08, 0x5c, 0xde, 0x05, 0xa3, 0x98, 0xd2, 0x88, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1395(ch_1395, ch_1395 + sizeof(ch_1395) -1);
CDataStream stream_1395(vch_1395, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1395;
stream_1395 >> txHist_1395;

if(block.vtx[0]->GetHash() == txHist_1395.GetHash() && nHeight == 1263784) {
return true;
}
unsigned char ch_1396[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa3, 0x48, 0x13, 0x04, 0xa5, 0x4d, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb7, 0x8d, 0x92, 0x3f, 0xfc, 0x73, 0x20, 0x0a, 0xf0, 0x6e, 0xff, 0x3e, 0x2c, 0xca, 0x50, 0x37, 0x02, 0x28, 0xae, 0x5a, 0x50, 0x1c, 0xd9, 0x09, 0xfc, 0x5d, 0x56, 0x51, 0x70, 0x9d, 0xdb, 0x36, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x0a, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1396(ch_1396, ch_1396 + sizeof(ch_1396) -1);
CDataStream stream_1396(vch_1396, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1396;
stream_1396 >> txHist_1396;

if(block.vtx[0]->GetHash() == txHist_1396.GetHash() && nHeight == 1263779) {
return true;
}
unsigned char ch_1397[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9e, 0x48, 0x13, 0x04, 0xda, 0x4b, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa3, 0x69, 0x63, 0x3a, 0x6f, 0xea, 0x2e, 0x9c, 0x3d, 0x6b, 0x6c, 0x8e, 0x5f, 0x32, 0xc6, 0xb5, 0x2b, 0xc7, 0x05, 0xf5, 0xb4, 0xc2, 0x43, 0x27, 0x14, 0x42, 0x46, 0x40, 0xeb, 0x4b, 0x04, 0x79, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xe6, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1397(ch_1397, ch_1397 + sizeof(ch_1397) -1);
CDataStream stream_1397(vch_1397, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1397;
stream_1397 >> txHist_1397;

if(block.vtx[0]->GetHash() == txHist_1397.GetHash() && nHeight == 1263774) {
return true;
}
unsigned char ch_1398[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x94, 0x49, 0x13, 0x04, 0x76, 0xaf, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbc, 0xcf, 0x9d, 0x0b, 0x9a, 0xde, 0xe5, 0xdb, 0x49, 0x09, 0x95, 0xd0, 0x2e, 0xe3, 0x34, 0xf1, 0xe2, 0x1f, 0x2e, 0xda, 0x28, 0xc0, 0x1d, 0x27, 0x98, 0x09, 0x66, 0xbc, 0xed, 0x5f, 0xfa, 0xbe, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0xff, 0xfc, 0xc7, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1398(ch_1398, ch_1398 + sizeof(ch_1398) -1);
CDataStream stream_1398(vch_1398, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1398;
stream_1398 >> txHist_1398;

if(block.vtx[0]->GetHash() == txHist_1398.GetHash() && nHeight == 1264020) {
return true;
}
unsigned char ch_1399[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x92, 0x49, 0x13, 0x04, 0x4f, 0xaf, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbc, 0xcf, 0x9d, 0x0b, 0x9a, 0xde, 0xe5, 0xdb, 0x49, 0x09, 0x95, 0xd0, 0x2e, 0xe3, 0x34, 0xf1, 0xe2, 0x1f, 0x2e, 0xda, 0x28, 0xc0, 0x1d, 0x27, 0x98, 0x09, 0x66, 0xbc, 0xed, 0x5f, 0xfa, 0xbe, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1399(ch_1399, ch_1399 + sizeof(ch_1399) -1);
CDataStream stream_1399(vch_1399, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1399;
stream_1399 >> txHist_1399;

if(block.vtx[0]->GetHash() == txHist_1399.GetHash() && nHeight == 1264018) {
return true;
}
unsigned char ch_1400[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x8e, 0x49, 0x13, 0x04, 0x94, 0xad, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x09, 0x99, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1400(ch_1400, ch_1400 + sizeof(ch_1400) -1);
CDataStream stream_1400(vch_1400, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1400;
stream_1400 >> txHist_1400;

if(block.vtx[0]->GetHash() == txHist_1400.GetHash() && nHeight == 1264014) {
return true;
}
unsigned char ch_1401[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5c, 0x49, 0x13, 0x04, 0xb8, 0x9a, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x12, 0x32, 0x3b, 0x74, 0x3f, 0xf5, 0x2c, 0x0c, 0xc7, 0x75, 0x56, 0xa1, 0x05, 0x1a, 0x20, 0x57, 0xf4, 0xbb, 0x81, 0x47, 0x57, 0x03, 0xfe, 0x0a, 0x13, 0xb9, 0x87, 0xe9, 0xad, 0xe8, 0xa4, 0xf4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x1d, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1401(ch_1401, ch_1401 + sizeof(ch_1401) -1);
CDataStream stream_1401(vch_1401, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1401;
stream_1401 >> txHist_1401;

if(block.vtx[0]->GetHash() == txHist_1401.GetHash() && nHeight == 1263964) {
return true;
}
unsigned char ch_1402[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x8d, 0x49, 0x13, 0x04, 0x8c, 0xad, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9d, 0x6e, 0x7a, 0x97, 0x4b, 0xb4, 0x43, 0x13, 0x6e, 0xad, 0x8d, 0xc7, 0x06, 0x87, 0x0f, 0xd8, 0x07, 0xbb, 0x86, 0x37, 0xe0, 0xad, 0x1d, 0x65, 0xde, 0x26, 0xed, 0x80, 0xef, 0xab, 0xc3, 0xa9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xf2, 0xda, 0x53, 0x89, 0xad, 0x54, 0xcc, 0xfe, 0xe5, 0x30, 0xb3, 0x8c, 0x41, 0xbf, 0xdc, 0x7f, 0x8f, 0x0d, 0x2a, 0x57, 0x6c, 0xd4, 0x0e, 0x45, 0xa2, 0x87, 0xa8, 0x27, 0x2e, 0x30, 0x3d, 0x04, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1402(ch_1402, ch_1402 + sizeof(ch_1402) -1);
CDataStream stream_1402(vch_1402, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1402;
stream_1402 >> txHist_1402;

if(block.vtx[0]->GetHash() == txHist_1402.GetHash() && nHeight == 1264013) {
return true;
}
unsigned char ch_1403[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5a, 0x49, 0x13, 0x04, 0xa6, 0x9a, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x12, 0x32, 0x3b, 0x74, 0x3f, 0xf5, 0x2c, 0x0c, 0xc7, 0x75, 0x56, 0xa1, 0x05, 0x1a, 0x20, 0x57, 0xf4, 0xbb, 0x81, 0x47, 0x57, 0x03, 0xfe, 0x0a, 0x13, 0xb9, 0x87, 0xe9, 0xad, 0xe8, 0xa4, 0xf4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf5, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1403(ch_1403, ch_1403 + sizeof(ch_1403) -1);
CDataStream stream_1403(vch_1403, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1403;
stream_1403 >> txHist_1403;

if(block.vtx[0]->GetHash() == txHist_1403.GetHash() && nHeight == 1263962) {
return true;
}
unsigned char ch_1404[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x58, 0x49, 0x13, 0x04, 0x48, 0x98, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x3e, 0x62, 0xa1, 0xe3, 0x7d, 0x7b, 0xbe, 0x29, 0x1f, 0xac, 0xae, 0xa7, 0x1c, 0x83, 0x90, 0x32, 0x32, 0x97, 0xf9, 0x56, 0x03, 0xa2, 0x82, 0x5e, 0x68, 0xaa, 0xb3, 0x5a, 0x10, 0x9a, 0xa3, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x07, 0x25, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1404(ch_1404, ch_1404 + sizeof(ch_1404) -1);
CDataStream stream_1404(vch_1404, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1404;
stream_1404 >> txHist_1404;

if(block.vtx[0]->GetHash() == txHist_1404.GetHash() && nHeight == 1263960) {
return true;
}
unsigned char ch_1405[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x98, 0x49, 0x13, 0x04, 0x8a, 0xb0, 0x35, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x06, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1405(ch_1405, ch_1405 + sizeof(ch_1405) -1);
CDataStream stream_1405(vch_1405, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1405;
stream_1405 >> txHist_1405;

if(block.vtx[0]->GetHash() == txHist_1405.GetHash() && nHeight == 1264024) {
return true;
}
unsigned char ch_1406[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x57, 0x49, 0x13, 0x04, 0x09, 0x98, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xfb, 0x46, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1406(ch_1406, ch_1406 + sizeof(ch_1406) -1);
CDataStream stream_1406(vch_1406, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1406;
stream_1406 >> txHist_1406;

if(block.vtx[0]->GetHash() == txHist_1406.GetHash() && nHeight == 1263959) {
return true;
}
unsigned char ch_1407[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x8c, 0x49, 0x13, 0x04, 0x42, 0xad, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xab, 0xb6, 0xdc, 0x3e, 0xa2, 0xed, 0xa9, 0x21, 0xaa, 0x24, 0x6a, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x6d, 0x75, 0x74, 0x61, 0x72, 0x74, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x07, 0x3a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1407(ch_1407, ch_1407 + sizeof(ch_1407) -1);
CDataStream stream_1407(vch_1407, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1407;
stream_1407 >> txHist_1407;

if(block.vtx[0]->GetHash() == txHist_1407.GetHash() && nHeight == 1264012) {
return true;
}
unsigned char ch_1408[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x56, 0x49, 0x13, 0x04, 0xdd, 0x97, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x55, 0x05, 0xe8, 0xce, 0xe0, 0x50, 0x2a, 0x4f, 0x48, 0xca, 0xc9, 0x0d, 0x34, 0x74, 0xae, 0xc9, 0x42, 0x12, 0x68, 0xd9, 0xe8, 0xae, 0x43, 0x82, 0xca, 0x0b, 0xb9, 0x85, 0xfc, 0xc4, 0x7d, 0x41, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xcd, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1408(ch_1408, ch_1408 + sizeof(ch_1408) -1);
CDataStream stream_1408(vch_1408, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1408;
stream_1408 >> txHist_1408;

if(block.vtx[0]->GetHash() == txHist_1408.GetHash() && nHeight == 1263958) {
return true;
}
unsigned char ch_1409[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x96, 0x49, 0x13, 0x04, 0x46, 0xb0, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x4d, 0x4f, 0x35, 0xa6, 0xfd, 0x4f, 0x13, 0x2a, 0xac, 0x9e, 0x03, 0xa8, 0xeb, 0x98, 0x38, 0x18, 0xff, 0x57, 0xc2, 0x62, 0x2a, 0x17, 0xfe, 0xa7, 0xb2, 0xc2, 0x07, 0xd0, 0xc5, 0x67, 0x7d, 0x41, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0xff, 0xff, 0xf9, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xbe, 0xae, 0xf6, 0xf8, 0xc5, 0x2b, 0x23, 0xa7, 0x1c, 0x92, 0x2b, 0x3c, 0xbf, 0x3c, 0xc7, 0xe7, 0x10, 0x14, 0x5b, 0x69, 0x3e, 0x2b, 0x13, 0x2b, 0x76, 0x1b, 0x0a, 0xd4, 0x4a, 0xc8, 0x57, 0x7f, 0xe8, 0x1f, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1409(ch_1409, ch_1409 + sizeof(ch_1409) -1);
CDataStream stream_1409(vch_1409, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1409;
stream_1409 >> txHist_1409;

if(block.vtx[0]->GetHash() == txHist_1409.GetHash() && nHeight == 1264022) {
return true;
}
unsigned char ch_1410[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x55, 0x49, 0x13, 0x04, 0xd9, 0x97, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x55, 0x05, 0xe8, 0xce, 0xe0, 0x50, 0x2a, 0x4f, 0x48, 0xca, 0xc9, 0x0d, 0x34, 0x74, 0xae, 0xc9, 0x42, 0x12, 0x68, 0xd9, 0xe8, 0xae, 0x43, 0x82, 0xca, 0x0b, 0xb9, 0x85, 0xfc, 0xc4, 0x7d, 0x41, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0xff, 0xff, 0xaa, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1410(ch_1410, ch_1410 + sizeof(ch_1410) -1);
CDataStream stream_1410(vch_1410, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1410;
stream_1410 >> txHist_1410;

if(block.vtx[0]->GetHash() == txHist_1410.GetHash() && nHeight == 1263957) {
return true;
}
unsigned char ch_1411[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x95, 0x49, 0x13, 0x04, 0x6a, 0xaf, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x06, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1411(ch_1411, ch_1411 + sizeof(ch_1411) -1);
CDataStream stream_1411(vch_1411, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1411;
stream_1411 >> txHist_1411;

if(block.vtx[0]->GetHash() == txHist_1411.GetHash() && nHeight == 1264021) {
return true;
}
unsigned char ch_1412[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x8a, 0x49, 0x13, 0x04, 0xf0, 0xac, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa2, 0x68, 0xf4, 0xce, 0x9c, 0x5a, 0x63, 0xf2, 0x0b, 0xa8, 0xc7, 0x31, 0xbd, 0xf2, 0x62, 0xb7, 0xd1, 0x15, 0xee, 0x80, 0xa5, 0x64, 0x88, 0x33, 0x00, 0xb1, 0x0c, 0x69, 0x03, 0x4c, 0xdf, 0xdc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1412(ch_1412, ch_1412 + sizeof(ch_1412) -1);
CDataStream stream_1412(vch_1412, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1412;
stream_1412 >> txHist_1412;

if(block.vtx[0]->GetHash() == txHist_1412.GetHash() && nHeight == 1264010) {
return true;
}
unsigned char ch_1413[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x54, 0x49, 0x13, 0x04, 0xd7, 0x97, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x55, 0x05, 0xe8, 0xce, 0xe0, 0x50, 0x2a, 0x4f, 0x48, 0xca, 0xc9, 0x0d, 0x34, 0x74, 0xae, 0xc9, 0x42, 0x12, 0x68, 0xd9, 0xe8, 0xae, 0x43, 0x82, 0xca, 0x0b, 0xb9, 0x85, 0xfc, 0xc4, 0x7d, 0x41, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xfe, 0xe9, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1413(ch_1413, ch_1413 + sizeof(ch_1413) -1);
CDataStream stream_1413(vch_1413, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1413;
stream_1413 >> txHist_1413;

if(block.vtx[0]->GetHash() == txHist_1413.GetHash() && nHeight == 1263956) {
return true;
}
unsigned char ch_1414[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x93, 0x49, 0x13, 0x04, 0x71, 0xaf, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbc, 0xcf, 0x9d, 0x0b, 0x9a, 0xde, 0xe5, 0xdb, 0x49, 0x09, 0x95, 0xd0, 0x2e, 0xe3, 0x34, 0xf1, 0xe2, 0x1f, 0x2e, 0xda, 0x28, 0xc0, 0x1d, 0x27, 0x98, 0x09, 0x66, 0xbc, 0xed, 0x5f, 0xfa, 0xbe, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0xff, 0xfe, 0xdb, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1414(ch_1414, ch_1414 + sizeof(ch_1414) -1);
CDataStream stream_1414(vch_1414, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1414;
stream_1414 >> txHist_1414;

if(block.vtx[0]->GetHash() == txHist_1414.GetHash() && nHeight == 1264019) {
return true;
}
unsigned char ch_1415[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x89, 0x49, 0x13, 0x04, 0xb7, 0xac, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa2, 0x68, 0xf4, 0xce, 0x9c, 0x5a, 0x63, 0xf2, 0x0b, 0xa8, 0xc7, 0x31, 0xbd, 0xf2, 0x62, 0xb7, 0xd1, 0x15, 0xee, 0x80, 0xa5, 0x64, 0x88, 0x33, 0x00, 0xb1, 0x0c, 0x69, 0x03, 0x4c, 0xdf, 0xdc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xa7, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1415(ch_1415, ch_1415 + sizeof(ch_1415) -1);
CDataStream stream_1415(vch_1415, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1415;
stream_1415 >> txHist_1415;

if(block.vtx[0]->GetHash() == txHist_1415.GetHash() && nHeight == 1264009) {
return true;
}
unsigned char ch_1416[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x53, 0x49, 0x13, 0x04, 0xb1, 0x97, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x06, 0x44, 0x04, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x2a, 0x41, 0xe4, 0xf2, 0x60, 0xfd, 0xd7, 0x13, 0x13, 0x8b, 0xcc, 0xd9, 0xe4, 0xcb, 0xc0, 0x1c, 0x76, 0xdb, 0x8b, 0xc5, 0xd5, 0x13, 0xfe, 0x12, 0x48, 0x50, 0x43, 0xcd, 0x80, 0x0f, 0xb3, 0xcd, 0xa0, 0x06, 0xf9, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1416(ch_1416, ch_1416 + sizeof(ch_1416) -1);
CDataStream stream_1416(vch_1416, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1416;
stream_1416 >> txHist_1416;

if(block.vtx[0]->GetHash() == txHist_1416.GetHash() && nHeight == 1263955) {
return true;
}
unsigned char ch_1417[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x50, 0x49, 0x13, 0x04, 0x79, 0x95, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x20, 0x41, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1417(ch_1417, ch_1417 + sizeof(ch_1417) -1);
CDataStream stream_1417(vch_1417, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1417;
stream_1417 >> txHist_1417;

if(block.vtx[0]->GetHash() == txHist_1417.GetHash() && nHeight == 1263952) {
return true;
}
unsigned char ch_1418[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x54, 0x48, 0x13, 0x04, 0x1a, 0x39, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xfb, 0xaf, 0x65, 0x07, 0x58, 0x05, 0x81, 0xa4, 0xa6, 0x2d, 0x28, 0x00, 0x75, 0x08, 0x39, 0xd7, 0x9a, 0x35, 0x68, 0x3f, 0x00, 0xb3, 0x5f, 0x96, 0x3b, 0x0e, 0x70, 0x10, 0xcf, 0xb3, 0x46, 0x1b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x01, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1418(ch_1418, ch_1418 + sizeof(ch_1418) -1);
CDataStream stream_1418(vch_1418, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1418;
stream_1418 >> txHist_1418;

if(block.vtx[0]->GetHash() == txHist_1418.GetHash() && nHeight == 1263700) {
return true;
}
unsigned char ch_1419[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4d, 0x49, 0x13, 0x04, 0xdd, 0x93, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x23, 0x35, 0x34, 0x8e, 0x8c, 0x59, 0x63, 0x49, 0xfd, 0xfa, 0x69, 0x72, 0xe6, 0x18, 0x56, 0x7b, 0x98, 0xd9, 0x7f, 0x76, 0xcc, 0x4a, 0xd5, 0xfb, 0x7c, 0x9a, 0x61, 0x18, 0xe0, 0x65, 0x8d, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x01, 0x24, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1419(ch_1419, ch_1419 + sizeof(ch_1419) -1);
CDataStream stream_1419(vch_1419, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1419;
stream_1419 >> txHist_1419;

if(block.vtx[0]->GetHash() == txHist_1419.GetHash() && nHeight == 1263949) {
return true;
}
unsigned char ch_1420[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x86, 0x49, 0x13, 0x04, 0x0b, 0xab, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf8, 0xb3, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x20, 0xc3, 0x5c, 0x34, 0xa9, 0x2f, 0x3e, 0x7d, 0x48, 0x2c, 0xf2, 0x1d, 0x0e, 0x33, 0x7f, 0xa8, 0xc0, 0x4a, 0xbb, 0x95, 0x6e, 0xa9, 0xda, 0x8b, 0x87, 0x6c, 0xd3, 0x33, 0x5b, 0xab, 0x78, 0x72, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1420(ch_1420, ch_1420 + sizeof(ch_1420) -1);
CDataStream stream_1420(vch_1420, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1420;
stream_1420 >> txHist_1420;

if(block.vtx[0]->GetHash() == txHist_1420.GetHash() && nHeight == 1264006) {
return true;
}
unsigned char ch_1421[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x51, 0x48, 0x13, 0x04, 0xcc, 0x38, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x07, 0x7f, 0x5e, 0x62, 0xd8, 0xdc, 0xb2, 0x40, 0x50, 0x84, 0x8e, 0xef, 0xd0, 0x2c, 0x8b, 0x61, 0x73, 0x4f, 0xfa, 0x4a, 0x76, 0x66, 0x42, 0x3f, 0x4b, 0x54, 0x0e, 0x9a, 0x07, 0xbc, 0xc9, 0x74, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0xb2, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x78, 0xa3, 0xe2, 0x72, 0x18, 0x5c, 0xf3, 0x56, 0xc9, 0x24, 0x0b, 0xbe, 0xcd, 0x16, 0xd6, 0x32, 0x58, 0x4a, 0xce, 0x70, 0x09, 0x02, 0xdd, 0xcc, 0x62, 0xd3, 0x71, 0x4d, 0x48, 0xe2, 0x66, 0xb2, 0xc0, 0x5b, 0xfc, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1421(ch_1421, ch_1421 + sizeof(ch_1421) -1);
CDataStream stream_1421(vch_1421, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1421;
stream_1421 >> txHist_1421;

if(block.vtx[0]->GetHash() == txHist_1421.GetHash() && nHeight == 1263697) {
return true;
}
unsigned char ch_1422[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x85, 0x49, 0x13, 0x04, 0x3a, 0xaa, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x49, 0x95, 0xb7, 0xa7, 0x4d, 0xca, 0x83, 0x69, 0xf7, 0x01, 0xe8, 0xbb, 0x30, 0x2b, 0x0f, 0x8b, 0xfa, 0x39, 0xdb, 0x2b, 0x6c, 0x8c, 0x9f, 0x47, 0x95, 0x3e, 0x5e, 0xe5, 0x55, 0x0b, 0xe9, 0xd5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x56, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1422(ch_1422, ch_1422 + sizeof(ch_1422) -1);
CDataStream stream_1422(vch_1422, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1422;
stream_1422 >> txHist_1422;

if(block.vtx[0]->GetHash() == txHist_1422.GetHash() && nHeight == 1264005) {
return true;
}
unsigned char ch_1423[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x7b, 0x49, 0x13, 0x04, 0xee, 0xa7, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x71, 0x72, 0x88, 0xce, 0x7f, 0x80, 0xb5, 0x60, 0x50, 0xb2, 0x3d, 0x93, 0x40, 0x42, 0x5d, 0xab, 0xfe, 0x1c, 0xb2, 0xf3, 0xf4, 0x39, 0xd2, 0x2d, 0x21, 0x98, 0x05, 0x5b, 0x19, 0x02, 0x00, 0xde, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfb, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1423(ch_1423, ch_1423 + sizeof(ch_1423) -1);
CDataStream stream_1423(vch_1423, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1423;
stream_1423 >> txHist_1423;

if(block.vtx[0]->GetHash() == txHist_1423.GetHash() && nHeight == 1263995) {
return true;
}
unsigned char ch_1424[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4e, 0x48, 0x13, 0x04, 0xec, 0x37, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbe, 0xc1, 0x7f, 0x32, 0xc1, 0xa0, 0xb2, 0xf3, 0xd7, 0xed, 0xf4, 0x8a, 0xd9, 0x19, 0xe9, 0xeb, 0x4f, 0xc3, 0x7d, 0xdc, 0x6f, 0x3f, 0xc2, 0x0f, 0xf7, 0xc3, 0x86, 0xc8, 0xf3, 0x97, 0xb0, 0x74, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x6b, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1424(ch_1424, ch_1424 + sizeof(ch_1424) -1);
CDataStream stream_1424(vch_1424, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1424;
stream_1424 >> txHist_1424;

if(block.vtx[0]->GetHash() == txHist_1424.GetHash() && nHeight == 1263694) {
return true;
}
unsigned char ch_1425[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x84, 0x49, 0x13, 0x04, 0x37, 0xaa, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x49, 0x95, 0xb7, 0xa7, 0x4d, 0xca, 0x83, 0x69, 0xf7, 0x01, 0xe8, 0xbb, 0x30, 0x2b, 0x0f, 0x8b, 0xfa, 0x39, 0xdb, 0x2b, 0x6c, 0x8c, 0x9f, 0x47, 0x95, 0x3e, 0x5e, 0xe5, 0x55, 0x0b, 0xe9, 0xd5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1425(ch_1425, ch_1425 + sizeof(ch_1425) -1);
CDataStream stream_1425(vch_1425, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1425;
stream_1425 >> txHist_1425;

if(block.vtx[0]->GetHash() == txHist_1425.GetHash() && nHeight == 1264004) {
return true;
}
unsigned char ch_1426[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x76, 0x49, 0x13, 0x04, 0x59, 0xa6, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x04, 0x39, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x53, 0x6e, 0xbf, 0x6c, 0x36, 0x85, 0x0a, 0xed, 0xfc, 0xba, 0x1f, 0xa9, 0x41, 0x11, 0xcf, 0x20, 0xd3, 0x6f, 0x06, 0xce, 0x09, 0x37, 0x03, 0x5b, 0x86, 0xb0, 0x5e, 0xd9, 0xab, 0xbf, 0x18, 0xa9, 0x60, 0x70, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1426(ch_1426, ch_1426 + sizeof(ch_1426) -1);
CDataStream stream_1426(vch_1426, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1426;
stream_1426 >> txHist_1426;

if(block.vtx[0]->GetHash() == txHist_1426.GetHash() && nHeight == 1263990) {
return true;
}
unsigned char ch_1427[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4a, 0x48, 0x13, 0x04, 0x8e, 0x37, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x78, 0xaf, 0xc2, 0x89, 0x41, 0x14, 0x1f, 0x8b, 0xe1, 0xfa, 0x1d, 0xfd, 0xa7, 0xe5, 0xf9, 0x88, 0xc0, 0x10, 0x66, 0x7d, 0x28, 0x57, 0x9b, 0x3a, 0x19, 0x26, 0x61, 0xfc, 0xd7, 0x2c, 0xc4, 0x7d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x1f, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1427(ch_1427, ch_1427 + sizeof(ch_1427) -1);
CDataStream stream_1427(vch_1427, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1427;
stream_1427 >> txHist_1427;

if(block.vtx[0]->GetHash() == txHist_1427.GetHash() && nHeight == 1263690) {
return true;
}
unsigned char ch_1428[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x83, 0x49, 0x13, 0x04, 0x35, 0xaa, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x49, 0x95, 0xb7, 0xa7, 0x4d, 0xca, 0x83, 0x69, 0xf7, 0x01, 0xe8, 0xbb, 0x30, 0x2b, 0x0f, 0x8b, 0xfa, 0x39, 0xdb, 0x2b, 0x6c, 0x8c, 0x9f, 0x47, 0x95, 0x3e, 0x5e, 0xe5, 0x55, 0x0b, 0xe9, 0xd5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0x1c, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1428(ch_1428, ch_1428 + sizeof(ch_1428) -1);
CDataStream stream_1428(vch_1428, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1428;
stream_1428 >> txHist_1428;

if(block.vtx[0]->GetHash() == txHist_1428.GetHash() && nHeight == 1264003) {
return true;
}
unsigned char ch_1429[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x75, 0x49, 0x13, 0x04, 0xc0, 0xa4, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xfb, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1429(ch_1429, ch_1429 + sizeof(ch_1429) -1);
CDataStream stream_1429(vch_1429, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1429;
stream_1429 >> txHist_1429;

if(block.vtx[0]->GetHash() == txHist_1429.GetHash() && nHeight == 1263989) {
return true;
}
unsigned char ch_1430[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x46, 0x48, 0x13, 0x04, 0xfa, 0x36, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xae, 0x59, 0xde, 0xf1, 0x7f, 0x1f, 0xad, 0x63, 0xb0, 0x95, 0x91, 0x96, 0x76, 0xf3, 0x4c, 0x35, 0x34, 0xe6, 0xa1, 0x31, 0x83, 0x9b, 0xed, 0xd1, 0xcd, 0xc2, 0x5e, 0x17, 0xbb, 0x5e, 0x9e, 0xdf, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xe3, 0x11, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1430(ch_1430, ch_1430 + sizeof(ch_1430) -1);
CDataStream stream_1430(vch_1430, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1430;
stream_1430 >> txHist_1430;

if(block.vtx[0]->GetHash() == txHist_1430.GetHash() && nHeight == 1263686) {
return true;
}
unsigned char ch_1431[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x82, 0x49, 0x13, 0x04, 0x2d, 0xaa, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x49, 0x95, 0xb7, 0xa7, 0x4d, 0xca, 0x83, 0x69, 0xf7, 0x01, 0xe8, 0xbb, 0x30, 0x2b, 0x0f, 0x8b, 0xfa, 0x39, 0xdb, 0x2b, 0x6c, 0x8c, 0x9f, 0x47, 0x95, 0x3e, 0x5e, 0xe5, 0x55, 0x0b, 0xe9, 0xd5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xfb, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xc6, 0x6b, 0xe9, 0x84, 0xc8, 0xc9, 0x2b, 0x3e, 0x9b, 0x2b, 0x90, 0xf9, 0x29, 0x7a, 0x61, 0x0f, 0xeb, 0xd6, 0xfa, 0x17, 0x5e, 0x91, 0xe4, 0xbc, 0x91, 0x76, 0x30, 0xd3, 0xf8, 0x2f, 0x3d, 0xf5, 0x10, 0x94, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1431(ch_1431, ch_1431 + sizeof(ch_1431) -1);
CDataStream stream_1431(vch_1431, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1431;
stream_1431 >> txHist_1431;

if(block.vtx[0]->GetHash() == txHist_1431.GetHash() && nHeight == 1264002) {
return true;
}
unsigned char ch_1432[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x74, 0x49, 0x13, 0x04, 0x9a, 0xa4, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0xf0, 0x34, 0x3f, 0x9f, 0x2c, 0xcd, 0x75, 0xb3, 0xee, 0xb7, 0x7e, 0x97, 0xa5, 0x98, 0x62, 0xc5, 0x83, 0xae, 0x16, 0xe5, 0x07, 0x8f, 0xe2, 0xb4, 0x71, 0xa8, 0x4d, 0x83, 0xed, 0x1b, 0x09, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf5, 0x26, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1432(ch_1432, ch_1432 + sizeof(ch_1432) -1);
CDataStream stream_1432(vch_1432, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1432;
stream_1432 >> txHist_1432;

if(block.vtx[0]->GetHash() == txHist_1432.GetHash() && nHeight == 1263988) {
return true;
}
unsigned char ch_1433[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x42, 0x48, 0x13, 0x04, 0x93, 0x36, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x81, 0x13, 0x7f, 0x01, 0x90, 0x0f, 0xca, 0x2c, 0x8e, 0x4b, 0x3b, 0x78, 0x7e, 0x80, 0x86, 0x77, 0x5b, 0x86, 0x7f, 0xf0, 0x65, 0xaf, 0xe9, 0xe5, 0xd6, 0x37, 0x12, 0xe4, 0xd5, 0xdb, 0x5b, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x07, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x8d, 0xd4, 0xdd, 0xaf, 0x6a, 0x8e, 0xe4, 0xfa, 0x89, 0x85, 0x7f, 0x61, 0xc7, 0x60, 0x5d, 0xf6, 0x2b, 0x6a, 0x04, 0xfc, 0x63, 0x07, 0x0c, 0x63, 0xb6, 0x29, 0x9d, 0x1e, 0xae, 0x55, 0xb0, 0xe5, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1433(ch_1433, ch_1433 + sizeof(ch_1433) -1);
CDataStream stream_1433(vch_1433, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1433;
stream_1433 >> txHist_1433;

if(block.vtx[0]->GetHash() == txHist_1433.GetHash() && nHeight == 1263682) {
return true;
}
unsigned char ch_1434[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x81, 0x49, 0x13, 0x04, 0x20, 0xa9, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x22, 0xfe, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1434(ch_1434, ch_1434 + sizeof(ch_1434) -1);
CDataStream stream_1434(vch_1434, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1434;
stream_1434 >> txHist_1434;

if(block.vtx[0]->GetHash() == txHist_1434.GetHash() && nHeight == 1264001) {
return true;
}
unsigned char ch_1435[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x73, 0x49, 0x13, 0x04, 0x5f, 0xa4, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x14, 0x4c, 0x06, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1435(ch_1435, ch_1435 + sizeof(ch_1435) -1);
CDataStream stream_1435(vch_1435, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1435;
stream_1435 >> txHist_1435;

if(block.vtx[0]->GetHash() == txHist_1435.GetHash() && nHeight == 1263987) {
return true;
}
unsigned char ch_1436[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3d, 0x48, 0x13, 0x04, 0xef, 0x33, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x97, 0x41, 0x16, 0x55, 0xf5, 0x4e, 0x0f, 0x5f, 0xe2, 0x31, 0xf8, 0xc9, 0xad, 0x1e, 0xad, 0x39, 0x97, 0xd1, 0x46, 0x7d, 0x7d, 0x6f, 0xd5, 0xbf, 0x6f, 0xc5, 0x35, 0x4a, 0x00, 0xf3, 0x30, 0x7c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x2a, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1436(ch_1436, ch_1436 + sizeof(ch_1436) -1);
CDataStream stream_1436(vch_1436, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1436;
stream_1436 >> txHist_1436;

if(block.vtx[0]->GetHash() == txHist_1436.GetHash() && nHeight == 1263677) {
return true;
}
unsigned char ch_1437[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x80, 0x49, 0x13, 0x04, 0x24, 0xa9, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x66, 0xd5, 0x2a, 0x5a, 0xc9, 0xf3, 0x02, 0x05, 0x8f, 0xcf, 0x7e, 0x34, 0x91, 0x28, 0x72, 0x3f, 0x7f, 0x00, 0x4b, 0x2a, 0x68, 0xa3, 0xff, 0x78, 0x1f, 0x3b, 0xd7, 0x9a, 0x60, 0x05, 0xdf, 0x66, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0xff, 0xff, 0xf7, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x35, 0x8a, 0x23, 0xb6, 0x45, 0xc8, 0x81, 0x85, 0xcf, 0x1b, 0xc5, 0x9d, 0x18, 0x82, 0x45, 0xf1, 0x05, 0xac, 0x1f, 0x51, 0x5f, 0x1b, 0xfc, 0xbd, 0xe6, 0xab, 0x9b, 0x84, 0x86, 0x9f, 0xb8, 0x79, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1437(ch_1437, ch_1437 + sizeof(ch_1437) -1);
CDataStream stream_1437(vch_1437, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1437;
stream_1437 >> txHist_1437;

if(block.vtx[0]->GetHash() == txHist_1437.GetHash() && nHeight == 1264000) {
return true;
}
unsigned char ch_1438[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x72, 0x49, 0x13, 0x04, 0x24, 0xa4, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd5, 0x8e, 0xb5, 0x05, 0xb5, 0xab, 0x64, 0xd6, 0xb2, 0xa4, 0xdf, 0x86, 0xc4, 0xeb, 0xcd, 0xa5, 0x63, 0xe0, 0xd7, 0xf3, 0xdc, 0x96, 0x83, 0xf4, 0x62, 0x68, 0x5b, 0xb0, 0xcb, 0x0f, 0x5a, 0xaa, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01, 0xbe, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe6, 0xdb, 0x0d, 0x3f, 0xbe, 0xed, 0xa1, 0x8c, 0x16, 0x11, 0x90, 0x90, 0x6c, 0x40, 0x29, 0xeb, 0x1a, 0x24, 0x7a, 0x97, 0x60, 0xb1, 0xf8, 0xd6, 0xc4, 0x84, 0x25, 0x76, 0xb0, 0x6e, 0x5b, 0xd5, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1438(ch_1438, ch_1438 + sizeof(ch_1438) -1);
CDataStream stream_1438(vch_1438, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1438;
stream_1438 >> txHist_1438;

if(block.vtx[0]->GetHash() == txHist_1438.GetHash() && nHeight == 1263986) {
return true;
}
unsigned char ch_1439[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x39, 0x48, 0x13, 0x04, 0x86, 0x33, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x45, 0x52, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1439(ch_1439, ch_1439 + sizeof(ch_1439) -1);
CDataStream stream_1439(vch_1439, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1439;
stream_1439 >> txHist_1439;

if(block.vtx[0]->GetHash() == txHist_1439.GetHash() && nHeight == 1263673) {
return true;
}
unsigned char ch_1440[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x34, 0x48, 0x13, 0x04, 0x08, 0x33, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x11, 0x56, 0x19, 0xf0, 0x85, 0xd5, 0x6b, 0xc8, 0xec, 0xb7, 0x3b, 0x06, 0x1d, 0x3f, 0x7f, 0x85, 0x59, 0x14, 0x15, 0xff, 0x02, 0x4c, 0x25, 0x92, 0xe8, 0x55, 0xe6, 0x5c, 0xad, 0x04, 0x9e, 0x49, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x27, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1440(ch_1440, ch_1440 + sizeof(ch_1440) -1);
CDataStream stream_1440(vch_1440, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1440;
stream_1440 >> txHist_1440;

if(block.vtx[0]->GetHash() == txHist_1440.GetHash() && nHeight == 1263668) {
return true;
}
unsigned char ch_1441[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x7e, 0x49, 0x13, 0x04, 0x7e, 0xa8, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x09, 0x97, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1441(ch_1441, ch_1441 + sizeof(ch_1441) -1);
CDataStream stream_1441(vch_1441, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1441;
stream_1441 >> txHist_1441;

if(block.vtx[0]->GetHash() == txHist_1441.GetHash() && nHeight == 1263998) {
return true;
}
unsigned char ch_1442[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2e, 0x48, 0x13, 0x04, 0x3f, 0x32, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x52, 0xc0, 0x2e, 0x53, 0x4e, 0x3b, 0xac, 0xa1, 0x8e, 0xea, 0x58, 0x0f, 0x8f, 0xdb, 0x1d, 0xcb, 0x01, 0x7a, 0xd1, 0xd9, 0x6a, 0x50, 0x16, 0x5e, 0x93, 0x17, 0x5c, 0xc5, 0xdd, 0x1b, 0x6b, 0x82, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1442(ch_1442, ch_1442 + sizeof(ch_1442) -1);
CDataStream stream_1442(vch_1442, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1442;
stream_1442 >> txHist_1442;

if(block.vtx[0]->GetHash() == txHist_1442.GetHash() && nHeight == 1263662) {
return true;
}
unsigned char ch_1443[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x7d, 0x49, 0x13, 0x04, 0x74, 0xa8, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x06, 0x7f, 0x32, 0xa9, 0x1a, 0x61, 0x88, 0x36, 0x17, 0x89, 0x6c, 0x90, 0x67, 0xd0, 0xd5, 0xd3, 0xe6, 0xf3, 0x19, 0xee, 0x8c, 0x57, 0x90, 0xd9, 0xae, 0x94, 0x31, 0xf2, 0x53, 0xc8, 0x8c, 0x2b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfb, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1443(ch_1443, ch_1443 + sizeof(ch_1443) -1);
CDataStream stream_1443(vch_1443, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1443;
stream_1443 >> txHist_1443;

if(block.vtx[0]->GetHash() == txHist_1443.GetHash() && nHeight == 1263997) {
return true;
}
unsigned char ch_1444[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x7c, 0x49, 0x13, 0x04, 0x04, 0xa8, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xef, 0x0b, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1444(ch_1444, ch_1444 + sizeof(ch_1444) -1);
CDataStream stream_1444(vch_1444, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1444;
stream_1444 >> txHist_1444;

if(block.vtx[0]->GetHash() == txHist_1444.GetHash() && nHeight == 1263996) {
return true;
}
unsigned char ch_1445[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x7a, 0x49, 0x13, 0x04, 0xc0, 0xa7, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x02, 0xca, 0x07, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd0, 0x16, 0xe6, 0x96, 0xdf, 0x6e, 0x17, 0x53, 0xff, 0xb3, 0xd3, 0x5e, 0xe6, 0x8c, 0x33, 0xc7, 0x2f, 0xf3, 0xa1, 0x0b, 0x3f, 0x73, 0xdd, 0x22, 0xd2, 0x02, 0xa3, 0x85, 0x49, 0x66, 0x55, 0xf8, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1445(ch_1445, ch_1445 + sizeof(ch_1445) -1);
CDataStream stream_1445(vch_1445, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1445;
stream_1445 >> txHist_1445;

if(block.vtx[0]->GetHash() == txHist_1445.GetHash() && nHeight == 1263994) {
return true;
}
unsigned char ch_1446[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x79, 0x49, 0x13, 0x04, 0x5b, 0xa7, 0x35, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x06, 0xa2, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1446(ch_1446, ch_1446 + sizeof(ch_1446) -1);
CDataStream stream_1446(vch_1446, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1446;
stream_1446 >> txHist_1446;

if(block.vtx[0]->GetHash() == txHist_1446.GetHash() && nHeight == 1263993) {
return true;
}
unsigned char ch_1447[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x71, 0x49, 0x13, 0x04, 0xf7, 0xa3, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x10, 0x4a, 0x6f, 0x38, 0xb6, 0xd2, 0x41, 0xa5, 0x33, 0xbd, 0x24, 0x80, 0x15, 0xeb, 0x3d, 0xc0, 0x58, 0x71, 0x86, 0x20, 0x01, 0xa0, 0x46, 0xa7, 0xd5, 0x98, 0xb7, 0x7d, 0xe2, 0x4d, 0x78, 0x9f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x07, 0x1a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1447(ch_1447, ch_1447 + sizeof(ch_1447) -1);
CDataStream stream_1447(vch_1447, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1447;
stream_1447 >> txHist_1447;

if(block.vtx[0]->GetHash() == txHist_1447.GetHash() && nHeight == 1263985) {
return true;
}
unsigned char ch_1448[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x78, 0x49, 0x13, 0x04, 0x9c, 0xa6, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x48, 0xd1, 0x0f, 0xbf, 0x97, 0x9c, 0x59, 0xea, 0xf5, 0x54, 0xdd, 0xd1, 0xbc, 0x02, 0x3d, 0x15, 0x3f, 0x3a, 0xfc, 0x94, 0x1a, 0x8b, 0x14, 0x7b, 0xd8, 0x5c, 0x66, 0x69, 0x75, 0xc8, 0x72, 0xab, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf5, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1448(ch_1448, ch_1448 + sizeof(ch_1448) -1);
CDataStream stream_1448(vch_1448, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1448;
stream_1448 >> txHist_1448;

if(block.vtx[0]->GetHash() == txHist_1448.GetHash() && nHeight == 1263992) {
return true;
}
unsigned char ch_1449[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x77, 0x49, 0x13, 0x04, 0x6a, 0xa6, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa4, 0x2d, 0x29, 0xb9, 0x9c, 0x31, 0x7c, 0x2d, 0xea, 0x83, 0x26, 0x4e, 0xab, 0xfa, 0xa3, 0xd3, 0x23, 0x4b, 0x8b, 0x14, 0x31, 0xfd, 0x6e, 0xa2, 0x81, 0x66, 0x8f, 0x3f, 0xe4, 0xb3, 0x7c, 0x34, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x01, 0xbe, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1449(ch_1449, ch_1449 + sizeof(ch_1449) -1);
CDataStream stream_1449(vch_1449, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1449;
stream_1449 >> txHist_1449;

if(block.vtx[0]->GetHash() == txHist_1449.GetHash() && nHeight == 1263991) {
return true;
}
unsigned char ch_1450[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x4a, 0x49, 0x13, 0x04, 0xb1, 0x93, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x02, 0x90, 0x16, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1450(ch_1450, ch_1450 + sizeof(ch_1450) -1);
CDataStream stream_1450(vch_1450, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1450;
stream_1450 >> txHist_1450;

if(block.vtx[0]->GetHash() == txHist_1450.GetHash() && nHeight == 1263946) {
return true;
}
unsigned char ch_1451[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x44, 0x49, 0x13, 0x04, 0x61, 0x8f, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x53, 0x51, 0x35, 0x87, 0x0d, 0x15, 0xef, 0xf8, 0xad, 0x72, 0xa4, 0x48, 0xa8, 0x91, 0x0f, 0x5f, 0x25, 0xc5, 0xeb, 0x70, 0x97, 0xa2, 0xde, 0xc5, 0xf2, 0x78, 0x94, 0xe0, 0x77, 0xb7, 0xe8, 0xbe, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01, 0xf5, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1451(ch_1451, ch_1451 + sizeof(ch_1451) -1);
CDataStream stream_1451(vch_1451, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1451;
stream_1451 >> txHist_1451;

if(block.vtx[0]->GetHash() == txHist_1451.GetHash() && nHeight == 1263940) {
return true;
}
unsigned char ch_1452[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x41, 0x49, 0x13, 0x04, 0x2c, 0x8f, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf9, 0xb8, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1452(ch_1452, ch_1452 + sizeof(ch_1452) -1);
CDataStream stream_1452(vch_1452, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1452;
stream_1452 >> txHist_1452;

if(block.vtx[0]->GetHash() == txHist_1452.GetHash() && nHeight == 1263937) {
return true;
}
unsigned char ch_1453[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x3e, 0x49, 0x13, 0x04, 0x57, 0x8d, 0x35, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x06, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1453(ch_1453, ch_1453 + sizeof(ch_1453) -1);
CDataStream stream_1453(vch_1453, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1453;
stream_1453 >> txHist_1453;

if(block.vtx[0]->GetHash() == txHist_1453.GetHash() && nHeight == 1263934) {
return true;
}
unsigned char ch_1454[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x38, 0x49, 0x13, 0x04, 0xbb, 0x8b, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x79, 0xa6, 0xca, 0x0c, 0xce, 0xb3, 0xcb, 0xf4, 0x46, 0x45, 0x2f, 0x3c, 0x2c, 0x79, 0x1b, 0x7c, 0xe7, 0x3c, 0x85, 0xd4, 0x78, 0xdc, 0xb7, 0x6a, 0xfb, 0x71, 0x11, 0x19, 0x70, 0x4c, 0x64, 0x30, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x0c, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xcd, 0xa0, 0x58, 0x23, 0x67, 0x3f, 0x52, 0x86, 0xef, 0xa6, 0x8e, 0x82, 0x6c, 0x27, 0x3e, 0xbf, 0x86, 0x51, 0x49, 0x78, 0xce, 0x4b, 0xc9, 0xab, 0x10, 0xcd, 0x1f, 0xc3, 0xf4, 0xce, 0x87, 0xfa, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1454(ch_1454, ch_1454 + sizeof(ch_1454) -1);
CDataStream stream_1454(vch_1454, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1454;
stream_1454 >> txHist_1454;

if(block.vtx[0]->GetHash() == txHist_1454.GetHash() && nHeight == 1263928) {
return true;
}
unsigned char ch_1455[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x21, 0x49, 0x13, 0x04, 0xbc, 0x83, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0xac, 0x88, 0x8b, 0x04, 0xfe, 0x05, 0xe4, 0x16, 0x00, 0xcd, 0xec, 0x07, 0x0d, 0x2a, 0xce, 0xbb, 0x66, 0x78, 0x14, 0x3a, 0xe0, 0xbf, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x01, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfb, 0xc4, 0x56, 0x95, 0x85, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1455(ch_1455, ch_1455 + sizeof(ch_1455) -1);
CDataStream stream_1455(vch_1455, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1455;
stream_1455 >> txHist_1455;

if(block.vtx[0]->GetHash() == txHist_1455.GetHash() && nHeight == 1263905) {
return true;
}
unsigned char ch_1456[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x52, 0x49, 0x13, 0x04, 0x3e, 0x96, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x5e, 0xf5, 0x06, 0xc6, 0x6d, 0xfa, 0x30, 0x9b, 0xf5, 0x02, 0x84, 0x2f, 0x1f, 0x53, 0x36, 0x2a, 0xef, 0x3f, 0xee, 0xa0, 0xd2, 0xa3, 0x11, 0x0f, 0x0c, 0x02, 0x8e, 0x4c, 0xa0, 0x3d, 0x1b, 0x1b, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1456(ch_1456, ch_1456 + sizeof(ch_1456) -1);
CDataStream stream_1456(vch_1456, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1456;
stream_1456 >> txHist_1456;

if(block.vtx[0]->GetHash() == txHist_1456.GetHash() && nHeight == 1263954) {
return true;
}
unsigned char ch_1457[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4b, 0x49, 0x13, 0x04, 0xd9, 0x93, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x23, 0x35, 0x34, 0x8e, 0x8c, 0x59, 0x63, 0x49, 0xfd, 0xfa, 0x69, 0x72, 0xe6, 0x18, 0x56, 0x7b, 0x98, 0xd9, 0x7f, 0x76, 0xcc, 0x4a, 0xd5, 0xfb, 0x7c, 0x9a, 0x61, 0x18, 0xe0, 0x65, 0x8d, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xff, 0x35, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1457(ch_1457, ch_1457 + sizeof(ch_1457) -1);
CDataStream stream_1457(vch_1457, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1457;
stream_1457 >> txHist_1457;

if(block.vtx[0]->GetHash() == txHist_1457.GetHash() && nHeight == 1263947) {
return true;
}
unsigned char ch_1458[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x48, 0x49, 0x13, 0x04, 0x73, 0x92, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x57, 0x6c, 0xee, 0x4d, 0x6a, 0xcf, 0x23, 0x83, 0x42, 0x9f, 0x1d, 0x81, 0xad, 0x91, 0x5c, 0x0b, 0xbd, 0x93, 0x37, 0xdc, 0xaf, 0x32, 0x19, 0xc2, 0xe8, 0xee, 0xf9, 0x1f, 0x2c, 0xb7, 0x6a, 0x27, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf5, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x35, 0x72, 0xee, 0x80, 0xe0, 0x05, 0x1a, 0xc6, 0xbd, 0x7e, 0x17, 0xfc, 0x97, 0x9a, 0x41, 0x65, 0x13, 0x77, 0x06, 0xee, 0x92, 0xab, 0x45, 0xbf, 0x5f, 0x97, 0x19, 0x77, 0x0a, 0x60, 0x5e, 0x7c, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1458(ch_1458, ch_1458 + sizeof(ch_1458) -1);
CDataStream stream_1458(vch_1458, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1458;
stream_1458 >> txHist_1458;

if(block.vtx[0]->GetHash() == txHist_1458.GetHash() && nHeight == 1263944) {
return true;
}
unsigned char ch_1459[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x45, 0x49, 0x13, 0x04, 0x61, 0x8f, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x53, 0x51, 0x35, 0x87, 0x0d, 0x15, 0xef, 0xf8, 0xad, 0x72, 0xa4, 0x48, 0xa8, 0x91, 0x0f, 0x5f, 0x25, 0xc5, 0xeb, 0x70, 0x97, 0xa2, 0xde, 0xc5, 0xf2, 0x78, 0x94, 0xe0, 0x77, 0xb7, 0xe8, 0xbe, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x4a, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1459(ch_1459, ch_1459 + sizeof(ch_1459) -1);
CDataStream stream_1459(vch_1459, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1459;
stream_1459 >> txHist_1459;

if(block.vtx[0]->GetHash() == txHist_1459.GetHash() && nHeight == 1263941) {
return true;
}
unsigned char ch_1460[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x42, 0x49, 0x13, 0x04, 0x5b, 0x8f, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x53, 0x51, 0x35, 0x87, 0x0d, 0x15, 0xef, 0xf8, 0xad, 0x72, 0xa4, 0x48, 0xa8, 0x91, 0x0f, 0x5f, 0x25, 0xc5, 0xeb, 0x70, 0x97, 0xa2, 0xde, 0xc5, 0xf2, 0x78, 0x94, 0xe0, 0x77, 0xb7, 0xe8, 0xbe, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xfd, 0x1e, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1460(ch_1460, ch_1460 + sizeof(ch_1460) -1);
CDataStream stream_1460(vch_1460, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1460;
stream_1460 >> txHist_1460;

if(block.vtx[0]->GetHash() == txHist_1460.GetHash() && nHeight == 1263938) {
return true;
}
unsigned char ch_1461[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x3f, 0x49, 0x13, 0x04, 0xfd, 0x8d, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x08, 0x95, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x67, 0x7d, 0xaf, 0x4f, 0x09, 0x5e, 0x4a, 0xd1, 0x3a, 0x93, 0x01, 0x15, 0x03, 0x63, 0x87, 0xb5, 0xe4, 0x6d, 0x75, 0xa9, 0x27, 0x5f, 0x78, 0x85, 0xce, 0x4e, 0x18, 0x17, 0x33, 0xed, 0x4d, 0x08, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1461(ch_1461, ch_1461 + sizeof(ch_1461) -1);
CDataStream stream_1461(vch_1461, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1461;
stream_1461 >> txHist_1461;

if(block.vtx[0]->GetHash() == txHist_1461.GetHash() && nHeight == 1263935) {
return true;
}
unsigned char ch_1462[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3c, 0x49, 0x13, 0x04, 0x56, 0x8d, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x2e, 0xd4, 0x4c, 0x0a, 0x4f, 0x78, 0x81, 0x25, 0xba, 0x35, 0xf9, 0x04, 0xc7, 0x0c, 0xf7, 0x5e, 0x46, 0x8d, 0x22, 0x43, 0x54, 0x3d, 0x11, 0x1b, 0x0f, 0xb8, 0x51, 0xa4, 0xdf, 0xec, 0x04, 0x46, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0xff, 0xfe, 0x94, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1462(ch_1462, ch_1462 + sizeof(ch_1462) -1);
CDataStream stream_1462(vch_1462, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1462;
stream_1462 >> txHist_1462;

if(block.vtx[0]->GetHash() == txHist_1462.GetHash() && nHeight == 1263932) {
return true;
}
unsigned char ch_1463[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x36, 0x49, 0x13, 0x04, 0x91, 0x8a, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x02, 0x95, 0x1b, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1463(ch_1463, ch_1463 + sizeof(ch_1463) -1);
CDataStream stream_1463(vch_1463, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1463;
stream_1463 >> txHist_1463;

if(block.vtx[0]->GetHash() == txHist_1463.GetHash() && nHeight == 1263926) {
return true;
}
unsigned char ch_1464[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x33, 0x49, 0x13, 0x04, 0xa7, 0x89, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x21, 0xe0, 0x32, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x52, 0xeb, 0x53, 0xea, 0x70, 0x5b, 0x1f, 0x57, 0xf1, 0xd1, 0x1a, 0x2a, 0x87, 0xb1, 0x36, 0xe1, 0x09, 0x22, 0x7e, 0x9b, 0x43, 0xf4, 0xf3, 0x94, 0x82, 0x8b, 0x02, 0xba, 0x6f, 0x9f, 0xdc, 0xc8, 0x98, 0xff, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1464(ch_1464, ch_1464 + sizeof(ch_1464) -1);
CDataStream stream_1464(vch_1464, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1464;
stream_1464 >> txHist_1464;

if(block.vtx[0]->GetHash() == txHist_1464.GetHash() && nHeight == 1263923) {
return true;
}
unsigned char ch_1465[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x30, 0x49, 0x13, 0x04, 0x71, 0x87, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0xfd, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xf3, 0x92, 0x11, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x3a, 0x69, 0x0e, 0x9c, 0x50, 0x34, 0x2d, 0x3d, 0x02, 0x93, 0x52, 0xb3, 0x39, 0x4a, 0xdb, 0xde, 0xb2, 0xe2, 0xa3, 0x26, 0xd7, 0xe3, 0x83, 0x64, 0x85, 0x0e, 0xd1, 0x55, 0x08, 0xc8, 0xc2, 0x06, 0x7c, 0x69, 0x7b, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x54, 0x63, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1465(ch_1465, ch_1465 + sizeof(ch_1465) -1);
CDataStream stream_1465(vch_1465, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1465;
stream_1465 >> txHist_1465;

if(block.vtx[0]->GetHash() == txHist_1465.GetHash() && nHeight == 1263920) {
return true;
}
unsigned char ch_1466[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x35, 0x49, 0x13, 0x04, 0xbf, 0x89, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5a, 0x67, 0x68, 0xeb, 0xf4, 0x20, 0x3b, 0xc0, 0xf5, 0x08, 0x60, 0x84, 0xf7, 0x5d, 0x23, 0xe3, 0xec, 0x4c, 0x81, 0xc3, 0xfb, 0x93, 0x56, 0x9e, 0x45, 0x8b, 0xf0, 0xd8, 0xdd, 0xbe, 0xcd, 0xa4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1466(ch_1466, ch_1466 + sizeof(ch_1466) -1);
CDataStream stream_1466(vch_1466, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1466;
stream_1466 >> txHist_1466;

if(block.vtx[0]->GetHash() == txHist_1466.GetHash() && nHeight == 1263925) {
return true;
}
unsigned char ch_1467[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2d, 0x49, 0x13, 0x04, 0x38, 0x85, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xce, 0xbb, 0x66, 0x78, 0x14, 0x3a, 0xe0, 0xbf, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x01, 0x20, 0xe7, 0x59, 0xc0, 0xac, 0x88, 0x8b, 0x04, 0xfe, 0x05, 0xe4, 0x16, 0x00, 0xcd, 0xec, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfb, 0xe2, 0x2e, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xfe, 0x7b, 0xe3, 0x99, 0x1e, 0xd5, 0x52, 0x77, 0x21, 0x3a, 0xf2, 0x7a, 0x66, 0xc2, 0xd3, 0xbd, 0x4d, 0xb1, 0x35, 0xc9, 0xbf, 0x2c, 0x0e, 0x30, 0x08, 0x67, 0x88, 0x9e, 0xef, 0x0a, 0x98, 0x0e, 0x26, 0xa8, 0x7d, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x22, 0x69, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1467(ch_1467, ch_1467 + sizeof(ch_1467) -1);
CDataStream stream_1467(vch_1467, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1467;
stream_1467 >> txHist_1467;

if(block.vtx[0]->GetHash() == txHist_1467.GetHash() && nHeight == 1263917) {
return true;
}
unsigned char ch_1468[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2a, 0x49, 0x13, 0x04, 0xf6, 0x84, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x01, 0x20, 0xe7, 0x59, 0xc0, 0xac, 0x88, 0x8b, 0x04, 0xfe, 0x05, 0xe4, 0x16, 0x00, 0xcd, 0xec, 0x07, 0x0d, 0x2a, 0xce, 0xbb, 0x66, 0x78, 0x14, 0x3a, 0xe0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xf8, 0x1f, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1468(ch_1468, ch_1468 + sizeof(ch_1468) -1);
CDataStream stream_1468(vch_1468, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1468;
stream_1468 >> txHist_1468;

if(block.vtx[0]->GetHash() == txHist_1468.GetHash() && nHeight == 1263914) {
return true;
}
unsigned char ch_1469[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x27, 0x49, 0x13, 0x04, 0x40, 0x84, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb1, 0xaf, 0x87, 0x94, 0xb8, 0xef, 0xf6, 0x1f, 0xff, 0x5b, 0x41, 0xf8, 0x82, 0x41, 0x38, 0xb3, 0x5f, 0x1a, 0x4f, 0x5c, 0x9d, 0xb9, 0xac, 0xc3, 0x56, 0xdd, 0x1d, 0x94, 0x01, 0x7c, 0x1a, 0xb5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfc, 0x5c, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1469(ch_1469, ch_1469 + sizeof(ch_1469) -1);
CDataStream stream_1469(vch_1469, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1469;
stream_1469 >> txHist_1469;

if(block.vtx[0]->GetHash() == txHist_1469.GetHash() && nHeight == 1263911) {
return true;
}
unsigned char ch_1470[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x23, 0x49, 0x13, 0x04, 0xc9, 0x83, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xff, 0x34, 0x95, 0x8f, 0xc0, 0xbf, 0x5e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xae, 0xcd, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfe, 0x72, 0x19, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1470(ch_1470, ch_1470 + sizeof(ch_1470) -1);
CDataStream stream_1470(vch_1470, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1470;
stream_1470 >> txHist_1470;

if(block.vtx[0]->GetHash() == txHist_1470.GetHash() && nHeight == 1263907) {
return true;
}
unsigned char ch_1471[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x32, 0x49, 0x13, 0x04, 0xbf, 0x87, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x42, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xd2, 0x12, 0x20, 0x00, 0x00, 0x32, 0xd6, 0x82, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xf2, 0x95, 0x47, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe1, 0x02, 0x2b, 0x0a, 0x36, 0xfe, 0xce, 0x42, 0xc5, 0x75, 0xe5, 0xe9, 0x0c, 0x86, 0x85, 0x07, 0x7a, 0x3f, 0x90, 0x5e, 0xdf, 0xe1, 0x34, 0xae, 0xcb, 0x1c, 0xc5, 0x67, 0x24, 0x87, 0xa4, 0xf7, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1471(ch_1471, ch_1471 + sizeof(ch_1471) -1);
CDataStream stream_1471(vch_1471, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1471;
stream_1471 >> txHist_1471;

if(block.vtx[0]->GetHash() == txHist_1471.GetHash() && nHeight == 1263922) {
return true;
}
unsigned char ch_1472[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2f, 0x49, 0x13, 0x04, 0xa7, 0x85, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x61, 0xc8, 0xfa, 0xdd, 0x25, 0x77, 0xc2, 0x0c, 0xf1, 0xdb, 0xc5, 0xbc, 0x97, 0x29, 0x38, 0xc1, 0x22, 0xbc, 0x45, 0xd3, 0x18, 0x36, 0x90, 0x52, 0x2a, 0x98, 0x35, 0xfe, 0x80, 0xe4, 0x3c, 0x6b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfc, 0xfc, 0x0d, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x8a, 0x5b, 0x5a, 0x87, 0xa2, 0x57, 0xa7, 0x4b, 0x26, 0x70, 0xb4, 0x90, 0x1c, 0x54, 0x69, 0xbd, 0xb1, 0x12, 0x9d, 0x7e, 0xfa, 0x9a, 0x76, 0x0c, 0xf4, 0x37, 0xf2, 0x4a, 0x07, 0xe4, 0x59, 0x1d, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1472(ch_1472, ch_1472 + sizeof(ch_1472) -1);
CDataStream stream_1472(vch_1472, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1472;
stream_1472 >> txHist_1472;

if(block.vtx[0]->GetHash() == txHist_1472.GetHash() && nHeight == 1263919) {
return true;
}
unsigned char ch_1473[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2c, 0x49, 0x13, 0x04, 0xf8, 0x84, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xce, 0xbb, 0x66, 0x78, 0x14, 0x3a, 0xe0, 0xbf, 0x14, 0xa9, 0x76, 0x19, 0x00, 0x00, 0x00, 0x01, 0x20, 0xe7, 0x59, 0xc0, 0xac, 0x88, 0x8b, 0x04, 0xfe, 0x05, 0xe4, 0x16, 0x00, 0xcd, 0xec, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfa, 0x92, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1473(ch_1473, ch_1473 + sizeof(ch_1473) -1);
CDataStream stream_1473(vch_1473, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1473;
stream_1473 >> txHist_1473;

if(block.vtx[0]->GetHash() == txHist_1473.GetHash() && nHeight == 1263916) {
return true;
}
unsigned char ch_1474[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x29, 0x49, 0x13, 0x04, 0xf0, 0x84, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x03, 0x36, 0xfb, 0xff, 0xff, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x52, 0x71, 0x81, 0x50, 0x1b, 0x27, 0xc9, 0xad, 0x5b, 0x35, 0x82, 0x35, 0x8a, 0x4e, 0xd5, 0x6f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xf8, 0x8b, 0x0a, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1474(ch_1474, ch_1474 + sizeof(ch_1474) -1);
CDataStream stream_1474(vch_1474, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1474;
stream_1474 >> txHist_1474;

if(block.vtx[0]->GetHash() == txHist_1474.GetHash() && nHeight == 1263913) {
return true;
}
unsigned char ch_1475[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x26, 0x49, 0x13, 0x04, 0x17, 0x84, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xac, 0xb6, 0xde, 0x0e, 0xf9, 0xd3, 0xdb, 0xc4, 0x7b, 0xb2, 0xf6, 0xe6, 0xac, 0x5c, 0x28, 0x06, 0xc1, 0xfa, 0x5b, 0x0a, 0x75, 0x59, 0xb1, 0x3e, 0x58, 0xa1, 0x01, 0xd1, 0x20, 0xb1, 0x60, 0x48, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfd, 0x75, 0x05, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1475(ch_1475, ch_1475 + sizeof(ch_1475) -1);
CDataStream stream_1475(vch_1475, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1475;
stream_1475 >> txHist_1475;

if(block.vtx[0]->GetHash() == txHist_1475.GetHash() && nHeight == 1263910) {
return true;
}
unsigned char ch_1476[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x25, 0x49, 0x13, 0x04, 0x0d, 0x84, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x58, 0x47, 0x59, 0x61, 0x58, 0x53, 0x66, 0x33, 0x76, 0x32, 0x56, 0x6f, 0x43, 0x72, 0x70, 0x48, 0x55, 0x45, 0x62, 0x32, 0x4c, 0x32, 0x20, 0x79, 0x62, 0x20, 0x37, 0x32, 0x35, 0x33, 0x35, 0x37, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfb, 0xbc, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1476(ch_1476, ch_1476 + sizeof(ch_1476) -1);
CDataStream stream_1476(vch_1476, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1476;
stream_1476 >> txHist_1476;

if(block.vtx[0]->GetHash() == txHist_1476.GetHash() && nHeight == 1263909) {
return true;
}
unsigned char ch_1477[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x97, 0x48, 0x13, 0x04, 0x3a, 0x4a, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xdf, 0x40, 0x14, 0x93, 0x2f, 0x59, 0xae, 0x2e, 0xf0, 0x5f, 0xc7, 0x0d, 0x18, 0x0c, 0x8c, 0x59, 0xbb, 0xa4, 0x0c, 0x43, 0xe4, 0xb5, 0x7a, 0xf6, 0xcb, 0xd5, 0x2f, 0xc6, 0x04, 0x3e, 0xba, 0xb1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0xa5, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1477(ch_1477, ch_1477 + sizeof(ch_1477) -1);
CDataStream stream_1477(vch_1477, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1477;
stream_1477 >> txHist_1477;

if(block.vtx[0]->GetHash() == txHist_1477.GetHash() && nHeight == 1263767) {
return true;
}
unsigned char ch_1478[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x93, 0x48, 0x13, 0x04, 0x97, 0x49, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7a, 0xe5, 0xa0, 0x67, 0xaf, 0xe0, 0xe9, 0x44, 0x4d, 0x18, 0xa5, 0x40, 0x1a, 0xf5, 0xac, 0x84, 0x8a, 0x17, 0xe3, 0xb3, 0x4c, 0x0f, 0xda, 0x90, 0x9c, 0x09, 0x24, 0xc6, 0xff, 0xf8, 0x8b, 0x82, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xc8, 0x0c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1478(ch_1478, ch_1478 + sizeof(ch_1478) -1);
CDataStream stream_1478(vch_1478, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1478;
stream_1478 >> txHist_1478;

if(block.vtx[0]->GetHash() == txHist_1478.GetHash() && nHeight == 1263763) {
return true;
}
unsigned char ch_1479[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x8f, 0x48, 0x13, 0x04, 0xe4, 0x48, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xef, 0x3e, 0x62, 0xcd, 0x5e, 0xa5, 0x57, 0x46, 0x29, 0xd1, 0xcb, 0x2a, 0xa2, 0x2c, 0xaf, 0x96, 0x37, 0x45, 0xc3, 0x55, 0x42, 0x05, 0xd6, 0xc3, 0x0d, 0x59, 0xfc, 0xce, 0x3d, 0x28, 0xba, 0xfe, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xd9, 0x1e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x78, 0xa6, 0x55, 0xb3, 0xa0, 0xd4, 0x48, 0xd2, 0xb9, 0xe8, 0x47, 0x2c, 0x70, 0x7c, 0x58, 0x21, 0xdc, 0xb0, 0xed, 0x43, 0xc8, 0x8c, 0x71, 0x4d, 0xd2, 0x92, 0xa4, 0xc1, 0x24, 0x74, 0x56, 0x4a, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1479(ch_1479, ch_1479 + sizeof(ch_1479) -1);
CDataStream stream_1479(vch_1479, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1479;
stream_1479 >> txHist_1479;

if(block.vtx[0]->GetHash() == txHist_1479.GetHash() && nHeight == 1263759) {
return true;
}
unsigned char ch_1480[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x8b, 0x48, 0x13, 0x04, 0xac, 0x47, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x2c, 0x03, 0xde, 0x45, 0xd7, 0x9c, 0x4c, 0x8b, 0xf5, 0xb2, 0x2c, 0x0e, 0x5c, 0x82, 0x35, 0x8f, 0x34, 0xfb, 0x4f, 0x30, 0x86, 0x43, 0xa0, 0xc9, 0x5d, 0xf1, 0x80, 0x2c, 0x7e, 0x2b, 0xf4, 0xb0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x0f, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1480(ch_1480, ch_1480 + sizeof(ch_1480) -1);
CDataStream stream_1480(vch_1480, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1480;
stream_1480 >> txHist_1480;

if(block.vtx[0]->GetHash() == txHist_1480.GetHash() && nHeight == 1263755) {
return true;
}
unsigned char ch_1481[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x87, 0x48, 0x13, 0x04, 0x1b, 0x47, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7c, 0xc9, 0x80, 0x73, 0x39, 0x9a, 0x1e, 0x61, 0x0b, 0x57, 0x49, 0xb9, 0xba, 0xd0, 0xfa, 0xda, 0xb9, 0x3a, 0x99, 0x7c, 0x23, 0xe6, 0x13, 0x04, 0x36, 0xe8, 0x83, 0xd0, 0xda, 0x19, 0xec, 0xfc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0xb8, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1481(ch_1481, ch_1481 + sizeof(ch_1481) -1);
CDataStream stream_1481(vch_1481, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1481;
stream_1481 >> txHist_1481;

if(block.vtx[0]->GetHash() == txHist_1481.GetHash() && nHeight == 1263751) {
return true;
}
unsigned char ch_1482[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x83, 0x48, 0x13, 0x04, 0x53, 0x45, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xfe, 0x57, 0x94, 0x81, 0x94, 0x99, 0xd9, 0xaa, 0xbb, 0xa1, 0x49, 0x17, 0x69, 0x30, 0xf8, 0x63, 0xcc, 0xf9, 0x76, 0x9b, 0x53, 0x92, 0x26, 0x45, 0xa4, 0x65, 0xbe, 0xfb, 0x76, 0xb8, 0x95, 0xe1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x1d, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x33, 0xb2, 0xf8, 0x5d, 0x7b, 0xb0, 0x5c, 0xc4, 0xd9, 0xa8, 0x8c, 0x4f, 0xc6, 0xf4, 0x3f, 0x3c, 0xc2, 0xd5, 0xa3, 0xef, 0x4f, 0xf7, 0xc6, 0xd1, 0x03, 0x08, 0x43, 0xc9, 0xfb, 0x5a, 0x07, 0x0a, 0xb0, 0x20, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1482(ch_1482, ch_1482 + sizeof(ch_1482) -1);
CDataStream stream_1482(vch_1482, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1482;
stream_1482 >> txHist_1482;

if(block.vtx[0]->GetHash() == txHist_1482.GetHash() && nHeight == 1263747) {
return true;
}
unsigned char ch_1483[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x7f, 0x48, 0x13, 0x04, 0xa8, 0x44, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x07, 0x47, 0xe3, 0x23, 0x21, 0x6d, 0x90, 0x3d, 0x59, 0xab, 0x62, 0x5b, 0x0d, 0x9e, 0x9e, 0x96, 0x6c, 0xf2, 0xc6, 0xa8, 0xa5, 0x51, 0x63, 0xb0, 0x9e, 0x48, 0x4f, 0xab, 0xf0, 0xea, 0xc2, 0x98, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xf2, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1483(ch_1483, ch_1483 + sizeof(ch_1483) -1);
CDataStream stream_1483(vch_1483, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1483;
stream_1483 >> txHist_1483;

if(block.vtx[0]->GetHash() == txHist_1483.GetHash() && nHeight == 1263743) {
return true;
}
unsigned char ch_1484[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x7a, 0x48, 0x13, 0x04, 0x72, 0x42, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x54, 0x87, 0x97, 0x1a, 0xf1, 0xee, 0x7a, 0x22, 0x8c, 0xc0, 0x7d, 0x4f, 0x03, 0xc6, 0xeb, 0xe0, 0x95, 0x24, 0x36, 0xab, 0x48, 0x9c, 0x21, 0x69, 0x89, 0xe1, 0xc2, 0xf7, 0x16, 0x9b, 0x64, 0x21, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xb6, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x09, 0x1d, 0x2d, 0xed, 0xb3, 0xeb, 0x42, 0xb7, 0xa5, 0x3f, 0xf7, 0xcd, 0xe1, 0x02, 0xfe, 0xa3, 0xff, 0xba, 0xca, 0xa0, 0x98, 0x6f, 0x56, 0x7a, 0xe4, 0x0d, 0xb9, 0x12, 0x31, 0x74, 0x75, 0xe9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1484(ch_1484, ch_1484 + sizeof(ch_1484) -1);
CDataStream stream_1484(vch_1484, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1484;
stream_1484 >> txHist_1484;

if(block.vtx[0]->GetHash() == txHist_1484.GetHash() && nHeight == 1263738) {
return true;
}
unsigned char ch_1485[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x77, 0x48, 0x13, 0x04, 0x9b, 0x41, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x09, 0x59, 0xd1, 0xce, 0xf9, 0xff, 0x8a, 0x7f, 0x65, 0xff, 0x2a, 0x5a, 0x33, 0xa7, 0x1c, 0xdd, 0xe3, 0x65, 0xc7, 0x0e, 0xd9, 0x16, 0x54, 0x76, 0xd5, 0xcd, 0xc6, 0xce, 0x44, 0x06, 0xa7, 0x81, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0xff, 0xff, 0xe0, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xea, 0xd5, 0xb5, 0xac, 0x9e, 0xc5, 0x4d, 0x0c, 0x3c, 0x5a, 0xa4, 0x59, 0xde, 0x24, 0x0a, 0xa3, 0xe8, 0x48, 0x78, 0x34, 0x6f, 0x73, 0x7b, 0x7b, 0x98, 0x51, 0x25, 0xed, 0xb8, 0xa6, 0x11, 0x4b, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1485(ch_1485, ch_1485 + sizeof(ch_1485) -1);
CDataStream stream_1485(vch_1485, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1485;
stream_1485 >> txHist_1485;

if(block.vtx[0]->GetHash() == txHist_1485.GetHash() && nHeight == 1263735) {
return true;
}
unsigned char ch_1486[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x55, 0x48, 0x13, 0x04, 0x57, 0x39, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7d, 0x4c, 0xe8, 0x94, 0x6b, 0xe9, 0x78, 0xf4, 0x94, 0x06, 0x0d, 0x03, 0x08, 0x85, 0x76, 0x1d, 0x88, 0x65, 0x76, 0x5d, 0xee, 0x0c, 0xda, 0x19, 0xdc, 0x2d, 0xe4, 0xf3, 0xca, 0x14, 0x6b, 0xba, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1486(ch_1486, ch_1486 + sizeof(ch_1486) -1);
CDataStream stream_1486(vch_1486, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1486;
stream_1486 >> txHist_1486;

if(block.vtx[0]->GetHash() == txHist_1486.GetHash() && nHeight == 1263701) {
return true;
}
unsigned char ch_1487[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x52, 0x48, 0x13, 0x04, 0xd4, 0x38, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x07, 0x7f, 0x5e, 0x62, 0xd8, 0xdc, 0xb2, 0x40, 0x50, 0x84, 0x8e, 0xef, 0xd0, 0x2c, 0x8b, 0x61, 0x73, 0x4f, 0xfa, 0x4a, 0x76, 0x66, 0x42, 0x3f, 0x4b, 0x54, 0x0e, 0x9a, 0x07, 0xbc, 0xc9, 0x74, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfc, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1487(ch_1487, ch_1487 + sizeof(ch_1487) -1);
CDataStream stream_1487(vch_1487, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1487;
stream_1487 >> txHist_1487;

if(block.vtx[0]->GetHash() == txHist_1487.GetHash() && nHeight == 1263698) {
return true;
}
unsigned char ch_1488[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4f, 0x48, 0x13, 0x04, 0xf5, 0x37, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x3d, 0x41, 0x3a, 0x02, 0x96, 0xd3, 0xcf, 0xff, 0x7e, 0x39, 0x97, 0x11, 0x66, 0xa2, 0x48, 0xa3, 0x8f, 0xb7, 0x30, 0x97, 0xd1, 0xee, 0x1e, 0x57, 0x39, 0x10, 0x61, 0x4d, 0x03, 0x7b, 0xe8, 0x13, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x4a, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1488(ch_1488, ch_1488 + sizeof(ch_1488) -1);
CDataStream stream_1488(vch_1488, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1488;
stream_1488 >> txHist_1488;

if(block.vtx[0]->GetHash() == txHist_1488.GetHash() && nHeight == 1263695) {
return true;
}
unsigned char ch_1489[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd1, 0x48, 0x13, 0x04, 0xc9, 0x5a, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc0, 0xe7, 0xf2, 0xbb, 0xb0, 0x79, 0x7f, 0x47, 0xd7, 0x8b, 0x2b, 0xfa, 0x81, 0xb9, 0xda, 0xb8, 0xc8, 0x15, 0xaf, 0xd0, 0x0b, 0x17, 0xc4, 0xee, 0x13, 0x0b, 0x9d, 0x5e, 0x58, 0x54, 0xfa, 0x2f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x28, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1489(ch_1489, ch_1489 + sizeof(ch_1489) -1);
CDataStream stream_1489(vch_1489, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1489;
stream_1489 >> txHist_1489;

if(block.vtx[0]->GetHash() == txHist_1489.GetHash() && nHeight == 1263825) {
return true;
}
unsigned char ch_1490[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4b, 0x48, 0x13, 0x04, 0xa9, 0x37, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x35, 0x70, 0x06, 0x46, 0x1d, 0x43, 0x76, 0x8e, 0x99, 0x8e, 0x68, 0x1b, 0xe2, 0x3a, 0x4c, 0xd8, 0x19, 0xf7, 0x9d, 0xf1, 0xa6, 0xe1, 0xa4, 0xad, 0x0b, 0xda, 0x21, 0xff, 0xfb, 0x72, 0xa0, 0xa9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x18, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1490(ch_1490, ch_1490 + sizeof(ch_1490) -1);
CDataStream stream_1490(vch_1490, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1490;
stream_1490 >> txHist_1490;

if(block.vtx[0]->GetHash() == txHist_1490.GetHash() && nHeight == 1263691) {
return true;
}
unsigned char ch_1491[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xcf, 0x48, 0x13, 0x04, 0xc7, 0x59, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd5, 0x4c, 0x46, 0x65, 0x51, 0x49, 0x80, 0xc6, 0x46, 0x6e, 0xd6, 0x08, 0x7a, 0x0b, 0x8d, 0x64, 0x78, 0x73, 0xc6, 0xb9, 0x0e, 0xa3, 0x5b, 0xa3, 0x55, 0x3b, 0x6f, 0xfe, 0xc1, 0xbc, 0x95, 0x63, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0x5e, 0x12, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1491(ch_1491, ch_1491 + sizeof(ch_1491) -1);
CDataStream stream_1491(vch_1491, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1491;
stream_1491 >> txHist_1491;

if(block.vtx[0]->GetHash() == txHist_1491.GetHash() && nHeight == 1263823) {
return true;
}
unsigned char ch_1492[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x47, 0x48, 0x13, 0x04, 0x3a, 0x37, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x06, 0x0f, 0xc0, 0xa3, 0x77, 0x42, 0x6e, 0xb2, 0x05, 0x23, 0xbc, 0x1d, 0xa7, 0xe9, 0x16, 0x13, 0x11, 0x8b, 0x12, 0xc1, 0x60, 0x77, 0xed, 0x63, 0xdc, 0x67, 0xef, 0xff, 0xf0, 0xec, 0xee, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf9, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x11, 0xf9, 0xc2, 0xf9, 0xea, 0x4e, 0xeb, 0xe4, 0x1a, 0xda, 0x8b, 0x46, 0xd4, 0x45, 0xda, 0x33, 0x91, 0x3f, 0x3e, 0x61, 0x19, 0x86, 0x32, 0x94, 0xcd, 0x1f, 0x3c, 0x92, 0x99, 0xa1, 0x0f, 0x75, 0x80, 0x79, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1492(ch_1492, ch_1492 + sizeof(ch_1492) -1);
CDataStream stream_1492(vch_1492, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1492;
stream_1492 >> txHist_1492;

if(block.vtx[0]->GetHash() == txHist_1492.GetHash() && nHeight == 1263687) {
return true;
}
unsigned char ch_1493[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xcd, 0x48, 0x13, 0x04, 0x24, 0x59, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd9, 0xc5, 0x11, 0x0b, 0x97, 0x58, 0x01, 0xe5, 0x36, 0x1d, 0x12, 0x31, 0xd9, 0x68, 0x15, 0x5d, 0xec, 0x36, 0x33, 0x87, 0x42, 0x61, 0xf8, 0x52, 0xd2, 0x40, 0xcb, 0x1d, 0x5c, 0x51, 0x9c, 0xf9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xc1, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1493(ch_1493, ch_1493 + sizeof(ch_1493) -1);
CDataStream stream_1493(vch_1493, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1493;
stream_1493 >> txHist_1493;

if(block.vtx[0]->GetHash() == txHist_1493.GetHash() && nHeight == 1263821) {
return true;
}
unsigned char ch_1494[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc9, 0x48, 0x13, 0x04, 0x47, 0x58, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbe, 0x28, 0xf0, 0x1c, 0x8c, 0x87, 0xea, 0xe2, 0xf4, 0xf1, 0xd8, 0x47, 0x47, 0x5c, 0xca, 0xab, 0xad, 0x65, 0xe5, 0xb4, 0x99, 0x91, 0x92, 0x3a, 0x4c, 0xea, 0x57, 0x0e, 0x0f, 0x5f, 0x74, 0xd3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01, 0xae, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1494(ch_1494, ch_1494 + sizeof(ch_1494) -1);
CDataStream stream_1494(vch_1494, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1494;
stream_1494 >> txHist_1494;

if(block.vtx[0]->GetHash() == txHist_1494.GetHash() && nHeight == 1263817) {
return true;
}
unsigned char ch_1495[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x43, 0x48, 0x13, 0x04, 0xc1, 0x36, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x83, 0xc6, 0xed, 0xe6, 0x33, 0xf9, 0xcd, 0x07, 0x4e, 0x2d, 0xd9, 0xc4, 0xf9, 0x4d, 0x0b, 0x0e, 0x43, 0x32, 0x21, 0x24, 0x11, 0x1f, 0x25, 0x44, 0xb2, 0x3d, 0xeb, 0x70, 0xaa, 0xc5, 0x22, 0x7c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01, 0x5c, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1495(ch_1495, ch_1495 + sizeof(ch_1495) -1);
CDataStream stream_1495(vch_1495, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1495;
stream_1495 >> txHist_1495;

if(block.vtx[0]->GetHash() == txHist_1495.GetHash() && nHeight == 1263683) {
return true;
}
unsigned char ch_1496[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc7, 0x48, 0x13, 0x04, 0x0b, 0x57, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xcf, 0x0d, 0x54, 0x81, 0x9d, 0xe0, 0xd9, 0x8d, 0xd1, 0xea, 0x2e, 0xbe, 0x8f, 0xde, 0x09, 0x7d, 0x85, 0xaf, 0x70, 0x2e, 0x63, 0x0c, 0x0f, 0x45, 0x95, 0xac, 0x35, 0x2d, 0x1e, 0xc3, 0xcf, 0x5c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xe7, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1496(ch_1496, ch_1496 + sizeof(ch_1496) -1);
CDataStream stream_1496(vch_1496, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1496;
stream_1496 >> txHist_1496;

if(block.vtx[0]->GetHash() == txHist_1496.GetHash() && nHeight == 1263815) {
return true;
}
unsigned char ch_1497[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3f, 0x48, 0x13, 0x04, 0x0b, 0x34, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa5, 0x6c, 0x06, 0x6c, 0xff, 0xea, 0xf8, 0x3e, 0xf7, 0xe5, 0x1c, 0x65, 0x9b, 0x4c, 0xa9, 0x45, 0x8c, 0x9e, 0xcb, 0xa9, 0xe1, 0xfd, 0x13, 0xfc, 0xce, 0x2c, 0xe6, 0x4e, 0xfc, 0x1c, 0x17, 0x64, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0x7c, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1497(ch_1497, ch_1497 + sizeof(ch_1497) -1);
CDataStream stream_1497(vch_1497, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1497;
stream_1497 >> txHist_1497;

if(block.vtx[0]->GetHash() == txHist_1497.GetHash() && nHeight == 1263679) {
return true;
}
unsigned char ch_1498[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc5, 0x48, 0x13, 0x04, 0xb2, 0x56, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc8, 0x1d, 0x76, 0x64, 0xae, 0xb5, 0xe4, 0x03, 0x92, 0x7d, 0xa7, 0xc4, 0x8f, 0x00, 0x05, 0x9d, 0x75, 0x89, 0x38, 0xeb, 0x98, 0x6e, 0x68, 0x40, 0xaf, 0xab, 0x54, 0x83, 0x1b, 0xe0, 0x2a, 0xaa, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xd8, 0x12, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1498(ch_1498, ch_1498 + sizeof(ch_1498) -1);
CDataStream stream_1498(vch_1498, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1498;
stream_1498 >> txHist_1498;

if(block.vtx[0]->GetHash() == txHist_1498.GetHash() && nHeight == 1263813) {
return true;
}
unsigned char ch_1499[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc2, 0x48, 0x13, 0x04, 0xe6, 0x55, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x6e, 0x76, 0xde, 0x84, 0x14, 0x33, 0x6d, 0xb3, 0x4a, 0x6b, 0x6e, 0x64, 0xba, 0x9b, 0x2f, 0x27, 0x1f, 0x5b, 0xd7, 0x34, 0x8e, 0x4f, 0x8f, 0x6d, 0x6d, 0xba, 0x52, 0xe3, 0xb8, 0x60, 0xa5, 0x29, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x07, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1499(ch_1499, ch_1499 + sizeof(ch_1499) -1);
CDataStream stream_1499(vch_1499, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1499;
stream_1499 >> txHist_1499;

if(block.vtx[0]->GetHash() == txHist_1499.GetHash() && nHeight == 1263810) {
return true;
}
unsigned char ch_1500[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xbf, 0x48, 0x13, 0x04, 0x5d, 0x55, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xef, 0x15, 0xb2, 0x4d, 0x67, 0xd4, 0x5e, 0xd6, 0x71, 0xf6, 0x29, 0x9c, 0x24, 0xa9, 0x87, 0x25, 0x2d, 0x3d, 0x11, 0x6b, 0x76, 0x50, 0x6b, 0xea, 0xe3, 0x66, 0xf3, 0xf9, 0x3f, 0xba, 0x45, 0x0f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xac, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xb4, 0x56, 0xf9, 0x43, 0xb1, 0x08, 0xff, 0xc3, 0x67, 0x90, 0x4c, 0xa5, 0x6b, 0xf5, 0x01, 0x81, 0xfd, 0xcd, 0xc0, 0xcb, 0xce, 0xcc, 0x9b, 0x39, 0x3c, 0x21, 0xa9, 0x7b, 0x0f, 0x8c, 0x18, 0x24, 0x20, 0x39, 0x65, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1500(ch_1500, ch_1500 + sizeof(ch_1500) -1);
CDataStream stream_1500(vch_1500, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1500;
stream_1500 >> txHist_1500;

if(block.vtx[0]->GetHash() == txHist_1500.GetHash() && nHeight == 1263807) {
return true;
}
unsigned char ch_1501[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xbc, 0x48, 0x13, 0x04, 0x04, 0x54, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd7, 0x7d, 0x80, 0xa2, 0xd9, 0xd4, 0x6d, 0xd8, 0xec, 0x8a, 0xc6, 0xf1, 0x35, 0xf9, 0xda, 0x99, 0xe0, 0x5f, 0xc6, 0x1f, 0x30, 0x16, 0x35, 0xdc, 0x8f, 0x99, 0x8c, 0xab, 0xfa, 0x6c, 0xd0, 0x60, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x1a, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xec, 0x92, 0xcf, 0xcb, 0x3d, 0x58, 0xe5, 0x55, 0xa0, 0x20, 0xb6, 0x65, 0xc7, 0x0c, 0x7e, 0x30, 0x87, 0xc8, 0x8e, 0x49, 0x87, 0x11, 0x49, 0x4f, 0x2b, 0x72, 0x86, 0x32, 0xa1, 0xba, 0xa0, 0xa1, 0x80, 0xa5, 0xf7, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1501(ch_1501, ch_1501 + sizeof(ch_1501) -1);
CDataStream stream_1501(vch_1501, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1501;
stream_1501 >> txHist_1501;

if(block.vtx[0]->GetHash() == txHist_1501.GetHash() && nHeight == 1263804) {
return true;
}
unsigned char ch_1502[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb9, 0x48, 0x13, 0x04, 0x88, 0x53, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x22, 0xb3, 0x14, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1502(ch_1502, ch_1502 + sizeof(ch_1502) -1);
CDataStream stream_1502(vch_1502, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1502;
stream_1502 >> txHist_1502;

if(block.vtx[0]->GetHash() == txHist_1502.GetHash() && nHeight == 1263801) {
return true;
}
unsigned char ch_1503[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb1, 0x48, 0x13, 0x04, 0xd0, 0x51, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xae, 0x13, 0xc2, 0x25, 0x0d, 0xa9, 0x94, 0x2d, 0x31, 0xca, 0xfe, 0xab, 0xd9, 0x12, 0x4b, 0x35, 0xd0, 0xbd, 0xb1, 0x14, 0x29, 0xfd, 0xed, 0x3e, 0xdd, 0xf2, 0xd5, 0x51, 0x39, 0xd6, 0x1f, 0x5a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x40, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1503(ch_1503, ch_1503 + sizeof(ch_1503) -1);
CDataStream stream_1503(vch_1503, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1503;
stream_1503 >> txHist_1503;

if(block.vtx[0]->GetHash() == txHist_1503.GetHash() && nHeight == 1263793) {
return true;
}
unsigned char ch_1504[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xac, 0x48, 0x13, 0x04, 0xb2, 0x50, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xfb, 0x75, 0x1b, 0x90, 0x10, 0xa1, 0xe0, 0x01, 0x10, 0x48, 0x17, 0x78, 0x42, 0xed, 0xa8, 0xf3, 0xe7, 0xc4, 0xe5, 0xbd, 0x33, 0x40, 0x6f, 0x4f, 0x64, 0x04, 0xfd, 0x93, 0x33, 0x2f, 0x75, 0x1f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x16, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1504(ch_1504, ch_1504 + sizeof(ch_1504) -1);
CDataStream stream_1504(vch_1504, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1504;
stream_1504 >> txHist_1504;

if(block.vtx[0]->GetHash() == txHist_1504.GetHash() && nHeight == 1263788) {
return true;
}
unsigned char ch_1505[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x20, 0x49, 0x13, 0x04, 0xb3, 0x83, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x87, 0x53, 0xfa, 0xf0, 0x56, 0x60, 0x0f, 0x5e, 0x55, 0xc9, 0x88, 0xad, 0x78, 0x83, 0xdc, 0x9e, 0x6f, 0xd5, 0x4e, 0x8a, 0x35, 0x82, 0x35, 0x5b, 0xad, 0xc9, 0x27, 0x1b, 0x50, 0x81, 0x71, 0x52, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfd, 0x16, 0x04, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1505(ch_1505, ch_1505 + sizeof(ch_1505) -1);
CDataStream stream_1505(vch_1505, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1505;
stream_1505 >> txHist_1505;

if(block.vtx[0]->GetHash() == txHist_1505.GetHash() && nHeight == 1263904) {
return true;
}
unsigned char ch_1506[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1a, 0x49, 0x13, 0x04, 0x2f, 0x83, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xca, 0xc9, 0x13, 0x0a, 0xd1, 0x82, 0xa0, 0xf6, 0x57, 0x4c, 0xb8, 0xbc, 0x95, 0x86, 0x6a, 0x00, 0x31, 0x26, 0xc2, 0xd5, 0x4d, 0xbe, 0x42, 0x29, 0xea, 0x9e, 0x95, 0xea, 0x1c, 0x89, 0x8e, 0x1e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfd, 0x73, 0x0e, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1506(ch_1506, ch_1506 + sizeof(ch_1506) -1);
CDataStream stream_1506(vch_1506, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1506;
stream_1506 >> txHist_1506;

if(block.vtx[0]->GetHash() == txHist_1506.GetHash() && nHeight == 1263898) {
return true;
}
unsigned char ch_1507[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa7, 0x48, 0x13, 0x04, 0x40, 0x4e, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xba, 0x8f, 0x67, 0xce, 0x52, 0x86, 0x6b, 0x29, 0xd1, 0x0e, 0x4d, 0x77, 0x7d, 0xe5, 0x14, 0x04, 0x75, 0xbb, 0x21, 0xde, 0x24, 0xcc, 0xd7, 0x03, 0xe5, 0xfd, 0x4f, 0x03, 0xc8, 0x97, 0xbb, 0xbb, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x10, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1507(ch_1507, ch_1507 + sizeof(ch_1507) -1);
CDataStream stream_1507(vch_1507, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1507;
stream_1507 >> txHist_1507;

if(block.vtx[0]->GetHash() == txHist_1507.GetHash() && nHeight == 1263783) {
return true;
}
unsigned char ch_1508[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1f, 0x49, 0x13, 0x04, 0x9f, 0x83, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5b, 0x20, 0x5d, 0x47, 0x55, 0x42, 0x45, 0x44, 0x5b, 0x20, 0x5d, 0x37, 0x34, 0x39, 0x2e, 0x35, 0x32, 0x3a, 0x37, 0x34, 0x3a, 0x38, 0x30, 0x20, 0x39, 0x32, 0x2d, 0x36, 0x30, 0x2d, 0x38, 0x31, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfd, 0x53, 0x0d, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1508(ch_1508, ch_1508 + sizeof(ch_1508) -1);
CDataStream stream_1508(vch_1508, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1508;
stream_1508 >> txHist_1508;

if(block.vtx[0]->GetHash() == txHist_1508.GetHash() && nHeight == 1263903) {
return true;
}
unsigned char ch_1509[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x18, 0x49, 0x13, 0x04, 0x01, 0x83, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x79, 0x73, 0x97, 0xa8, 0xa5, 0x08, 0x7f, 0xbc, 0xdb, 0xca, 0xb9, 0x2b, 0x99, 0x32, 0xe1, 0x47, 0x7e, 0x7e, 0x93, 0x0b, 0x10, 0x65, 0x14, 0xa3, 0xf5, 0x7a, 0x1d, 0x3e, 0x3b, 0x9a, 0x83, 0x12, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xf7, 0xeb, 0x45, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1509(ch_1509, ch_1509 + sizeof(ch_1509) -1);
CDataStream stream_1509(vch_1509, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1509;
stream_1509 >> txHist_1509;

if(block.vtx[0]->GetHash() == txHist_1509.GetHash() && nHeight == 1263896) {
return true;
}
unsigned char ch_1510[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa2, 0x48, 0x13, 0x04, 0x2b, 0x4d, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb0, 0x2f, 0x22, 0xcb, 0x94, 0x65, 0xcf, 0xa2, 0xd1, 0x26, 0xce, 0xa6, 0x98, 0x53, 0x2a, 0x3f, 0x2e, 0xdb, 0x16, 0xd4, 0x35, 0xfa, 0x16, 0x11, 0xf8, 0x9d, 0xbb, 0xa1, 0xa0, 0x29, 0x2a, 0x3b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x0e, 0x1a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1510(ch_1510, ch_1510 + sizeof(ch_1510) -1);
CDataStream stream_1510(vch_1510, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1510;
stream_1510 >> txHist_1510;

if(block.vtx[0]->GetHash() == txHist_1510.GetHash() && nHeight == 1263778) {
return true;
}
unsigned char ch_1511[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x6e, 0x48, 0x13, 0x04, 0x69, 0x3f, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x02, 0x9b, 0x06, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x5c, 0x53, 0x39, 0x87, 0x99, 0x98, 0xc5, 0x5f, 0x0c, 0xd5, 0x2f, 0x6d, 0xe3, 0x81, 0x45, 0xd4, 0x4d, 0xcc, 0x8a, 0xbd, 0x8d, 0x1f, 0x89, 0xdc, 0xa9, 0xfd, 0xed, 0x1f, 0x73, 0xf6, 0x1f, 0x80, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1511(ch_1511, ch_1511 + sizeof(ch_1511) -1);
CDataStream stream_1511(vch_1511, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1511;
stream_1511 >> txHist_1511;

if(block.vtx[0]->GetHash() == txHist_1511.GetHash() && nHeight == 1263726) {
return true;
}
unsigned char ch_1512[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1e, 0x49, 0x13, 0x04, 0x75, 0x83, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbc, 0x5b, 0xeb, 0xf8, 0x19, 0xaf, 0x99, 0xee, 0xef, 0xa4, 0xf5, 0xee, 0xcd, 0xb3, 0x8d, 0x97, 0x86, 0x6e, 0x09, 0xc9, 0x45, 0x10, 0x74, 0x9c, 0xdb, 0x8e, 0xf4, 0x53, 0x81, 0x65, 0xf7, 0x94, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfb, 0x47, 0x1c, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1512(ch_1512, ch_1512 + sizeof(ch_1512) -1);
CDataStream stream_1512(vch_1512, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1512;
stream_1512 >> txHist_1512;

if(block.vtx[0]->GetHash() == txHist_1512.GetHash() && nHeight == 1263902) {
return true;
}
unsigned char ch_1513[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x16, 0x49, 0x13, 0x04, 0xb5, 0x82, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe4, 0x46, 0x40, 0xff, 0xff, 0xff, 0xff, 0x9d, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x87, 0x10, 0x00, 0x00, 0x00, 0x00, 0x01, 0xbb, 0x23, 0x50, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfc, 0x09, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1513(ch_1513, ch_1513 + sizeof(ch_1513) -1);
CDataStream stream_1513(vch_1513, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1513;
stream_1513 >> txHist_1513;

if(block.vtx[0]->GetHash() == txHist_1513.GetHash() && nHeight == 1263894) {
return true;
}
unsigned char ch_1514[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x6b, 0x48, 0x13, 0x04, 0xe3, 0x3e, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x97, 0x68, 0xb2, 0x23, 0x46, 0x05, 0x17, 0x6d, 0x5c, 0xea, 0xcc, 0x20, 0x1b, 0x1b, 0x84, 0xc9, 0x6f, 0xdc, 0x5f, 0x31, 0x7d, 0x82, 0x58, 0xc1, 0x70, 0x0e, 0x63, 0x71, 0x14, 0x50, 0xe6, 0xa3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x65, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xea, 0x3d, 0xc2, 0x53, 0xa2, 0xb3, 0xf3, 0xa1, 0x25, 0x0e, 0xc0, 0x9c, 0x7e, 0x75, 0x5c, 0x5d, 0x08, 0x81, 0x84, 0xe7, 0x46, 0xd3, 0x24, 0x06, 0x66, 0x99, 0x93, 0x9d, 0xad, 0x62, 0xee, 0xce, 0xb0, 0xd0, 0x65, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1514(ch_1514, ch_1514 + sizeof(ch_1514) -1);
CDataStream stream_1514(vch_1514, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1514;
stream_1514 >> txHist_1514;

if(block.vtx[0]->GetHash() == txHist_1514.GetHash() && nHeight == 1263723) {
return true;
}
unsigned char ch_1515[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1d, 0x49, 0x13, 0x04, 0x63, 0x83, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xfd, 0xff, 0xb9, 0xfa, 0x6b, 0x99, 0x6a, 0x2f, 0x18, 0x1e, 0x86, 0x39, 0x34, 0x02, 0x05, 0x10, 0xbd, 0x27, 0xcf, 0x0a, 0x8f, 0x57, 0xfd, 0x1c, 0x9d, 0xfa, 0xbd, 0x1d, 0x71, 0x95, 0xbc, 0xda, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xf8, 0xf2, 0x38, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1515(ch_1515, ch_1515 + sizeof(ch_1515) -1);
CDataStream stream_1515(vch_1515, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1515;
stream_1515 >> txHist_1515;

if(block.vtx[0]->GetHash() == txHist_1515.GetHash() && nHeight == 1263901) {
return true;
}
unsigned char ch_1516[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x0f, 0x49, 0x13, 0x04, 0x89, 0x81, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x7f, 0xff, 0x8f, 0x5e, 0x66, 0x88, 0x00, 0x00, 0x00, 0x00, 0x01, 0xbe, 0x3f, 0x58, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfd, 0xb4, 0x18, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1516(ch_1516, ch_1516 + sizeof(ch_1516) -1);
CDataStream stream_1516(vch_1516, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1516;
stream_1516 >> txHist_1516;

if(block.vtx[0]->GetHash() == txHist_1516.GetHash() && nHeight == 1263887) {
return true;
}
unsigned char ch_1517[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x68, 0x48, 0x13, 0x04, 0x99, 0x3d, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x54, 0x2d, 0x10, 0x3f, 0x08, 0xe5, 0xda, 0xcf, 0x6c, 0xa5, 0x19, 0x11, 0xb4, 0x83, 0x8d, 0xc7, 0x2e, 0x46, 0xee, 0x14, 0xa2, 0xf1, 0x03, 0xaf, 0x8b, 0x52, 0x92, 0x8f, 0x18, 0x55, 0x60, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x0e, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1517(ch_1517, ch_1517 + sizeof(ch_1517) -1);
CDataStream stream_1517(vch_1517, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1517;
stream_1517 >> txHist_1517;

if(block.vtx[0]->GetHash() == txHist_1517.GetHash() && nHeight == 1263720) {
return true;
}
unsigned char ch_1518[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1c, 0x49, 0x13, 0x04, 0x5d, 0x83, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x6a, 0x49, 0xe1, 0xe4, 0x89, 0x2f, 0x22, 0x2f, 0xd1, 0x4d, 0x04, 0xd9, 0x84, 0x26, 0x32, 0xbb, 0xbd, 0xb5, 0xfe, 0xbb, 0xba, 0x00, 0x00, 0x00, 0x00, 0xac, 0x88, 0x8b, 0x04, 0xfe, 0x05, 0xe4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfe, 0xc7, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1518(ch_1518, ch_1518 + sizeof(ch_1518) -1);
CDataStream stream_1518(vch_1518, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1518;
stream_1518 >> txHist_1518;

if(block.vtx[0]->GetHash() == txHist_1518.GetHash() && nHeight == 1263900) {
return true;
}
unsigned char ch_1519[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x0e, 0x49, 0x13, 0x04, 0x51, 0x81, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x14, 0x3d, 0x21, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xb5, 0x73, 0x7e, 0xe3, 0xce, 0x96, 0xc9, 0x80, 0xac, 0x39, 0xe6, 0x6d, 0xf1, 0x05, 0x7d, 0x17, 0xb7, 0xeb, 0x92, 0x35, 0xaf, 0x57, 0x26, 0xe3, 0xd4, 0x1e, 0x05, 0xa4, 0xb0, 0x3f, 0x10, 0xd8, 0x58, 0x6f, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1519(ch_1519, ch_1519 + sizeof(ch_1519) -1);
CDataStream stream_1519(vch_1519, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1519;
stream_1519 >> txHist_1519;

if(block.vtx[0]->GetHash() == txHist_1519.GetHash() && nHeight == 1263886) {
return true;
}
unsigned char ch_1520[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x65, 0x48, 0x13, 0x04, 0xf6, 0x3c, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x03, 0xce, 0x41, 0x86, 0x76, 0x87, 0xad, 0x9d, 0x65, 0x48, 0x95, 0xe4, 0xc8, 0xc7, 0xd7, 0x98, 0xe4, 0xa6, 0x2d, 0x1f, 0xd8, 0x53, 0xed, 0xac, 0x56, 0x5a, 0x91, 0x77, 0xc3, 0x27, 0x93, 0x79, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xe2, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x1d, 0x12, 0x06, 0xa0, 0x7f, 0x1d, 0x3e, 0x92, 0x74, 0x67, 0x00, 0x34, 0x00, 0x5d, 0x45, 0xf0, 0x70, 0x4a, 0x0c, 0xb3, 0xff, 0x11, 0xb5, 0x4c, 0x2e, 0x3d, 0x2b, 0xd5, 0xa2, 0x7a, 0xb6, 0x1d, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1520(ch_1520, ch_1520 + sizeof(ch_1520) -1);
CDataStream stream_1520(vch_1520, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1520;
stream_1520 >> txHist_1520;

if(block.vtx[0]->GetHash() == txHist_1520.GetHash() && nHeight == 1263717) {
return true;
}
unsigned char ch_1521[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1b, 0x49, 0x13, 0x04, 0x55, 0x83, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x50, 0x55, 0xff, 0x16, 0x62, 0x02, 0xc7, 0xfa, 0x9e, 0x8b, 0xca, 0xdd, 0x7c, 0x09, 0x51, 0xec, 0x48, 0x2f, 0xdb, 0x6e, 0xa0, 0x40, 0x95, 0xf5, 0x4d, 0xe8, 0x89, 0x3c, 0x42, 0xef, 0x1d, 0x86, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfb, 0xae, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1521(ch_1521, ch_1521 + sizeof(ch_1521) -1);
CDataStream stream_1521(vch_1521, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1521;
stream_1521 >> txHist_1521;

if(block.vtx[0]->GetHash() == txHist_1521.GetHash() && nHeight == 1263899) {
return true;
}
unsigned char ch_1522[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x0d, 0x49, 0x13, 0x04, 0x48, 0x80, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd1, 0x9f, 0x52, 0x75, 0x9b, 0xa5, 0xcc, 0x96, 0x59, 0xca, 0xa0, 0x70, 0x8e, 0x99, 0x40, 0xe5, 0x10, 0x60, 0xfa, 0x9c, 0x45, 0x79, 0xd3, 0x32, 0xb4, 0x95, 0xb3, 0x7a, 0xe1, 0xd7, 0x18, 0x8c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xff, 0xff, 0x9d, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1522(ch_1522, ch_1522 + sizeof(ch_1522) -1);
CDataStream stream_1522(vch_1522, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1522;
stream_1522 >> txHist_1522;

if(block.vtx[0]->GetHash() == txHist_1522.GetHash() && nHeight == 1263885) {
return true;
}
unsigned char ch_1523[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x62, 0x48, 0x13, 0x04, 0x7d, 0x3c, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xec, 0x95, 0x44, 0x24, 0xf5, 0x19, 0x82, 0xc5, 0x5f, 0x77, 0xbf, 0xc5, 0x28, 0xfe, 0x3e, 0x53, 0x65, 0xb3, 0xa9, 0x5a, 0x35, 0xf1, 0x90, 0x99, 0x0e, 0xb8, 0xc9, 0xf0, 0xa1, 0x3f, 0x5c, 0x09, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0xb4, 0x11, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1523(ch_1523, ch_1523 + sizeof(ch_1523) -1);
CDataStream stream_1523(vch_1523, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1523;
stream_1523 >> txHist_1523;

if(block.vtx[0]->GetHash() == txHist_1523.GetHash() && nHeight == 1263714) {
return true;
}
unsigned char ch_1524[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x19, 0x49, 0x13, 0x04, 0x28, 0x83, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa1, 0x96, 0x5a, 0x2f, 0x58, 0x41, 0x78, 0x3b, 0xf5, 0xd4, 0xce, 0xe2, 0x7b, 0xce, 0xa2, 0xb4, 0xfe, 0x99, 0xce, 0x99, 0x62, 0x7a, 0xe0, 0x92, 0x2b, 0xa6, 0xbd, 0x9c, 0xae, 0x81, 0xbb, 0x48, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xf7, 0x11, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1524(ch_1524, ch_1524 + sizeof(ch_1524) -1);
CDataStream stream_1524(vch_1524, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1524;
stream_1524 >> txHist_1524;

if(block.vtx[0]->GetHash() == txHist_1524.GetHash() && nHeight == 1263897) {
return true;
}
unsigned char ch_1525[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x0c, 0x49, 0x13, 0x04, 0x46, 0x80, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd1, 0x9f, 0x52, 0x75, 0x9b, 0xa5, 0xcc, 0x96, 0x59, 0xca, 0xa0, 0x70, 0x8e, 0x99, 0x40, 0xe5, 0x10, 0x60, 0xfa, 0x9c, 0x45, 0x79, 0xd3, 0x32, 0xb4, 0x95, 0xb3, 0x7a, 0xe1, 0xd7, 0x18, 0x8c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x01, 0x52, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1525(ch_1525, ch_1525 + sizeof(ch_1525) -1);
CDataStream stream_1525(vch_1525, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1525;
stream_1525 >> txHist_1525;

if(block.vtx[0]->GetHash() == txHist_1525.GetHash() && nHeight == 1263884) {
return true;
}
unsigned char ch_1526[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5f, 0x48, 0x13, 0x04, 0x03, 0x3c, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc4, 0x91, 0xdf, 0x77, 0xa4, 0x1f, 0xcc, 0x1c, 0x10, 0x75, 0x60, 0x81, 0xac, 0xd5, 0x9e, 0xd8, 0x3c, 0x19, 0xbf, 0xe4, 0x74, 0x14, 0xcd, 0x26, 0x09, 0x28, 0xe4, 0x74, 0x67, 0xb0, 0xb8, 0xdf, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x18, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x07, 0xaa, 0xbf, 0x25, 0x94, 0xd6, 0xd2, 0x42, 0xba, 0x3c, 0x0a, 0x18, 0x61, 0x80, 0xcf, 0x01, 0x0a, 0xa3, 0xc5, 0xe3, 0x7d, 0x6c, 0xe9, 0xc2, 0xcc, 0xc1, 0xc1, 0x8e, 0x43, 0x54, 0x0b, 0xfc, 0xb8, 0x8d, 0x69, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1526(ch_1526, ch_1526 + sizeof(ch_1526) -1);
CDataStream stream_1526(vch_1526, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1526;
stream_1526 >> txHist_1526;

if(block.vtx[0]->GetHash() == txHist_1526.GetHash() && nHeight == 1263711) {
return true;
}
unsigned char ch_1527[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x17, 0x49, 0x13, 0x04, 0xbb, 0x82, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x18, 0x45, 0x58, 0x76, 0x68, 0x57, 0x91, 0xd6, 0x17, 0x4d, 0x7b, 0x6f, 0xa8, 0xf2, 0xd1, 0x9e, 0x2e, 0x45, 0x34, 0xb2, 0x43, 0x41, 0x0c, 0x06, 0x08, 0x0d, 0x74, 0x48, 0xb9, 0x3e, 0xa0, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfd, 0x98, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1527(ch_1527, ch_1527 + sizeof(ch_1527) -1);
CDataStream stream_1527(vch_1527, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1527;
stream_1527 >> txHist_1527;

if(block.vtx[0]->GetHash() == txHist_1527.GetHash() && nHeight == 1263895) {
return true;
}
unsigned char ch_1528[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x09, 0x49, 0x13, 0x04, 0x41, 0x80, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd1, 0x9f, 0x52, 0x75, 0x9b, 0xa5, 0xcc, 0x96, 0x59, 0xca, 0xa0, 0x70, 0x8e, 0x99, 0x40, 0xe5, 0x10, 0x60, 0xfa, 0x9c, 0x45, 0x79, 0xd3, 0x32, 0xb4, 0x95, 0xb3, 0x7a, 0xe1, 0xd7, 0x18, 0x8c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xff, 0xff, 0x1b, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1528(ch_1528, ch_1528 + sizeof(ch_1528) -1);
CDataStream stream_1528(vch_1528, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1528;
stream_1528 >> txHist_1528;

if(block.vtx[0]->GetHash() == txHist_1528.GetHash() && nHeight == 1263881) {
return true;
}
unsigned char ch_1529[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5c, 0x48, 0x13, 0x04, 0x48, 0x3b, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x6a, 0x4a, 0x10, 0x29, 0xcf, 0x3d, 0xb5, 0xaf, 0x09, 0x5a, 0x2c, 0x09, 0xfe, 0x9f, 0x4b, 0xac, 0xc5, 0x8f, 0xcc, 0xa0, 0x93, 0x98, 0xd9, 0xc9, 0x0c, 0x46, 0xb9, 0x2f, 0x92, 0x71, 0x6e, 0x36, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xef, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xab, 0x48, 0x32, 0x54, 0x0b, 0x63, 0xa3, 0xab, 0x5b, 0xbd, 0x33, 0x54, 0xae, 0x3c, 0xf1, 0x15, 0xcb, 0x5e, 0x35, 0x20, 0xb6, 0x25, 0x47, 0x46, 0x62, 0xec, 0x30, 0xad, 0x61, 0xa5, 0xc9, 0x0b, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1529(ch_1529, ch_1529 + sizeof(ch_1529) -1);
CDataStream stream_1529(vch_1529, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1529;
stream_1529 >> txHist_1529;

if(block.vtx[0]->GetHash() == txHist_1529.GetHash() && nHeight == 1263708) {
return true;
}
unsigned char ch_1530[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x15, 0x49, 0x13, 0x04, 0xa3, 0x82, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa2, 0x75, 0xa1, 0xde, 0xa2, 0xcf, 0x2c, 0xff, 0x51, 0xc4, 0x51, 0xeb, 0x71, 0x16, 0x3d, 0xc8, 0x30, 0xda, 0x88, 0xbf, 0x7f, 0xfe, 0x31, 0x90, 0xa7, 0x02, 0x29, 0x0e, 0x8d, 0x7a, 0xc7, 0xdd, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfd, 0x1e, 0x0d, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1530(ch_1530, ch_1530 + sizeof(ch_1530) -1);
CDataStream stream_1530(vch_1530, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1530;
stream_1530 >> txHist_1530;

if(block.vtx[0]->GetHash() == txHist_1530.GetHash() && nHeight == 1263893) {
return true;
}
unsigned char ch_1531[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x00, 0x49, 0x13, 0x04, 0xeb, 0x7b, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe8, 0xc8, 0xf3, 0xdc, 0x33, 0x8d, 0x37, 0x14, 0x51, 0xff, 0xa3, 0xf0, 0xc6, 0x4b, 0x45, 0x52, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x07, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1531(ch_1531, ch_1531 + sizeof(ch_1531) -1);
CDataStream stream_1531(vch_1531, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1531;
stream_1531 >> txHist_1531;

if(block.vtx[0]->GetHash() == txHist_1531.GetHash() && nHeight == 1263872) {
return true;
}
unsigned char ch_1532[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x38, 0x48, 0x13, 0x04, 0x84, 0x33, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd9, 0xaf, 0x5d, 0x70, 0x74, 0xd5, 0x00, 0x83, 0x55, 0x2f, 0x27, 0x3b, 0xd7, 0x59, 0xfe, 0x1c, 0x90, 0xc6, 0x63, 0x82, 0x3b, 0xd3, 0x0b, 0x7a, 0xdb, 0xa4, 0xd7, 0xb1, 0xd2, 0x8e, 0xad, 0xc3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x1e, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1532(ch_1532, ch_1532 + sizeof(ch_1532) -1);
CDataStream stream_1532(vch_1532, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1532;
stream_1532 >> txHist_1532;

if(block.vtx[0]->GetHash() == txHist_1532.GetHash() && nHeight == 1263672) {
return true;
}
unsigned char ch_1533[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x14, 0x49, 0x13, 0x04, 0x34, 0x82, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x05, 0x46, 0x7e, 0xbc, 0x5e, 0x78, 0x00, 0x00, 0x05, 0x46, 0x7e, 0xbc, 0x1e, 0x00, 0x00, 0x00, 0x05, 0x46, 0x7e, 0xbb, 0xf9, 0x70, 0x00, 0x00, 0x05, 0x46, 0x7e, 0xbb, 0xf9, 0x68, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfb, 0x91, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1533(ch_1533, ch_1533 + sizeof(ch_1533) -1);
CDataStream stream_1533(vch_1533, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1533;
stream_1533 >> txHist_1533;

if(block.vtx[0]->GetHash() == txHist_1533.GetHash() && nHeight == 1263892) {
return true;
}
unsigned char ch_1534[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xfe, 0x48, 0x13, 0x04, 0x67, 0x7b, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x05, 0xd2, 0x07, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x05, 0x7c, 0x40, 0x22, 0x8c, 0x8f, 0xbb, 0x66, 0xe2, 0xfd, 0x44, 0xf9, 0x1f, 0xd8, 0xcc, 0x56, 0xe3, 0x1d, 0xe8, 0x77, 0x8b, 0xd7, 0x82, 0xfd, 0xfc, 0x7b, 0x37, 0xc6, 0xc9, 0x54, 0xfb, 0x87, 0x10, 0x2e, 0x07, 0xdb, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1534(ch_1534, ch_1534 + sizeof(ch_1534) -1);
CDataStream stream_1534(vch_1534, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1534;
stream_1534 >> txHist_1534;

if(block.vtx[0]->GetHash() == txHist_1534.GetHash() && nHeight == 1263870) {
return true;
}
unsigned char ch_1535[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x33, 0x48, 0x13, 0x04, 0xd0, 0x32, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x11, 0x56, 0x19, 0xf0, 0x85, 0xd5, 0x6b, 0xc8, 0xec, 0xb7, 0x3b, 0x06, 0x1d, 0x3f, 0x7f, 0x85, 0x59, 0x14, 0x15, 0xff, 0x02, 0x4c, 0x25, 0x92, 0xe8, 0x55, 0xe6, 0x5c, 0xad, 0x04, 0x9e, 0x49, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0xff, 0xff, 0xe0, 0x1a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1535(ch_1535, ch_1535 + sizeof(ch_1535) -1);
CDataStream stream_1535(vch_1535, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1535;
stream_1535 >> txHist_1535;

if(block.vtx[0]->GetHash() == txHist_1535.GetHash() && nHeight == 1263667) {
return true;
}
unsigned char ch_1536[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x13, 0x49, 0x13, 0x04, 0x26, 0x82, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5b, 0xac, 0xac, 0x22, 0xe2, 0xd3, 0xb0, 0x40, 0xb3, 0x5c, 0x26, 0x0b, 0xe5, 0xf6, 0xe6, 0x7a, 0x48, 0xc7, 0xa4, 0x60, 0xbe, 0x52, 0x2b, 0x3e, 0x96, 0x4d, 0xa6, 0x53, 0xbe, 0xe8, 0x55, 0x1d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfa, 0x63, 0x15, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1536(ch_1536, ch_1536 + sizeof(ch_1536) -1);
CDataStream stream_1536(vch_1536, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1536;
stream_1536 >> txHist_1536;

if(block.vtx[0]->GetHash() == txHist_1536.GetHash() && nHeight == 1263891) {
return true;
}
unsigned char ch_1537[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2d, 0x48, 0x13, 0x04, 0x35, 0x32, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x09, 0x55, 0x1b, 0xe2, 0x61, 0xd0, 0xb3, 0xe0, 0x9c, 0x9c, 0xef, 0xf0, 0x4a, 0xdd, 0xa2, 0xf8, 0x2a, 0xcb, 0x90, 0x39, 0x8c, 0x46, 0x9c, 0x29, 0x77, 0xee, 0x81, 0xf6, 0xc9, 0x5f, 0x6d, 0xe6, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0xb9, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1537(ch_1537, ch_1537 + sizeof(ch_1537) -1);
CDataStream stream_1537(vch_1537, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1537;
stream_1537 >> txHist_1537;

if(block.vtx[0]->GetHash() == txHist_1537.GetHash() && nHeight == 1263661) {
return true;
}
unsigned char ch_1538[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x12, 0x49, 0x13, 0x04, 0xc4, 0x81, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x7f, 0xff, 0x8f, 0x5e, 0x61, 0x40, 0x00, 0x00, 0x00, 0x00, 0x01, 0xbe, 0x3d, 0xe0, 0x00, 0x00, 0x3f, 0xcc, 0x17, 0x1e, 0xdc, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfc, 0x19, 0x0e, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1538(ch_1538, ch_1538 + sizeof(ch_1538) -1);
CDataStream stream_1538(vch_1538, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1538;
stream_1538 >> txHist_1538;

if(block.vtx[0]->GetHash() == txHist_1538.GetHash() && nHeight == 1263890) {
return true;
}
unsigned char ch_1539[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x28, 0x48, 0x13, 0x04, 0xa3, 0x31, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd1, 0xed, 0xa8, 0xba, 0x56, 0xd1, 0x77, 0x3c, 0x33, 0xa1, 0x3f, 0x77, 0xb8, 0x5c, 0x55, 0x9b, 0x6f, 0x34, 0x34, 0xec, 0x09, 0x83, 0xf9, 0x30, 0xea, 0x81, 0xe2, 0x9d, 0xaf, 0xd4, 0x16, 0x1d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xfc, 0x27, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1539(ch_1539, ch_1539 + sizeof(ch_1539) -1);
CDataStream stream_1539(vch_1539, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1539;
stream_1539 >> txHist_1539;

if(block.vtx[0]->GetHash() == txHist_1539.GetHash() && nHeight == 1263656) {
return true;
}
unsigned char ch_1540[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x11, 0x49, 0x13, 0x04, 0xc3, 0x81, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc9, 0x86, 0x48, 0x00, 0x00, 0x02, 0xec, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc9, 0x95, 0x10, 0x00, 0x00, 0x00, 0x00, 0x01, 0xbe, 0x3d, 0xf8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfc, 0x9c, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1540(ch_1540, ch_1540 + sizeof(ch_1540) -1);
CDataStream stream_1540(vch_1540, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1540;
stream_1540 >> txHist_1540;

if(block.vtx[0]->GetHash() == txHist_1540.GetHash() && nHeight == 1263889) {
return true;
}
unsigned char ch_1541[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x24, 0x48, 0x13, 0x04, 0x1a, 0x30, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf8, 0xd2, 0x8f, 0xc1, 0xf7, 0xd3, 0xdd, 0xf8, 0x41, 0xe0, 0x22, 0xca, 0x8a, 0x07, 0x51, 0xfe, 0xd7, 0x10, 0x69, 0x00, 0xba, 0xcf, 0x5f, 0x88, 0x8e, 0xc4, 0xff, 0x50, 0x1f, 0xae, 0xa9, 0xed, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfb, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1541(ch_1541, ch_1541 + sizeof(ch_1541) -1);
CDataStream stream_1541(vch_1541, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1541;
stream_1541 >> txHist_1541;

if(block.vtx[0]->GetHash() == txHist_1541.GetHash() && nHeight == 1263652) {
return true;
}
unsigned char ch_1542[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x10, 0x49, 0x13, 0x04, 0x9e, 0x81, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc8, 0xff, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfd, 0x8f, 0x1a, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x40, 0xb5, 0x77, 0xb9, 0x6f, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xbf, 0xe0, 0x3a, 0x14, 0x78, 0x66, 0xbb, 0xce, 0x2a, 0x0d, 0x07, 0xec, 0xcd, 0x00, 0x16, 0xe4, 0x05, 0xfe, 0x04, 0x8b, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1542(ch_1542, ch_1542 + sizeof(ch_1542) -1);
CDataStream stream_1542(vch_1542, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1542;
stream_1542 >> txHist_1542;

if(block.vtx[0]->GetHash() == txHist_1542.GetHash() && nHeight == 1263888) {
return true;
}
unsigned char ch_1543[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf8, 0x48, 0x13, 0x04, 0x25, 0x70, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x3e, 0xee, 0xcd, 0x04, 0xa1, 0x39, 0x84, 0x26, 0x72, 0x12, 0x3d, 0x46, 0x61, 0x78, 0x2a, 0x9a, 0x5f, 0xcc, 0xd2, 0xef, 0x64, 0x70, 0x65, 0x09, 0x74, 0x4d, 0x20, 0x61, 0x6c, 0x44, 0x7b, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x07, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1543(ch_1543, ch_1543 + sizeof(ch_1543) -1);
CDataStream stream_1543(vch_1543, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1543;
stream_1543 >> txHist_1543;

if(block.vtx[0]->GetHash() == txHist_1543.GetHash() && nHeight == 1263864) {
return true;
}
unsigned char ch_1544[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x20, 0x48, 0x13, 0x04, 0x10, 0x2f, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x69, 0x99, 0x4b, 0xd9, 0xe3, 0xb0, 0x95, 0xa2, 0xce, 0x10, 0xdc, 0xa8, 0x16, 0x89, 0x8b, 0x53, 0xed, 0x73, 0x84, 0x19, 0x7d, 0x93, 0xf1, 0x70, 0x83, 0x2c, 0x4a, 0x25, 0x12, 0x84, 0x4f, 0x9a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1544(ch_1544, ch_1544 + sizeof(ch_1544) -1);
CDataStream stream_1544(vch_1544, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1544;
stream_1544 >> txHist_1544;

if(block.vtx[0]->GetHash() == txHist_1544.GetHash() && nHeight == 1263648) {
return true;
}
unsigned char ch_1545[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x0b, 0x49, 0x13, 0x04, 0x45, 0x80, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd1, 0x9f, 0x52, 0x75, 0x9b, 0xa5, 0xcc, 0x96, 0x59, 0xca, 0xa0, 0x70, 0x8e, 0x99, 0x40, 0xe5, 0x10, 0x60, 0xfa, 0x9c, 0x45, 0x79, 0xd3, 0x32, 0xb4, 0x95, 0xb3, 0x7a, 0xe1, 0xd7, 0x18, 0x8c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x03, 0x80, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1545(ch_1545, ch_1545 + sizeof(ch_1545) -1);
CDataStream stream_1545(vch_1545, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1545;
stream_1545 >> txHist_1545;

if(block.vtx[0]->GetHash() == txHist_1545.GetHash() && nHeight == 1263883) {
return true;
}
unsigned char ch_1546[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1b, 0x48, 0x13, 0x04, 0x2f, 0x2c, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x41, 0x8a, 0xe5, 0x6e, 0x57, 0xdf, 0x21, 0x3f, 0xca, 0xdd, 0xd6, 0x41, 0xca, 0x12, 0x99, 0xcd, 0x8a, 0xe4, 0x23, 0xfe, 0xa0, 0x36, 0xef, 0x6b, 0x38, 0x22, 0x7f, 0x49, 0x3b, 0x82, 0xe1, 0x89, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xff, 0xfc, 0xc6, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1546(ch_1546, ch_1546 + sizeof(ch_1546) -1);
CDataStream stream_1546(vch_1546, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1546;
stream_1546 >> txHist_1546;

if(block.vtx[0]->GetHash() == txHist_1546.GetHash() && nHeight == 1263643) {
return true;
}
unsigned char ch_1547[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x0a, 0x49, 0x13, 0x04, 0x44, 0x80, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd1, 0x9f, 0x52, 0x75, 0x9b, 0xa5, 0xcc, 0x96, 0x59, 0xca, 0xa0, 0x70, 0x8e, 0x99, 0x40, 0xe5, 0x10, 0x60, 0xfa, 0x9c, 0x45, 0x79, 0xd3, 0x32, 0xb4, 0x95, 0xb3, 0x7a, 0xe1, 0xd7, 0x18, 0x8c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xa1, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1547(ch_1547, ch_1547 + sizeof(ch_1547) -1);
CDataStream stream_1547(vch_1547, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1547;
stream_1547 >> txHist_1547;

if(block.vtx[0]->GetHash() == txHist_1547.GetHash() && nHeight == 1263882) {
return true;
}
unsigned char ch_1548[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xef, 0x48, 0x13, 0x04, 0x3b, 0x6e, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x20, 0xcd, 0x41, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x20, 0x81, 0xcc, 0xc4, 0x59, 0xaf, 0xc3, 0x8f, 0x99, 0xe5, 0xa4, 0x86, 0xb2, 0xd9, 0xb7, 0x17, 0xf0, 0x65, 0xa6, 0xba, 0x1a, 0x79, 0xfe, 0xbc, 0x03, 0x33, 0xe3, 0xab, 0xfe, 0x78, 0x96, 0x91, 0x90, 0xe6, 0x65, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1548(ch_1548, ch_1548 + sizeof(ch_1548) -1);
CDataStream stream_1548(vch_1548, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1548;
stream_1548 >> txHist_1548;

if(block.vtx[0]->GetHash() == txHist_1548.GetHash() && nHeight == 1263855) {
return true;
}
unsigned char ch_1549[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x17, 0x48, 0x13, 0x04, 0xe4, 0x2a, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x07, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xf2, 0xf2, 0x67, 0x44, 0xd0, 0x25, 0x32, 0xef, 0x1e, 0x84, 0x79, 0x07, 0xca, 0x94, 0x5d, 0x94, 0x19, 0x66, 0x52, 0x20, 0xb8, 0x42, 0x13, 0x25, 0x1d, 0x18, 0x03, 0x14, 0xd4, 0xc8, 0xb9, 0xf0, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1549(ch_1549, ch_1549 + sizeof(ch_1549) -1);
CDataStream stream_1549(vch_1549, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1549;
stream_1549 >> txHist_1549;

if(block.vtx[0]->GetHash() == txHist_1549.GetHash() && nHeight == 1263639) {
return true;
}
unsigned char ch_1550[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x13, 0x48, 0x13, 0x04, 0x95, 0x28, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x14, 0x69, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1550(ch_1550, ch_1550 + sizeof(ch_1550) -1);
CDataStream stream_1550(vch_1550, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1550;
stream_1550 >> txHist_1550;

if(block.vtx[0]->GetHash() == txHist_1550.GetHash() && nHeight == 1263635) {
return true;
}
unsigned char ch_1551[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x08, 0x49, 0x13, 0x04, 0x13, 0x80, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x07, 0x61, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x8b, 0xfd, 0xc0, 0x25, 0xaf, 0x8c, 0x7d, 0xfc, 0x7a, 0x27, 0x8d, 0xaa, 0xb4, 0xa1, 0xc4, 0x89, 0xdd, 0xa1, 0xc9, 0x5c, 0x54, 0xab, 0x5e, 0x9f, 0x0a, 0x06, 0xdd, 0x11, 0xea, 0x59, 0x61, 0xa9, 0x70, 0x5f, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1551(ch_1551, ch_1551 + sizeof(ch_1551) -1);
CDataStream stream_1551(vch_1551, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1551;
stream_1551 >> txHist_1551;

if(block.vtx[0]->GetHash() == txHist_1551.GetHash() && nHeight == 1263880) {
return true;
}
unsigned char ch_1552[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x07, 0x49, 0x13, 0x04, 0x80, 0x7f, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x13, 0xd9, 0x11, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xf8, 0x68, 0xad, 0xae, 0xed, 0x68, 0xed, 0x04, 0xd4, 0x2d, 0x3e, 0xc7, 0x7f, 0x6b, 0xcc, 0xd1, 0xea, 0x09, 0x46, 0xf2, 0xd4, 0xb5, 0x8f, 0x4f, 0x21, 0xf8, 0x59, 0xbf, 0x70, 0xa3, 0x5d, 0x01, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1552(ch_1552, ch_1552 + sizeof(ch_1552) -1);
CDataStream stream_1552(vch_1552, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1552;
stream_1552 >> txHist_1552;

if(block.vtx[0]->GetHash() == txHist_1552.GetHash() && nHeight == 1263879) {
return true;
}
unsigned char ch_1553[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x05, 0x49, 0x13, 0x04, 0x88, 0x7e, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xfb, 0x2e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x9f, 0x56, 0xa6, 0x9e, 0x14, 0x7e, 0x19, 0x4a, 0xdb, 0x31, 0x79, 0xbe, 0xaf, 0xf0, 0xcf, 0x51, 0x7d, 0x91, 0xd3, 0x64, 0x6d, 0x58, 0x8e, 0x8f, 0x24, 0x2e, 0xba, 0x99, 0x02, 0x77, 0xeb, 0xd1, 0x08, 0xe5, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1553(ch_1553, ch_1553 + sizeof(ch_1553) -1);
CDataStream stream_1553(vch_1553, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1553;
stream_1553 >> txHist_1553;

if(block.vtx[0]->GetHash() == txHist_1553.GetHash() && nHeight == 1263877) {
return true;
}
unsigned char ch_1554[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x04, 0x49, 0x13, 0x04, 0x2e, 0x7e, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xef, 0x38, 0x07, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1554(ch_1554, ch_1554 + sizeof(ch_1554) -1);
CDataStream stream_1554(vch_1554, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1554;
stream_1554 >> txHist_1554;

if(block.vtx[0]->GetHash() == txHist_1554.GetHash() && nHeight == 1263876) {
return true;
}
unsigned char ch_1555[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x03, 0x49, 0x13, 0x04, 0xe3, 0x7d, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x02, 0xa9, 0x17, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xdd, 0x84, 0x6e, 0x68, 0x8d, 0x05, 0xfb, 0x18, 0xe9, 0x88, 0x5b, 0xa5, 0xff, 0x61, 0x4a, 0xda, 0x95, 0x71, 0x55, 0x36, 0x91, 0x42, 0x4c, 0x48, 0x3b, 0x5e, 0x11, 0xfb, 0x3a, 0x23, 0xe9, 0x85, 0x98, 0xc8, 0x67, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1555(ch_1555, ch_1555 + sizeof(ch_1555) -1);
CDataStream stream_1555(vch_1555, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1555;
stream_1555 >> txHist_1555;

if(block.vtx[0]->GetHash() == txHist_1555.GetHash() && nHeight == 1263875) {
return true;
}
unsigned char ch_1556[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd9, 0x48, 0x13, 0x04, 0xd4, 0x5d, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x17, 0x7c, 0x2f, 0x9c, 0x8d, 0xce, 0x69, 0xa5, 0x09, 0x50, 0xad, 0xa7, 0xca, 0x87, 0x68, 0xdd, 0xe7, 0x5e, 0x87, 0xc2, 0xed, 0x2d, 0x6c, 0x1e, 0xd2, 0xc9, 0x7d, 0xcb, 0x1b, 0x16, 0x10, 0xc5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0x9b, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x03, 0x57, 0xbd, 0x59, 0x82, 0x23, 0x87, 0xb8, 0xef, 0x46, 0x9b, 0x36, 0xb1, 0xe1, 0xe7, 0x89, 0x81, 0x18, 0x4b, 0x64, 0x33, 0x6c, 0x0c, 0x3f, 0x4b, 0xbc, 0x69, 0xe4, 0xb9, 0x07, 0x31, 0x64, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1556(ch_1556, ch_1556 + sizeof(ch_1556) -1);
CDataStream stream_1556(vch_1556, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1556;
stream_1556 >> txHist_1556;

if(block.vtx[0]->GetHash() == txHist_1556.GetHash() && nHeight == 1263833) {
return true;
}
unsigned char ch_1557[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x02, 0x49, 0x13, 0x04, 0xa0, 0x7c, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xfa, 0x25, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1557(ch_1557, ch_1557 + sizeof(ch_1557) -1);
CDataStream stream_1557(vch_1557, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1557;
stream_1557 >> txHist_1557;

if(block.vtx[0]->GetHash() == txHist_1557.GetHash() && nHeight == 1263874) {
return true;
}
unsigned char ch_1558[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd6, 0x48, 0x13, 0x04, 0xfa, 0x5c, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x02, 0x52, 0x09, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1558(ch_1558, ch_1558 + sizeof(ch_1558) -1);
CDataStream stream_1558(vch_1558, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1558;
stream_1558 >> txHist_1558;

if(block.vtx[0]->GetHash() == txHist_1558.GetHash() && nHeight == 1263830) {
return true;
}
unsigned char ch_1559[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x01, 0x49, 0x13, 0x04, 0x7b, 0x7c, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x21, 0xbb, 0x0f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x4b, 0xf6, 0x71, 0x42, 0x9e, 0x4c, 0xe1, 0xed, 0x5b, 0xba, 0xea, 0x96, 0x0b, 0x41, 0xce, 0xd8, 0x3e, 0xfd, 0x47, 0x87, 0x65, 0x06, 0xbe, 0xcc, 0x36, 0xb7, 0xb9, 0xf0, 0xb1, 0x14, 0x74, 0x90, 0x60, 0xe7, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1559(ch_1559, ch_1559 + sizeof(ch_1559) -1);
CDataStream stream_1559(vch_1559, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1559;
stream_1559 >> txHist_1559;

if(block.vtx[0]->GetHash() == txHist_1559.GetHash() && nHeight == 1263873) {
return true;
}
unsigned char ch_1560[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd3, 0x48, 0x13, 0x04, 0x7a, 0x5c, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x2a, 0x88, 0xb9, 0x28, 0x11, 0xce, 0xb5, 0x8b, 0x9b, 0x6c, 0x23, 0xe2, 0x9d, 0xc2, 0x06, 0x08, 0x08, 0x4d, 0xd0, 0x2e, 0x1b, 0x79, 0x1c, 0xa3, 0xab, 0xc7, 0x5e, 0x9f, 0xf6, 0xef, 0xb7, 0xce, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x07, 0x2c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x11, 0xca, 0x2e, 0x2d, 0xdb, 0x52, 0x69, 0x4c, 0xad, 0x72, 0xaf, 0x93, 0x13, 0xeb, 0x12, 0xab, 0x62, 0x91, 0x04, 0x9a, 0xe3, 0x70, 0x83, 0xb6, 0x3d, 0x73, 0x90, 0xe4, 0x58, 0xc2, 0x1e, 0x72, 0x50, 0x1e, 0x64, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1560(ch_1560, ch_1560 + sizeof(ch_1560) -1);
CDataStream stream_1560(vch_1560, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1560;
stream_1560 >> txHist_1560;

if(block.vtx[0]->GetHash() == txHist_1560.GetHash() && nHeight == 1263827) {
return true;
}
unsigned char ch_1561[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xff, 0x48, 0x13, 0x04, 0xbd, 0x7b, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf8, 0x46, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1561(ch_1561, ch_1561 + sizeof(ch_1561) -1);
CDataStream stream_1561(vch_1561, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1561;
stream_1561 >> txHist_1561;

if(block.vtx[0]->GetHash() == txHist_1561.GetHash() && nHeight == 1263871) {
return true;
}
unsigned char ch_1562[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf6, 0x48, 0x13, 0x04, 0xf5, 0x6f, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa5, 0x56, 0x12, 0x72, 0x7b, 0xab, 0x75, 0xda, 0x68, 0xc5, 0xa6, 0x3d, 0x48, 0x6e, 0x8f, 0x79, 0x79, 0x89, 0x27, 0x5f, 0xd8, 0x6a, 0x81, 0xa4, 0xb7, 0x5e, 0x56, 0xc8, 0x75, 0xef, 0xee, 0xb9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x51, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1562(ch_1562, ch_1562 + sizeof(ch_1562) -1);
CDataStream stream_1562(vch_1562, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1562;
stream_1562 >> txHist_1562;

if(block.vtx[0]->GetHash() == txHist_1562.GetHash() && nHeight == 1263862) {
return true;
}
unsigned char ch_1563[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf5, 0x48, 0x13, 0x04, 0xf3, 0x6f, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xdf, 0x8c, 0x77, 0x7b, 0x0e, 0x81, 0x3a, 0xae, 0x2e, 0x17, 0x8b, 0x1a, 0xad, 0x05, 0xda, 0x50, 0x9d, 0x20, 0x72, 0xf6, 0xd8, 0x82, 0xfd, 0x96, 0x54, 0x2f, 0xb8, 0x97, 0xf5, 0x44, 0x25, 0xa4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xff, 0xff, 0xb3, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1563(ch_1563, ch_1563 + sizeof(ch_1563) -1);
CDataStream stream_1563(vch_1563, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1563;
stream_1563 >> txHist_1563;

if(block.vtx[0]->GetHash() == txHist_1563.GetHash() && nHeight == 1263861) {
return true;
}
unsigned char ch_1564[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf4, 0x48, 0x13, 0x04, 0xec, 0x6f, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xdf, 0x8c, 0x77, 0x7b, 0x0e, 0x81, 0x3a, 0xae, 0x2e, 0x17, 0x8b, 0x1a, 0xad, 0x05, 0xda, 0x50, 0x9d, 0x20, 0x72, 0xf6, 0xd8, 0x82, 0xfd, 0x96, 0x54, 0x2f, 0xb8, 0x97, 0xf5, 0x44, 0x25, 0xa4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1564(ch_1564, ch_1564 + sizeof(ch_1564) -1);
CDataStream stream_1564(vch_1564, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1564;
stream_1564 >> txHist_1564;

if(block.vtx[0]->GetHash() == txHist_1564.GetHash() && nHeight == 1263860) {
return true;
}
unsigned char ch_1565[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc3, 0x48, 0x13, 0x04, 0xf9, 0x55, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x6e, 0x76, 0xde, 0x84, 0x14, 0x33, 0x6d, 0xb3, 0x4a, 0x6b, 0x6e, 0x64, 0xba, 0x9b, 0x2f, 0x27, 0x1f, 0x5b, 0xd7, 0x34, 0x8e, 0x4f, 0x8f, 0x6d, 0x6d, 0xba, 0x52, 0xe3, 0xb8, 0x60, 0xa5, 0x29, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xf6, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1565(ch_1565, ch_1565 + sizeof(ch_1565) -1);
CDataStream stream_1565(vch_1565, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1565;
stream_1565 >> txHist_1565;

if(block.vtx[0]->GetHash() == txHist_1565.GetHash() && nHeight == 1263811) {
return true;
}
unsigned char ch_1566[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc0, 0x48, 0x13, 0x04, 0xa9, 0x55, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb3, 0x48, 0x3e, 0x08, 0x0c, 0x59, 0x1f, 0x41, 0xf2, 0x0c, 0xad, 0xcd, 0x19, 0x0e, 0x74, 0xc3, 0xfd, 0x8a, 0xf3, 0x36, 0x32, 0x26, 0x42, 0xd5, 0x73, 0x1c, 0xf1, 0xb4, 0xc7, 0xb0, 0x79, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xb4, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xcb, 0xfc, 0x59, 0x8a, 0x82, 0xae, 0xb6, 0x83, 0x30, 0x24, 0x4d, 0xb4, 0x84, 0x97, 0x36, 0x5c, 0xf2, 0x40, 0xad, 0x0a, 0xf6, 0xca, 0xd0, 0x07, 0x8f, 0x74, 0x7a, 0xb1, 0x57, 0xc8, 0x85, 0x3f, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1566(ch_1566, ch_1566 + sizeof(ch_1566) -1);
CDataStream stream_1566(vch_1566, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1566;
stream_1566 >> txHist_1566;

if(block.vtx[0]->GetHash() == txHist_1566.GetHash() && nHeight == 1263808) {
return true;
}
unsigned char ch_1567[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xbd, 0x48, 0x13, 0x04, 0x0e, 0x54, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd7, 0x7d, 0x80, 0xa2, 0xd9, 0xd4, 0x6d, 0xd8, 0xec, 0x8a, 0xc6, 0xf1, 0x35, 0xf9, 0xda, 0x99, 0xe0, 0x5f, 0xc6, 0x1f, 0x30, 0x16, 0x35, 0xdc, 0x8f, 0x99, 0x8c, 0xab, 0xfa, 0x6c, 0xd0, 0x60, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xe7, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1567(ch_1567, ch_1567 + sizeof(ch_1567) -1);
CDataStream stream_1567(vch_1567, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1567;
stream_1567 >> txHist_1567;

if(block.vtx[0]->GetHash() == txHist_1567.GetHash() && nHeight == 1263805) {
return true;
}
unsigned char ch_1568[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xba, 0x48, 0x13, 0x04, 0xb8, 0x53, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xdc, 0x5e, 0x61, 0xc3, 0xb8, 0x52, 0xc2, 0xe9, 0xbc, 0x36, 0x12, 0x3d, 0x0b, 0x14, 0xc7, 0x98, 0x09, 0x78, 0xbb, 0xa8, 0x34, 0x80, 0x17, 0x1e, 0x68, 0xc3, 0x60, 0x53, 0x4f, 0x6f, 0x01, 0x57, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xcc, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1568(ch_1568, ch_1568 + sizeof(ch_1568) -1);
CDataStream stream_1568(vch_1568, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1568;
stream_1568 >> txHist_1568;

if(block.vtx[0]->GetHash() == txHist_1568.GetHash() && nHeight == 1263802) {
return true;
}
unsigned char ch_1569[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf3, 0x48, 0x13, 0x04, 0xeb, 0x6f, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xdf, 0x8c, 0x77, 0x7b, 0x0e, 0x81, 0x3a, 0xae, 0x2e, 0x17, 0x8b, 0x1a, 0xad, 0x05, 0xda, 0x50, 0x9d, 0x20, 0x72, 0xf6, 0xd8, 0x82, 0xfd, 0x96, 0x54, 0x2f, 0xb8, 0x97, 0xf5, 0x44, 0x25, 0xa4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xff, 0x21, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1569(ch_1569, ch_1569 + sizeof(ch_1569) -1);
CDataStream stream_1569(vch_1569, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1569;
stream_1569 >> txHist_1569;

if(block.vtx[0]->GetHash() == txHist_1569.GetHash() && nHeight == 1263859) {
return true;
}
unsigned char ch_1570[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf2, 0x48, 0x13, 0x04, 0xc6, 0x6f, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf9, 0x3a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x4a, 0x87, 0x05, 0xcb, 0x92, 0xc9, 0xda, 0xce, 0x76, 0x85, 0x95, 0xb8, 0xb3, 0x12, 0xcc, 0x3b, 0xab, 0x47, 0xb2, 0x08, 0x6c, 0xcd, 0x03, 0x42, 0x97, 0xce, 0x1a, 0xbb, 0xcc, 0x5a, 0xff, 0x2f, 0xf8, 0xa6, 0x6a, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1570(ch_1570, ch_1570 + sizeof(ch_1570) -1);
CDataStream stream_1570(vch_1570, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1570;
stream_1570 >> txHist_1570;

if(block.vtx[0]->GetHash() == txHist_1570.GetHash() && nHeight == 1263858) {
return true;
}
unsigned char ch_1571[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb7, 0x48, 0x13, 0x04, 0xbf, 0x52, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x4f, 0x4a, 0x81, 0x51, 0xf7, 0x86, 0x63, 0x51, 0xc7, 0xcc, 0x3f, 0x58, 0x94, 0x21, 0x5a, 0x2f, 0x99, 0x8d, 0x60, 0xdd, 0xfc, 0xe7, 0x2f, 0x95, 0x88, 0xc7, 0xbb, 0xf1, 0x15, 0xc4, 0x49, 0xbc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xed, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1571(ch_1571, ch_1571 + sizeof(ch_1571) -1);
CDataStream stream_1571(vch_1571, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1571;
stream_1571 >> txHist_1571;

if(block.vtx[0]->GetHash() == txHist_1571.GetHash() && nHeight == 1263799) {
return true;
}
unsigned char ch_1572[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf0, 0x48, 0x13, 0x04, 0xcd, 0x6e, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x22, 0x76, 0x12, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1572(ch_1572, ch_1572 + sizeof(ch_1572) -1);
CDataStream stream_1572(vch_1572, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1572;
stream_1572 >> txHist_1572;

if(block.vtx[0]->GetHash() == txHist_1572.GetHash() && nHeight == 1263856) {
return true;
}
unsigned char ch_1573[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xe9, 0x48, 0x13, 0x04, 0x3f, 0x6a, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x21, 0xbe, 0x0e, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x92, 0x5a, 0x83, 0xc8, 0xff, 0x02, 0x00, 0x91, 0x84, 0xc4, 0xb3, 0xae, 0xc2, 0x76, 0xe9, 0x78, 0x80, 0xbb, 0x52, 0x0b, 0xb9, 0x3e, 0xd1, 0x96, 0x52, 0x96, 0x85, 0xa9, 0xcb, 0x4f, 0x8f, 0x00, 0xf0, 0x5e, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1573(ch_1573, ch_1573 + sizeof(ch_1573) -1);
CDataStream stream_1573(vch_1573, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1573;
stream_1573 >> txHist_1573;

if(block.vtx[0]->GetHash() == txHist_1573.GetHash() && nHeight == 1263849) {
return true;
}
unsigned char ch_1574[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xaf, 0x48, 0x13, 0x04, 0x58, 0x51, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc8, 0x53, 0xd4, 0x4e, 0x81, 0x28, 0xad, 0x12, 0xa1, 0x26, 0x2e, 0xaa, 0x25, 0x2f, 0x44, 0x5a, 0x0b, 0x83, 0x49, 0xde, 0xd2, 0xcc, 0x56, 0x44, 0x0f, 0x16, 0xe5, 0x22, 0xb7, 0x09, 0x74, 0x9c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x1e, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1574(ch_1574, ch_1574 + sizeof(ch_1574) -1);
CDataStream stream_1574(vch_1574, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1574;
stream_1574 >> txHist_1574;

if(block.vtx[0]->GetHash() == txHist_1574.GetHash() && nHeight == 1263791) {
return true;
}
unsigned char ch_1575[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xaa, 0x48, 0x13, 0x04, 0xee, 0x4f, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x27, 0xc2, 0x06, 0xd8, 0xc0, 0xf5, 0xd7, 0xcd, 0xf2, 0xe0, 0x1e, 0x9c, 0x27, 0x12, 0xa5, 0x8f, 0xa4, 0xcd, 0xad, 0xc5, 0x3e, 0x2e, 0x44, 0x0f, 0x08, 0xb8, 0xf0, 0x04, 0x67, 0x5f, 0x03, 0x45, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xa2, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1575(ch_1575, ch_1575 + sizeof(ch_1575) -1);
CDataStream stream_1575(vch_1575, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1575;
stream_1575 >> txHist_1575;

if(block.vtx[0]->GetHash() == txHist_1575.GetHash() && nHeight == 1263786) {
return true;
}
unsigned char ch_1576[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa5, 0x48, 0x13, 0x04, 0x08, 0x4e, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x10, 0x6f, 0xc0, 0x1f, 0xb7, 0x6a, 0xc8, 0xdb, 0xe2, 0x8b, 0x94, 0x47, 0x71, 0x40, 0x01, 0x2a, 0x83, 0x9d, 0xa2, 0x19, 0x47, 0x11, 0x29, 0x57, 0xe3, 0x68, 0x28, 0xbc, 0x27, 0xad, 0xf4, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x3c, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1576(ch_1576, ch_1576 + sizeof(ch_1576) -1);
CDataStream stream_1576(vch_1576, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1576;
stream_1576 >> txHist_1576;

if(block.vtx[0]->GetHash() == txHist_1576.GetHash() && nHeight == 1263781) {
return true;
}
unsigned char ch_1577[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa0, 0x48, 0x13, 0x04, 0xfd, 0x4c, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x06, 0x1c, 0xd1, 0x7f, 0x43, 0x0a, 0x41, 0x80, 0x56, 0x67, 0x7c, 0x1e, 0x20, 0x8c, 0x3a, 0x8d, 0x77, 0x67, 0x8b, 0x7b, 0x43, 0x57, 0xe8, 0x20, 0x56, 0x3a, 0xbb, 0x5f, 0x2f, 0x5c, 0xba, 0xd6, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x06, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa9, 0x5f, 0x60, 0x73, 0x8c, 0xc5, 0x7f, 0x34, 0x66, 0xd7, 0x17, 0x3b, 0x9e, 0xb1, 0x0d, 0x90, 0x8c, 0x24, 0xbd, 0x8f, 0xab, 0x7b, 0xc8, 0x60, 0xcc, 0xdf, 0xfe, 0x19, 0xc3, 0x99, 0x82, 0x20, 0x00, 0x43, 0x67, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1577(ch_1577, ch_1577 + sizeof(ch_1577) -1);
CDataStream stream_1577(vch_1577, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1577;
stream_1577 >> txHist_1577;

if(block.vtx[0]->GetHash() == txHist_1577.GetHash() && nHeight == 1263776) {
return true;
}
unsigned char ch_1578[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9c, 0x48, 0x13, 0x04, 0x56, 0x4b, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd5, 0x21, 0x1a, 0xed, 0xb7, 0xbb, 0x49, 0x18, 0x50, 0x7c, 0xc4, 0xfa, 0xe9, 0xc1, 0x05, 0x1e, 0x2b, 0xf3, 0xad, 0x9d, 0x0a, 0x87, 0xe3, 0x21, 0x82, 0x88, 0x31, 0x07, 0xb8, 0xb8, 0xa0, 0xfd, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0xb7, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1578(ch_1578, ch_1578 + sizeof(ch_1578) -1);
CDataStream stream_1578(vch_1578, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1578;
stream_1578 >> txHist_1578;

if(block.vtx[0]->GetHash() == txHist_1578.GetHash() && nHeight == 1263772) {
return true;
}
unsigned char ch_1579[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x98, 0x48, 0x13, 0x04, 0xb2, 0x4a, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x03, 0xee, 0x6d, 0x60, 0xb1, 0xe7, 0x30, 0xdb, 0xc9, 0xb0, 0xc2, 0xba, 0xd0, 0x85, 0x78, 0x7d, 0xda, 0xbf, 0x64, 0x0c, 0xd9, 0x45, 0x79, 0xc8, 0x80, 0xee, 0x60, 0x4c, 0x50, 0xb6, 0xa5, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x96, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xa1, 0x9c, 0x4b, 0xb4, 0xc1, 0x74, 0x1f, 0x66, 0x14, 0x53, 0xd1, 0x35, 0x40, 0x89, 0x7a, 0x5b, 0x24, 0x18, 0xaa, 0x84, 0x73, 0xd4, 0xca, 0x19, 0x4f, 0xda, 0x9f, 0x6d, 0x5d, 0x68, 0x1a, 0x61, 0x60, 0xfa, 0x63, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1579(ch_1579, ch_1579 + sizeof(ch_1579) -1);
CDataStream stream_1579(vch_1579, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1579;
stream_1579 >> txHist_1579;

if(block.vtx[0]->GetHash() == txHist_1579.GetHash() && nHeight == 1263768) {
return true;
}
unsigned char ch_1580[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xde, 0x48, 0x13, 0x04, 0xa5, 0x62, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa9, 0x3d, 0x6b, 0xb7, 0x96, 0x8b, 0xce, 0xb3, 0x79, 0x14, 0xdf, 0xbd, 0x43, 0xe8, 0xb3, 0xa8, 0xe4, 0xaf, 0x4a, 0x3a, 0x3f, 0x15, 0x41, 0x13, 0x0e, 0x19, 0x15, 0xea, 0x8e, 0x29, 0x9e, 0x8d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0xff, 0xff, 0xfe, 0x11, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1580(ch_1580, ch_1580 + sizeof(ch_1580) -1);
CDataStream stream_1580(vch_1580, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1580;
stream_1580 >> txHist_1580;

if(block.vtx[0]->GetHash() == txHist_1580.GetHash() && nHeight == 1263838) {
return true;
}
unsigned char ch_1581[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xda, 0x48, 0x13, 0x04, 0x07, 0x5e, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x80, 0xe9, 0x09, 0x95, 0xfa, 0xda, 0x25, 0x95, 0x44, 0x86, 0x36, 0x8c, 0x6b, 0x44, 0x55, 0x81, 0x68, 0xa9, 0xcb, 0x72, 0x83, 0xfd, 0x12, 0xd0, 0xa6, 0xd4, 0x77, 0x48, 0xb9, 0xf7, 0xb8, 0x0a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xc1, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1581(ch_1581, ch_1581 + sizeof(ch_1581) -1);
CDataStream stream_1581(vch_1581, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1581;
stream_1581 >> txHist_1581;

if(block.vtx[0]->GetHash() == txHist_1581.GetHash() && nHeight == 1263834) {
return true;
}
unsigned char ch_1582[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd7, 0x48, 0x13, 0x04, 0x0e, 0x5d, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7c, 0x7f, 0xe2, 0xb3, 0xa3, 0x99, 0xc3, 0x0a, 0x4b, 0xbd, 0x8e, 0x06, 0xbd, 0x6f, 0xd8, 0xcb, 0xe5, 0xad, 0x9b, 0xd2, 0x9a, 0x88, 0x7f, 0x1a, 0x73, 0x5f, 0xe2, 0x2e, 0x8d, 0x7a, 0x51, 0xec, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0x96, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1582(ch_1582, ch_1582 + sizeof(ch_1582) -1);
CDataStream stream_1582(vch_1582, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1582;
stream_1582 >> txHist_1582;

if(block.vtx[0]->GetHash() == txHist_1582.GetHash() && nHeight == 1263831) {
return true;
}
unsigned char ch_1583[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd4, 0x48, 0x13, 0x04, 0xcb, 0x5c, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xec, 0xf7, 0x86, 0x86, 0x83, 0xae, 0x11, 0x4e, 0xa2, 0x94, 0xe1, 0x75, 0x75, 0xd5, 0x37, 0xe0, 0x55, 0x86, 0x36, 0x86, 0x2e, 0x9c, 0x01, 0xb9, 0x5b, 0xa6, 0x0f, 0xc5, 0x07, 0x66, 0x29, 0x8e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xa7, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x70, 0x6e, 0x03, 0x39, 0xab, 0x08, 0x63, 0x75, 0x07, 0x1f, 0x1c, 0x20, 0x6f, 0xcf, 0xa3, 0x27, 0x9f, 0x82, 0x7b, 0x90, 0x2e, 0x2c, 0x81, 0x57, 0x97, 0x8d, 0x60, 0xb0, 0x4f, 0xe0, 0xc1, 0x68, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1583(ch_1583, ch_1583 + sizeof(ch_1583) -1);
CDataStream stream_1583(vch_1583, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1583;
stream_1583 >> txHist_1583;

if(block.vtx[0]->GetHash() == txHist_1583.GetHash() && nHeight == 1263828) {
return true;
}
unsigned char ch_1584[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd0, 0x48, 0x13, 0x04, 0x7d, 0x5a, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x76, 0x21, 0xc3, 0x02, 0xda, 0xc2, 0x32, 0x05, 0xea, 0x06, 0x38, 0x14, 0x08, 0xd9, 0xba, 0xf1, 0xbd, 0x37, 0xdf, 0xfa, 0x4b, 0x3a, 0x56, 0xd4, 0x36, 0xaf, 0x02, 0xa9, 0x29, 0x88, 0x24, 0xc8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xc1, 0x2a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x3c, 0x1f, 0x35, 0x0f, 0xb3, 0xca, 0xda, 0xed, 0xc3, 0x7b, 0x71, 0x71, 0x80, 0x41, 0x33, 0x3d, 0x2b, 0x34, 0x44, 0x3e, 0x9c, 0x6a, 0x16, 0x62, 0x18, 0x4c, 0xf9, 0x49, 0x84, 0xf8, 0x6d, 0xf9, 0xa8, 0x1b, 0x69, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1584(ch_1584, ch_1584 + sizeof(ch_1584) -1);
CDataStream stream_1584(vch_1584, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1584;
stream_1584 >> txHist_1584;

if(block.vtx[0]->GetHash() == txHist_1584.GetHash() && nHeight == 1263824) {
return true;
}
unsigned char ch_1585[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xce, 0x48, 0x13, 0x04, 0x62, 0x59, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x31, 0xfb, 0xdd, 0xc6, 0xc6, 0x62, 0x1b, 0x1f, 0xd1, 0xbc, 0x79, 0xee, 0x27, 0xc0, 0x21, 0xc6, 0x99, 0x33, 0x0b, 0xba, 0x54, 0x4f, 0x26, 0x85, 0xf8, 0xa7, 0xdb, 0x37, 0xcf, 0xfc, 0xda, 0x65, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0x5f, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1585(ch_1585, ch_1585 + sizeof(ch_1585) -1);
CDataStream stream_1585(vch_1585, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1585;
stream_1585 >> txHist_1585;

if(block.vtx[0]->GetHash() == txHist_1585.GetHash() && nHeight == 1263822) {
return true;
}
unsigned char ch_1586[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x94, 0x48, 0x13, 0x04, 0xab, 0x49, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x67, 0x5d, 0x2d, 0x6d, 0x3a, 0xd0, 0x09, 0xf4, 0xd1, 0x41, 0xdc, 0xfd, 0xd3, 0xb5, 0xee, 0x49, 0x1b, 0x18, 0xb8, 0x45, 0x71, 0x79, 0x21, 0xb5, 0xa4, 0x2f, 0x09, 0x52, 0x0e, 0xae, 0x27, 0xae, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01, 0x58, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1586(ch_1586, ch_1586 + sizeof(ch_1586) -1);
CDataStream stream_1586(vch_1586, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1586;
stream_1586 >> txHist_1586;

if(block.vtx[0]->GetHash() == txHist_1586.GetHash() && nHeight == 1263764) {
return true;
}
unsigned char ch_1587[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xcc, 0x48, 0x13, 0x04, 0xf9, 0x58, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd9, 0xc5, 0x11, 0x0b, 0x97, 0x58, 0x01, 0xe5, 0x36, 0x1d, 0x12, 0x31, 0xd9, 0x68, 0x15, 0x5d, 0xec, 0x36, 0x33, 0x87, 0x42, 0x61, 0xf8, 0x52, 0xd2, 0x40, 0xcb, 0x1d, 0x5c, 0x51, 0x9c, 0xf9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xed, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x31, 0x03, 0x18, 0xe2, 0x3d, 0x6c, 0x67, 0x5b, 0x87, 0xd9, 0xaa, 0x1f, 0x95, 0xcf, 0x0e, 0x4e, 0x39, 0x83, 0xd6, 0x55, 0x65, 0x4d, 0xe6, 0xd3, 0x7b, 0xb7, 0xfb, 0xf5, 0x5c, 0x79, 0xd4, 0x54, 0x80, 0x5b, 0x65, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1587(ch_1587, ch_1587 + sizeof(ch_1587) -1);
CDataStream stream_1587(vch_1587, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1587;
stream_1587 >> txHist_1587;

if(block.vtx[0]->GetHash() == txHist_1587.GetHash() && nHeight == 1263820) {
return true;
}
unsigned char ch_1588[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xca, 0x48, 0x13, 0x04, 0x5e, 0x58, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbe, 0x28, 0xf0, 0x1c, 0x8c, 0x87, 0xea, 0xe2, 0xf4, 0xf1, 0xd8, 0x47, 0x47, 0x5c, 0xca, 0xab, 0xad, 0x65, 0xe5, 0xb4, 0x99, 0x91, 0x92, 0x3a, 0x4c, 0xea, 0x57, 0x0e, 0x0f, 0x5f, 0x74, 0xd3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0x97, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xb3, 0x67, 0x56, 0xe7, 0xfa, 0x7a, 0x58, 0x9e, 0xb4, 0xed, 0x20, 0x18, 0xd4, 0x06, 0x36, 0x80, 0x2b, 0x50, 0x6e, 0x9f, 0xe1, 0x91, 0xba, 0x76, 0x25, 0xf2, 0x6a, 0xb5, 0xdd, 0xf0, 0xdc, 0xb9, 0x10, 0x94, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1588(ch_1588, ch_1588 + sizeof(ch_1588) -1);
CDataStream stream_1588(vch_1588, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1588;
stream_1588 >> txHist_1588;

if(block.vtx[0]->GetHash() == txHist_1588.GetHash() && nHeight == 1263818) {
return true;
}
unsigned char ch_1589[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc8, 0x48, 0x13, 0x04, 0x2a, 0x58, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbe, 0x28, 0xf0, 0x1c, 0x8c, 0x87, 0xea, 0xe2, 0xf4, 0xf1, 0xd8, 0x47, 0x47, 0x5c, 0xca, 0xab, 0xad, 0x65, 0xe5, 0xb4, 0x99, 0x91, 0x92, 0x3a, 0x4c, 0xea, 0x57, 0x0e, 0x0f, 0x5f, 0x74, 0xd3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x36, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x36, 0xbc, 0x19, 0x25, 0xcd, 0xc8, 0x0c, 0x87, 0xc2, 0x73, 0xda, 0x84, 0x64, 0x9a, 0xd9, 0xa4, 0x08, 0xf5, 0xc2, 0xfd, 0xd5, 0xe9, 0xa9, 0x0c, 0xd8, 0x31, 0xe9, 0x26, 0x1b, 0x87, 0xb7, 0xfe, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1589(ch_1589, ch_1589 + sizeof(ch_1589) -1);
CDataStream stream_1589(vch_1589, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1589;
stream_1589 >> txHist_1589;

if(block.vtx[0]->GetHash() == txHist_1589.GetHash() && nHeight == 1263816) {
return true;
}
unsigned char ch_1590[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc6, 0x48, 0x13, 0x04, 0x09, 0x57, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xcf, 0x0d, 0x54, 0x81, 0x9d, 0xe0, 0xd9, 0x8d, 0xd1, 0xea, 0x2e, 0xbe, 0x8f, 0xde, 0x09, 0x7d, 0x85, 0xaf, 0x70, 0x2e, 0x63, 0x0c, 0x0f, 0x45, 0x95, 0xac, 0x35, 0x2d, 0x1e, 0xc3, 0xcf, 0x5c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x0c, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x8e, 0x53, 0x59, 0x76, 0xb2, 0xad, 0x8b, 0xe4, 0x89, 0xd5, 0x5a, 0xa4, 0x2a, 0xb3, 0xbb, 0x80, 0x82, 0x62, 0x78, 0xcb, 0xc2, 0x4d, 0x24, 0x56, 0xf5, 0xa7, 0xac, 0xbf, 0x61, 0xf3, 0xd9, 0x5f, 0x20, 0x00, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1590(ch_1590, ch_1590 + sizeof(ch_1590) -1);
CDataStream stream_1590(vch_1590, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1590;
stream_1590 >> txHist_1590;

if(block.vtx[0]->GetHash() == txHist_1590.GetHash() && nHeight == 1263814) {
return true;
}
unsigned char ch_1591[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc4, 0x48, 0x13, 0x04, 0x23, 0x56, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xdc, 0x50, 0x70, 0x13, 0xcb, 0x81, 0xa5, 0xe9, 0x9a, 0xa9, 0x7b, 0x95, 0x14, 0x07, 0x62, 0x95, 0xb1, 0x10, 0x7f, 0x14, 0x74, 0x54, 0xe7, 0x51, 0x11, 0x71, 0xb3, 0x5c, 0x72, 0x09, 0x32, 0xa2, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0xb9, 0x11, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x46, 0x1f, 0x96, 0xb4, 0x81, 0x58, 0x04, 0x0f, 0x4e, 0x17, 0x41, 0x15, 0x43, 0x62, 0x4c, 0xf1, 0x9d, 0xef, 0xc2, 0x14, 0x70, 0x9b, 0x7a, 0xf1, 0x92, 0x62, 0x37, 0xcb, 0x0a, 0xf0, 0x55, 0x9b, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1591(ch_1591, ch_1591 + sizeof(ch_1591) -1);
CDataStream stream_1591(vch_1591, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1591;
stream_1591 >> txHist_1591;

if(block.vtx[0]->GetHash() == txHist_1591.GetHash() && nHeight == 1263812) {
return true;
}
unsigned char ch_1592[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc1, 0x48, 0x13, 0x04, 0xb7, 0x55, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb3, 0x48, 0x3e, 0x08, 0x0c, 0x59, 0x1f, 0x41, 0xf2, 0x0c, 0xad, 0xcd, 0x19, 0x0e, 0x74, 0xc3, 0xfd, 0x8a, 0xf3, 0x36, 0x32, 0x26, 0x42, 0xd5, 0x73, 0x1c, 0xf1, 0xb4, 0xc7, 0xb0, 0x79, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x09, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1592(ch_1592, ch_1592 + sizeof(ch_1592) -1);
CDataStream stream_1592(vch_1592, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1592;
stream_1592 >> txHist_1592;

if(block.vtx[0]->GetHash() == txHist_1592.GetHash() && nHeight == 1263809) {
return true;
}
unsigned char ch_1593[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xbe, 0x48, 0x13, 0x04, 0x41, 0x54, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x47, 0x78, 0xdb, 0xa5, 0x5a, 0xde, 0x69, 0xff, 0x7b, 0x66, 0xfc, 0x44, 0x58, 0x36, 0xdd, 0xe2, 0x86, 0x4e, 0xe6, 0x74, 0x78, 0x25, 0x74, 0x67, 0x68, 0xc2, 0xf0, 0x90, 0x4a, 0xcf, 0xa8, 0xe1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x42, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1593(ch_1593, ch_1593 + sizeof(ch_1593) -1);
CDataStream stream_1593(vch_1593, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1593;
stream_1593 >> txHist_1593;

if(block.vtx[0]->GetHash() == txHist_1593.GetHash() && nHeight == 1263806) {
return true;
}
unsigned char ch_1594[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb8, 0x48, 0x13, 0x04, 0xe5, 0x52, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x4f, 0x4a, 0x81, 0x51, 0xf7, 0x86, 0x63, 0x51, 0xc7, 0xcc, 0x3f, 0x58, 0x94, 0x21, 0x5a, 0x2f, 0x99, 0x8d, 0x60, 0xdd, 0xfc, 0xe7, 0x2f, 0x95, 0x88, 0xc7, 0xbb, 0xf1, 0x15, 0xc4, 0x49, 0xbc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xa7, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1594(ch_1594, ch_1594 + sizeof(ch_1594) -1);
CDataStream stream_1594(vch_1594, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1594;
stream_1594 >> txHist_1594;

if(block.vtx[0]->GetHash() == txHist_1594.GetHash() && nHeight == 1263800) {
return true;
}
unsigned char ch_1595[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9a, 0x48, 0x13, 0x04, 0x1b, 0x4b, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd6, 0x92, 0x5e, 0x99, 0xee, 0xd8, 0x0d, 0xe8, 0x00, 0xd7, 0x0d, 0x2c, 0xf5, 0xaf, 0xc3, 0x35, 0xca, 0x18, 0x45, 0x7a, 0xb5, 0x9a, 0xf1, 0x03, 0xba, 0xd8, 0x07, 0x7c, 0x96, 0x98, 0xf0, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xed, 0x1a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1595(ch_1595, ch_1595 + sizeof(ch_1595) -1);
CDataStream stream_1595(vch_1595, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1595;
stream_1595 >> txHist_1595;

if(block.vtx[0]->GetHash() == txHist_1595.GetHash() && nHeight == 1263770) {
return true;
}
unsigned char ch_1596[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x6c, 0x48, 0x13, 0x04, 0xfc, 0x3e, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x97, 0x68, 0xb2, 0x23, 0x46, 0x05, 0x17, 0x6d, 0x5c, 0xea, 0xcc, 0x20, 0x1b, 0x1b, 0x84, 0xc9, 0x6f, 0xdc, 0x5f, 0x31, 0x7d, 0x82, 0x58, 0xc1, 0x70, 0x0e, 0x63, 0x71, 0x14, 0x50, 0xe6, 0xa3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x0a, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1596(ch_1596, ch_1596 + sizeof(ch_1596) -1);
CDataStream stream_1596(vch_1596, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1596;
stream_1596 >> txHist_1596;

if(block.vtx[0]->GetHash() == txHist_1596.GetHash() && nHeight == 1263724) {
return true;
}
unsigned char ch_1597[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x69, 0x48, 0x13, 0x04, 0xaa, 0x3d, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x55, 0x3f, 0xcc, 0xfa, 0x17, 0xac, 0x29, 0xb9, 0x95, 0x39, 0x80, 0xe4, 0x4f, 0x62, 0xa8, 0x26, 0x05, 0x9d, 0x76, 0x8d, 0x78, 0xcc, 0xf3, 0xbf, 0xf2, 0x2a, 0x2e, 0x23, 0x89, 0xc6, 0x3e, 0xe3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x1c, 0x27, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xb9, 0x45, 0x04, 0x2e, 0x81, 0x8e, 0xd9, 0x99, 0x2d, 0xc1, 0x22, 0xe3, 0x89, 0xdd, 0x77, 0xb8, 0x4f, 0x2e, 0xc2, 0x18, 0xb8, 0x1c, 0xd6, 0x12, 0xcd, 0x75, 0x5f, 0x00, 0xf2, 0x95, 0xe7, 0xad, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1597(ch_1597, ch_1597 + sizeof(ch_1597) -1);
CDataStream stream_1597(vch_1597, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1597;
stream_1597 >> txHist_1597;

if(block.vtx[0]->GetHash() == txHist_1597.GetHash() && nHeight == 1263721) {
return true;
}
unsigned char ch_1598[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x66, 0x48, 0x13, 0x04, 0x1b, 0x3d, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x03, 0xce, 0x41, 0x86, 0x76, 0x87, 0xad, 0x9d, 0x65, 0x48, 0x95, 0xe4, 0xc8, 0xc7, 0xd7, 0x98, 0xe4, 0xa6, 0x2d, 0x1f, 0xd8, 0x53, 0xed, 0xac, 0x56, 0x5a, 0x91, 0x77, 0xc3, 0x27, 0x93, 0x79, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x4c, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1598(ch_1598, ch_1598 + sizeof(ch_1598) -1);
CDataStream stream_1598(vch_1598, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1598;
stream_1598 >> txHist_1598;

if(block.vtx[0]->GetHash() == txHist_1598.GetHash() && nHeight == 1263718) {
return true;
}
unsigned char ch_1599[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x63, 0x48, 0x13, 0x04, 0xa5, 0x3c, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xec, 0x95, 0x44, 0x24, 0xf5, 0x19, 0x82, 0xc5, 0x5f, 0x77, 0xbf, 0xc5, 0x28, 0xfe, 0x3e, 0x53, 0x65, 0xb3, 0xa9, 0x5a, 0x35, 0xf1, 0x90, 0x99, 0x0e, 0xb8, 0xc9, 0xf0, 0xa1, 0x3f, 0x5c, 0x09, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x51, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x38, 0x0f, 0xf8, 0x6f, 0xf1, 0xbf, 0xee, 0xa7, 0xa1, 0x8c, 0x87, 0x9d, 0xb6, 0xa1, 0xda, 0x6a, 0x4d, 0x02, 0xbd, 0xb4, 0x86, 0x98, 0x1a, 0x22, 0x5e, 0x2c, 0x6a, 0x8d, 0x47, 0x96, 0xe1, 0xca, 0xf0, 0xe9, 0x66, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1599(ch_1599, ch_1599 + sizeof(ch_1599) -1);
CDataStream stream_1599(vch_1599, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1599;
stream_1599 >> txHist_1599;

if(block.vtx[0]->GetHash() == txHist_1599.GetHash() && nHeight == 1263715) {
return true;
}
unsigned char ch_1600[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x60, 0x48, 0x13, 0x04, 0x0f, 0x3c, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc4, 0x91, 0xdf, 0x77, 0xa4, 0x1f, 0xcc, 0x1c, 0x10, 0x75, 0x60, 0x81, 0xac, 0xd5, 0x9e, 0xd8, 0x3c, 0x19, 0xbf, 0xe4, 0x74, 0x14, 0xcd, 0x26, 0x09, 0x28, 0xe4, 0x74, 0x67, 0xb0, 0xb8, 0xdf, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0xa0, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1600(ch_1600, ch_1600 + sizeof(ch_1600) -1);
CDataStream stream_1600(vch_1600, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1600;
stream_1600 >> txHist_1600;

if(block.vtx[0]->GetHash() == txHist_1600.GetHash() && nHeight == 1263712) {
return true;
}
unsigned char ch_1601[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x5d, 0x48, 0x13, 0x04, 0x3f, 0x3b, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x08, 0x1e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1601(ch_1601, ch_1601 + sizeof(ch_1601) -1);
CDataStream stream_1601(vch_1601, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1601;
stream_1601 >> txHist_1601;

if(block.vtx[0]->GetHash() == txHist_1601.GetHash() && nHeight == 1263709) {
return true;
}
unsigned char ch_1602[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb4, 0x48, 0x13, 0x04, 0x4a, 0x52, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x48, 0x66, 0xa3, 0x67, 0xdb, 0x35, 0x93, 0x53, 0x7d, 0xf7, 0xf3, 0xbb, 0x42, 0xa8, 0xba, 0xb1, 0x3b, 0xf5, 0x0c, 0x9c, 0x03, 0xd5, 0x4f, 0xb9, 0x73, 0xff, 0x6c, 0x21, 0x81, 0x86, 0x50, 0x94, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0x79, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x41, 0x03, 0x51, 0xad, 0x6e, 0x79, 0xce, 0xce, 0x66, 0x20, 0x79, 0xfa, 0xb5, 0xd0, 0x46, 0xdf, 0xed, 0x51, 0xea, 0x0b, 0x20, 0xdd, 0xfd, 0x3e, 0xcc, 0x2e, 0xfc, 0x19, 0xa4, 0x63, 0xfd, 0xe7, 0xa8, 0x19, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1602(ch_1602, ch_1602 + sizeof(ch_1602) -1);
CDataStream stream_1602(vch_1602, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1602;
stream_1602 >> txHist_1602;

if(block.vtx[0]->GetHash() == txHist_1602.GetHash() && nHeight == 1263796) {
return true;
}
unsigned char ch_1603[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3e, 0x48, 0x13, 0x04, 0xfe, 0x33, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa5, 0x6c, 0x06, 0x6c, 0xff, 0xea, 0xf8, 0x3e, 0xf7, 0xe5, 0x1c, 0x65, 0x9b, 0x4c, 0xa9, 0x45, 0x8c, 0x9e, 0xcb, 0xa9, 0xe1, 0xfd, 0x13, 0xfc, 0xce, 0x2c, 0xe6, 0x4e, 0xfc, 0x1c, 0x17, 0x64, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x39, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1603(ch_1603, ch_1603 + sizeof(ch_1603) -1);
CDataStream stream_1603(vch_1603, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1603;
stream_1603 >> txHist_1603;

if(block.vtx[0]->GetHash() == txHist_1603.GetHash() && nHeight == 1263678) {
return true;
}
unsigned char ch_1604[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb0, 0x48, 0x13, 0x04, 0x70, 0x51, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc8, 0x53, 0xd4, 0x4e, 0x81, 0x28, 0xad, 0x12, 0xa1, 0x26, 0x2e, 0xaa, 0x25, 0x2f, 0x44, 0x5a, 0x0b, 0x83, 0x49, 0xde, 0xd2, 0xcc, 0x56, 0x44, 0x0f, 0x16, 0xe5, 0x22, 0xb7, 0x09, 0x74, 0x9c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0x6f, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1604(ch_1604, ch_1604 + sizeof(ch_1604) -1);
CDataStream stream_1604(vch_1604, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1604;
stream_1604 >> txHist_1604;

if(block.vtx[0]->GetHash() == txHist_1604.GetHash() && nHeight == 1263792) {
return true;
}
unsigned char ch_1605[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3a, 0x48, 0x13, 0x04, 0xa7, 0x33, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd9, 0xaf, 0x5d, 0x70, 0x74, 0xd5, 0x00, 0x83, 0x55, 0x2f, 0x27, 0x3b, 0xd7, 0x59, 0xfe, 0x1c, 0x90, 0xc6, 0x63, 0x82, 0x3b, 0xd3, 0x0b, 0x7a, 0xdb, 0xa4, 0xd7, 0xb1, 0xd2, 0x8e, 0xad, 0xc3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xc2, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1605(ch_1605, ch_1605 + sizeof(ch_1605) -1);
CDataStream stream_1605(vch_1605, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1605;
stream_1605 >> txHist_1605;

if(block.vtx[0]->GetHash() == txHist_1605.GetHash() && nHeight == 1263674) {
return true;
}
unsigned char ch_1606[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xab, 0x48, 0x13, 0x04, 0x9a, 0x50, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x75, 0xff, 0xa9, 0x6c, 0x4d, 0x51, 0x65, 0x52, 0xc3, 0xcb, 0x94, 0xc2, 0xd0, 0xe3, 0x31, 0xf1, 0xf6, 0x3d, 0x88, 0x55, 0x6f, 0x0f, 0xfb, 0xf8, 0x39, 0x45, 0xc0, 0xe0, 0x68, 0xc8, 0x7a, 0xcd, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x6a, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x91, 0xcc, 0x9e, 0x9b, 0x15, 0xe7, 0x27, 0x7d, 0x0c, 0x17, 0xa0, 0x14, 0x66, 0xd9, 0x20, 0x66, 0xd9, 0x4b, 0x8f, 0xc1, 0xd2, 0xab, 0xc1, 0xcf, 0x84, 0xf7, 0x83, 0xad, 0x59, 0x78, 0x70, 0x49, 0xc0, 0x68, 0x68, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1606(ch_1606, ch_1606 + sizeof(ch_1606) -1);
CDataStream stream_1606(vch_1606, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1606;
stream_1606 >> txHist_1606;

if(block.vtx[0]->GetHash() == txHist_1606.GetHash() && nHeight == 1263787) {
return true;
}
unsigned char ch_1607[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x90, 0x48, 0x13, 0x04, 0x17, 0x49, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xef, 0x3e, 0x62, 0xcd, 0x5e, 0xa5, 0x57, 0x46, 0x29, 0xd1, 0xcb, 0x2a, 0xa2, 0x2c, 0xaf, 0x96, 0x37, 0x45, 0xc3, 0x55, 0x42, 0x05, 0xd6, 0xc3, 0x0d, 0x59, 0xfc, 0xce, 0x3d, 0x28, 0xba, 0xfe, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0xbe, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1607(ch_1607, ch_1607 + sizeof(ch_1607) -1);
CDataStream stream_1607(vch_1607, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1607;
stream_1607 >> txHist_1607;

if(block.vtx[0]->GetHash() == txHist_1607.GetHash() && nHeight == 1263760) {
return true;
}
unsigned char ch_1608[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x35, 0x48, 0x13, 0x04, 0x0d, 0x33, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf7, 0x83, 0x08, 0xd4, 0x13, 0x46, 0x37, 0x27, 0x1e, 0x4d, 0x00, 0x40, 0x3c, 0xab, 0x59, 0xfc, 0x3e, 0xa8, 0x3c, 0x8c, 0xbb, 0x3a, 0xf5, 0xf0, 0x11, 0x1a, 0x38, 0x5b, 0xa8, 0x13, 0x41, 0x84, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x34, 0x11, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1608(ch_1608, ch_1608 + sizeof(ch_1608) -1);
CDataStream stream_1608(vch_1608, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1608;
stream_1608 >> txHist_1608;

if(block.vtx[0]->GetHash() == txHist_1608.GetHash() && nHeight == 1263669) {
return true;
}
unsigned char ch_1609[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa6, 0x48, 0x13, 0x04, 0x17, 0x4e, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xba, 0x8f, 0x67, 0xce, 0x52, 0x86, 0x6b, 0x29, 0xd1, 0x0e, 0x4d, 0x77, 0x7d, 0xe5, 0x14, 0x04, 0x75, 0xbb, 0x21, 0xde, 0x24, 0xcc, 0xd7, 0x03, 0xe5, 0xfd, 0x4f, 0x03, 0xc8, 0x97, 0xbb, 0xbb, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xbd, 0x1a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1609(ch_1609, ch_1609 + sizeof(ch_1609) -1);
CDataStream stream_1609(vch_1609, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1609;
stream_1609 >> txHist_1609;

if(block.vtx[0]->GetHash() == txHist_1609.GetHash() && nHeight == 1263782) {
return true;
}
unsigned char ch_1610[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x8c, 0x48, 0x13, 0x04, 0xf5, 0x47, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd7, 0x76, 0x0d, 0x84, 0x50, 0x02, 0x30, 0x01, 0x89, 0x8e, 0xbb, 0xbd, 0x6a, 0xd8, 0xa3, 0xdb, 0xcd, 0xbe, 0x8d, 0xb3, 0x5b, 0x77, 0x36, 0x53, 0x7b, 0x91, 0x4c, 0xfa, 0xed, 0x9f, 0x6b, 0xc2, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x05, 0x26, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1610(ch_1610, ch_1610 + sizeof(ch_1610) -1);
CDataStream stream_1610(vch_1610, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1610;
stream_1610 >> txHist_1610;

if(block.vtx[0]->GetHash() == txHist_1610.GetHash() && nHeight == 1263756) {
return true;
}
unsigned char ch_1611[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2f, 0x48, 0x13, 0x04, 0x69, 0x32, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x52, 0xc0, 0x2e, 0x53, 0x4e, 0x3b, 0xac, 0xa1, 0x8e, 0xea, 0x58, 0x0f, 0x8f, 0xdb, 0x1d, 0xcb, 0x01, 0x7a, 0xd1, 0xd9, 0x6a, 0x50, 0x16, 0x5e, 0x93, 0x17, 0x5c, 0xc5, 0xdd, 0x1b, 0x6b, 0x82, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x25, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd3, 0x67, 0x75, 0x7d, 0xed, 0xb2, 0x36, 0x31, 0x9e, 0xfd, 0x8b, 0x75, 0x6c, 0xec, 0x24, 0xc5, 0x16, 0x9e, 0x69, 0xef, 0x2e, 0x72, 0xe7, 0x8d, 0x98, 0xac, 0xd7, 0x0c, 0xc3, 0x5f, 0x7b, 0xfa, 0xf0, 0xf4, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1611(ch_1611, ch_1611 + sizeof(ch_1611) -1);
CDataStream stream_1611(vch_1611, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1611;
stream_1611 >> txHist_1611;

if(block.vtx[0]->GetHash() == txHist_1611.GetHash() && nHeight == 1263663) {
return true;
}
unsigned char ch_1612[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa1, 0x48, 0x13, 0x04, 0x27, 0x4d, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb0, 0x2f, 0x22, 0xcb, 0x94, 0x65, 0xcf, 0xa2, 0xd1, 0x26, 0xce, 0xa6, 0x98, 0x53, 0x2a, 0x3f, 0x2e, 0xdb, 0x16, 0xd4, 0x35, 0xfa, 0x16, 0x11, 0xf8, 0x9d, 0xbb, 0xa1, 0xa0, 0x29, 0x2a, 0x3b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0x78, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1612(ch_1612, ch_1612 + sizeof(ch_1612) -1);
CDataStream stream_1612(vch_1612, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1612;
stream_1612 >> txHist_1612;

if(block.vtx[0]->GetHash() == txHist_1612.GetHash() && nHeight == 1263777) {
return true;
}
unsigned char ch_1613[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x88, 0x48, 0x13, 0x04, 0x12, 0x47, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xfd, 0xa3, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1613(ch_1613, ch_1613 + sizeof(ch_1613) -1);
CDataStream stream_1613(vch_1613, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1613;
stream_1613 >> txHist_1613;

if(block.vtx[0]->GetHash() == txHist_1613.GetHash() && nHeight == 1263752) {
return true;
}
unsigned char ch_1614[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2a, 0x48, 0x13, 0x04, 0xfa, 0x31, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x67, 0x6b, 0x5e, 0x5e, 0x22, 0x37, 0xde, 0x09, 0x33, 0x7b, 0x18, 0xab, 0x9d, 0xdf, 0x3a, 0xed, 0x50, 0x85, 0xa3, 0xc7, 0x3f, 0x5d, 0x37, 0x09, 0xc0, 0xa7, 0x97, 0x16, 0x85, 0x8a, 0xfb, 0x24, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x20, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1614(ch_1614, ch_1614 + sizeof(ch_1614) -1);
CDataStream stream_1614(vch_1614, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1614;
stream_1614 >> txHist_1614;

if(block.vtx[0]->GetHash() == txHist_1614.GetHash() && nHeight == 1263658) {
return true;
}
unsigned char ch_1615[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xf5, 0x47, 0x13, 0x04, 0x85, 0x1d, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x50, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1615(ch_1615, ch_1615 + sizeof(ch_1615) -1);
CDataStream stream_1615(vch_1615, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1615;
stream_1615 >> txHist_1615;

if(block.vtx[0]->GetHash() == txHist_1615.GetHash() && nHeight == 1263605) {
return true;
}
unsigned char ch_1616[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9d, 0x48, 0x13, 0x04, 0xcd, 0x4b, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa3, 0x69, 0x63, 0x3a, 0x6f, 0xea, 0x2e, 0x9c, 0x3d, 0x6b, 0x6c, 0x8e, 0x5f, 0x32, 0xc6, 0xb5, 0x2b, 0xc7, 0x05, 0xf5, 0xb4, 0xc2, 0x43, 0x27, 0x14, 0x42, 0x46, 0x40, 0xeb, 0x4b, 0x04, 0x79, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x08, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xf1, 0xc1, 0x45, 0x68, 0x53, 0x77, 0xeb, 0xde, 0x55, 0x6d, 0x63, 0x33, 0xaf, 0xaa, 0x3a, 0x03, 0x2e, 0x7f, 0xdd, 0xde, 0xa0, 0xd9, 0x7d, 0x73, 0x92, 0xe5, 0x22, 0x91, 0xe7, 0x48, 0x00, 0x07, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1616(ch_1616, ch_1616 + sizeof(ch_1616) -1);
CDataStream stream_1616(vch_1616, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1616;
stream_1616 >> txHist_1616;

if(block.vtx[0]->GetHash() == txHist_1616.GetHash() && nHeight == 1263773) {
return true;
}
unsigned char ch_1617[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x99, 0x48, 0x13, 0x04, 0xe4, 0x4a, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x34, 0xcf, 0x25, 0xf7, 0xa6, 0x35, 0x26, 0x9d, 0x11, 0xe2, 0x71, 0x39, 0x3a, 0x44, 0xe2, 0xcf, 0x35, 0xbc, 0x1f, 0xef, 0xcb, 0xc6, 0x71, 0xe8, 0xaa, 0x0b, 0xaf, 0xf2, 0x5b, 0x24, 0x82, 0xfd, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xba, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xaa, 0x35, 0x46, 0x95, 0x56, 0x5e, 0x18, 0xf4, 0xe9, 0xa3, 0x3e, 0x0a, 0xb8, 0xdf, 0xe7, 0x8d, 0x54, 0x46, 0xd8, 0xd6, 0x4a, 0x03, 0xa1, 0xa6, 0x61, 0x65, 0x74, 0x33, 0x34, 0x81, 0xfd, 0x6e, 0x30, 0xc9, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1617(ch_1617, ch_1617 + sizeof(ch_1617) -1);
CDataStream stream_1617(vch_1617, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1617;
stream_1617 >> txHist_1617;

if(block.vtx[0]->GetHash() == txHist_1617.GetHash() && nHeight == 1263769) {
return true;
}
unsigned char ch_1618[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xea, 0x47, 0x13, 0x04, 0x76, 0x1a, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x21, 0x9f, 0x2c, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x66, 0x12, 0xeb, 0x84, 0x5f, 0xfb, 0xbe, 0x8c, 0x2d, 0xdd, 0x01, 0x06, 0xa7, 0x94, 0x96, 0x06, 0xf0, 0x72, 0xca, 0xcb, 0x0b, 0xb5, 0xb0, 0xaf, 0x13, 0x4c, 0xde, 0x23, 0xdb, 0x58, 0x58, 0x47, 0x20, 0x1f, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1618(ch_1618, ch_1618 + sizeof(ch_1618) -1);
CDataStream stream_1618(vch_1618, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1618;
stream_1618 >> txHist_1618;

if(block.vtx[0]->GetHash() == txHist_1618.GetHash() && nHeight == 1263594) {
return true;
}
unsigned char ch_1619[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x95, 0x48, 0x13, 0x04, 0xbf, 0x49, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x67, 0x5d, 0x2d, 0x6d, 0x3a, 0xd0, 0x09, 0xf4, 0xd1, 0x41, 0xdc, 0xfd, 0xd3, 0xb5, 0xee, 0x49, 0x1b, 0x18, 0xb8, 0x45, 0x71, 0x79, 0x21, 0xb5, 0xa4, 0x2f, 0x09, 0x52, 0x0e, 0xae, 0x27, 0xae, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x66, 0x12, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1619(ch_1619, ch_1619 + sizeof(ch_1619) -1);
CDataStream stream_1619(vch_1619, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1619;
stream_1619 >> txHist_1619;

if(block.vtx[0]->GetHash() == txHist_1619.GetHash() && nHeight == 1263765) {
return true;
}
unsigned char ch_1620[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x91, 0x48, 0x13, 0x04, 0x54, 0x49, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5c, 0x9f, 0x9e, 0xf1, 0xc3, 0x72, 0xa6, 0x0c, 0xe0, 0x0a, 0x0c, 0x10, 0x59, 0x28, 0xa2, 0x64, 0x01, 0x3f, 0x6a, 0x65, 0xcc, 0x47, 0x1b, 0xb7, 0xde, 0x03, 0x73, 0x5f, 0x83, 0xfa, 0xb4, 0xdc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x1b, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1620(ch_1620, ch_1620 + sizeof(ch_1620) -1);
CDataStream stream_1620(vch_1620, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1620;
stream_1620 >> txHist_1620;

if(block.vtx[0]->GetHash() == txHist_1620.GetHash() && nHeight == 1263761) {
return true;
}
unsigned char ch_1621[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x8d, 0x48, 0x13, 0x04, 0x6d, 0x48, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x0c, 0x60, 0xad, 0x38, 0xec, 0x07, 0xd1, 0x77, 0x5f, 0x66, 0xfa, 0x9c, 0xb1, 0x91, 0x37, 0x37, 0x0d, 0x6f, 0xfd, 0x18, 0x75, 0x6b, 0x7d, 0xee, 0x71, 0x28, 0x55, 0xae, 0x87, 0x53, 0x0f, 0x4d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x17, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1621(ch_1621, ch_1621 + sizeof(ch_1621) -1);
CDataStream stream_1621(vch_1621, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1621;
stream_1621 >> txHist_1621;

if(block.vtx[0]->GetHash() == txHist_1621.GetHash() && nHeight == 1263757) {
return true;
}
unsigned char ch_1622[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd8, 0x47, 0x13, 0x04, 0xeb, 0x12, 0x35, 0x5b, 0x08, 0x78, 0x00, 0x00, 0x01, 0x7c, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x9f, 0x62, 0x35, 0xb9, 0x17, 0x80, 0x69, 0x75, 0xcd, 0xa3, 0x12, 0x73, 0x3e, 0xfb, 0xb9, 0xb3, 0xa7, 0x1b, 0x78, 0xb9, 0x37, 0x5b, 0xe0, 0xc6, 0xaa, 0x0a, 0x64, 0xa7, 0xb5, 0xc4, 0xac, 0xf1, 0xa8, 0x45, 0x62, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1622(ch_1622, ch_1622 + sizeof(ch_1622) -1);
CDataStream stream_1622(vch_1622, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1622;
stream_1622 >> txHist_1622;

if(block.vtx[0]->GetHash() == txHist_1622.GetHash() && nHeight == 1263576) {
return true;
}
unsigned char ch_1623[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x89, 0x48, 0x13, 0x04, 0x6f, 0x47, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x90, 0x86, 0x21, 0xc9, 0xa1, 0xda, 0x4b, 0x1a, 0x6a, 0x73, 0xc1, 0xa0, 0x0a, 0x6a, 0x4b, 0x1f, 0x8d, 0xd5, 0xc4, 0xb6, 0x6a, 0xae, 0x27, 0xe6, 0x38, 0x89, 0x41, 0x71, 0x0d, 0x95, 0x82, 0xa0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0xaa, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe5, 0x2d, 0x52, 0x86, 0x1d, 0x7c, 0x5f, 0xe0, 0x8f, 0x0f, 0x7d, 0xbc, 0xd4, 0x88, 0x41, 0xfb, 0x57, 0xe3, 0x1c, 0x93, 0x4a, 0x38, 0x22, 0x52, 0x21, 0xf2, 0xf7, 0x94, 0x33, 0x90, 0xc7, 0x7a, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1623(ch_1623, ch_1623 + sizeof(ch_1623) -1);
CDataStream stream_1623(vch_1623, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1623;
stream_1623 >> txHist_1623;

if(block.vtx[0]->GetHash() == txHist_1623.GetHash() && nHeight == 1263753) {
return true;
}
unsigned char ch_1624[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd2, 0x47, 0x13, 0x04, 0x44, 0x0f, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x0b, 0x30, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x72, 0xf4, 0xec, 0x51, 0x4a, 0x1a, 0x05, 0x2f, 0xf3, 0x2d, 0x32, 0xb5, 0x43, 0x0b, 0x06, 0xf2, 0x3e, 0x61, 0x20, 0x7d, 0xf2, 0x6b, 0x9e, 0xc6, 0x7a, 0x9c, 0x88, 0x45, 0xb6, 0x01, 0x89, 0x0c, 0x80, 0xa5, 0xf7, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1624(ch_1624, ch_1624 + sizeof(ch_1624) -1);
CDataStream stream_1624(vch_1624, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1624;
stream_1624 >> txHist_1624;

if(block.vtx[0]->GetHash() == txHist_1624.GetHash() && nHeight == 1263570) {
return true;
}
unsigned char ch_1625[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x85, 0x48, 0x13, 0x04, 0xdf, 0x46, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x34, 0x6f, 0x74, 0x23, 0xf2, 0x42, 0x46, 0x04, 0xf2, 0xfb, 0xa5, 0x7d, 0xb4, 0x2e, 0xe2, 0x8f, 0xf4, 0x0b, 0xb0, 0xb8, 0xce, 0x99, 0xdc, 0x3b, 0x18, 0x28, 0x3d, 0x31, 0x0c, 0xd3, 0xb1, 0x62, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xb8, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1625(ch_1625, ch_1625 + sizeof(ch_1625) -1);
CDataStream stream_1625(vch_1625, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1625;
stream_1625 >> txHist_1625;

if(block.vtx[0]->GetHash() == txHist_1625.GetHash() && nHeight == 1263749) {
return true;
}
unsigned char ch_1626[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x84, 0x48, 0x13, 0x04, 0xd2, 0x46, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x08, 0x5b, 0x19, 0x5e, 0x22, 0x93, 0x0b, 0x2b, 0xf0, 0xfa, 0xc1, 0x01, 0x58, 0xfc, 0x4f, 0x7a, 0x05, 0x5f, 0xf3, 0xf1, 0xc2, 0xba, 0xe4, 0x99, 0x7e, 0xfb, 0xcc, 0x19, 0xbd, 0x52, 0x33, 0xea, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xf1, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x4e, 0x2b, 0x09, 0x98, 0x1b, 0x64, 0x84, 0x59, 0xfb, 0xbc, 0xf1, 0x2b, 0xb5, 0x2e, 0xae, 0xde, 0xdd, 0x15, 0xbb, 0x20, 0x34, 0x4c, 0x92, 0x6a, 0x89, 0x7d, 0xbf, 0x39, 0x79, 0x06, 0xb9, 0xb0, 0xc8, 0x23, 0x64, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1626(ch_1626, ch_1626 + sizeof(ch_1626) -1);
CDataStream stream_1626(vch_1626, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1626;
stream_1626 >> txHist_1626;

if(block.vtx[0]->GetHash() == txHist_1626.GetHash() && nHeight == 1263748) {
return true;
}
unsigned char ch_1627[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x81, 0x48, 0x13, 0x04, 0xee, 0x44, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x1d, 0x1d, 0xac, 0x95, 0xff, 0x3e, 0xce, 0xc0, 0x43, 0x92, 0x21, 0x43, 0xf5, 0x3a, 0x41, 0x32, 0xc9, 0xdf, 0x2c, 0xd9, 0xed, 0xac, 0xfc, 0xbf, 0x4e, 0x8c, 0xad, 0x0b, 0x5a, 0x84, 0xfa, 0xf9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0x83, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1627(ch_1627, ch_1627 + sizeof(ch_1627) -1);
CDataStream stream_1627(vch_1627, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1627;
stream_1627 >> txHist_1627;

if(block.vtx[0]->GetHash() == txHist_1627.GetHash() && nHeight == 1263745) {
return true;
}
unsigned char ch_1628[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x80, 0x48, 0x13, 0x04, 0xd6, 0x44, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x1d, 0x1d, 0xac, 0x95, 0xff, 0x3e, 0xce, 0xc0, 0x43, 0x92, 0x21, 0x43, 0xf5, 0x3a, 0x41, 0x32, 0xc9, 0xdf, 0x2c, 0xd9, 0xed, 0xac, 0xfc, 0xbf, 0x4e, 0x8c, 0xad, 0x0b, 0x5a, 0x84, 0xfa, 0xf9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xa7, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1628(ch_1628, ch_1628 + sizeof(ch_1628) -1);
CDataStream stream_1628(vch_1628, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1628;
stream_1628 >> txHist_1628;

if(block.vtx[0]->GetHash() == txHist_1628.GetHash() && nHeight == 1263744) {
return true;
}
unsigned char ch_1629[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc6, 0x47, 0x13, 0x04, 0x30, 0x0c, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd5, 0xa9, 0xf5, 0xf2, 0x65, 0xab, 0x24, 0x74, 0x67, 0xf4, 0xb0, 0xd5, 0xd2, 0xb0, 0x54, 0xcf, 0x99, 0xa4, 0x83, 0xc1, 0x7b, 0x01, 0x71, 0x33, 0xcb, 0x14, 0x9e, 0xec, 0x06, 0x2d, 0xbb, 0x9f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x0b, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1629(ch_1629, ch_1629 + sizeof(ch_1629) -1);
CDataStream stream_1629(vch_1629, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1629;
stream_1629 >> txHist_1629;

if(block.vtx[0]->GetHash() == txHist_1629.GetHash() && nHeight == 1263558) {
return true;
}
unsigned char ch_1630[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x7c, 0x48, 0x13, 0x04, 0x8c, 0x43, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbe, 0x9c, 0x40, 0xbf, 0xbd, 0x38, 0x49, 0x91, 0xdb, 0xb7, 0x10, 0x54, 0xcc, 0xab, 0xac, 0xf8, 0x1b, 0xf0, 0xbf, 0xed, 0x37, 0x70, 0x14, 0x1b, 0x54, 0xb8, 0xf5, 0xf7, 0x3a, 0x41, 0x7c, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xe2, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x3f, 0x1e, 0x1a, 0x85, 0x08, 0x19, 0x7d, 0x37, 0xb7, 0xa2, 0xe8, 0x00, 0xb7, 0xcc, 0x3d, 0x97, 0x64, 0x14, 0x24, 0x8d, 0x95, 0xc8, 0xaf, 0xd1, 0x98, 0xd0, 0xc3, 0x82, 0xa9, 0xe7, 0x65, 0xe5, 0x08, 0x76, 0x68, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1630(ch_1630, ch_1630 + sizeof(ch_1630) -1);
CDataStream stream_1630(vch_1630, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1630;
stream_1630 >> txHist_1630;

if(block.vtx[0]->GetHash() == txHist_1630.GetHash() && nHeight == 1263740) {
return true;
}
unsigned char ch_1631[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x7b, 0x48, 0x13, 0x04, 0xa7, 0x42, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x11, 0xb2, 0xe4, 0x10, 0x26, 0xee, 0xee, 0xce, 0x19, 0x98, 0x4d, 0xb5, 0x4c, 0xeb, 0xe1, 0x1e, 0x30, 0x2c, 0xe6, 0x10, 0x59, 0x09, 0x3a, 0x76, 0xf1, 0xb4, 0xbf, 0x76, 0xae, 0x14, 0x6c, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x0f, 0x11, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1631(ch_1631, ch_1631 + sizeof(ch_1631) -1);
CDataStream stream_1631(vch_1631, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1631;
stream_1631 >> txHist_1631;

if(block.vtx[0]->GetHash() == txHist_1631.GetHash() && nHeight == 1263739) {
return true;
}
unsigned char ch_1632[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc0, 0x47, 0x13, 0x04, 0x3a, 0x0a, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7f, 0x79, 0x0a, 0xe9, 0xb1, 0x6b, 0x9b, 0x81, 0x98, 0x26, 0x66, 0x23, 0xab, 0x0e, 0x26, 0xfc, 0x71, 0x8e, 0xd0, 0x35, 0x4b, 0x72, 0x2e, 0xc0, 0x58, 0xde, 0x96, 0xde, 0x55, 0xb8, 0x58, 0x52, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x04, 0x84, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1632(ch_1632, ch_1632 + sizeof(ch_1632) -1);
CDataStream stream_1632(vch_1632, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1632;
stream_1632 >> txHist_1632;

if(block.vtx[0]->GetHash() == txHist_1632.GetHash() && nHeight == 1263552) {
return true;
}
unsigned char ch_1633[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x58, 0x48, 0x13, 0x04, 0xcf, 0x3a, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x54, 0x6c, 0xca, 0xd2, 0x9f, 0xdb, 0x47, 0xb7, 0xab, 0xb1, 0x32, 0xee, 0x94, 0x84, 0xf3, 0x6c, 0xec, 0xfb, 0x19, 0xfe, 0xde, 0xa1, 0xea, 0xb4, 0x45, 0x4e, 0xed, 0x8c, 0x1e, 0xc1, 0x30, 0x8b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x11, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xcf, 0xe4, 0xde, 0x7f, 0x97, 0xe7, 0xcb, 0x67, 0xe2, 0x95, 0xd7, 0x92, 0xb8, 0xa5, 0x9b, 0xba, 0x7e, 0xb0, 0x44, 0x2f, 0xe8, 0x49, 0x68, 0x52, 0x83, 0x1b, 0xb9, 0x7c, 0xb4, 0x21, 0xd1, 0xbb, 0x30, 0xdd, 0x65, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1633(ch_1633, ch_1633 + sizeof(ch_1633) -1);
CDataStream stream_1633(vch_1633, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1633;
stream_1633 >> txHist_1633;

if(block.vtx[0]->GetHash() == txHist_1633.GetHash() && nHeight == 1263704) {
return true;
}
unsigned char ch_1634[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x78, 0x48, 0x13, 0x04, 0xb4, 0x41, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xfa, 0x39, 0xe7, 0xbb, 0x2e, 0x50, 0x2d, 0xa9, 0xcf, 0x6e, 0xe5, 0xdd, 0xb6, 0xb3, 0x55, 0xc6, 0xec, 0xc9, 0x60, 0xbf, 0xc5, 0x8b, 0xf8, 0xcf, 0x48, 0x7a, 0x84, 0xdc, 0x16, 0x75, 0x97, 0x7e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x32, 0x11, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1634(ch_1634, ch_1634 + sizeof(ch_1634) -1);
CDataStream stream_1634(vch_1634, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1634;
stream_1634 >> txHist_1634;

if(block.vtx[0]->GetHash() == txHist_1634.GetHash() && nHeight == 1263736) {
return true;
}
unsigned char ch_1635[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb9, 0x47, 0x13, 0x04, 0x83, 0x08, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf8, 0x62, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1635(ch_1635, ch_1635 + sizeof(ch_1635) -1);
CDataStream stream_1635(vch_1635, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1635;
stream_1635 >> txHist_1635;

if(block.vtx[0]->GetHash() == txHist_1635.GetHash() && nHeight == 1263545) {
return true;
}
unsigned char ch_1636[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x56, 0x48, 0x13, 0x04, 0x7a, 0x39, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf6, 0x64, 0xe2, 0x85, 0xaa, 0xce, 0x17, 0x9e, 0x10, 0x6e, 0xea, 0xd8, 0xfb, 0xb5, 0x6d, 0xe7, 0x5f, 0x83, 0xb6, 0x8d, 0xb4, 0x38, 0xb0, 0xc1, 0xdb, 0x7b, 0x39, 0xa7, 0x39, 0x63, 0x1c, 0x5f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0x84, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x22, 0xe8, 0x88, 0xc8, 0x35, 0x04, 0xaa, 0x32, 0x51, 0x46, 0x34, 0x30, 0xc4, 0xbe, 0x59, 0xb5, 0xbb, 0x49, 0xbe, 0x23, 0xfc, 0xa5, 0x49, 0x33, 0xf1, 0xcc, 0x90, 0x69, 0x30, 0x79, 0xeb, 0xfe, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1636(ch_1636, ch_1636 + sizeof(ch_1636) -1);
CDataStream stream_1636(vch_1636, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1636;
stream_1636 >> txHist_1636;

if(block.vtx[0]->GetHash() == txHist_1636.GetHash() && nHeight == 1263702) {
return true;
}
unsigned char ch_1637[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x74, 0x48, 0x13, 0x04, 0x24, 0x41, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x76, 0x7d, 0xf5, 0x59, 0x06, 0xa7, 0x34, 0x46, 0xb2, 0x93, 0xca, 0x14, 0xe2, 0x5a, 0x2a, 0xc2, 0xbf, 0xad, 0x59, 0x79, 0xd7, 0x75, 0xde, 0xb3, 0xa2, 0xfc, 0x20, 0xb5, 0x53, 0xd8, 0xed, 0x3a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0xff, 0xff, 0xe3, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1637(ch_1637, ch_1637 + sizeof(ch_1637) -1);
CDataStream stream_1637(vch_1637, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1637;
stream_1637 >> txHist_1637;

if(block.vtx[0]->GetHash() == txHist_1637.GetHash() && nHeight == 1263732) {
return true;
}
unsigned char ch_1638[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x08, 0x48, 0x13, 0x04, 0x23, 0x26, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x13, 0x62, 0xfb, 0x09, 0xe9, 0x17, 0x61, 0xfb, 0x23, 0xf1, 0xfa, 0xab, 0xcc, 0xbc, 0xb2, 0xe5, 0x7c, 0xd0, 0x39, 0x45, 0x73, 0xef, 0xf4, 0x46, 0x18, 0xcc, 0xba, 0x46, 0x2c, 0x67, 0x70, 0x75, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xfa, 0x8b, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1638(ch_1638, ch_1638 + sizeof(ch_1638) -1);
CDataStream stream_1638(vch_1638, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1638;
stream_1638 >> txHist_1638;

if(block.vtx[0]->GetHash() == txHist_1638.GetHash() && nHeight == 1263624) {
return true;
}
unsigned char ch_1639[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb2, 0x47, 0x13, 0x04, 0xe9, 0x02, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x28, 0xd9, 0x6e, 0x98, 0xfd, 0x91, 0x7c, 0x53, 0x7a, 0x06, 0x70, 0x0e, 0x7d, 0x56, 0x73, 0x36, 0x3e, 0x49, 0x16, 0xcd, 0x74, 0x43, 0x8b, 0x8b, 0xc1, 0x65, 0x9e, 0x8d, 0xf5, 0x0f, 0x28, 0x05, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x2c, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1639(ch_1639, ch_1639 + sizeof(ch_1639) -1);
CDataStream stream_1639(vch_1639, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1639;
stream_1639 >> txHist_1639;

if(block.vtx[0]->GetHash() == txHist_1639.GetHash() && nHeight == 1263538) {
return true;
}
unsigned char ch_1640[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x53, 0x48, 0x13, 0x04, 0x0b, 0x39, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xfb, 0xaf, 0x65, 0x07, 0x58, 0x05, 0x81, 0xa4, 0xa6, 0x2d, 0x28, 0x00, 0x75, 0x08, 0x39, 0xd7, 0x9a, 0x35, 0x68, 0x3f, 0x00, 0xb3, 0x5f, 0x96, 0x3b, 0x0e, 0x70, 0x10, 0xcf, 0xb3, 0x46, 0x1b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xd8, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1640(ch_1640, ch_1640 + sizeof(ch_1640) -1);
CDataStream stream_1640(vch_1640, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1640;
stream_1640 >> txHist_1640;

if(block.vtx[0]->GetHash() == txHist_1640.GetHash() && nHeight == 1263699) {
return true;
}
unsigned char ch_1641[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x73, 0x48, 0x13, 0x04, 0xfe, 0x40, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x76, 0x7d, 0xf5, 0x59, 0x06, 0xa7, 0x34, 0x46, 0xb2, 0x93, 0xca, 0x14, 0xe2, 0x5a, 0x2a, 0xc2, 0xbf, 0xad, 0x59, 0x79, 0xd7, 0x75, 0xde, 0xb3, 0xa2, 0xfc, 0x20, 0xb5, 0x53, 0xd8, 0xed, 0x3a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xdc, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1641(ch_1641, ch_1641 + sizeof(ch_1641) -1);
CDataStream stream_1641(vch_1641, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1641;
stream_1641 >> txHist_1641;

if(block.vtx[0]->GetHash() == txHist_1641.GetHash() && nHeight == 1263731) {
return true;
}
unsigned char ch_1642[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x05, 0x48, 0x13, 0x04, 0xcb, 0x23, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x63, 0x94, 0xb3, 0x57, 0xbd, 0x20, 0x10, 0x96, 0x22, 0xb1, 0x4e, 0x41, 0xf6, 0x38, 0x1d, 0x2e, 0x13, 0xa4, 0x85, 0x21, 0xa9, 0xd6, 0x43, 0x40, 0xe9, 0x45, 0xb9, 0xdc, 0x96, 0x0a, 0x2c, 0x64, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xff, 0xfd, 0x93, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1642(ch_1642, ch_1642 + sizeof(ch_1642) -1);
CDataStream stream_1642(vch_1642, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1642;
stream_1642 >> txHist_1642;

if(block.vtx[0]->GetHash() == txHist_1642.GetHash() && nHeight == 1263621) {
return true;
}
unsigned char ch_1643[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xab, 0x47, 0x13, 0x04, 0x4c, 0x01, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x86, 0xef, 0x40, 0xef, 0xd6, 0x31, 0x06, 0x62, 0x47, 0x49, 0x73, 0x14, 0xcd, 0x3a, 0xa8, 0x78, 0x24, 0x9d, 0x01, 0xdf, 0x75, 0x04, 0xd1, 0x02, 0xf1, 0xc1, 0x9b, 0x8c, 0xa9, 0xb1, 0xb2, 0xf9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xff, 0x9c, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1643(ch_1643, ch_1643 + sizeof(ch_1643) -1);
CDataStream stream_1643(vch_1643, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1643;
stream_1643 >> txHist_1643;

if(block.vtx[0]->GetHash() == txHist_1643.GetHash() && nHeight == 1263531) {
return true;
}
unsigned char ch_1644[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x50, 0x48, 0x13, 0x04, 0x6f, 0x38, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x2a, 0x9a, 0x91, 0x44, 0x7b, 0x08, 0x1a, 0xde, 0x99, 0x3c, 0x66, 0x61, 0x95, 0xab, 0x5d, 0x21, 0x72, 0xd5, 0x56, 0x14, 0x25, 0x4e, 0x82, 0x21, 0x31, 0xaa, 0x04, 0x59, 0xb8, 0x78, 0xa2, 0xe0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xd9, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xf1, 0x5f, 0x6f, 0x18, 0x65, 0x1f, 0xe5, 0xed, 0x98, 0xda, 0x18, 0x05, 0xdf, 0x8d, 0xb9, 0x1f, 0x5a, 0x2e, 0x38, 0x6f, 0x46, 0x4c, 0xf3, 0x89, 0x03, 0x52, 0xb0, 0x36, 0x6b, 0xe9, 0xaf, 0x5f, 0xb8, 0xd2, 0x6a, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1644(ch_1644, ch_1644 + sizeof(ch_1644) -1);
CDataStream stream_1644(vch_1644, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1644;
stream_1644 >> txHist_1644;

if(block.vtx[0]->GetHash() == txHist_1644.GetHash() && nHeight == 1263696) {
return true;
}
unsigned char ch_1645[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x72, 0x48, 0x13, 0x04, 0xb0, 0x40, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe4, 0xf0, 0xdd, 0x3d, 0x08, 0xe4, 0x30, 0xcb, 0x1b, 0x1c, 0xf6, 0x79, 0xc8, 0x83, 0xe2, 0x63, 0x00, 0xc1, 0x2d, 0x05, 0xae, 0xbb, 0xab, 0xa9, 0x8a, 0x60, 0x08, 0x16, 0xa9, 0x72, 0x82, 0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x35, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1645(ch_1645, ch_1645 + sizeof(ch_1645) -1);
CDataStream stream_1645(vch_1645, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1645;
stream_1645 >> txHist_1645;

if(block.vtx[0]->GetHash() == txHist_1645.GetHash() && nHeight == 1263730) {
return true;
}
unsigned char ch_1646[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x02, 0x48, 0x13, 0x04, 0x7b, 0x21, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x08, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x94, 0xa9, 0x58, 0xe1, 0xd6, 0x67, 0x0d, 0x4d, 0x26, 0x28, 0x0d, 0xea, 0x8d, 0xe2, 0x1d, 0x65, 0xdf, 0xc8, 0xc1, 0x86, 0xd7, 0x94, 0x4d, 0x06, 0x50, 0x0d, 0x89, 0x8d, 0x59, 0x4f, 0x3b, 0xec, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1646(ch_1646, ch_1646 + sizeof(ch_1646) -1);
CDataStream stream_1646(vch_1646, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1646;
stream_1646 >> txHist_1646;

if(block.vtx[0]->GetHash() == txHist_1646.GetHash() && nHeight == 1263618) {
return true;
}
unsigned char ch_1647[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa4, 0x47, 0x13, 0x04, 0x8a, 0xfe, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x87, 0x15, 0x04, 0xd0, 0xce, 0x75, 0x6b, 0x8c, 0x60, 0xb5, 0x3f, 0xd4, 0xea, 0x3e, 0xee, 0x74, 0x24, 0x69, 0x45, 0xbc, 0x8a, 0x2c, 0xeb, 0xdd, 0x2f, 0xed, 0xe6, 0x24, 0x7b, 0x8b, 0x31, 0xa7, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xd5, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1647(ch_1647, ch_1647 + sizeof(ch_1647) -1);
CDataStream stream_1647(vch_1647, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1647;
stream_1647 >> txHist_1647;

if(block.vtx[0]->GetHash() == txHist_1647.GetHash() && nHeight == 1263524) {
return true;
}
unsigned char ch_1648[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x71, 0x48, 0x13, 0x04, 0x88, 0x40, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe4, 0xf0, 0xdd, 0x3d, 0x08, 0xe4, 0x30, 0xcb, 0x1b, 0x1c, 0xf6, 0x79, 0xc8, 0x83, 0xe2, 0x63, 0x00, 0xc1, 0x2d, 0x05, 0xae, 0xbb, 0xab, 0xa9, 0x8a, 0x60, 0x08, 0x16, 0xa9, 0x72, 0x82, 0xd1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x1b, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1648(ch_1648, ch_1648 + sizeof(ch_1648) -1);
CDataStream stream_1648(vch_1648, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1648;
stream_1648 >> txHist_1648;

if(block.vtx[0]->GetHash() == txHist_1648.GetHash() && nHeight == 1263729) {
return true;
}
unsigned char ch_1649[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x9d, 0x47, 0x13, 0x04, 0xfa, 0xfc, 0x34, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xff, 0xd6, 0x0d, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x3a, 0x72, 0x10, 0x4d, 0x3c, 0xa6, 0x78, 0xb2, 0x49, 0x75, 0xf2, 0x7b, 0x3e, 0x19, 0x11, 0xe6, 0xc7, 0x01, 0x0a, 0xa8, 0x9d, 0xd7, 0x2d, 0xe1, 0xc4, 0x18, 0x69, 0xfd, 0xb4, 0x55, 0x6e, 0xe0, 0xb0, 0xf4, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1649(ch_1649, ch_1649 + sizeof(ch_1649) -1);
CDataStream stream_1649(vch_1649, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1649;
stream_1649 >> txHist_1649;

if(block.vtx[0]->GetHash() == txHist_1649.GetHash() && nHeight == 1263517) {
return true;
}
unsigned char ch_1650[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x70, 0x48, 0x13, 0x04, 0xcb, 0x3f, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x63, 0x7b, 0x0a, 0xb7, 0xa1, 0x67, 0xdf, 0x19, 0x9b, 0xb6, 0x06, 0x70, 0x5a, 0x58, 0xec, 0x75, 0xca, 0xb4, 0x94, 0xf1, 0x2c, 0xc5, 0x33, 0x7f, 0xc0, 0xe1, 0x50, 0x41, 0x0c, 0x8a, 0x1e, 0xf0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x10, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1650(ch_1650, ch_1650 + sizeof(ch_1650) -1);
CDataStream stream_1650(vch_1650, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1650;
stream_1650 >> txHist_1650;

if(block.vtx[0]->GetHash() == txHist_1650.GetHash() && nHeight == 1263728) {
return true;
}
unsigned char ch_1651[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xfc, 0x47, 0x13, 0x04, 0x12, 0x20, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x53, 0x0c, 0x3a, 0xaf, 0x2c, 0x26, 0x2e, 0x6f, 0xfb, 0xb5, 0xd4, 0xf9, 0x99, 0x73, 0x32, 0xf7, 0x3a, 0xde, 0x27, 0xc4, 0xe3, 0xa8, 0x95, 0x69, 0xe9, 0x5e, 0x1f, 0x67, 0x90, 0x8e, 0xa1, 0xd4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xe2, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1651(ch_1651, ch_1651 + sizeof(ch_1651) -1);
CDataStream stream_1651(vch_1651, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1651;
stream_1651 >> txHist_1651;

if(block.vtx[0]->GetHash() == txHist_1651.GetHash() && nHeight == 1263612) {
return true;
}
unsigned char ch_1652[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x96, 0x47, 0x13, 0x04, 0xd9, 0xf9, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x3b, 0xf9, 0x0a, 0x8f, 0x3e, 0x7e, 0xed, 0xae, 0x3f, 0x48, 0xd8, 0x65, 0x5c, 0x6c, 0xbb, 0x7a, 0xa4, 0x65, 0xfa, 0xab, 0xec, 0xa6, 0xe8, 0xa4, 0x50, 0x2f, 0x1d, 0x0a, 0xf6, 0xac, 0x24, 0x12, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x48, 0x6a, 0xf3, 0xfe, 0xc0, 0x3b, 0x00, 0xa6, 0x2f, 0x26, 0x4e, 0x42, 0x6d, 0x67, 0xb1, 0xa4, 0x61, 0x66, 0x59, 0xaf, 0xb0, 0x1b, 0xf7, 0x1c, 0x4c, 0x59, 0x3a, 0xce, 0xce, 0x44, 0x2e, 0x12, 0x30, 0x33, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1652(ch_1652, ch_1652 + sizeof(ch_1652) -1);
CDataStream stream_1652(vch_1652, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1652;
stream_1652 >> txHist_1652;

if(block.vtx[0]->GetHash() == txHist_1652.GetHash() && nHeight == 1263510) {
return true;
}
unsigned char ch_1653[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x45, 0x48, 0x13, 0x04, 0xf1, 0x36, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x83, 0xc6, 0xed, 0xe6, 0x33, 0xf9, 0xcd, 0x07, 0x4e, 0x2d, 0xd9, 0xc4, 0xf9, 0x4d, 0x0b, 0x0e, 0x43, 0x32, 0x21, 0x24, 0x11, 0x1f, 0x25, 0x44, 0xb2, 0x3d, 0xeb, 0x70, 0xaa, 0xc5, 0x22, 0x7c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xc9, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1653(ch_1653, ch_1653 + sizeof(ch_1653) -1);
CDataStream stream_1653(vch_1653, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1653;
stream_1653 >> txHist_1653;

if(block.vtx[0]->GetHash() == txHist_1653.GetHash() && nHeight == 1263685) {
return true;
}
unsigned char ch_1654[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x6f, 0x48, 0x13, 0x04, 0x9b, 0x3f, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe0, 0x90, 0x45, 0x81, 0x62, 0x31, 0x8d, 0x76, 0x5d, 0x10, 0x06, 0xf5, 0x08, 0xc7, 0xad, 0x90, 0x20, 0x98, 0xe7, 0xdb, 0x19, 0x86, 0x22, 0x1b, 0x1e, 0x83, 0xaa, 0xbf, 0xcb, 0x2c, 0x3d, 0xf9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0xb0, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xba, 0xe7, 0x0f, 0x21, 0xd9, 0xaf, 0x93, 0x43, 0x54, 0x86, 0xb1, 0x08, 0x71, 0xa7, 0x75, 0x31, 0xd4, 0xbd, 0xc7, 0x9d, 0x33, 0x16, 0xd0, 0x23, 0xe9, 0x06, 0x74, 0xaa, 0xce, 0xb8, 0x75, 0x70, 0xc9, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1654(ch_1654, ch_1654 + sizeof(ch_1654) -1);
CDataStream stream_1654(vch_1654, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1654;
stream_1654 >> txHist_1654;

if(block.vtx[0]->GetHash() == txHist_1654.GetHash() && nHeight == 1263727) {
return true;
}
unsigned char ch_1655[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x18, 0x48, 0x13, 0x04, 0xfe, 0x2a, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x33, 0x5b, 0x7c, 0x20, 0x39, 0x93, 0x81, 0x8e, 0xe4, 0xfb, 0x7d, 0xed, 0xe3, 0x04, 0xf9, 0x14, 0xc3, 0xc2, 0x58, 0x9e, 0x02, 0x92, 0x31, 0x22, 0x9a, 0xa9, 0xd6, 0x21, 0x7e, 0xc0, 0xfb, 0xd0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xe6, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x05, 0xe7, 0x05, 0x17, 0xd2, 0xe6, 0x3d, 0xc2, 0xbc, 0x3a, 0x54, 0x00, 0x7a, 0xbd, 0xae, 0xe6, 0xfc, 0xc2, 0x49, 0xc2, 0x53, 0x9f, 0x17, 0x9f, 0xdc, 0x62, 0x8c, 0xd5, 0x7a, 0xd4, 0xa3, 0x73, 0x40, 0xd8, 0xe1, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1655(ch_1655, ch_1655 + sizeof(ch_1655) -1);
CDataStream stream_1655(vch_1655, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1655;
stream_1655 >> txHist_1655;

if(block.vtx[0]->GetHash() == txHist_1655.GetHash() && nHeight == 1263640) {
return true;
}
unsigned char ch_1656[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x41, 0x48, 0x13, 0x04, 0x4d, 0x34, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x8d, 0xa6, 0xcb, 0xdf, 0x30, 0x2c, 0xae, 0xf2, 0x1c, 0xeb, 0x5a, 0xc0, 0x04, 0x8e, 0x6d, 0x0e, 0xa9, 0x74, 0x0e, 0xaf, 0x3f, 0xd2, 0xa1, 0x75, 0x10, 0xbb, 0xce, 0xf4, 0x60, 0x2b, 0x26, 0x83, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0xac, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xc4, 0xc1, 0x2a, 0x56, 0xc1, 0x16, 0xe7, 0xd0, 0x4d, 0x4c, 0xd2, 0x8a, 0x10, 0xfa, 0xad, 0x1c, 0x10, 0x6d, 0x1a, 0x5c, 0xc5, 0x5e, 0x9e, 0x28, 0xa9, 0x81, 0x9a, 0x0f, 0x48, 0x41, 0x42, 0x19, 0x30, 0x33, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1656(ch_1656, ch_1656 + sizeof(ch_1656) -1);
CDataStream stream_1656(vch_1656, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1656;
stream_1656 >> txHist_1656;

if(block.vtx[0]->GetHash() == txHist_1656.GetHash() && nHeight == 1263681) {
return true;
}
unsigned char ch_1657[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x6d, 0x48, 0x13, 0x04, 0x24, 0x3f, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9c, 0xcd, 0xa3, 0x94, 0x39, 0xff, 0x8f, 0x71, 0x0d, 0xf9, 0xb0, 0xcb, 0x68, 0x62, 0x99, 0x33, 0x15, 0x8e, 0xe1, 0xbe, 0xd2, 0x34, 0x4d, 0xf4, 0xc9, 0xee, 0x84, 0xf4, 0xf7, 0x5c, 0x8c, 0x5e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x30, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1657(ch_1657, ch_1657 + sizeof(ch_1657) -1);
CDataStream stream_1657(vch_1657, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1657;
stream_1657 >> txHist_1657;

if(block.vtx[0]->GetHash() == txHist_1657.GetHash() && nHeight == 1263725) {
return true;
}
unsigned char ch_1658[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x14, 0x48, 0x13, 0x04, 0xe1, 0x28, 0x35, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x06, 0x49, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1658(ch_1658, ch_1658 + sizeof(ch_1658) -1);
CDataStream stream_1658(vch_1658, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1658;
stream_1658 >> txHist_1658;

if(block.vtx[0]->GetHash() == txHist_1658.GetHash() && nHeight == 1263636) {
return true;
}
unsigned char ch_1659[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3c, 0x48, 0x13, 0x04, 0xc2, 0x33, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x97, 0x41, 0x16, 0x55, 0xf5, 0x4e, 0x0f, 0x5f, 0xe2, 0x31, 0xf8, 0xc9, 0xad, 0x1e, 0xad, 0x39, 0x97, 0xd1, 0x46, 0x7d, 0x7d, 0x6f, 0xd5, 0xbf, 0x6f, 0xc5, 0x35, 0x4a, 0x00, 0xf3, 0x30, 0x7c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0xb2, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1659(ch_1659, ch_1659 + sizeof(ch_1659) -1);
CDataStream stream_1659(vch_1659, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1659;
stream_1659 >> txHist_1659;

if(block.vtx[0]->GetHash() == txHist_1659.GetHash() && nHeight == 1263676) {
return true;
}
unsigned char ch_1660[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x6a, 0x48, 0x13, 0x04, 0x3e, 0x3e, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x07, 0x62, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1660(ch_1660, ch_1660 + sizeof(ch_1660) -1);
CDataStream stream_1660(vch_1660, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1660;
stream_1660 >> txHist_1660;

if(block.vtx[0]->GetHash() == txHist_1660.GetHash() && nHeight == 1263722) {
return true;
}
unsigned char ch_1661[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3b, 0x48, 0x13, 0x04, 0xb2, 0x33, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd9, 0xaf, 0x5d, 0x70, 0x74, 0xd5, 0x00, 0x83, 0x55, 0x2f, 0x27, 0x3b, 0xd7, 0x59, 0xfe, 0x1c, 0x90, 0xc6, 0x63, 0x82, 0x3b, 0xd3, 0x0b, 0x7a, 0xdb, 0xa4, 0xd7, 0xb1, 0xd2, 0x8e, 0xad, 0xc3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xee, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1661(ch_1661, ch_1661 + sizeof(ch_1661) -1);
CDataStream stream_1661(vch_1661, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1661;
stream_1661 >> txHist_1661;

if(block.vtx[0]->GetHash() == txHist_1661.GetHash() && nHeight == 1263675) {
return true;
}
unsigned char ch_1662[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x37, 0x48, 0x13, 0x04, 0x75, 0x33, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb2, 0xe8, 0xfe, 0x68, 0x61, 0xf4, 0xee, 0x5a, 0xfa, 0xd3, 0x3a, 0x83, 0x15, 0x93, 0xe7, 0xc2, 0x8c, 0x51, 0x4e, 0x31, 0xbe, 0x92, 0x9e, 0xa4, 0xb7, 0x4d, 0xf7, 0x66, 0xe8, 0x1d, 0xc9, 0x19, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0xff, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x15, 0xe9, 0x2d, 0x92, 0x9b, 0x88, 0x6d, 0xf0, 0x39, 0x18, 0xf0, 0x7d, 0xfc, 0x79, 0x2c, 0x4e, 0xe8, 0x68, 0x76, 0xff, 0x23, 0x22, 0x84, 0x07, 0xe1, 0xc1, 0x1f, 0x04, 0xd5, 0x68, 0xf2, 0x9f, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1662(ch_1662, ch_1662 + sizeof(ch_1662) -1);
CDataStream stream_1662(vch_1662, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1662;
stream_1662 >> txHist_1662;

if(block.vtx[0]->GetHash() == txHist_1662.GetHash() && nHeight == 1263671) {
return true;
}
unsigned char ch_1663[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x67, 0x48, 0x13, 0x04, 0x58, 0x3d, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf6, 0x70, 0x3a, 0x40, 0x6b, 0x8f, 0xe9, 0x19, 0x46, 0x60, 0x2b, 0x6c, 0x06, 0x48, 0xd4, 0xae, 0x11, 0xba, 0x22, 0xf2, 0xf5, 0xfe, 0x2b, 0x8c, 0xbd, 0xc2, 0xb8, 0x9c, 0x2b, 0xf4, 0xe4, 0x9a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x1b, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1663(ch_1663, ch_1663 + sizeof(ch_1663) -1);
CDataStream stream_1663(vch_1663, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1663;
stream_1663 >> txHist_1663;

if(block.vtx[0]->GetHash() == txHist_1663.GetHash() && nHeight == 1263719) {
return true;
}
unsigned char ch_1664[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x36, 0x48, 0x13, 0x04, 0x48, 0x33, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb2, 0xe8, 0xfe, 0x68, 0x61, 0xf4, 0xee, 0x5a, 0xfa, 0xd3, 0x3a, 0x83, 0x15, 0x93, 0xe7, 0xc2, 0x8c, 0x51, 0x4e, 0x31, 0xbe, 0x92, 0x9e, 0xa4, 0xb7, 0x4d, 0xf7, 0x66, 0xe8, 0x1d, 0xc9, 0x19, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1664(ch_1664, ch_1664 + sizeof(ch_1664) -1);
CDataStream stream_1664(vch_1664, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1664;
stream_1664 >> txHist_1664;

if(block.vtx[0]->GetHash() == txHist_1664.GetHash() && nHeight == 1263670) {
return true;
}
unsigned char ch_1665[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xec, 0x47, 0x13, 0x04, 0x8e, 0x1a, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x55, 0x46, 0xce, 0x78, 0x63, 0x64, 0xb2, 0x3c, 0x1b, 0x2a, 0xeb, 0x30, 0xcc, 0x7e, 0x3b, 0x6c, 0x4e, 0x9d, 0x84, 0x13, 0x54, 0xff, 0xe1, 0x17, 0x14, 0x19, 0xb3, 0xbb, 0x98, 0x31, 0x87, 0x70, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xfd, 0x08, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1665(ch_1665, ch_1665 + sizeof(ch_1665) -1);
CDataStream stream_1665(vch_1665, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1665;
stream_1665 >> txHist_1665;

if(block.vtx[0]->GetHash() == txHist_1665.GetHash() && nHeight == 1263596) {
return true;
}
unsigned char ch_1666[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x32, 0x48, 0x13, 0x04, 0x9d, 0x32, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x2d, 0xa4, 0x06, 0x5d, 0x84, 0x1e, 0x9b, 0x51, 0x92, 0x1e, 0x17, 0x17, 0x9f, 0xcc, 0x04, 0xcd, 0x7a, 0xe8, 0xe4, 0x90, 0xcc, 0xab, 0x21, 0x94, 0x22, 0x05, 0xe5, 0x6a, 0x68, 0xfe, 0xe7, 0x34, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0xa8, 0x19, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1666(ch_1666, ch_1666 + sizeof(ch_1666) -1);
CDataStream stream_1666(vch_1666, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1666;
stream_1666 >> txHist_1666;

if(block.vtx[0]->GetHash() == txHist_1666.GetHash() && nHeight == 1263666) {
return true;
}
unsigned char ch_1667[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x64, 0x48, 0x13, 0x04, 0xb9, 0x3c, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x30, 0x35, 0xe2, 0xb1, 0x28, 0x36, 0xe9, 0xe6, 0xce, 0xcd, 0x4d, 0x40, 0x53, 0x7d, 0x81, 0xea, 0x35, 0xb8, 0x54, 0xd3, 0xb7, 0x22, 0x7b, 0x1d, 0x83, 0x38, 0x70, 0x05, 0xe4, 0x1a, 0x2f, 0x87, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x3d, 0x19, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1667(ch_1667, ch_1667 + sizeof(ch_1667) -1);
CDataStream stream_1667(vch_1667, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1667;
stream_1667 >> txHist_1667;

if(block.vtx[0]->GetHash() == txHist_1667.GetHash() && nHeight == 1263716) {
return true;
}
unsigned char ch_1668[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x30, 0x48, 0x13, 0x04, 0x78, 0x32, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x52, 0xc0, 0x2e, 0x53, 0x4e, 0x3b, 0xac, 0xa1, 0x8e, 0xea, 0x58, 0x0f, 0x8f, 0xdb, 0x1d, 0xcb, 0x01, 0x7a, 0xd1, 0xd9, 0x6a, 0x50, 0x16, 0x5e, 0x93, 0x17, 0x5c, 0xc5, 0xdd, 0x1b, 0x6b, 0x82, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0x83, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1668(ch_1668, ch_1668 + sizeof(ch_1668) -1);
CDataStream stream_1668(vch_1668, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1668;
stream_1668 >> txHist_1668;

if(block.vtx[0]->GetHash() == txHist_1668.GetHash() && nHeight == 1263664) {
return true;
}
unsigned char ch_1669[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe6, 0x47, 0x13, 0x04, 0x58, 0x18, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x33, 0x08, 0xa4, 0xb2, 0xea, 0xed, 0xa4, 0x1c, 0xbb, 0x0a, 0x4c, 0x28, 0xed, 0x33, 0x13, 0x43, 0xae, 0x89, 0xf6, 0xd0, 0x6e, 0x89, 0xd4, 0xb1, 0x00, 0x68, 0xea, 0xde, 0x79, 0x21, 0x5d, 0x74, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xfb, 0xf7, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x4e, 0x54, 0xaf, 0x14, 0x32, 0x72, 0x5d, 0x71, 0x07, 0xf2, 0x3e, 0xd8, 0x96, 0xc4, 0x32, 0x8c, 0x7c, 0x54, 0x94, 0x23, 0x2f, 0xa5, 0x02, 0x45, 0x10, 0xfe, 0x63, 0x64, 0xb0, 0xa0, 0x2e, 0xa9, 0x50, 0xfe, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1669(ch_1669, ch_1669 + sizeof(ch_1669) -1);
CDataStream stream_1669(vch_1669, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1669;
stream_1669 >> txHist_1669;

if(block.vtx[0]->GetHash() == txHist_1669.GetHash() && nHeight == 1263590) {
return true;
}
unsigned char ch_1670[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2c, 0x48, 0x13, 0x04, 0x33, 0x32, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x09, 0x55, 0x1b, 0xe2, 0x61, 0xd0, 0xb3, 0xe0, 0x9c, 0x9c, 0xef, 0xf0, 0x4a, 0xdd, 0xa2, 0xf8, 0x2a, 0xcb, 0x90, 0x39, 0x8c, 0x46, 0x9c, 0x29, 0x77, 0xee, 0x81, 0xf6, 0xc9, 0x5f, 0x6d, 0xe6, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x0f, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1670(ch_1670, ch_1670 + sizeof(ch_1670) -1);
CDataStream stream_1670(vch_1670, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1670;
stream_1670 >> txHist_1670;

if(block.vtx[0]->GetHash() == txHist_1670.GetHash() && nHeight == 1263660) {
return true;
}
unsigned char ch_1671[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x61, 0x48, 0x13, 0x04, 0x2a, 0x3c, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc4, 0x91, 0xdf, 0x77, 0xa4, 0x1f, 0xcc, 0x1c, 0x10, 0x75, 0x60, 0x81, 0xac, 0xd5, 0x9e, 0xd8, 0x3c, 0x19, 0xbf, 0xe4, 0x74, 0x14, 0xcd, 0x26, 0x09, 0x28, 0xe4, 0x74, 0x67, 0xb0, 0xb8, 0xdf, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0xa6, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1671(ch_1671, ch_1671 + sizeof(ch_1671) -1);
CDataStream stream_1671(vch_1671, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1671;
stream_1671 >> txHist_1671;

if(block.vtx[0]->GetHash() == txHist_1671.GetHash() && nHeight == 1263713) {
return true;
}
unsigned char ch_1672[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2b, 0x48, 0x13, 0x04, 0x2a, 0x32, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x67, 0x6b, 0x5e, 0x5e, 0x22, 0x37, 0xde, 0x09, 0x33, 0x7b, 0x18, 0xab, 0x9d, 0xdf, 0x3a, 0xed, 0x50, 0x85, 0xa3, 0xc7, 0x3f, 0x5d, 0x37, 0x09, 0xc0, 0xa7, 0x97, 0x16, 0x85, 0x8a, 0xfb, 0x24, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0x9e, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1672(ch_1672, ch_1672 + sizeof(ch_1672) -1);
CDataStream stream_1672(vch_1672, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1672;
stream_1672 >> txHist_1672;

if(block.vtx[0]->GetHash() == txHist_1672.GetHash() && nHeight == 1263659) {
return true;
}
unsigned char ch_1673[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe0, 0x47, 0x13, 0x04, 0x33, 0x15, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x08, 0x39, 0x69, 0x16, 0xb2, 0x27, 0xe0, 0x59, 0xb2, 0x29, 0xbe, 0xf8, 0x10, 0xdb, 0x5c, 0xcd, 0xc4, 0xe0, 0xcb, 0x75, 0x5e, 0x1b, 0x5d, 0x33, 0x12, 0x44, 0xe7, 0xbc, 0x06, 0x86, 0xfd, 0x95, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x5b, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe9, 0x83, 0xf3, 0x22, 0x31, 0xe5, 0xc2, 0x37, 0xef, 0xe7, 0x6c, 0xf0, 0xd3, 0x04, 0x8e, 0x86, 0x14, 0x4e, 0x7b, 0x3b, 0x28, 0x2b, 0x76, 0x25, 0x58, 0x09, 0x00, 0xd2, 0x0a, 0x81, 0x16, 0x8e, 0x60, 0x00, 0x63, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1673(ch_1673, ch_1673 + sizeof(ch_1673) -1);
CDataStream stream_1673(vch_1673, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1673;
stream_1673 >> txHist_1673;

if(block.vtx[0]->GetHash() == txHist_1673.GetHash() && nHeight == 1263584) {
return true;
}
unsigned char ch_1674[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x27, 0x48, 0x13, 0x04, 0x9f, 0x31, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd1, 0xed, 0xa8, 0xba, 0x56, 0xd1, 0x77, 0x3c, 0x33, 0xa1, 0x3f, 0x77, 0xb8, 0x5c, 0x55, 0x9b, 0x6f, 0x34, 0x34, 0xec, 0x09, 0x83, 0xf9, 0x30, 0xea, 0x81, 0xe2, 0x9d, 0xaf, 0xd4, 0x16, 0x1d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0xff, 0xf1, 0x8c, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1674(ch_1674, ch_1674 + sizeof(ch_1674) -1);
CDataStream stream_1674(vch_1674, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1674;
stream_1674 >> txHist_1674;

if(block.vtx[0]->GetHash() == txHist_1674.GetHash() && nHeight == 1263655) {
return true;
}
unsigned char ch_1675[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5e, 0x48, 0x13, 0x04, 0x83, 0x3b, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xe9, 0xe7, 0x00, 0x5c, 0x31, 0xe2, 0xb0, 0x4a, 0xb3, 0xe7, 0xad, 0xb5, 0x96, 0x13, 0x59, 0x06, 0xd5, 0x06, 0xff, 0x34, 0x02, 0xd4, 0x39, 0xb0, 0x6b, 0xce, 0x60, 0xe0, 0x27, 0x9b, 0xe0, 0x67, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0xa0, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1675(ch_1675, ch_1675 + sizeof(ch_1675) -1);
CDataStream stream_1675(vch_1675, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1675;
stream_1675 >> txHist_1675;

if(block.vtx[0]->GetHash() == txHist_1675.GetHash() && nHeight == 1263710) {
return true;
}
unsigned char ch_1676[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x26, 0x48, 0x13, 0x04, 0x76, 0x31, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd1, 0xed, 0xa8, 0xba, 0x56, 0xd1, 0x77, 0x3c, 0x33, 0xa1, 0x3f, 0x77, 0xb8, 0x5c, 0x55, 0x9b, 0x6f, 0x34, 0x34, 0xec, 0x09, 0x83, 0xf9, 0x30, 0xea, 0x81, 0xe2, 0x9d, 0xaf, 0xd4, 0x16, 0x1d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf9, 0x1d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xb4, 0xd6, 0x73, 0x92, 0x60, 0x8d, 0xa4, 0x32, 0x54, 0xcc, 0x37, 0x37, 0x53, 0x2e, 0x3d, 0xcd, 0xbd, 0xda, 0x0c, 0x2f, 0x2d, 0xe6, 0x38, 0x70, 0x3a, 0xe7, 0x38, 0x0a, 0x22, 0x18, 0x71, 0x6e, 0x60, 0xda, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1676(ch_1676, ch_1676 + sizeof(ch_1676) -1);
CDataStream stream_1676(vch_1676, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1676;
stream_1676 >> txHist_1676;

if(block.vtx[0]->GetHash() == txHist_1676.GetHash() && nHeight == 1263654) {
return true;
}
unsigned char ch_1677[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xda, 0x47, 0x13, 0x04, 0x04, 0x13, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x66, 0x4f, 0xed, 0x4d, 0x76, 0x85, 0x1f, 0xb5, 0x4f, 0xd0, 0x87, 0x40, 0xb6, 0xc5, 0x73, 0x76, 0x4c, 0x57, 0x0a, 0x44, 0x66, 0xff, 0xa2, 0x9c, 0x8e, 0x72, 0x10, 0x5d, 0xe1, 0x3f, 0xaf, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0xff, 0xf2, 0x6f, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1677(ch_1677, ch_1677 + sizeof(ch_1677) -1);
CDataStream stream_1677(vch_1677, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1677;
stream_1677 >> txHist_1677;

if(block.vtx[0]->GetHash() == txHist_1677.GetHash() && nHeight == 1263578) {
return true;
}
unsigned char ch_1678[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4c, 0x48, 0x13, 0x04, 0xba, 0x37, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x77, 0xcc, 0xe5, 0xed, 0x8e, 0x54, 0xe3, 0x61, 0x43, 0x69, 0x4b, 0x4d, 0xde, 0x19, 0x9b, 0x9e, 0x70, 0xdc, 0x00, 0x5b, 0xf7, 0xbf, 0x5c, 0x9b, 0x2f, 0x58, 0xd9, 0xa9, 0xb5, 0xe5, 0x47, 0x05, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x0a, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1678(ch_1678, ch_1678 + sizeof(ch_1678) -1);
CDataStream stream_1678(vch_1678, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1678;
stream_1678 >> txHist_1678;

if(block.vtx[0]->GetHash() == txHist_1678.GetHash() && nHeight == 1263692) {
return true;
}
unsigned char ch_1679[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x22, 0x48, 0x13, 0x04, 0x84, 0x2f, 0x35, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x06, 0x75, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1679(ch_1679, ch_1679 + sizeof(ch_1679) -1);
CDataStream stream_1679(vch_1679, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1679;
stream_1679 >> txHist_1679;

if(block.vtx[0]->GetHash() == txHist_1679.GetHash() && nHeight == 1263650) {
return true;
}
unsigned char ch_1680[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd4, 0x47, 0x13, 0x04, 0x31, 0x10, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xd5, 0x71, 0x15, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x8b, 0x05, 0xf4, 0xfe, 0x9f, 0x42, 0x98, 0xac, 0x02, 0xed, 0x25, 0xe7, 0xc6, 0xda, 0x88, 0xad, 0x5c, 0x42, 0xc3, 0xab, 0xf2, 0x8d, 0x8a, 0x34, 0x61, 0x1f, 0x6e, 0xd2, 0x35, 0xf4, 0xad, 0xa8, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1680(ch_1680, ch_1680 + sizeof(ch_1680) -1);
CDataStream stream_1680(vch_1680, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1680;
stream_1680 >> txHist_1680;

if(block.vtx[0]->GetHash() == txHist_1680.GetHash() && nHeight == 1263572) {
return true;
}
unsigned char ch_1681[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1f, 0x48, 0x13, 0x04, 0x0c, 0x2f, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x69, 0x99, 0x4b, 0xd9, 0xe3, 0xb0, 0x95, 0xa2, 0xce, 0x10, 0xdc, 0xa8, 0x16, 0x89, 0x8b, 0x53, 0xed, 0x73, 0x84, 0x19, 0x7d, 0x93, 0xf1, 0x70, 0x83, 0x2c, 0x4a, 0x25, 0x12, 0x84, 0x4f, 0x9a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x06, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x24, 0x72, 0xc6, 0x7f, 0x5b, 0x40, 0x15, 0x72, 0x3f, 0x84, 0x5d, 0xb5, 0xd5, 0x91, 0xfb, 0x54, 0x75, 0x65, 0xbb, 0xf5, 0xa8, 0xcf, 0x03, 0x5d, 0xbb, 0x2d, 0x3e, 0xbc, 0x08, 0xc6, 0xdb, 0xcb, 0xf0, 0x1a, 0x63, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1681(ch_1681, ch_1681 + sizeof(ch_1681) -1);
CDataStream stream_1681(vch_1681, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1681;
stream_1681 >> txHist_1681;

if(block.vtx[0]->GetHash() == txHist_1681.GetHash() && nHeight == 1263647) {
return true;
}
unsigned char ch_1682[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x48, 0x48, 0x13, 0x04, 0x5e, 0x37, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x06, 0x0f, 0xc0, 0xa3, 0x77, 0x42, 0x6e, 0xb2, 0x05, 0x23, 0xbc, 0x1d, 0xa7, 0xe9, 0x16, 0x13, 0x11, 0x8b, 0x12, 0xc1, 0x60, 0x77, 0xed, 0x63, 0xdc, 0x67, 0xef, 0xff, 0xf0, 0xec, 0xee, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x42, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1682(ch_1682, ch_1682 + sizeof(ch_1682) -1);
CDataStream stream_1682(vch_1682, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1682;
stream_1682 >> txHist_1682;

if(block.vtx[0]->GetHash() == txHist_1682.GetHash() && nHeight == 1263688) {
return true;
}
unsigned char ch_1683[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xce, 0x47, 0x13, 0x04, 0x11, 0x0f, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5d, 0xc1, 0x13, 0x51, 0x1f, 0x4b, 0x49, 0xb9, 0x6e, 0x29, 0x45, 0x00, 0x5e, 0x44, 0x66, 0xf2, 0x83, 0xed, 0x74, 0xdf, 0xf2, 0x43, 0x72, 0xe5, 0xc9, 0x81, 0xee, 0x8c, 0x77, 0x70, 0x2d, 0x92, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0xff, 0xf2, 0x63, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1683(ch_1683, ch_1683 + sizeof(ch_1683) -1);
CDataStream stream_1683(vch_1683, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1683;
stream_1683 >> txHist_1683;

if(block.vtx[0]->GetHash() == txHist_1683.GetHash() && nHeight == 1263566) {
return true;
}
unsigned char ch_1684[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x29, 0x48, 0x13, 0x04, 0xd3, 0x31, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x64, 0xff, 0xb2, 0x2f, 0x1e, 0xeb, 0xe8, 0xfb, 0xcf, 0x87, 0x6a, 0x1b, 0xae, 0x94, 0xc3, 0xc0, 0xde, 0x87, 0x99, 0xf4, 0x25, 0x25, 0xa6, 0xed, 0x9d, 0xee, 0xad, 0xa5, 0xe5, 0x59, 0xfa, 0x6f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0xb7, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1684(ch_1684, ch_1684 + sizeof(ch_1684) -1);
CDataStream stream_1684(vch_1684, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1684;
stream_1684 >> txHist_1684;

if(block.vtx[0]->GetHash() == txHist_1684.GetHash() && nHeight == 1263657) {
return true;
}
unsigned char ch_1685[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1a, 0x48, 0x13, 0x04, 0x12, 0x2c, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x41, 0x8a, 0xe5, 0x6e, 0x57, 0xdf, 0x21, 0x3f, 0xca, 0xdd, 0xd6, 0x41, 0xca, 0x12, 0x99, 0xcd, 0x8a, 0xe4, 0x23, 0xfe, 0xa0, 0x36, 0xef, 0x6b, 0x38, 0x22, 0x7f, 0x49, 0x3b, 0x82, 0xe1, 0x89, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfb, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1685(ch_1685, ch_1685 + sizeof(ch_1685) -1);
CDataStream stream_1685(vch_1685, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1685;
stream_1685 >> txHist_1685;

if(block.vtx[0]->GetHash() == txHist_1685.GetHash() && nHeight == 1263642) {
return true;
}
unsigned char ch_1686[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x44, 0x48, 0x13, 0x04, 0xc6, 0x36, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x83, 0xc6, 0xed, 0xe6, 0x33, 0xf9, 0xcd, 0x07, 0x4e, 0x2d, 0xd9, 0xc4, 0xf9, 0x4d, 0x0b, 0x0e, 0x43, 0x32, 0x21, 0x24, 0x11, 0x1f, 0x25, 0x44, 0xb2, 0x3d, 0xeb, 0x70, 0xaa, 0xc5, 0x22, 0x7c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x40, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1686(ch_1686, ch_1686 + sizeof(ch_1686) -1);
CDataStream stream_1686(vch_1686, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1686;
stream_1686 >> txHist_1686;

if(block.vtx[0]->GetHash() == txHist_1686.GetHash() && nHeight == 1263684) {
return true;
}
unsigned char ch_1687[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x19, 0x48, 0x13, 0x04, 0xff, 0x2a, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x33, 0x5b, 0x7c, 0x20, 0x39, 0x93, 0x81, 0x8e, 0xe4, 0xfb, 0x7d, 0xed, 0xe3, 0x04, 0xf9, 0x14, 0xc3, 0xc2, 0x58, 0x9e, 0x02, 0x92, 0x31, 0x22, 0x9a, 0xa9, 0xd6, 0x21, 0x7e, 0xc0, 0xfb, 0xd0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x05, 0x5e, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1687(ch_1687, ch_1687 + sizeof(ch_1687) -1);
CDataStream stream_1687(vch_1687, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1687;
stream_1687 >> txHist_1687;

if(block.vtx[0]->GetHash() == txHist_1687.GetHash() && nHeight == 1263641) {
return true;
}
unsigned char ch_1688[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x40, 0x48, 0x13, 0x04, 0x32, 0x34, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x8d, 0xa6, 0xcb, 0xdf, 0x30, 0x2c, 0xae, 0xf2, 0x1c, 0xeb, 0x5a, 0xc0, 0x04, 0x8e, 0x6d, 0x0e, 0xa9, 0x74, 0x0e, 0xaf, 0x3f, 0xd2, 0xa1, 0x75, 0x10, 0xbb, 0xce, 0xf4, 0x60, 0x2b, 0x26, 0x83, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xc4, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1688(ch_1688, ch_1688 + sizeof(ch_1688) -1);
CDataStream stream_1688(vch_1688, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1688;
stream_1688 >> txHist_1688;

if(block.vtx[0]->GetHash() == txHist_1688.GetHash() && nHeight == 1263680) {
return true;
}
unsigned char ch_1689[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc2, 0x47, 0x13, 0x04, 0xea, 0x0b, 0x35, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0x9f, 0x32, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x53, 0x61, 0x7c, 0x44, 0x8f, 0xb5, 0xfc, 0x5d, 0x9d, 0x76, 0xb9, 0xda, 0xb0, 0x33, 0xe3, 0xb5, 0x9a, 0x6b, 0x0b, 0xce, 0x4d, 0x6c, 0xa4, 0x32, 0xd1, 0x33, 0x05, 0x6f, 0x4e, 0x12, 0xe4, 0x5e, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1689(ch_1689, ch_1689 + sizeof(ch_1689) -1);
CDataStream stream_1689(vch_1689, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1689;
stream_1689 >> txHist_1689;

if(block.vtx[0]->GetHash() == txHist_1689.GetHash() && nHeight == 1263554) {
return true;
}
unsigned char ch_1690[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x31, 0x48, 0x13, 0x04, 0x9b, 0x32, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x2d, 0xa4, 0x06, 0x5d, 0x84, 0x1e, 0x9b, 0x51, 0x92, 0x1e, 0x17, 0x17, 0x9f, 0xcc, 0x04, 0xcd, 0x7a, 0xe8, 0xe4, 0x90, 0xcc, 0xab, 0x21, 0x94, 0x22, 0x05, 0xe5, 0x6a, 0x68, 0xfe, 0xe7, 0x34, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x04, 0xb1, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1690(ch_1690, ch_1690 + sizeof(ch_1690) -1);
CDataStream stream_1690(vch_1690, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1690;
stream_1690 >> txHist_1690;

if(block.vtx[0]->GetHash() == txHist_1690.GetHash() && nHeight == 1263665) {
return true;
}
unsigned char ch_1691[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x11, 0x48, 0x13, 0x04, 0x5f, 0x28, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xef, 0xb8, 0x07, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1691(ch_1691, ch_1691 + sizeof(ch_1691) -1);
CDataStream stream_1691(vch_1691, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1691;
stream_1691 >> txHist_1691;

if(block.vtx[0]->GetHash() == txHist_1691.GetHash() && nHeight == 1263633) {
return true;
}
unsigned char ch_1692[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x0f, 0x48, 0x13, 0x04, 0x7b, 0x27, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x23, 0x50, 0x36, 0xe4, 0x1d, 0x28, 0x98, 0x95, 0xba, 0x9b, 0xfb, 0x71, 0x8a, 0x91, 0x01, 0xd6, 0x2e, 0x86, 0xba, 0xfb, 0xe8, 0x97, 0xf1, 0xa7, 0xc1, 0x32, 0xad, 0x9e, 0xe7, 0x29, 0x39, 0x4c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x11, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1692(ch_1692, ch_1692 + sizeof(ch_1692) -1);
CDataStream stream_1692(vch_1692, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1692;
stream_1692 >> txHist_1692;

if(block.vtx[0]->GetHash() == txHist_1692.GetHash() && nHeight == 1263631) {
return true;
}
unsigned char ch_1693[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x0e, 0x48, 0x13, 0x04, 0x79, 0x27, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x23, 0x50, 0x36, 0xe4, 0x1d, 0x28, 0x98, 0x95, 0xba, 0x9b, 0xfb, 0x71, 0x8a, 0x91, 0x01, 0xd6, 0x2e, 0x86, 0xba, 0xfb, 0xe8, 0x97, 0xf1, 0xa7, 0xc1, 0x32, 0xad, 0x9e, 0xe7, 0x29, 0x39, 0x4c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0xff, 0xf2, 0x4a, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1693(ch_1693, ch_1693 + sizeof(ch_1693) -1);
CDataStream stream_1693(vch_1693, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1693;
stream_1693 >> txHist_1693;

if(block.vtx[0]->GetHash() == txHist_1693.GetHash() && nHeight == 1263630) {
return true;
}
unsigned char ch_1694[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x09, 0x48, 0x13, 0x04, 0x40, 0x26, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x13, 0x62, 0xfb, 0x09, 0xe9, 0x17, 0x61, 0xfb, 0x23, 0xf1, 0xfa, 0xab, 0xcc, 0xbc, 0xb2, 0xe5, 0x7c, 0xd0, 0x39, 0x45, 0x73, 0xef, 0xf4, 0x46, 0x18, 0xcc, 0xba, 0x46, 0x2c, 0x67, 0x70, 0x75, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x01, 0x8b, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1694(ch_1694, ch_1694 + sizeof(ch_1694) -1);
CDataStream stream_1694(vch_1694, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1694;
stream_1694 >> txHist_1694;

if(block.vtx[0]->GetHash() == txHist_1694.GetHash() && nHeight == 1263625) {
return true;
}
unsigned char ch_1695[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x06, 0x48, 0x13, 0x04, 0x30, 0x24, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x05, 0x68, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1695(ch_1695, ch_1695 + sizeof(ch_1695) -1);
CDataStream stream_1695(vch_1695, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1695;
stream_1695 >> txHist_1695;

if(block.vtx[0]->GetHash() == txHist_1695.GetHash() && nHeight == 1263622) {
return true;
}
unsigned char ch_1696[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xef, 0x47, 0x13, 0x04, 0xe0, 0x1a, 0x35, 0x5b, 0x08, 0x48, 0x00, 0x00, 0x06, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x42, 0x60, 0xce, 0x21, 0x38, 0xe0, 0x8a, 0xd5, 0x8a, 0x24, 0xee, 0xc4, 0xfe, 0xdb, 0xd4, 0xe9, 0x31, 0x17, 0x92, 0x11, 0x68, 0x68, 0xe2, 0xc0, 0xcf, 0x18, 0x81, 0x7b, 0xd3, 0x62, 0xf1, 0x71, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1696(ch_1696, ch_1696 + sizeof(ch_1696) -1);
CDataStream stream_1696(vch_1696, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1696;
stream_1696 >> txHist_1696;

if(block.vtx[0]->GetHash() == txHist_1696.GetHash() && nHeight == 1263599) {
return true;
}
unsigned char ch_1697[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x03, 0x48, 0x13, 0x04, 0x92, 0x23, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x14, 0x44, 0x38, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x90, 0x18, 0x21, 0x08, 0x93, 0x88, 0x07, 0xdd, 0xc2, 0x3f, 0xc1, 0xf4, 0x87, 0xd0, 0x5d, 0x60, 0x10, 0x1c, 0xfe, 0x90, 0x8a, 0x5a, 0x8a, 0xad, 0x63, 0xdd, 0xa7, 0x14, 0xd6, 0xeb, 0x37, 0x07, 0x90, 0x6e, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1697(ch_1697, ch_1697 + sizeof(ch_1697) -1);
CDataStream stream_1697(vch_1697, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1697;
stream_1697 >> txHist_1697;

if(block.vtx[0]->GetHash() == txHist_1697.GetHash() && nHeight == 1263619) {
return true;
}
unsigned char ch_1698[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x10, 0x48, 0x13, 0x04, 0x19, 0x28, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x35, 0x39, 0x32, 0x32, 0x35, 0x39, 0x6a, 0x78, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x04, 0x7f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xb2, 0xbe, 0x74, 0x84, 0x7f, 0xc5, 0x87, 0xca, 0x80, 0x00, 0xfb, 0xae, 0x33, 0x3a, 0xa9, 0x8e, 0xd6, 0xbc, 0x85, 0x99, 0x40, 0xff, 0x42, 0x19, 0x4d, 0x8e, 0xaa, 0xb9, 0x84, 0x99, 0x7e, 0xc0, 0x20, 0xc7, 0xf5, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x70, 0x61, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0x30, 0xe7, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1698(ch_1698, ch_1698 + sizeof(ch_1698) -1);
CDataStream stream_1698(vch_1698, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1698;
stream_1698 >> txHist_1698;

if(block.vtx[0]->GetHash() == txHist_1698.GetHash() && nHeight == 1263632) {
return true;
}
unsigned char ch_1699[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x00, 0x48, 0x13, 0x04, 0x49, 0x21, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x63, 0x33, 0x39, 0x65, 0x53, 0x61, 0x6b, 0x39, 0x33, 0x70, 0x65, 0x43, 0x61, 0x66, 0x61, 0x74, 0x65, 0x4e, 0x55, 0x70, 0x73, 0x61, 0x37, 0x75, 0x6e, 0x41, 0x72, 0x54, 0x65, 0x6d, 0x3a, 0x68, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0xff, 0xff, 0xfe, 0x6d, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd8, 0xa3, 0xdd, 0xf0, 0x15, 0x32, 0xf9, 0x1b, 0xa7, 0x5f, 0x9c, 0x9f, 0x3a, 0x06, 0xdf, 0xc1, 0x3a, 0x4c, 0x94, 0x3b, 0x14, 0x10, 0x92, 0x79, 0xa2, 0xee, 0xe5, 0xe3, 0x17, 0xd0, 0x5f, 0xac, 0x40, 0x49, 0xf4, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x60, 0x5d, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xe0, 0xd2, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1699(ch_1699, ch_1699 + sizeof(ch_1699) -1);
CDataStream stream_1699(vch_1699, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1699;
stream_1699 >> txHist_1699;

if(block.vtx[0]->GetHash() == txHist_1699.GetHash() && nHeight == 1263616) {
return true;
}
unsigned char ch_1700[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xeb, 0x47, 0x13, 0x04, 0x8c, 0x1a, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x55, 0x46, 0xce, 0x78, 0x63, 0x64, 0xb2, 0x3c, 0x1b, 0x2a, 0xeb, 0x30, 0xcc, 0x7e, 0x3b, 0x6c, 0x4e, 0x9d, 0x84, 0x13, 0x54, 0xff, 0xe1, 0x17, 0x14, 0x19, 0xb3, 0xbb, 0x98, 0x31, 0x87, 0x70, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0xed, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1700(ch_1700, ch_1700 + sizeof(ch_1700) -1);
CDataStream stream_1700(vch_1700, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1700;
stream_1700 >> txHist_1700;

if(block.vtx[0]->GetHash() == txHist_1700.GetHash() && nHeight == 1263595) {
return true;
}
unsigned char ch_1701[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xdd, 0x47, 0x13, 0x04, 0xc7, 0x13, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xfb, 0x1e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1701(ch_1701, ch_1701 + sizeof(ch_1701) -1);
CDataStream stream_1701(vch_1701, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1701;
stream_1701 >> txHist_1701;

if(block.vtx[0]->GetHash() == txHist_1701.GetHash() && nHeight == 1263581) {
return true;
}
unsigned char ch_1702[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xfa, 0x47, 0x13, 0x04, 0x0d, 0x20, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x53, 0x0c, 0x3a, 0xaf, 0x2c, 0x26, 0x2e, 0x6f, 0xfb, 0xb5, 0xd4, 0xf9, 0x99, 0x73, 0x32, 0xf7, 0x3a, 0xde, 0x27, 0xc4, 0xe3, 0xa8, 0x95, 0x69, 0xe9, 0x5e, 0x1f, 0x67, 0x90, 0x8e, 0xa1, 0xd4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x07, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe6, 0xd6, 0xf8, 0x96, 0x6f, 0x4e, 0x3f, 0x3b, 0x31, 0xa6, 0x94, 0x24, 0xa8, 0x3f, 0x24, 0xd9, 0xe8, 0x6d, 0xb6, 0xab, 0x61, 0xe8, 0xd6, 0x3f, 0x1c, 0x9a, 0x45, 0xb9, 0x5a, 0x58, 0x7a, 0x3b, 0xe8, 0x1f, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1702(ch_1702, ch_1702 + sizeof(ch_1702) -1);
CDataStream stream_1702(vch_1702, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1702;
stream_1702 >> txHist_1702;

if(block.vtx[0]->GetHash() == txHist_1702.GetHash() && nHeight == 1263610) {
return true;
}
unsigned char ch_1703[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd1, 0x47, 0x13, 0x04, 0x18, 0x0f, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5d, 0xc1, 0x13, 0x51, 0x1f, 0x4b, 0x49, 0xb9, 0x6e, 0x29, 0x45, 0x00, 0x5e, 0x44, 0x66, 0xf2, 0x83, 0xed, 0x74, 0xdf, 0xf2, 0x43, 0x72, 0xe5, 0xc9, 0x81, 0xee, 0x8c, 0x77, 0x70, 0x2d, 0x92, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xfc, 0x6c, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1703(ch_1703, ch_1703 + sizeof(ch_1703) -1);
CDataStream stream_1703(vch_1703, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1703;
stream_1703 >> txHist_1703;

if(block.vtx[0]->GetHash() == txHist_1703.GetHash() && nHeight == 1263569) {
return true;
}
unsigned char ch_1704[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf3, 0x47, 0x13, 0x04, 0x8f, 0x1d, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9a, 0xf0, 0xf5, 0x45, 0x6a, 0x2d, 0x99, 0x55, 0x83, 0x82, 0x7e, 0xb1, 0xcf, 0xba, 0xfa, 0x28, 0x85, 0x15, 0x0d, 0x6c, 0xff, 0xe6, 0xe2, 0xf4, 0x9c, 0xac, 0xc2, 0xf9, 0x6c, 0xc5, 0x98, 0xa2, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0x3a, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x8e, 0x7b, 0x36, 0xc2, 0xed, 0xef, 0x31, 0x39, 0x04, 0x60, 0x2f, 0x7d, 0xb6, 0x4f, 0xf0, 0xac, 0xfa, 0x39, 0xff, 0x3a, 0xaa, 0x07, 0xd3, 0xbc, 0x46, 0xa5, 0x47, 0x79, 0x02, 0x99, 0xda, 0xd6, 0xb0, 0xa5, 0x68, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1704(ch_1704, ch_1704 + sizeof(ch_1704) -1);
CDataStream stream_1704(vch_1704, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1704;
stream_1704 >> txHist_1704;

if(block.vtx[0]->GetHash() == txHist_1704.GetHash() && nHeight == 1263603) {
return true;
}
unsigned char ch_1705[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd9, 0x47, 0x13, 0x04, 0xff, 0x12, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x66, 0x4f, 0xed, 0x4d, 0x76, 0x85, 0x1f, 0xb5, 0x4f, 0xd0, 0x87, 0x40, 0xb6, 0xc5, 0x73, 0x76, 0x4c, 0x57, 0x0a, 0x44, 0x66, 0xff, 0xa2, 0x9c, 0x8e, 0x72, 0x10, 0x5d, 0xe1, 0x3f, 0xaf, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x05, 0x8a, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1705(ch_1705, ch_1705 + sizeof(ch_1705) -1);
CDataStream stream_1705(vch_1705, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1705;
stream_1705 >> txHist_1705;

if(block.vtx[0]->GetHash() == txHist_1705.GetHash() && nHeight == 1263577) {
return true;
}
unsigned char ch_1706[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xcb, 0x47, 0x13, 0x04, 0x81, 0x0d, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9e, 0xcb, 0x1c, 0x35, 0x42, 0x8d, 0x63, 0x15, 0x7b, 0x50, 0x52, 0x0f, 0x84, 0x63, 0xd6, 0x67, 0xa2, 0x34, 0x87, 0xf4, 0xb8, 0xca, 0x29, 0xac, 0xe6, 0x2a, 0x30, 0x42, 0x7c, 0xdb, 0xac, 0xd6, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x5b, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1706(ch_1706, ch_1706 + sizeof(ch_1706) -1);
CDataStream stream_1706(vch_1706, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1706;
stream_1706 >> txHist_1706;

if(block.vtx[0]->GetHash() == txHist_1706.GetHash() && nHeight == 1263563) {
return true;
}
unsigned char ch_1707[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xba, 0x47, 0x13, 0x04, 0x9c, 0x08, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xff, 0x85, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1707(ch_1707, ch_1707 + sizeof(ch_1707) -1);
CDataStream stream_1707(vch_1707, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1707;
stream_1707 >> txHist_1707;

if(block.vtx[0]->GetHash() == txHist_1707.GetHash() && nHeight == 1263546) {
return true;
}
unsigned char ch_1708[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xb3, 0x47, 0x13, 0x04, 0x16, 0x03, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x0a, 0x38, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1708(ch_1708, ch_1708 + sizeof(ch_1708) -1);
CDataStream stream_1708(vch_1708, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1708;
stream_1708 >> txHist_1708;

if(block.vtx[0]->GetHash() == txHist_1708.GetHash() && nHeight == 1263539) {
return true;
}
unsigned char ch_1709[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa5, 0x47, 0x13, 0x04, 0x6e, 0xff, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x89, 0x1d, 0x61, 0x83, 0x36, 0xf8, 0x4d, 0x9c, 0x55, 0xd2, 0x6f, 0xf3, 0x8b, 0x42, 0x63, 0xc6, 0x3d, 0xae, 0xda, 0xdf, 0x6e, 0x99, 0x7f, 0xa6, 0x47, 0x11, 0xd1, 0x44, 0x74, 0x4e, 0x85, 0x6a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x05, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe0, 0xae, 0x50, 0xfe, 0x8e, 0xb5, 0xea, 0x1b, 0xd4, 0x92, 0xb5, 0x7e, 0x5f, 0x22, 0x8a, 0xa6, 0x94, 0xe1, 0xf6, 0xc7, 0x76, 0xf3, 0x6b, 0xbf, 0xf5, 0x2b, 0x0f, 0x31, 0x66, 0x27, 0xb8, 0xb5, 0x98, 0x6f, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1709(ch_1709, ch_1709 + sizeof(ch_1709) -1);
CDataStream stream_1709(vch_1709, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1709;
stream_1709 >> txHist_1709;

if(block.vtx[0]->GetHash() == txHist_1709.GetHash() && nHeight == 1263525) {
return true;
}
unsigned char ch_1710[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x9e, 0x47, 0x13, 0x04, 0x7b, 0xfd, 0x34, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf9, 0x5b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x10, 0x56, 0x33, 0xea, 0x88, 0x19, 0xcc, 0x59, 0xcf, 0x18, 0xff, 0xf8, 0xf1, 0xb0, 0xc4, 0xb4, 0x9c, 0xa8, 0x92, 0x74, 0x64, 0x0b, 0xec, 0x0e, 0x5a, 0x3b, 0x38, 0x22, 0x36, 0xe4, 0xef, 0x22, 0x80, 0xa5, 0xf7, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1710(ch_1710, ch_1710 + sizeof(ch_1710) -1);
CDataStream stream_1710(vch_1710, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1710;
stream_1710 >> txHist_1710;

if(block.vtx[0]->GetHash() == txHist_1710.GetHash() && nHeight == 1263518) {
return true;
}
unsigned char ch_1711[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x0d, 0x48, 0x13, 0x04, 0x76, 0x27, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x23, 0x50, 0x36, 0xe4, 0x1d, 0x28, 0x98, 0x95, 0xba, 0x9b, 0xfb, 0x71, 0x8a, 0x91, 0x01, 0xd6, 0x2e, 0x86, 0xba, 0xfb, 0xe8, 0x97, 0xf1, 0xa7, 0xc1, 0x32, 0xad, 0x9e, 0xe7, 0x29, 0x39, 0x4c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfd, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1711(ch_1711, ch_1711 + sizeof(ch_1711) -1);
CDataStream stream_1711(vch_1711, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1711;
stream_1711 >> txHist_1711;

if(block.vtx[0]->GetHash() == txHist_1711.GetHash() && nHeight == 1263629) {
return true;
}
unsigned char ch_1712[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x97, 0x47, 0x13, 0x04, 0xe6, 0xf9, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x3b, 0xf9, 0x0a, 0x8f, 0x3e, 0x7e, 0xed, 0xae, 0x3f, 0x48, 0xd8, 0x65, 0x5c, 0x6c, 0xbb, 0x7a, 0xa4, 0x65, 0xfa, 0xab, 0xec, 0xa6, 0xe8, 0xa4, 0x50, 0x2f, 0x1d, 0x0a, 0xf6, 0xac, 0x24, 0x12, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x06, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1712(ch_1712, ch_1712 + sizeof(ch_1712) -1);
CDataStream stream_1712(vch_1712, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1712;
stream_1712 >> txHist_1712;

if(block.vtx[0]->GetHash() == txHist_1712.GetHash() && nHeight == 1263511) {
return true;
}
unsigned char ch_1713[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x0c, 0x48, 0x13, 0x04, 0x55, 0x27, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf9, 0x8b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x19, 0x52, 0x98, 0x7b, 0xb8, 0xb1, 0xe1, 0xd9, 0x21, 0xb1, 0xa8, 0x85, 0xc4, 0x36, 0x27, 0x9c, 0x06, 0x00, 0x08, 0xf7, 0xd9, 0x8e, 0x74, 0x79, 0x8f, 0xf6, 0x5f, 0xa4, 0x54, 0xcc, 0x02, 0x8d, 0x68, 0xdb, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1713(ch_1713, ch_1713 + sizeof(ch_1713) -1);
CDataStream stream_1713(vch_1713, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1713;
stream_1713 >> txHist_1713;

if(block.vtx[0]->GetHash() == txHist_1713.GetHash() && nHeight == 1263628) {
return true;
}
unsigned char ch_1714[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x0b, 0x48, 0x13, 0x04, 0xa0, 0x26, 0x35, 0x5b, 0x08, 0x30, 0x00, 0x00, 0x14, 0x9d, 0x07, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1714(ch_1714, ch_1714 + sizeof(ch_1714) -1);
CDataStream stream_1714(vch_1714, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1714;
stream_1714 >> txHist_1714;

if(block.vtx[0]->GetHash() == txHist_1714.GetHash() && nHeight == 1263627) {
return true;
}
unsigned char ch_1715[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa7, 0x47, 0x13, 0x04, 0x18, 0x00, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x85, 0x25, 0xf4, 0x96, 0xe5, 0x77, 0x73, 0xa1, 0xa9, 0x48, 0x27, 0x46, 0xe4, 0xd3, 0xd5, 0xca, 0x4b, 0x66, 0xf2, 0x6a, 0xbd, 0x96, 0x3c, 0x6c, 0xda, 0x16, 0xfd, 0x0f, 0x71, 0x88, 0xab, 0x83, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xfb, 0x63, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1715(ch_1715, ch_1715 + sizeof(ch_1715) -1);
CDataStream stream_1715(vch_1715, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1715;
stream_1715 >> txHist_1715;

if(block.vtx[0]->GetHash() == txHist_1715.GetHash() && nHeight == 1263527) {
return true;
}
unsigned char ch_1716[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x8b, 0x47, 0x13, 0x04, 0xda, 0xf5, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xdf, 0x0e, 0x1d, 0xd5, 0xbe, 0xc6, 0x86, 0x18, 0x6c, 0x9c, 0x24, 0xf8, 0x08, 0xbf, 0xef, 0x05, 0xb5, 0xfc, 0xa3, 0xaa, 0x1a, 0xcb, 0xfc, 0x4e, 0x4e, 0x8f, 0x70, 0xdd, 0x5f, 0xc4, 0x06, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0xff, 0xf7, 0x3f, 0xfd, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1716(ch_1716, ch_1716 + sizeof(ch_1716) -1);
CDataStream stream_1716(vch_1716, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1716;
stream_1716 >> txHist_1716;

if(block.vtx[0]->GetHash() == txHist_1716.GetHash() && nHeight == 1263499) {
return true;
}
unsigned char ch_1717[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe7, 0x47, 0x13, 0x04, 0x5c, 0x18, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x33, 0x08, 0xa4, 0xb2, 0xea, 0xed, 0xa4, 0x1c, 0xbb, 0x0a, 0x4c, 0x28, 0xed, 0x33, 0x13, 0x43, 0xae, 0x89, 0xf6, 0xd0, 0x6e, 0x89, 0xd4, 0xb1, 0x00, 0x68, 0xea, 0xde, 0x79, 0x21, 0x5d, 0x74, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x02, 0x9a, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1717(ch_1717, ch_1717 + sizeof(ch_1717) -1);
CDataStream stream_1717(vch_1717, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1717;
stream_1717 >> txHist_1717;

if(block.vtx[0]->GetHash() == txHist_1717.GetHash() && nHeight == 1263591) {
return true;
}
unsigned char ch_1718[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa0, 0x47, 0x13, 0x04, 0xa3, 0xfd, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x2d, 0x20, 0x5d, 0xad, 0xd9, 0x69, 0xbd, 0x5a, 0x5e, 0xeb, 0x86, 0x4b, 0xea, 0x6f, 0x18, 0x1e, 0xac, 0x23, 0xe4, 0xfc, 0xfd, 0x5d, 0x11, 0xc3, 0xb4, 0xd0, 0xc1, 0x90, 0x97, 0xde, 0x72, 0xbd, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x07, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1718(ch_1718, ch_1718 + sizeof(ch_1718) -1);
CDataStream stream_1718(vch_1718, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1718;
stream_1718 >> txHist_1718;

if(block.vtx[0]->GetHash() == txHist_1718.GetHash() && nHeight == 1263520) {
return true;
}
unsigned char ch_1719[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x07, 0x48, 0x13, 0x04, 0x09, 0x26, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x30, 0x34, 0x35, 0x63, 0x32, 0x64, 0x39, 0x39, 0x30, 0x32, 0x61, 0x66, 0x36, 0x34, 0x36, 0x38, 0x64, 0x66, 0x33, 0x30, 0x31, 0x32, 0x31, 0x30, 0x32, 0x63, 0x38, 0x62, 0x66, 0x32, 0x66, 0x37, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x04, 0x47, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x87, 0xe5, 0xca, 0xe0, 0xf8, 0x2a, 0xe1, 0xde, 0x55, 0x42, 0x63, 0x90, 0xdf, 0x87, 0x45, 0x40, 0x97, 0xc2, 0x35, 0x31, 0x35, 0x76, 0x49, 0x8e, 0x26, 0xf3, 0xe4, 0x32, 0xc8, 0x06, 0x89, 0xc7, 0x58, 0xde, 0xf9, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0x94, 0x6c, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xe4, 0x1e, 0x85, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1719(ch_1719, ch_1719 + sizeof(ch_1719) -1);
CDataStream stream_1719(vch_1719, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1719;
stream_1719 >> txHist_1719;

if(block.vtx[0]->GetHash() == txHist_1719.GetHash() && nHeight == 1263623) {
return true;
}
unsigned char ch_1720[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe1, 0x47, 0x13, 0x04, 0x38, 0x15, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x08, 0x39, 0x69, 0x16, 0xb2, 0x27, 0xe0, 0x59, 0xb2, 0x29, 0xbe, 0xf8, 0x10, 0xdb, 0x5c, 0xcd, 0xc4, 0xe0, 0xcb, 0x75, 0x5e, 0x1b, 0x5d, 0x33, 0x12, 0x44, 0xe7, 0xbc, 0x06, 0x86, 0xfd, 0x95, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xfb, 0x91, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x05, 0xb6, 0x3b, 0x04, 0x09, 0x9a, 0xd2, 0x1c, 0x63, 0x7e, 0x58, 0x1c, 0xb3, 0x67, 0x76, 0x7b, 0x92, 0x13, 0xa5, 0x53, 0x4b, 0x32, 0x08, 0x1b, 0x89, 0xe2, 0x71, 0xf5, 0x5b, 0x24, 0xb4, 0x3e, 0xd8, 0xad, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1720(ch_1720, ch_1720 + sizeof(ch_1720) -1);
CDataStream stream_1720(vch_1720, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1720;
stream_1720 >> txHist_1720;

if(block.vtx[0]->GetHash() == txHist_1720.GetHash() && nHeight == 1263585) {
return true;
}
unsigned char ch_1721[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x99, 0x47, 0x13, 0x04, 0x17, 0xfa, 0x34, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x0a, 0x45, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x40, 0x1b, 0xf6, 0xdb, 0x93, 0x48, 0xfc, 0x17, 0xf3, 0x66, 0xe1, 0xb5, 0xad, 0x07, 0x1b, 0x1a, 0x5b, 0x06, 0x07, 0x4a, 0x38, 0x87, 0x4d, 0x75, 0xbc, 0xba, 0x4a, 0x43, 0x35, 0x4b, 0xc0, 0x59, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1721(ch_1721, ch_1721 + sizeof(ch_1721) -1);
CDataStream stream_1721(vch_1721, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1721;
stream_1721 >> txHist_1721;

if(block.vtx[0]->GetHash() == txHist_1721.GetHash() && nHeight == 1263513) {
return true;
}
unsigned char ch_1722[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x04, 0x48, 0x13, 0x04, 0xc4, 0x23, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x63, 0x94, 0xb3, 0x57, 0xbd, 0x20, 0x10, 0x96, 0x22, 0xb1, 0x4e, 0x41, 0xf6, 0x38, 0x1d, 0x2e, 0x13, 0xa4, 0x85, 0x21, 0xa9, 0xd6, 0x43, 0x40, 0xe9, 0x45, 0xb9, 0xdc, 0x96, 0x0a, 0x2c, 0x64, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x02, 0xd2, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1722(ch_1722, ch_1722 + sizeof(ch_1722) -1);
CDataStream stream_1722(vch_1722, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1722;
stream_1722 >> txHist_1722;

if(block.vtx[0]->GetHash() == txHist_1722.GetHash() && nHeight == 1263620) {
return true;
}
unsigned char ch_1723[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xdb, 0x47, 0x13, 0x04, 0x07, 0x13, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x66, 0x4f, 0xed, 0x4d, 0x76, 0x85, 0x1f, 0xb5, 0x4f, 0xd0, 0x87, 0x40, 0xb6, 0xc5, 0x73, 0x76, 0x4c, 0x57, 0x0a, 0x44, 0x66, 0xff, 0xa2, 0x9c, 0x8e, 0x72, 0x10, 0x5d, 0xe1, 0x3f, 0xaf, 0x33, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfc, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1723(ch_1723, ch_1723 + sizeof(ch_1723) -1);
CDataStream stream_1723(vch_1723, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1723;
stream_1723 >> txHist_1723;

if(block.vtx[0]->GetHash() == txHist_1723.GetHash() && nHeight == 1263579) {
return true;
}
unsigned char ch_1724[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x92, 0x47, 0x13, 0x04, 0x3e, 0xf8, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5f, 0xac, 0x19, 0xee, 0xc0, 0x29, 0x66, 0x4a, 0x43, 0xfc, 0x08, 0x4b, 0xd8, 0x1b, 0xc7, 0x5b, 0x93, 0x62, 0xde, 0x6b, 0xca, 0x65, 0xe3, 0x5a, 0x30, 0x1b, 0xfe, 0xe8, 0x76, 0xd5, 0x68, 0xa7, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xfd, 0x2b, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1724(ch_1724, ch_1724 + sizeof(ch_1724) -1);
CDataStream stream_1724(vch_1724, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1724;
stream_1724 >> txHist_1724;

if(block.vtx[0]->GetHash() == txHist_1724.GetHash() && nHeight == 1263506) {
return true;
}
unsigned char ch_1725[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xd3, 0x47, 0x13, 0x04, 0x83, 0x0f, 0x35, 0x5b, 0x08, 0x78, 0x00, 0x08, 0x0e, 0x2f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1725(ch_1725, ch_1725 + sizeof(ch_1725) -1);
CDataStream stream_1725(vch_1725, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1725;
stream_1725 >> txHist_1725;

if(block.vtx[0]->GetHash() == txHist_1725.GetHash() && nHeight == 1263571) {
return true;
}
unsigned char ch_1726[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x8c, 0x47, 0x13, 0x04, 0x08, 0xf6, 0x34, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xff, 0xfd, 0x08, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1726(ch_1726, ch_1726 + sizeof(ch_1726) -1);
CDataStream stream_1726(vch_1726, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1726;
stream_1726 >> txHist_1726;

if(block.vtx[0]->GetHash() == txHist_1726.GetHash() && nHeight == 1263500) {
return true;
}
unsigned char ch_1727[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xcd, 0x47, 0x13, 0x04, 0xf3, 0x0e, 0x35, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xf6, 0xcf, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xdd, 0x3b, 0x3c, 0x3f, 0x3c, 0x9c, 0xde, 0xb2, 0x07, 0xfe, 0x81, 0xaf, 0x04, 0xd4, 0x21, 0x4e, 0x51, 0x22, 0x3e, 0x85, 0x08, 0x87, 0xc9, 0xc0, 0x2b, 0x63, 0xb1, 0x06, 0x9f, 0x07, 0x57, 0xf0, 0x68, 0x2d, 0x65, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1727(ch_1727, ch_1727 + sizeof(ch_1727) -1);
CDataStream stream_1727(vch_1727, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1727;
stream_1727 >> txHist_1727;

if(block.vtx[0]->GetHash() == txHist_1727.GetHash() && nHeight == 1263565) {
return true;
}
unsigned char ch_1728[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x7d, 0x47, 0x13, 0x04, 0xa4, 0xee, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc4, 0xa8, 0x02, 0xa5, 0xec, 0xbc, 0x62, 0x88, 0xb8, 0xc3, 0x04, 0x9a, 0x70, 0x14, 0x78, 0x95, 0x0a, 0xc2, 0xd5, 0x6b, 0x86, 0xa3, 0xe3, 0x74, 0xcd, 0x0a, 0x92, 0xb8, 0x5e, 0x4d, 0xda, 0x81, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x05, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1728(ch_1728, ch_1728 + sizeof(ch_1728) -1);
CDataStream stream_1728(vch_1728, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1728;
stream_1728 >> txHist_1728;

if(block.vtx[0]->GetHash() == txHist_1728.GetHash() && nHeight == 1263485) {
return true;
}
unsigned char ch_1729[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc5, 0x47, 0x13, 0x04, 0x05, 0x0c, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x82, 0x30, 0x91, 0xcd, 0x60, 0x59, 0x0d, 0xa6, 0x48, 0x21, 0xf5, 0x33, 0x67, 0x36, 0x33, 0x37, 0xb9, 0x03, 0xd5, 0x53, 0x16, 0x5b, 0x9e, 0x4f, 0x5c, 0x9c, 0xb3, 0x8a, 0xea, 0xf3, 0xa3, 0x5e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0xff, 0xff, 0xc4, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1729(ch_1729, ch_1729 + sizeof(ch_1729) -1);
CDataStream stream_1729(vch_1729, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1729;
stream_1729 >> txHist_1729;

if(block.vtx[0]->GetHash() == txHist_1729.GetHash() && nHeight == 1263557) {
return true;
}
unsigned char ch_1730[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x88, 0x47, 0x13, 0x04, 0xb1, 0xf5, 0x34, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xec, 0x73, 0x18, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x58, 0x80, 0x95, 0xb9, 0x81, 0x72, 0x47, 0x3a, 0x36, 0x7d, 0x80, 0xb4, 0xef, 0x01, 0x4a, 0xa2, 0x36, 0x1c, 0x1f, 0x1c, 0x0e, 0xae, 0xb3, 0x17, 0x1c, 0xb5, 0xd4, 0x87, 0x86, 0xe0, 0x7d, 0xa4, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1730(ch_1730, ch_1730 + sizeof(ch_1730) -1);
CDataStream stream_1730(vch_1730, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1730;
stream_1730 >> txHist_1730;

if(block.vtx[0]->GetHash() == txHist_1730.GetHash() && nHeight == 1263496) {
return true;
}
unsigned char ch_1731[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xc7, 0x47, 0x13, 0x04, 0x38, 0x0c, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xfb, 0x0e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1731(ch_1731, ch_1731 + sizeof(ch_1731) -1);
CDataStream stream_1731(vch_1731, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1731;
stream_1731 >> txHist_1731;

if(block.vtx[0]->GetHash() == txHist_1731.GetHash() && nHeight == 1263559) {
return true;
}
unsigned char ch_1732[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x7a, 0x47, 0x13, 0x04, 0x2b, 0xee, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbc, 0x00, 0xac, 0xcf, 0x6f, 0xbe, 0x28, 0xd6, 0x9b, 0x3f, 0x92, 0x5a, 0xb6, 0xb7, 0xaf, 0x25, 0xd6, 0x57, 0xda, 0xb0, 0x6d, 0xcd, 0x01, 0xa2, 0xb5, 0x87, 0x88, 0xd2, 0xf8, 0x84, 0x44, 0x84, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x05, 0x22, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1732(ch_1732, ch_1732 + sizeof(ch_1732) -1);
CDataStream stream_1732(vch_1732, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1732;
stream_1732 >> txHist_1732;

if(block.vtx[0]->GetHash() == txHist_1732.GetHash() && nHeight == 1263482) {
return true;
}
unsigned char ch_1733[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xbf, 0x47, 0x13, 0x04, 0x39, 0x0a, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7f, 0x79, 0x0a, 0xe9, 0xb1, 0x6b, 0x9b, 0x81, 0x98, 0x26, 0x66, 0x23, 0xab, 0x0e, 0x26, 0xfc, 0x71, 0x8e, 0xd0, 0x35, 0x4b, 0x72, 0x2e, 0xc0, 0x58, 0xde, 0x96, 0xde, 0x55, 0xb8, 0x58, 0x52, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0xe7, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1733(ch_1733, ch_1733 + sizeof(ch_1733) -1);
CDataStream stream_1733(vch_1733, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1733;
stream_1733 >> txHist_1733;

if(block.vtx[0]->GetHash() == txHist_1733.GetHash() && nHeight == 1263551) {
return true;
}
unsigned char ch_1734[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xfb, 0x47, 0x13, 0x04, 0x11, 0x20, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x53, 0x0c, 0x3a, 0xaf, 0x2c, 0x26, 0x2e, 0x6f, 0xfb, 0xb5, 0xd4, 0xf9, 0x99, 0x73, 0x32, 0xf7, 0x3a, 0xde, 0x27, 0xc4, 0xe3, 0xa8, 0x95, 0x69, 0xe9, 0x5e, 0x1f, 0x67, 0x90, 0x8e, 0xa1, 0xd4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x01, 0xbd, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1734(ch_1734, ch_1734 + sizeof(ch_1734) -1);
CDataStream stream_1734(vch_1734, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1734;
stream_1734 >> txHist_1734;

if(block.vtx[0]->GetHash() == txHist_1734.GetHash() && nHeight == 1263611) {
return true;
}
unsigned char ch_1735[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd5, 0x47, 0x13, 0x04, 0x49, 0x10, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xeb, 0x92, 0x8d, 0x05, 0x37, 0x39, 0x81, 0x1e, 0x6f, 0x72, 0x01, 0x1d, 0x98, 0x1c, 0x67, 0x4d, 0x26, 0x48, 0xe5, 0xbd, 0x57, 0xee, 0x80, 0x91, 0x29, 0x14, 0xbe, 0xe7, 0x12, 0x8f, 0x1e, 0xb4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xfc, 0xf0, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1735(ch_1735, ch_1735 + sizeof(ch_1735) -1);
CDataStream stream_1735(vch_1735, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1735;
stream_1735 >> txHist_1735;

if(block.vtx[0]->GetHash() == txHist_1735.GetHash() && nHeight == 1263573) {
return true;
}
unsigned char ch_1736[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc1, 0x47, 0x13, 0x04, 0x3c, 0x0a, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7f, 0x79, 0x0a, 0xe9, 0xb1, 0x6b, 0x9b, 0x81, 0x98, 0x26, 0x66, 0x23, 0xab, 0x0e, 0x26, 0xfc, 0x71, 0x8e, 0xd0, 0x35, 0x4b, 0x72, 0x2e, 0xc0, 0x58, 0xde, 0x96, 0xde, 0x55, 0xb8, 0x58, 0x52, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x04, 0xd7, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1736(ch_1736, ch_1736 + sizeof(ch_1736) -1);
CDataStream stream_1736(vch_1736, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1736;
stream_1736 >> txHist_1736;

if(block.vtx[0]->GetHash() == txHist_1736.GetHash() && nHeight == 1263553) {
return true;
}
unsigned char ch_1737[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb8, 0x47, 0x13, 0x04, 0x20, 0x08, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x19, 0x05, 0x14, 0xd0, 0xc3, 0x52, 0xfb, 0xac, 0xb6, 0x1a, 0x40, 0x62, 0x9f, 0x16, 0xe7, 0x8e, 0x92, 0xf3, 0x67, 0x46, 0x63, 0xd5, 0xdb, 0x36, 0x9e, 0x3c, 0x8b, 0x52, 0x4c, 0x52, 0xe6, 0x6a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xfc, 0xba, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1737(ch_1737, ch_1737 + sizeof(ch_1737) -1);
CDataStream stream_1737(vch_1737, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1737;
stream_1737 >> txHist_1737;

if(block.vtx[0]->GetHash() == txHist_1737.GetHash() && nHeight == 1263544) {
return true;
}
unsigned char ch_1738[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x81, 0x47, 0x13, 0x04, 0x06, 0xf0, 0x34, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x06, 0x1a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1738(ch_1738, ch_1738 + sizeof(ch_1738) -1);
CDataStream stream_1738(vch_1738, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1738;
stream_1738 >> txHist_1738;

if(block.vtx[0]->GetHash() == txHist_1738.GetHash() && nHeight == 1263489) {
return true;
}
unsigned char ch_1739[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xbb, 0x47, 0x13, 0x04, 0xb0, 0x08, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x05, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1739(ch_1739, ch_1739 + sizeof(ch_1739) -1);
CDataStream stream_1739(vch_1739, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1739;
stream_1739 >> txHist_1739;

if(block.vtx[0]->GetHash() == txHist_1739.GetHash() && nHeight == 1263547) {
return true;
}
unsigned char ch_1740[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x71, 0x47, 0x13, 0x04, 0xc6, 0xeb, 0x34, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x10, 0x2b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xce, 0x69, 0x34, 0x72, 0x4e, 0x77, 0xee, 0x43, 0xaf, 0x8e, 0x9c, 0x53, 0x07, 0xf6, 0x32, 0xe4, 0xb6, 0x3e, 0xcd, 0x4e, 0x19, 0x84, 0x49, 0x7b, 0x33, 0x2d, 0xa3, 0xf7, 0x69, 0x9b, 0xd0, 0x7f, 0x40, 0x74, 0x64, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1740(ch_1740, ch_1740 + sizeof(ch_1740) -1);
CDataStream stream_1740(vch_1740, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1740;
stream_1740 >> txHist_1740;

if(block.vtx[0]->GetHash() == txHist_1740.GetHash() && nHeight == 1263473) {
return true;
}
unsigned char ch_1741[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb1, 0x47, 0x13, 0x04, 0xe8, 0x02, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x28, 0xd9, 0x6e, 0x98, 0xfd, 0x91, 0x7c, 0x53, 0x7a, 0x06, 0x70, 0x0e, 0x7d, 0x56, 0x73, 0x36, 0x3e, 0x49, 0x16, 0xcd, 0x74, 0x43, 0x8b, 0x8b, 0xc1, 0x65, 0x9e, 0x8d, 0xf5, 0x0f, 0x28, 0x05, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x04, 0x04, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1741(ch_1741, ch_1741 + sizeof(ch_1741) -1);
CDataStream stream_1741(vch_1741, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1741;
stream_1741 >> txHist_1741;

if(block.vtx[0]->GetHash() == txHist_1741.GetHash() && nHeight == 1263537) {
return true;
}
unsigned char ch_1742[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xf4, 0x47, 0x13, 0x04, 0x90, 0x1d, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9a, 0xf0, 0xf5, 0x45, 0x6a, 0x2d, 0x99, 0x55, 0x83, 0x82, 0x7e, 0xb1, 0xcf, 0xba, 0xfa, 0x28, 0x85, 0x15, 0x0d, 0x6c, 0xff, 0xe6, 0xe2, 0xf4, 0x9c, 0xac, 0xc2, 0xf9, 0x6c, 0xc5, 0x98, 0xa2, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0x91, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1742(ch_1742, ch_1742 + sizeof(ch_1742) -1);
CDataStream stream_1742(vch_1742, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1742;
stream_1742 >> txHist_1742;

if(block.vtx[0]->GetHash() == txHist_1742.GetHash() && nHeight == 1263604) {
return true;
}
unsigned char ch_1743[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x7e, 0x47, 0x13, 0x04, 0xc6, 0xef, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb7, 0xd7, 0xf1, 0x31, 0x5f, 0x08, 0xa6, 0xb1, 0x27, 0x56, 0x48, 0x39, 0x4f, 0xf1, 0x66, 0xf1, 0xc3, 0x16, 0xc5, 0x92, 0x68, 0x34, 0x1f, 0xe3, 0x77, 0x14, 0xc2, 0x17, 0x9e, 0x28, 0x87, 0x2f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xf9, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x78, 0x8d, 0xe6, 0xcd, 0x70, 0x37, 0x0d, 0x79, 0x14, 0x57, 0x1b, 0x77, 0x06, 0x13, 0xf3, 0x86, 0x2a, 0xd9, 0x68, 0xae, 0x41, 0x0a, 0xc8, 0xe0, 0x07, 0x57, 0x2d, 0xb0, 0x8a, 0xcb, 0x53, 0x62, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1743(ch_1743, ch_1743 + sizeof(ch_1743) -1);
CDataStream stream_1743(vch_1743, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1743;
stream_1743 >> txHist_1743;

if(block.vtx[0]->GetHash() == txHist_1743.GetHash() && nHeight == 1263486) {
return true;
}
unsigned char ch_1744[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xaa, 0x47, 0x13, 0x04, 0x46, 0x01, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x86, 0xef, 0x40, 0xef, 0xd6, 0x31, 0x06, 0x62, 0x47, 0x49, 0x73, 0x14, 0xcd, 0x3a, 0xa8, 0x78, 0x24, 0x9d, 0x01, 0xdf, 0x75, 0x04, 0xd1, 0x02, 0xf1, 0xc1, 0x9b, 0x8c, 0xa9, 0xb1, 0xb2, 0xf9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x01, 0x9c, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1744(ch_1744, ch_1744 + sizeof(ch_1744) -1);
CDataStream stream_1744(vch_1744, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1744;
stream_1744 >> txHist_1744;

if(block.vtx[0]->GetHash() == txHist_1744.GetHash() && nHeight == 1263530) {
return true;
}
unsigned char ch_1745[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xee, 0x47, 0x13, 0x04, 0xba, 0x1a, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xfb, 0x10, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1745(ch_1745, ch_1745 + sizeof(ch_1745) -1);
CDataStream stream_1745(vch_1745, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1745;
stream_1745 >> txHist_1745;

if(block.vtx[0]->GetHash() == txHist_1745.GetHash() && nHeight == 1263598) {
return true;
}
unsigned char ch_1746[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x7b, 0x47, 0x13, 0x04, 0x2c, 0xee, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbc, 0x00, 0xac, 0xcf, 0x6f, 0xbe, 0x28, 0xd6, 0x9b, 0x3f, 0x92, 0x5a, 0xb6, 0xb7, 0xaf, 0x25, 0xd6, 0x57, 0xda, 0xb0, 0x6d, 0xcd, 0x01, 0xa2, 0xb5, 0x87, 0x88, 0xd2, 0xf8, 0x84, 0x44, 0x84, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x02, 0x21, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1746(ch_1746, ch_1746 + sizeof(ch_1746) -1);
CDataStream stream_1746(vch_1746, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1746;
stream_1746 >> txHist_1746;

if(block.vtx[0]->GetHash() == txHist_1746.GetHash() && nHeight == 1263483) {
return true;
}
unsigned char ch_1747[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa3, 0x47, 0x13, 0x04, 0x85, 0xfe, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x87, 0x15, 0x04, 0xd0, 0xce, 0x75, 0x6b, 0x8c, 0x60, 0xb5, 0x3f, 0xd4, 0xea, 0x3e, 0xee, 0x74, 0x24, 0x69, 0x45, 0xbc, 0x8a, 0x2c, 0xeb, 0xdd, 0x2f, 0xed, 0xe6, 0x24, 0x7b, 0x8b, 0x31, 0xa7, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x01, 0x48, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1747(ch_1747, ch_1747 + sizeof(ch_1747) -1);
CDataStream stream_1747(vch_1747, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1747;
stream_1747 >> txHist_1747;

if(block.vtx[0]->GetHash() == txHist_1747.GetHash() && nHeight == 1263523) {
return true;
}
unsigned char ch_1748[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe8, 0x47, 0x13, 0x04, 0xae, 0x18, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb0, 0xe2, 0xcb, 0x05, 0x5c, 0xeb, 0x66, 0x56, 0xf7, 0xad, 0xd8, 0xb2, 0x3f, 0x61, 0xb4, 0x53, 0x1e, 0x86, 0x72, 0x41, 0x3d, 0xf1, 0x95, 0x1b, 0xd6, 0x2f, 0x77, 0x88, 0xbf, 0xcb, 0x5b, 0x9e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfb, 0x18, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x1b, 0xae, 0x7d, 0x6d, 0x07, 0x5a, 0xe2, 0xcc, 0x7d, 0x25, 0xca, 0xe7, 0xb4, 0x4b, 0xdd, 0xaf, 0x51, 0x63, 0xf1, 0xa4, 0x04, 0x6d, 0x31, 0x07, 0x2c, 0x76, 0xf1, 0xc3, 0xb1, 0xea, 0xd5, 0x6f, 0x08, 0x75, 0x64, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1748(ch_1748, ch_1748 + sizeof(ch_1748) -1);
CDataStream stream_1748(vch_1748, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1748;
stream_1748 >> txHist_1748;

if(block.vtx[0]->GetHash() == txHist_1748.GetHash() && nHeight == 1263592) {
return true;
}
unsigned char ch_1749[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa6, 0x47, 0x13, 0x04, 0x10, 0x00, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x85, 0x25, 0xf4, 0x96, 0xe5, 0x77, 0x73, 0xa1, 0xa9, 0x48, 0x27, 0x46, 0xe4, 0xd3, 0xd5, 0xca, 0x4b, 0x66, 0xf2, 0x6a, 0xbd, 0x96, 0x3c, 0x6c, 0xda, 0x16, 0xfd, 0x0f, 0x71, 0x88, 0xab, 0x83, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xf4, 0xa7, 0xd0, 0xea, 0x7a, 0xe6, 0x04, 0x3d, 0x51, 0x16, 0x07, 0xc9, 0xb1, 0x2e, 0x7c, 0xc5, 0xeb, 0x6a, 0x14, 0xfd, 0xbf, 0x21, 0x29, 0x29, 0xdc, 0x14, 0x35, 0x65, 0x62, 0x13, 0x44, 0x26, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1749(ch_1749, ch_1749 + sizeof(ch_1749) -1);
CDataStream stream_1749(vch_1749, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1749;
stream_1749 >> txHist_1749;

if(block.vtx[0]->GetHash() == txHist_1749.GetHash() && nHeight == 1263526) {
return true;
}
unsigned char ch_1750[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9c, 0x47, 0x13, 0x04, 0x94, 0xfc, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x05, 0xe1, 0x81, 0x81, 0x01, 0x82, 0x97, 0x86, 0x16, 0xcf, 0x8c, 0xd2, 0xdb, 0x7a, 0x08, 0x1c, 0xb5, 0xaf, 0xe3, 0xba, 0x40, 0xa4, 0x88, 0x64, 0x28, 0xd9, 0xfb, 0xad, 0x57, 0x11, 0xfa, 0x7a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x46, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x9f, 0x8f, 0x12, 0xe7, 0x8e, 0x54, 0x36, 0x8b, 0x3f, 0x8a, 0x5a, 0xfb, 0x61, 0x77, 0xee, 0x20, 0x05, 0xa5, 0xd6, 0x14, 0x09, 0xa1, 0xa5, 0xcd, 0xce, 0xaa, 0x0c, 0xcd, 0xe8, 0x56, 0x3b, 0x6c, 0xa0, 0x00, 0x64, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1750(ch_1750, ch_1750 + sizeof(ch_1750) -1);
CDataStream stream_1750(vch_1750, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1750;
stream_1750 >> txHist_1750;

if(block.vtx[0]->GetHash() == txHist_1750.GetHash() && nHeight == 1263516) {
return true;
}
unsigned char ch_1751[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xe2, 0x47, 0x13, 0x04, 0x39, 0x15, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x08, 0x39, 0x69, 0x16, 0xb2, 0x27, 0xe0, 0x59, 0xb2, 0x29, 0xbe, 0xf8, 0x10, 0xdb, 0x5c, 0xcd, 0xc4, 0xe0, 0xcb, 0x75, 0x5e, 0x1b, 0x5d, 0x33, 0x12, 0x44, 0xe7, 0xbc, 0x06, 0x86, 0xfd, 0x95, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xed, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1751(ch_1751, ch_1751 + sizeof(ch_1751) -1);
CDataStream stream_1751(vch_1751, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1751;
stream_1751 >> txHist_1751;

if(block.vtx[0]->GetHash() == txHist_1751.GetHash() && nHeight == 1263586) {
return true;
}
unsigned char ch_1752[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x72, 0x47, 0x13, 0x04, 0xf0, 0xeb, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x60, 0xad, 0xe5, 0x4a, 0x1c, 0x56, 0xff, 0x65, 0x4d, 0x6f, 0x69, 0x34, 0x0d, 0x58, 0xb8, 0x15, 0xe7, 0x90, 0x8e, 0x4d, 0xc5, 0x9b, 0x07, 0xb0, 0x66, 0xf8, 0xd7, 0x55, 0x39, 0x7a, 0xed, 0xe9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x16, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1752(ch_1752, ch_1752 + sizeof(ch_1752) -1);
CDataStream stream_1752(vch_1752, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1752;
stream_1752 >> txHist_1752;

if(block.vtx[0]->GetHash() == txHist_1752.GetHash() && nHeight == 1263474) {
return true;
}
unsigned char ch_1753[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9f, 0x47, 0x13, 0x04, 0x8a, 0xfd, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x2f, 0x6d, 0x75, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x64, 0x6f, 0x6e, 0x2f, 0x0d, 0x00, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x74, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1753(ch_1753, ch_1753 + sizeof(ch_1753) -1);
CDataStream stream_1753(vch_1753, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1753;
stream_1753 >> txHist_1753;

if(block.vtx[0]->GetHash() == txHist_1753.GetHash() && nHeight == 1263519) {
return true;
}
unsigned char ch_1754[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xdc, 0x47, 0x13, 0x04, 0xad, 0x13, 0x35, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xec, 0xb1, 0x13, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1754(ch_1754, ch_1754 + sizeof(ch_1754) -1);
CDataStream stream_1754(vch_1754, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1754;
stream_1754 >> txHist_1754;

if(block.vtx[0]->GetHash() == txHist_1754.GetHash() && nHeight == 1263580) {
return true;
}
unsigned char ch_1755[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x98, 0x47, 0x13, 0x04, 0xe9, 0xf9, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x3b, 0xf9, 0x0a, 0x8f, 0x3e, 0x7e, 0xed, 0xae, 0x3f, 0x48, 0xd8, 0x65, 0x5c, 0x6c, 0xbb, 0x7a, 0xa4, 0x65, 0xfa, 0xab, 0xec, 0xa6, 0xe8, 0xa4, 0x50, 0x2f, 0x1d, 0x0a, 0xf6, 0xac, 0x24, 0x12, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0xff, 0xff, 0xe1, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1755(ch_1755, ch_1755 + sizeof(ch_1755) -1);
CDataStream stream_1755(vch_1755, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1755;
stream_1755 >> txHist_1755;

if(block.vtx[0]->GetHash() == txHist_1755.GetHash() && nHeight == 1263512) {
return true;
}
unsigned char ch_1756[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x8f, 0x47, 0x13, 0x04, 0xb8, 0xf6, 0x34, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x02, 0xdd, 0x0d, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x08, 0x69, 0xc8, 0x60, 0x20, 0x34, 0xa4, 0xda, 0x42, 0x8e, 0xfb, 0xbb, 0xb9, 0x2b, 0x06, 0xf4, 0x35, 0xb8, 0x0b, 0x4c, 0x96, 0x52, 0xdf, 0x3f, 0x16, 0xf8, 0xf3, 0x4c, 0x32, 0x5f, 0xfd, 0xe5, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1756(ch_1756, ch_1756 + sizeof(ch_1756) -1);
CDataStream stream_1756(vch_1756, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1756;
stream_1756 >> txHist_1756;

if(block.vtx[0]->GetHash() == txHist_1756.GetHash() && nHeight == 1263503) {
return true;
}
unsigned char ch_1757[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd6, 0x47, 0x13, 0x04, 0x7a, 0x10, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x42, 0xa8, 0x7e, 0x10, 0x61, 0x80, 0xff, 0x62, 0x4f, 0x76, 0x7c, 0x51, 0x51, 0x7a, 0x45, 0x29, 0xc4, 0xde, 0xc3, 0xd4, 0xcf, 0x30, 0x62, 0xa6, 0x1b, 0x0e, 0x20, 0xad, 0x90, 0xb7, 0x4a, 0xa9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xff, 0xfc, 0xc6, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x0b, 0x10, 0xd0, 0xfd, 0x6d, 0x4b, 0x59, 0xb8, 0x2c, 0x39, 0x54, 0xe0, 0x7a, 0xbe, 0x4f, 0xae, 0x41, 0x80, 0x4b, 0xce, 0xff, 0x29, 0xf2, 0x7d, 0x2a, 0x5d, 0x5b, 0xcd, 0x40, 0xbb, 0x20, 0x57, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1757(ch_1757, ch_1757 + sizeof(ch_1757) -1);
CDataStream stream_1757(vch_1757, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1757;
stream_1757 >> txHist_1757;

if(block.vtx[0]->GetHash() == txHist_1757.GetHash() && nHeight == 1263574) {
return true;
}
unsigned char ch_1758[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xcf, 0x47, 0x13, 0x04, 0x16, 0x0f, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5d, 0xc1, 0x13, 0x51, 0x1f, 0x4b, 0x49, 0xb9, 0x6e, 0x29, 0x45, 0x00, 0x5e, 0x44, 0x66, 0xf2, 0x83, 0xed, 0x74, 0xdf, 0xf2, 0x43, 0x72, 0xe5, 0xc9, 0x81, 0xee, 0x8c, 0x77, 0x70, 0x2d, 0x92, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x05, 0x6e, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1758(ch_1758, ch_1758 + sizeof(ch_1758) -1);
CDataStream stream_1758(vch_1758, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1758;
stream_1758 >> txHist_1758;

if(block.vtx[0]->GetHash() == txHist_1758.GetHash() && nHeight == 1263567) {
return true;
}
unsigned char ch_1759[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc3, 0x47, 0x13, 0x04, 0xfd, 0x0b, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x82, 0x30, 0x91, 0xcd, 0x60, 0x59, 0x0d, 0xa6, 0x48, 0x21, 0xf5, 0x33, 0x67, 0x36, 0x33, 0x37, 0xb9, 0x03, 0xd5, 0x53, 0x16, 0x5b, 0x9e, 0x4f, 0x5c, 0x9c, 0xb3, 0x8a, 0xea, 0xf3, 0xa3, 0x5e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x04, 0x1b, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1759(ch_1759, ch_1759 + sizeof(ch_1759) -1);
CDataStream stream_1759(vch_1759, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1759;
stream_1759 >> txHist_1759;

if(block.vtx[0]->GetHash() == txHist_1759.GetHash() && nHeight == 1263555) {
return true;
}
unsigned char ch_1760[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xd0, 0x47, 0x13, 0x04, 0x18, 0x0f, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5d, 0xc1, 0x13, 0x51, 0x1f, 0x4b, 0x49, 0xb9, 0x6e, 0x29, 0x45, 0x00, 0x5e, 0x44, 0x66, 0xf2, 0x83, 0xed, 0x74, 0xdf, 0xf2, 0x43, 0x72, 0xe5, 0xc9, 0x81, 0xee, 0x8c, 0x77, 0x70, 0x2d, 0x92, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x33, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1760(ch_1760, ch_1760 + sizeof(ch_1760) -1);
CDataStream stream_1760(vch_1760, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1760;
stream_1760 >> txHist_1760;

if(block.vtx[0]->GetHash() == txHist_1760.GetHash() && nHeight == 1263568) {
return true;
}
unsigned char ch_1761[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xca, 0x47, 0x13, 0x04, 0x7d, 0x0d, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9e, 0xcb, 0x1c, 0x35, 0x42, 0x8d, 0x63, 0x15, 0x7b, 0x50, 0x52, 0x0f, 0x84, 0x63, 0xd6, 0x67, 0xa2, 0x34, 0x87, 0xf4, 0xb8, 0xca, 0x29, 0xac, 0xe6, 0x2a, 0x30, 0x42, 0x7c, 0xdb, 0xac, 0xd6, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0x8c, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1761(ch_1761, ch_1761 + sizeof(ch_1761) -1);
CDataStream stream_1761(vch_1761, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1761;
stream_1761 >> txHist_1761;

if(block.vtx[0]->GetHash() == txHist_1761.GetHash() && nHeight == 1263562) {
return true;
}
unsigned char ch_1762[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xc4, 0x47, 0x13, 0x04, 0x04, 0x0c, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x82, 0x30, 0x91, 0xcd, 0x60, 0x59, 0x0d, 0xa6, 0x48, 0x21, 0xf5, 0x33, 0x67, 0x36, 0x33, 0x37, 0xb9, 0x03, 0xd5, 0x53, 0x16, 0x5b, 0x9e, 0x4f, 0x5c, 0x9c, 0xb3, 0x8a, 0xea, 0xf3, 0xa3, 0x5e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0x4c, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1762(ch_1762, ch_1762 + sizeof(ch_1762) -1);
CDataStream stream_1762(vch_1762, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1762;
stream_1762 >> txHist_1762;

if(block.vtx[0]->GetHash() == txHist_1762.GetHash() && nHeight == 1263556) {
return true;
}
unsigned char ch_1763[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xbe, 0x47, 0x13, 0x04, 0x34, 0x0a, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7f, 0x79, 0x0a, 0xe9, 0xb1, 0x6b, 0x9b, 0x81, 0x98, 0x26, 0x66, 0x23, 0xab, 0x0e, 0x26, 0xfc, 0x71, 0x8e, 0xd0, 0x35, 0x4b, 0x72, 0x2e, 0xc0, 0x58, 0xde, 0x96, 0xde, 0x55, 0xb8, 0x58, 0x52, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01, 0xdb, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1763(ch_1763, ch_1763 + sizeof(ch_1763) -1);
CDataStream stream_1763(vch_1763, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1763;
stream_1763 >> txHist_1763;

if(block.vtx[0]->GetHash() == txHist_1763.GetHash() && nHeight == 1263550) {
return true;
}
unsigned char ch_1764[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xbd, 0x47, 0x13, 0x04, 0x1c, 0x0a, 0x35, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x07, 0xe2, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xaf, 0x98, 0x2b, 0x2f, 0x97, 0x17, 0x0d, 0x32, 0x11, 0x17, 0x33, 0x7d, 0x03, 0x54, 0xb5, 0x45, 0x91, 0x56, 0x37, 0x16, 0x7f, 0x85, 0x88, 0x50, 0x42, 0x0c, 0xf7, 0x15, 0x09, 0xe6, 0x85, 0x60, 0x08, 0xeb, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1764(ch_1764, ch_1764 + sizeof(ch_1764) -1);
CDataStream stream_1764(vch_1764, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1764;
stream_1764 >> txHist_1764;

if(block.vtx[0]->GetHash() == txHist_1764.GetHash() && nHeight == 1263549) {
return true;
}
unsigned char ch_1765[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5a, 0x47, 0x13, 0x04, 0xaa, 0xe1, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5c, 0x4d, 0xc9, 0x44, 0xa1, 0x8e, 0x81, 0x8a, 0x5c, 0x5e, 0x58, 0x3f, 0x55, 0x1c, 0xa8, 0xd2, 0x9e, 0x89, 0x93, 0x03, 0x24, 0xd8, 0xd3, 0xe6, 0x85, 0xba, 0x0f, 0xd5, 0xb8, 0x94, 0x71, 0x37, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x05, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1765(ch_1765, ch_1765 + sizeof(ch_1765) -1);
CDataStream stream_1765(vch_1765, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1765;
stream_1765 >> txHist_1765;

if(block.vtx[0]->GetHash() == txHist_1765.GetHash() && nHeight == 1263450) {
return true;
}
unsigned char ch_1766[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb7, 0x47, 0x13, 0x04, 0x1e, 0x08, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x19, 0x05, 0x14, 0xd0, 0xc3, 0x52, 0xfb, 0xac, 0xb6, 0x1a, 0x40, 0x62, 0x9f, 0x16, 0xe7, 0x8e, 0x92, 0xf3, 0x67, 0x46, 0x63, 0xd5, 0xdb, 0x36, 0x9e, 0x3c, 0x8b, 0x52, 0x4c, 0x52, 0xe6, 0x6a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x9a, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1766(ch_1766, ch_1766 + sizeof(ch_1766) -1);
CDataStream stream_1766(vch_1766, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1766;
stream_1766 >> txHist_1766;

if(block.vtx[0]->GetHash() == txHist_1766.GetHash() && nHeight == 1263543) {
return true;
}
unsigned char ch_1767[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb6, 0x47, 0x13, 0x04, 0x1c, 0x08, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x19, 0x05, 0x14, 0xd0, 0xc3, 0x52, 0xfb, 0xac, 0xb6, 0x1a, 0x40, 0x62, 0x9f, 0x16, 0xe7, 0x8e, 0x92, 0xf3, 0x67, 0x46, 0x63, 0xd5, 0xdb, 0x36, 0x9e, 0x3c, 0x8b, 0x52, 0x4c, 0x52, 0xe6, 0x6a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf5, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1767(ch_1767, ch_1767 + sizeof(ch_1767) -1);
CDataStream stream_1767(vch_1767, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1767;
stream_1767 >> txHist_1767;

if(block.vtx[0]->GetHash() == txHist_1767.GetHash() && nHeight == 1263542) {
return true;
}
unsigned char ch_1768[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x59, 0x47, 0x13, 0x04, 0xa7, 0xe1, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5c, 0x4d, 0xc9, 0x44, 0xa1, 0x8e, 0x81, 0x8a, 0x5c, 0x5e, 0x58, 0x3f, 0x55, 0x1c, 0xa8, 0xd2, 0x9e, 0x89, 0x93, 0x03, 0x24, 0xd8, 0xd3, 0xe6, 0x85, 0xba, 0x0f, 0xd5, 0xb8, 0x94, 0x71, 0x37, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x2c, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1768(ch_1768, ch_1768 + sizeof(ch_1768) -1);
CDataStream stream_1768(vch_1768, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1768;
stream_1768 >> txHist_1768;

if(block.vtx[0]->GetHash() == txHist_1768.GetHash() && nHeight == 1263449) {
return true;
}
unsigned char ch_1769[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xb0, 0x47, 0x13, 0x04, 0xe6, 0x02, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x28, 0xd9, 0x6e, 0x98, 0xfd, 0x91, 0x7c, 0x53, 0x7a, 0x06, 0x70, 0x0e, 0x7d, 0x56, 0x73, 0x36, 0x3e, 0x49, 0x16, 0xcd, 0x74, 0x43, 0x8b, 0x8b, 0xc1, 0x65, 0x9e, 0x8d, 0xf5, 0x0f, 0x28, 0x05, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf9, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1769(ch_1769, ch_1769 + sizeof(ch_1769) -1);
CDataStream stream_1769(vch_1769, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1769;
stream_1769 >> txHist_1769;

if(block.vtx[0]->GetHash() == txHist_1769.GetHash() && nHeight == 1263536) {
return true;
}
unsigned char ch_1770[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xaf, 0x47, 0x13, 0x04, 0xa2, 0x02, 0x35, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x3f, 0x5a, 0x53, 0xd4, 0x7e, 0x65, 0xa3, 0x21, 0xcb, 0x04, 0xce, 0xba, 0x33, 0xb4, 0xd4, 0x9c, 0xa8, 0x4f, 0x52, 0x82, 0x4c, 0x6b, 0xd4, 0x8d, 0x66, 0x6d, 0xaf, 0xe7, 0x36, 0x91, 0x4b, 0x83, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfb, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1770(ch_1770, ch_1770 + sizeof(ch_1770) -1);
CDataStream stream_1770(vch_1770, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1770;
stream_1770 >> txHist_1770;

if(block.vtx[0]->GetHash() == txHist_1770.GetHash() && nHeight == 1263535) {
return true;
}
unsigned char ch_1771[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x58, 0x47, 0x13, 0x04, 0xa6, 0xe1, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5c, 0x4d, 0xc9, 0x44, 0xa1, 0x8e, 0x81, 0x8a, 0x5c, 0x5e, 0x58, 0x3f, 0x55, 0x1c, 0xa8, 0xd2, 0x9e, 0x89, 0x93, 0x03, 0x24, 0xd8, 0xd3, 0xe6, 0x85, 0xba, 0x0f, 0xd5, 0xb8, 0x94, 0x71, 0x37, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x03, 0x7d, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1771(ch_1771, ch_1771 + sizeof(ch_1771) -1);
CDataStream stream_1771(vch_1771, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1771;
stream_1771 >> txHist_1771;

if(block.vtx[0]->GetHash() == txHist_1771.GetHash() && nHeight == 1263448) {
return true;
}
unsigned char ch_1772[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa9, 0x47, 0x13, 0x04, 0x27, 0x01, 0x35, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xfb, 0xcf, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x9c, 0x57, 0x38, 0xcd, 0xa5, 0xac, 0x45, 0xc5, 0xab, 0x4a, 0x24, 0x63, 0x13, 0x4e, 0xbb, 0xa4, 0x8f, 0x7a, 0xf6, 0xa5, 0x58, 0xf0, 0x7c, 0x8b, 0xee, 0x2a, 0x73, 0xe4, 0x11, 0x5b, 0xe3, 0x8b, 0x80, 0xec, 0x6a, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1772(ch_1772, ch_1772 + sizeof(ch_1772) -1);
CDataStream stream_1772(vch_1772, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1772;
stream_1772 >> txHist_1772;

if(block.vtx[0]->GetHash() == txHist_1772.GetHash() && nHeight == 1263529) {
return true;
}
unsigned char ch_1773[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0xa8, 0x47, 0x13, 0x04, 0x0f, 0x00, 0x35, 0x5b, 0x08, 0x78, 0x00, 0x08, 0x0e, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1773(ch_1773, ch_1773 + sizeof(ch_1773) -1);
CDataStream stream_1773(vch_1773, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1773;
stream_1773 >> txHist_1773;

if(block.vtx[0]->GetHash() == txHist_1773.GetHash() && nHeight == 1263528) {
return true;
}
unsigned char ch_1774[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x57, 0x47, 0x13, 0x04, 0x8e, 0xe1, 0x34, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xe3, 0x95, 0x26, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x80, 0xb0, 0x4b, 0xdc, 0xcf, 0xf0, 0x9b, 0xc2, 0x44, 0xc6, 0x83, 0x4c, 0xe3, 0xba, 0x59, 0xc9, 0x23, 0x44, 0x79, 0x4e, 0x7f, 0x12, 0x8f, 0xcf, 0x19, 0xcb, 0x2f, 0x96, 0xd4, 0x07, 0xe2, 0xdf, 0x10, 0x56, 0xf8, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1774(ch_1774, ch_1774 + sizeof(ch_1774) -1);
CDataStream stream_1774(vch_1774, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1774;
stream_1774 >> txHist_1774;

if(block.vtx[0]->GetHash() == txHist_1774.GetHash() && nHeight == 1263447) {
return true;
}
unsigned char ch_1775[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0xa2, 0x47, 0x13, 0x04, 0x7b, 0xfe, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x87, 0x15, 0x04, 0xd0, 0xce, 0x75, 0x6b, 0x8c, 0x60, 0xb5, 0x3f, 0xd4, 0xea, 0x3e, 0xee, 0x74, 0x24, 0x69, 0x45, 0xbc, 0x8a, 0x2c, 0xeb, 0xdd, 0x2f, 0xed, 0xe6, 0x24, 0x7b, 0x8b, 0x31, 0xa7, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1775(ch_1775, ch_1775 + sizeof(ch_1775) -1);
CDataStream stream_1775(vch_1775, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1775;
stream_1775 >> txHist_1775;

if(block.vtx[0]->GetHash() == txHist_1775.GetHash() && nHeight == 1263522) {
return true;
}
unsigned char ch_1776[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x56, 0x47, 0x13, 0x04, 0x44, 0xe0, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x26, 0xa9, 0x6e, 0x0b, 0xe8, 0x6e, 0x76, 0x07, 0x66, 0x7c, 0x30, 0x5f, 0x56, 0xd4, 0x72, 0x3c, 0x49, 0x28, 0x7d, 0x8b, 0xbe, 0x78, 0x91, 0xae, 0x22, 0x38, 0xdb, 0x1b, 0xdf, 0x81, 0x75, 0x0f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfc, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x0f, 0x34, 0x70, 0x5b, 0xfa, 0x94, 0x2d, 0x8c, 0x39, 0x54, 0xc8, 0x3b, 0x9e, 0xaa, 0xe9, 0xa5, 0xcf, 0x37, 0x7e, 0xce, 0x4a, 0x8f, 0x24, 0x3e, 0x86, 0x31, 0xff, 0xeb, 0xbb, 0x04, 0x07, 0x33, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1776(ch_1776, ch_1776 + sizeof(ch_1776) -1);
CDataStream stream_1776(vch_1776, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1776;
stream_1776 >> txHist_1776;

if(block.vtx[0]->GetHash() == txHist_1776.GetHash() && nHeight == 1263446) {
return true;
}
unsigned char ch_1777[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x9b, 0x47, 0x13, 0x04, 0x66, 0xfc, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x05, 0xe1, 0x81, 0x81, 0x01, 0x82, 0x97, 0x86, 0x16, 0xcf, 0x8c, 0xd2, 0xdb, 0x7a, 0x08, 0x1c, 0xb5, 0xaf, 0xe3, 0xba, 0x40, 0xa4, 0x88, 0x64, 0x28, 0xd9, 0xfb, 0xad, 0x57, 0x11, 0xfa, 0x7a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0xff, 0xff, 0xfb, 0x23, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x58, 0xef, 0x2d, 0x66, 0xab, 0xe6, 0x54, 0x61, 0xed, 0x4c, 0xdd, 0x8f, 0x46, 0x2e, 0xac, 0xa3, 0xcd, 0x3a, 0x45, 0x7b, 0xb6, 0x09, 0x3e, 0x09, 0x14, 0x3f, 0x65, 0x24, 0xdc, 0x8e, 0xf7, 0xdc, 0x20, 0x70, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1777(ch_1777, ch_1777 + sizeof(ch_1777) -1);
CDataStream stream_1777(vch_1777, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1777;
stream_1777 >> txHist_1777;

if(block.vtx[0]->GetHash() == txHist_1777.GetHash() && nHeight == 1263515) {
return true;
}
unsigned char ch_1778[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x55, 0x47, 0x13, 0x04, 0x08, 0xe0, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x25, 0xf0, 0x03, 0xc9, 0x6f, 0x71, 0x0f, 0x51, 0xad, 0x86, 0x8e, 0xf0, 0xcf, 0x0a, 0xac, 0x28, 0x58, 0xa5, 0x60, 0xb9, 0xce, 0xd6, 0x4a, 0x95, 0xd4, 0xee, 0x62, 0x35, 0x10, 0xd3, 0x12, 0x70, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x01, 0x12, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x69, 0x71, 0xf5, 0x1a, 0x1f, 0xb6, 0x97, 0xd2, 0x66, 0x20, 0xf6, 0xfc, 0x1b, 0xa0, 0xa0, 0x29, 0x92, 0x76, 0x86, 0x9d, 0x23, 0x00, 0xfa, 0xad, 0x46, 0x79, 0x6a, 0xb4, 0x68, 0x83, 0xfc, 0x20, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1778(ch_1778, ch_1778 + sizeof(ch_1778) -1);
CDataStream stream_1778(vch_1778, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1778;
stream_1778 >> txHist_1778;

if(block.vtx[0]->GetHash() == txHist_1778.GetHash() && nHeight == 1263445) {
return true;
}
unsigned char ch_1779[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x94, 0x47, 0x13, 0x04, 0x6e, 0xf8, 0x34, 0x5b, 0x08, 0x78, 0x00, 0x08, 0x0e, 0x44, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1779(ch_1779, ch_1779 + sizeof(ch_1779) -1);
CDataStream stream_1779(vch_1779, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1779;
stream_1779 >> txHist_1779;

if(block.vtx[0]->GetHash() == txHist_1779.GetHash() && nHeight == 1263508) {
return true;
}
unsigned char ch_1780[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x93, 0x47, 0x13, 0x04, 0x42, 0xf8, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5f, 0xac, 0x19, 0xee, 0xc0, 0x29, 0x66, 0x4a, 0x43, 0xfc, 0x08, 0x4b, 0xd8, 0x1b, 0xc7, 0x5b, 0x93, 0x62, 0xde, 0x6b, 0xca, 0x65, 0xe3, 0x5a, 0x30, 0x1b, 0xfe, 0xe8, 0x76, 0xd5, 0x68, 0xa7, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xfb, 0xd7, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1780(ch_1780, ch_1780 + sizeof(ch_1780) -1);
CDataStream stream_1780(vch_1780, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1780;
stream_1780 >> txHist_1780;

if(block.vtx[0]->GetHash() == txHist_1780.GetHash() && nHeight == 1263507) {
return true;
}
unsigned char ch_1781[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x54, 0x47, 0x13, 0x04, 0x9e, 0xde, 0x34, 0x5b, 0x08, 0x78, 0x00, 0x00, 0x01, 0x87, 0x05, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1781(ch_1781, ch_1781 + sizeof(ch_1781) -1);
CDataStream stream_1781(vch_1781, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1781;
stream_1781 >> txHist_1781;

if(block.vtx[0]->GetHash() == txHist_1781.GetHash() && nHeight == 1263444) {
return true;
}
unsigned char ch_1782[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4d, 0x47, 0x13, 0x04, 0x98, 0xdc, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x30, 0x95, 0xd6, 0x55, 0x2e, 0x3c, 0xfb, 0x65, 0x3f, 0x93, 0x65, 0x62, 0x84, 0xa7, 0xf1, 0xbb, 0x83, 0xec, 0x51, 0x00, 0x2d, 0x32, 0xd5, 0x6f, 0x34, 0x8d, 0x13, 0x8d, 0x4d, 0x07, 0x66, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xf9, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1782(ch_1782, ch_1782 + sizeof(ch_1782) -1);
CDataStream stream_1782(vch_1782, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1782;
stream_1782 >> txHist_1782;

if(block.vtx[0]->GetHash() == txHist_1782.GetHash() && nHeight == 1263437) {
return true;
}
unsigned char ch_1783[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x8e, 0x47, 0x13, 0x04, 0x45, 0xf6, 0x34, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf9, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1783(ch_1783, ch_1783 + sizeof(ch_1783) -1);
CDataStream stream_1783(vch_1783, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1783;
stream_1783 >> txHist_1783;

if(block.vtx[0]->GetHash() == txHist_1783.GetHash() && nHeight == 1263502) {
return true;
}
unsigned char ch_1784[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x53, 0x47, 0x13, 0x04, 0x70, 0xde, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd5, 0xef, 0x07, 0x5c, 0x49, 0x82, 0x83, 0xbe, 0x00, 0x4e, 0xb9, 0x67, 0xa5, 0x4b, 0x25, 0x97, 0x08, 0x55, 0x00, 0x54, 0x6c, 0xe8, 0x96, 0xdb, 0x55, 0x0c, 0xf1, 0x1b, 0x77, 0x41, 0x8f, 0x48, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0xfe, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1784(ch_1784, ch_1784 + sizeof(ch_1784) -1);
CDataStream stream_1784(vch_1784, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1784;
stream_1784 >> txHist_1784;

if(block.vtx[0]->GetHash() == txHist_1784.GetHash() && nHeight == 1263443) {
return true;
}
unsigned char ch_1785[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x41, 0x47, 0x13, 0x04, 0x83, 0xda, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xda, 0x2a, 0x17, 0xf1, 0x73, 0x29, 0x21, 0x52, 0x40, 0x21, 0x34, 0x36, 0xc4, 0x92, 0xe6, 0xd6, 0xc7, 0x63, 0x28, 0xf4, 0x50, 0x06, 0xd8, 0x9d, 0xbe, 0x56, 0x60, 0xf9, 0xd5, 0xf5, 0xd9, 0x26, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x6d, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1785(ch_1785, ch_1785 + sizeof(ch_1785) -1);
CDataStream stream_1785(vch_1785, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1785;
stream_1785 >> txHist_1785;

if(block.vtx[0]->GetHash() == txHist_1785.GetHash() && nHeight == 1263425) {
return true;
}
unsigned char ch_1786[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4b, 0x47, 0x13, 0x04, 0x5d, 0xdc, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xdb, 0x9d, 0x71, 0x22, 0xea, 0x56, 0x41, 0xfc, 0x2e, 0xeb, 0x54, 0xbc, 0x0e, 0xde, 0xd8, 0x0c, 0x10, 0x41, 0xfc, 0x3c, 0xdb, 0xdb, 0xd1, 0x94, 0x3e, 0x99, 0xde, 0x03, 0xac, 0xe9, 0xcc, 0x95, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xf9, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1786(ch_1786, ch_1786 + sizeof(ch_1786) -1);
CDataStream stream_1786(vch_1786, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1786;
stream_1786 >> txHist_1786;

if(block.vtx[0]->GetHash() == txHist_1786.GetHash() && nHeight == 1263435) {
return true;
}
unsigned char ch_1787[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3c, 0x47, 0x13, 0x04, 0xb3, 0xd7, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xfb, 0xf1, 0x2f, 0xc8, 0x39, 0x33, 0xd2, 0x2b, 0x26, 0xf1, 0xcf, 0xeb, 0xc5, 0xb0, 0x01, 0xb4, 0xe4, 0xf5, 0xfe, 0x04, 0x8f, 0x0a, 0x62, 0x8c, 0xbb, 0x9d, 0xd2, 0x1f, 0x96, 0x7e, 0x0f, 0xfc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xf9, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1787(ch_1787, ch_1787 + sizeof(ch_1787) -1);
CDataStream stream_1787(vch_1787, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1787;
stream_1787 >> txHist_1787;

if(block.vtx[0]->GetHash() == txHist_1787.GetHash() && nHeight == 1263420) {
return true;
}
unsigned char ch_1788[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x8a, 0x47, 0x13, 0x04, 0xd9, 0xf5, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xdf, 0x0e, 0x1d, 0xd5, 0xbe, 0xc6, 0x86, 0x18, 0x6c, 0x9c, 0x24, 0xf8, 0x08, 0xbf, 0xef, 0x05, 0xb5, 0xfc, 0xa3, 0xaa, 0x1a, 0xcb, 0xfc, 0x4e, 0x4e, 0x8f, 0x70, 0xdd, 0x5f, 0xc4, 0x06, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x02, 0x1e, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1788(ch_1788, ch_1788 + sizeof(ch_1788) -1);
CDataStream stream_1788(vch_1788, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1788;
stream_1788 >> txHist_1788;

if(block.vtx[0]->GetHash() == txHist_1788.GetHash() && nHeight == 1263498) {
return true;
}
unsigned char ch_1789[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x89, 0x47, 0x13, 0x04, 0xd7, 0xf5, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xdf, 0x0e, 0x1d, 0xd5, 0xbe, 0xc6, 0x86, 0x18, 0x6c, 0x9c, 0x24, 0xf8, 0x08, 0xbf, 0xef, 0x05, 0xb5, 0xfc, 0xa3, 0xaa, 0x1a, 0xcb, 0xfc, 0x4e, 0x4e, 0x8f, 0x70, 0xdd, 0x5f, 0xc4, 0x06, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0x38, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1789(ch_1789, ch_1789 + sizeof(ch_1789) -1);
CDataStream stream_1789(vch_1789, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1789;
stream_1789 >> txHist_1789;

if(block.vtx[0]->GetHash() == txHist_1789.GetHash() && nHeight == 1263497) {
return true;
}
unsigned char ch_1790[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x52, 0x47, 0x13, 0x04, 0x6f, 0xde, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xd5, 0xef, 0x07, 0x5c, 0x49, 0x82, 0x83, 0xbe, 0x00, 0x4e, 0xb9, 0x67, 0xa5, 0x4b, 0x25, 0x97, 0x08, 0x55, 0x00, 0x54, 0x6c, 0xe8, 0x96, 0xdb, 0x55, 0x0c, 0xf1, 0x1b, 0x77, 0x41, 0x8f, 0x48, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xfc, 0x22, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1790(ch_1790, ch_1790 + sizeof(ch_1790) -1);
CDataStream stream_1790(vch_1790, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1790;
stream_1790 >> txHist_1790;

if(block.vtx[0]->GetHash() == txHist_1790.GetHash() && nHeight == 1263442) {
return true;
}
unsigned char ch_1791[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3e, 0x47, 0x13, 0x04, 0x18, 0xd8, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x82, 0x9f, 0x98, 0xde, 0x78, 0x32, 0x22, 0xef, 0xcd, 0x21, 0xf2, 0xf8, 0x99, 0x7f, 0x80, 0xcc, 0x87, 0xa1, 0x89, 0x64, 0x50, 0xdb, 0x89, 0x69, 0x3f, 0x99, 0xfb, 0x15, 0x8d, 0xe2, 0x5e, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xf9, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1791(ch_1791, ch_1791 + sizeof(ch_1791) -1);
CDataStream stream_1791(vch_1791, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1791;
stream_1791 >> txHist_1791;

if(block.vtx[0]->GetHash() == txHist_1791.GetHash() && nHeight == 1263422) {
return true;
}
unsigned char ch_1792[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x49, 0x47, 0x13, 0x04, 0x43, 0xdc, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc0, 0x5c, 0x13, 0xa8, 0xf4, 0x75, 0x9a, 0xbb, 0xaa, 0xbf, 0x8f, 0x5d, 0xac, 0x01, 0x90, 0x43, 0xb8, 0xdf, 0xdf, 0x5f, 0xaa, 0x7b, 0xe8, 0x82, 0x93, 0x09, 0x2c, 0x22, 0x9e, 0x60, 0x6c, 0xb4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x01, 0xaa, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1792(ch_1792, ch_1792 + sizeof(ch_1792) -1);
CDataStream stream_1792(vch_1792, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1792;
stream_1792 >> txHist_1792;

if(block.vtx[0]->GetHash() == txHist_1792.GetHash() && nHeight == 1263433) {
return true;
}
unsigned char ch_1793[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x38, 0x47, 0x13, 0x04, 0xe9, 0xd6, 0x34, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xf7, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1793(ch_1793, ch_1793 + sizeof(ch_1793) -1);
CDataStream stream_1793(vch_1793, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1793;
stream_1793 >> txHist_1793;

if(block.vtx[0]->GetHash() == txHist_1793.GetHash() && nHeight == 1263416) {
return true;
}
unsigned char ch_1794[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x86, 0x47, 0x13, 0x04, 0x27, 0xf3, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x64, 0x85, 0x50, 0xe1, 0x4e, 0x97, 0x81, 0x7d, 0x76, 0xf7, 0xce, 0x4e, 0x02, 0xf3, 0x6c, 0x58, 0x9e, 0xbd, 0x43, 0x0a, 0x50, 0x01, 0x8d, 0xd8, 0x18, 0x0a, 0xca, 0xec, 0xb8, 0xd9, 0xfb, 0x61, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf5, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1794(ch_1794, ch_1794 + sizeof(ch_1794) -1);
CDataStream stream_1794(vch_1794, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1794;
stream_1794 >> txHist_1794;

if(block.vtx[0]->GetHash() == txHist_1794.GetHash() && nHeight == 1263494) {
return true;
}
unsigned char ch_1795[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x85, 0x47, 0x13, 0x04, 0x23, 0xf3, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x64, 0x85, 0x50, 0xe1, 0x4e, 0x97, 0x81, 0x7d, 0x76, 0xf7, 0xce, 0x4e, 0x02, 0xf3, 0x6c, 0x58, 0x9e, 0xbd, 0x43, 0x0a, 0x50, 0x01, 0x8d, 0xd8, 0x18, 0x0a, 0xca, 0xec, 0xb8, 0xd9, 0xfb, 0x61, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0x65, 0xf0, 0x03, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1795(ch_1795, ch_1795 + sizeof(ch_1795) -1);
CDataStream stream_1795(vch_1795, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1795;
stream_1795 >> txHist_1795;

if(block.vtx[0]->GetHash() == txHist_1795.GetHash() && nHeight == 1263493) {
return true;
}
unsigned char ch_1796[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x51, 0x47, 0x13, 0x04, 0x35, 0xde, 0x34, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf8, 0x46, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1796(ch_1796, ch_1796 + sizeof(ch_1796) -1);
CDataStream stream_1796(vch_1796, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1796;
stream_1796 >> txHist_1796;

if(block.vtx[0]->GetHash() == txHist_1796.GetHash() && nHeight == 1263441) {
return true;
}
unsigned char ch_1797[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x3a, 0x47, 0x13, 0x04, 0x6a, 0xd7, 0x34, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x05, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x48, 0x76, 0x2c, 0xc4, 0x2b, 0x44, 0x84, 0x0a, 0x98, 0x79, 0x0c, 0x2b, 0xfb, 0x35, 0x59, 0xc9, 0x18, 0x8b, 0x65, 0xb5, 0x55, 0x10, 0xd4, 0x2f, 0x85, 0x9b, 0x5b, 0xd6, 0xff, 0x06, 0xdd, 0x9f, 0x68, 0x32, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1797(ch_1797, ch_1797 + sizeof(ch_1797) -1);
CDataStream stream_1797(vch_1797, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1797;
stream_1797 >> txHist_1797;

if(block.vtx[0]->GetHash() == txHist_1797.GetHash() && nHeight == 1263418) {
return true;
}
unsigned char ch_1798[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x34, 0x47, 0x13, 0x04, 0x0c, 0xd5, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf8, 0x4d, 0x4f, 0xfe, 0x6c, 0x91, 0x0f, 0x8a, 0x2f, 0x30, 0xc6, 0x75, 0xa3, 0xbe, 0xf2, 0xc0, 0xe4, 0x38, 0x38, 0x52, 0x0c, 0xe9, 0x9c, 0x10, 0x8d, 0xdd, 0xe8, 0x02, 0x19, 0xd1, 0x16, 0x43, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4f, 0xff, 0xff, 0x81, 0xe5, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1798(ch_1798, ch_1798 + sizeof(ch_1798) -1);
CDataStream stream_1798(vch_1798, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1798;
stream_1798 >> txHist_1798;

if(block.vtx[0]->GetHash() == txHist_1798.GetHash() && nHeight == 1263412) {
return true;
}
unsigned char ch_1799[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x78, 0x47, 0x13, 0x04, 0xf8, 0xed, 0x34, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x0a, 0x8b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x9a, 0x77, 0x62, 0x4b, 0x1f, 0xc0, 0x2b, 0xb4, 0xe8, 0xf4, 0xf6, 0xbd, 0xbb, 0x55, 0x69, 0xc2, 0x86, 0x1f, 0xc5, 0x42, 0xcc, 0x41, 0xd8, 0x8f, 0x4f, 0x25, 0x66, 0xca, 0xcf, 0xb5, 0xac, 0x7c, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1799(ch_1799, ch_1799 + sizeof(ch_1799) -1);
CDataStream stream_1799(vch_1799, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1799;
stream_1799 >> txHist_1799;

if(block.vtx[0]->GetHash() == txHist_1799.GetHash() && nHeight == 1263480) {
return true;
}
unsigned char ch_1800[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x45, 0x47, 0x13, 0x04, 0x28, 0xdb, 0x34, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xfe, 0xff, 0x11, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1800(ch_1800, ch_1800 + sizeof(ch_1800) -1);
CDataStream stream_1800(vch_1800, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1800;
stream_1800 >> txHist_1800;

if(block.vtx[0]->GetHash() == txHist_1800.GetHash() && nHeight == 1263429) {
return true;
}
unsigned char ch_1801[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x7f, 0x47, 0x13, 0x04, 0xd2, 0xef, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xb7, 0xd7, 0xf1, 0x31, 0x5f, 0x08, 0xa6, 0xb1, 0x27, 0x56, 0x48, 0x39, 0x4f, 0xf1, 0x66, 0xf1, 0xc3, 0x16, 0xc5, 0x92, 0x68, 0x34, 0x1f, 0xe3, 0x77, 0x14, 0xc2, 0x17, 0x9e, 0x28, 0x87, 0x2f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xfc, 0x27, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1801(ch_1801, ch_1801 + sizeof(ch_1801) -1);
CDataStream stream_1801(vch_1801, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1801;
stream_1801 >> txHist_1801;

if(block.vtx[0]->GetHash() == txHist_1801.GetHash() && nHeight == 1263487) {
return true;
}
unsigned char ch_1802[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x74, 0x47, 0x13, 0x04, 0xf8, 0xeb, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x65, 0x29, 0x5a, 0x17, 0x5c, 0x18, 0xf2, 0x3d, 0xa8, 0x5c, 0x30, 0x8b, 0x68, 0x66, 0x60, 0x7c, 0xd0, 0x91, 0x41, 0xba, 0x1a, 0x0f, 0x00, 0xd1, 0xbf, 0x77, 0x22, 0xb4, 0xac, 0x82, 0xf3, 0xbf, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x70, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1802(ch_1802, ch_1802 + sizeof(ch_1802) -1);
CDataStream stream_1802(vch_1802, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1802;
stream_1802 >> txHist_1802;

if(block.vtx[0]->GetHash() == txHist_1802.GetHash() && nHeight == 1263476) {
return true;
}
unsigned char ch_1803[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x32, 0x47, 0x13, 0x04, 0xff, 0xd4, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf8, 0x4d, 0x4f, 0xfe, 0x6c, 0x91, 0x0f, 0x8a, 0x2f, 0x30, 0xc6, 0x75, 0xa3, 0xbe, 0xf2, 0xc0, 0xe4, 0x38, 0x38, 0x52, 0x0c, 0xe9, 0x9c, 0x10, 0x8d, 0xdd, 0xe8, 0x02, 0x19, 0xd1, 0x16, 0x43, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x61, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1803(ch_1803, ch_1803 + sizeof(ch_1803) -1);
CDataStream stream_1803(vch_1803, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1803;
stream_1803 >> txHist_1803;

if(block.vtx[0]->GetHash() == txHist_1803.GetHash() && nHeight == 1263410) {
return true;
}
unsigned char ch_1804[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x43, 0x47, 0x13, 0x04, 0x84, 0xda, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xda, 0x2a, 0x17, 0xf1, 0x73, 0x29, 0x21, 0x52, 0x40, 0x21, 0x34, 0x36, 0xc4, 0x92, 0xe6, 0xd6, 0xc7, 0x63, 0x28, 0xf4, 0x50, 0x06, 0xd8, 0x9d, 0xbe, 0x56, 0x60, 0xf9, 0xd5, 0xf5, 0xd9, 0x26, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xfe, 0x1c, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1804(ch_1804, ch_1804 + sizeof(ch_1804) -1);
CDataStream stream_1804(vch_1804, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1804;
stream_1804 >> txHist_1804;

if(block.vtx[0]->GetHash() == txHist_1804.GetHash() && nHeight == 1263427) {
return true;
}
unsigned char ch_1805[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x2c, 0x47, 0x13, 0x04, 0x19, 0xd3, 0x34, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xe3, 0x3a, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1805(ch_1805, ch_1805 + sizeof(ch_1805) -1);
CDataStream stream_1805(vch_1805, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1805;
stream_1805 >> txHist_1805;

if(block.vtx[0]->GetHash() == txHist_1805.GetHash() && nHeight == 1263404) {
return true;
}
unsigned char ch_1806[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x7c, 0x47, 0x13, 0x04, 0x91, 0xee, 0x34, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xec, 0x90, 0x0f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1806(ch_1806, ch_1806 + sizeof(ch_1806) -1);
CDataStream stream_1806(vch_1806, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1806;
stream_1806 >> txHist_1806;

if(block.vtx[0]->GetHash() == txHist_1806.GetHash() && nHeight == 1263484) {
return true;
}
unsigned char ch_1807[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x73, 0x47, 0x13, 0x04, 0xf6, 0xeb, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x65, 0x29, 0x5a, 0x17, 0x5c, 0x18, 0xf2, 0x3d, 0xa8, 0x5c, 0x30, 0x8b, 0x68, 0x66, 0x60, 0x7c, 0xd0, 0x91, 0x41, 0xba, 0x1a, 0x0f, 0x00, 0xd1, 0xbf, 0x77, 0x22, 0xb4, 0xac, 0x82, 0xf3, 0xbf, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xfd, 0x3a, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1807(ch_1807, ch_1807 + sizeof(ch_1807) -1);
CDataStream stream_1807(vch_1807, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1807;
stream_1807 >> txHist_1807;

if(block.vtx[0]->GetHash() == txHist_1807.GetHash() && nHeight == 1263475) {
return true;
}
unsigned char ch_1808[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x2e, 0x47, 0x13, 0x04, 0x19, 0xd4, 0x34, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf9, 0x8a, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x55, 0xe1, 0xb2, 0x0d, 0x06, 0x69, 0xa7, 0xe4, 0x93, 0x2c, 0x97, 0xf8, 0x5b, 0x02, 0xe2, 0x78, 0x13, 0x43, 0xfb, 0x2e, 0xeb, 0x57, 0x00, 0x7e, 0x44, 0xc3, 0xd1, 0x29, 0x20, 0x84, 0x20, 0xc4, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1808(ch_1808, ch_1808 + sizeof(ch_1808) -1);
CDataStream stream_1808(vch_1808, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1808;
stream_1808 >> txHist_1808;

if(block.vtx[0]->GetHash() == txHist_1808.GetHash() && nHeight == 1263406) {
return true;
}
unsigned char ch_1809[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x40, 0x47, 0x13, 0x04, 0x46, 0xda, 0x34, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xd5, 0x57, 0x2b, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x6a, 0xee, 0x6b, 0x7e, 0xde, 0x64, 0xd7, 0x25, 0xae, 0xf2, 0x2f, 0x9c, 0x8c, 0xb7, 0x6a, 0x95, 0x88, 0x68, 0xe7, 0x6a, 0xb8, 0x51, 0x07, 0x57, 0x16, 0xba, 0x85, 0xb0, 0xb7, 0xa5, 0x06, 0x39, 0xb0, 0x78, 0x63, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1809(ch_1809, ch_1809 + sizeof(ch_1809) -1);
CDataStream stream_1809(vch_1809, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1809;
stream_1809 >> txHist_1809;

if(block.vtx[0]->GetHash() == txHist_1809.GetHash() && nHeight == 1263424) {
return true;
}
unsigned char ch_1810[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x79, 0x47, 0x13, 0x04, 0x26, 0xee, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xbc, 0x00, 0xac, 0xcf, 0x6f, 0xbe, 0x28, 0xd6, 0x9b, 0x3f, 0x92, 0x5a, 0xb6, 0xb7, 0xaf, 0x25, 0xd6, 0x57, 0xda, 0xb0, 0x6d, 0xcd, 0x01, 0xa2, 0xb5, 0x87, 0x88, 0xd2, 0xf8, 0x84, 0x44, 0x84, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x04, 0x31, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1810(ch_1810, ch_1810 + sizeof(ch_1810) -1);
CDataStream stream_1810(vch_1810, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1810;
stream_1810 >> txHist_1810;

if(block.vtx[0]->GetHash() == txHist_1810.GetHash() && nHeight == 1263481) {
return true;
}
unsigned char ch_1811[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x6c, 0x47, 0x13, 0x04, 0xc2, 0xe8, 0x34, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xff, 0x9f, 0x12, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd9, 0xb3, 0x69, 0xd5, 0x17, 0x78, 0x12, 0x12, 0xdc, 0xed, 0xc8, 0x95, 0xac, 0xc0, 0x16, 0x12, 0x99, 0xc7, 0xb8, 0x6e, 0xf4, 0x2b, 0xb2, 0xdd, 0x8e, 0x4a, 0xdf, 0xcd, 0x9e, 0x72, 0x68, 0x59, 0xa0, 0x31, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1811(ch_1811, ch_1811 + sizeof(ch_1811) -1);
CDataStream stream_1811(vch_1811, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1811;
stream_1811 >> txHist_1811;

if(block.vtx[0]->GetHash() == txHist_1811.GetHash() && nHeight == 1263468) {
return true;
}
unsigned char ch_1812[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2a, 0x47, 0x13, 0x04, 0x1f, 0xd3, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x4d, 0x4c, 0x80, 0x90, 0xd3, 0xf7, 0x1a, 0x43, 0xad, 0x4f, 0x33, 0x5b, 0xac, 0x11, 0x8c, 0xfd, 0xe5, 0x99, 0x02, 0xe6, 0xb0, 0x3d, 0x1c, 0xfc, 0x30, 0x4b, 0xb2, 0x4e, 0xb8, 0x13, 0x65, 0x6e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0xff, 0xff, 0xfc, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xd4, 0x51, 0x36, 0x4d, 0x72, 0x41, 0x70, 0x60, 0xe0, 0x79, 0x57, 0x93, 0x13, 0xf5, 0x16, 0xc2, 0x31, 0x1c, 0x80, 0x79, 0xb1, 0x06, 0x31, 0xea, 0x96, 0xd7, 0xc4, 0x61, 0x18, 0xb3, 0x21, 0x18, 0x98, 0x8f, 0x64, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1812(ch_1812, ch_1812 + sizeof(ch_1812) -1);
CDataStream stream_1812(vch_1812, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1812;
stream_1812 >> txHist_1812;

if(block.vtx[0]->GetHash() == txHist_1812.GetHash() && nHeight == 1263402) {
return true;
}
unsigned char ch_1813[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x3d, 0x47, 0x13, 0x04, 0xec, 0xd7, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x5e, 0x6b, 0x17, 0x88, 0x66, 0x2a, 0xf1, 0xf4, 0x6c, 0x8f, 0x57, 0x30, 0xb5, 0x07, 0xb5, 0x28, 0x71, 0xbf, 0x55, 0xd2, 0x9b, 0xbe, 0x30, 0x12, 0x75, 0x54, 0x8a, 0x7b, 0xb3, 0x09, 0xbf, 0x17, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1813(ch_1813, ch_1813 + sizeof(ch_1813) -1);
CDataStream stream_1813(vch_1813, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1813;
stream_1813 >> txHist_1813;

if(block.vtx[0]->GetHash() == txHist_1813.GetHash() && nHeight == 1263421) {
return true;
}
unsigned char ch_1814[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x24, 0x47, 0x13, 0x04, 0x2d, 0xd1, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa8, 0xfd, 0xae, 0x87, 0x45, 0xa5, 0x02, 0x0e, 0x4d, 0x1f, 0xda, 0x59, 0x51, 0x0b, 0x8e, 0xbc, 0x43, 0x74, 0xaf, 0x44, 0x88, 0x59, 0x25, 0x95, 0xfd, 0x70, 0x32, 0x80, 0xd6, 0xde, 0xb9, 0x22, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xfe, 0x7e, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1814(ch_1814, ch_1814 + sizeof(ch_1814) -1);
CDataStream stream_1814(vch_1814, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1814;
stream_1814 >> txHist_1814;

if(block.vtx[0]->GetHash() == txHist_1814.GetHash() && nHeight == 1263396) {
return true;
}
unsigned char ch_1815[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x75, 0x47, 0x13, 0x04, 0xf9, 0xeb, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x60, 0xad, 0xe5, 0x4a, 0x1c, 0x56, 0xff, 0x65, 0x4d, 0x6f, 0x69, 0x34, 0x0d, 0x58, 0xb8, 0x15, 0xe7, 0x90, 0x8e, 0x4d, 0xc5, 0x9b, 0x07, 0xb0, 0x66, 0xf8, 0xd7, 0x55, 0x39, 0x7a, 0xed, 0xe9, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xa8, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1815(ch_1815, ch_1815 + sizeof(ch_1815) -1);
CDataStream stream_1815(vch_1815, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1815;
stream_1815 >> txHist_1815;

if(block.vtx[0]->GetHash() == txHist_1815.GetHash() && nHeight == 1263477) {
return true;
}
unsigned char ch_1816[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x6a, 0x47, 0x13, 0x04, 0x20, 0xe8, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf6, 0x9e, 0x37, 0xf9, 0x5c, 0x3a, 0x65, 0x81, 0x14, 0x5b, 0xa9, 0x84, 0xd2, 0x8a, 0x5b, 0x4d, 0x48, 0x0f, 0x30, 0xd1, 0x8f, 0x9e, 0x4c, 0xc2, 0x66, 0x57, 0x90, 0x21, 0x74, 0xe4, 0xfd, 0x45, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xa7, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1816(ch_1816, ch_1816 + sizeof(ch_1816) -1);
CDataStream stream_1816(vch_1816, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1816;
stream_1816 >> txHist_1816;

if(block.vtx[0]->GetHash() == txHist_1816.GetHash() && nHeight == 1263466) {
return true;
}
unsigned char ch_1817[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x26, 0x47, 0x13, 0x04, 0x1a, 0xd2, 0x34, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xf6, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x45, 0xf4, 0xe0, 0xc2, 0x9d, 0xb6, 0x22, 0xe2, 0x97, 0xc0, 0x55, 0x40, 0xe0, 0x72, 0xc7, 0xa3, 0x19, 0x97, 0x74, 0xfd, 0x06, 0xbc, 0xcd, 0x8f, 0xf2, 0x54, 0x43, 0x2e, 0x62, 0xc1, 0x7d, 0x16, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1817(ch_1817, ch_1817 + sizeof(ch_1817) -1);
CDataStream stream_1817(vch_1817, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1817;
stream_1817 >> txHist_1817;

if(block.vtx[0]->GetHash() == txHist_1817.GetHash() && nHeight == 1263398) {
return true;
}
unsigned char ch_1818[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x39, 0x47, 0x13, 0x04, 0x38, 0xd7, 0x34, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x0b, 0x49, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1818(ch_1818, ch_1818 + sizeof(ch_1818) -1);
CDataStream stream_1818(vch_1818, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1818;
stream_1818 >> txHist_1818;

if(block.vtx[0]->GetHash() == txHist_1818.GetHash() && nHeight == 1263417) {
return true;
}
unsigned char ch_1819[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x22, 0x47, 0x13, 0x04, 0x2b, 0xd1, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa8, 0xfd, 0xae, 0x87, 0x45, 0xa5, 0x02, 0x0e, 0x4d, 0x1f, 0xda, 0x59, 0x51, 0x0b, 0x8e, 0xbc, 0x43, 0x74, 0xaf, 0x44, 0x88, 0x59, 0x25, 0x95, 0xfd, 0x70, 0x32, 0x80, 0xd6, 0xde, 0xb9, 0x22, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0x85, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1819(ch_1819, ch_1819 + sizeof(ch_1819) -1);
CDataStream stream_1819(vch_1819, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1819;
stream_1819 >> txHist_1819;

if(block.vtx[0]->GetHash() == txHist_1819.GetHash() && nHeight == 1263394) {
return true;
}
unsigned char ch_1820[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x1b, 0x47, 0x13, 0x04, 0x49, 0xce, 0x34, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xfb, 0x37, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1820(ch_1820, ch_1820 + sizeof(ch_1820) -1);
CDataStream stream_1820(vch_1820, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1820;
stream_1820 >> txHist_1820;

if(block.vtx[0]->GetHash() == txHist_1820.GetHash() && nHeight == 1263387) {
return true;
}
unsigned char ch_1821[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x31, 0x47, 0x13, 0x04, 0xbf, 0xd4, 0x34, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xff, 0xc6, 0x0f, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x62, 0x8e, 0x18, 0xae, 0x7f, 0x74, 0x32, 0x2c, 0x84, 0x9e, 0x24, 0xfa, 0x40, 0x0e, 0x8f, 0x2b, 0x48, 0x95, 0xe0, 0x9f, 0xe9, 0xad, 0x59, 0xd0, 0xac, 0x6a, 0x1a, 0x6a, 0x25, 0x1a, 0x43, 0x64, 0xc0, 0x79, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1821(ch_1821, ch_1821 + sizeof(ch_1821) -1);
CDataStream stream_1821(vch_1821, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1821;
stream_1821 >> txHist_1821;

if(block.vtx[0]->GetHash() == txHist_1821.GetHash() && nHeight == 1263409) {
return true;
}
unsigned char ch_1822[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x6b, 0x47, 0x13, 0x04, 0x27, 0xe8, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf6, 0x9e, 0x37, 0xf9, 0x5c, 0x3a, 0x65, 0x81, 0x14, 0x5b, 0xa9, 0x84, 0xd2, 0x8a, 0x5b, 0x4d, 0x48, 0x0f, 0x30, 0xd1, 0x8f, 0x9e, 0x4c, 0xc2, 0x66, 0x57, 0x90, 0x21, 0x74, 0xe4, 0xfd, 0x45, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0x65, 0x82, 0x02, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1822(ch_1822, ch_1822 + sizeof(ch_1822) -1);
CDataStream stream_1822(vch_1822, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1822;
stream_1822 >> txHist_1822;

if(block.vtx[0]->GetHash() == txHist_1822.GetHash() && nHeight == 1263467) {
return true;
}
unsigned char ch_1823[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x69, 0x47, 0x13, 0x04, 0x01, 0xe8, 0x34, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xf6, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x44, 0xdd, 0x7b, 0x55, 0xc3, 0x6e, 0xd5, 0xb3, 0xce, 0x22, 0x29, 0x29, 0xf4, 0x6c, 0x80, 0x69, 0x86, 0x71, 0x61, 0x72, 0x3c, 0x73, 0x67, 0xb1, 0x30, 0x74, 0x0f, 0xd7, 0x99, 0xa7, 0xbe, 0x94, 0xf8, 0x4c, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1823(ch_1823, ch_1823 + sizeof(ch_1823) -1);
CDataStream stream_1823(vch_1823, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1823;
stream_1823 >> txHist_1823;

if(block.vtx[0]->GetHash() == txHist_1823.GetHash() && nHeight == 1263465) {
return true;
}
unsigned char ch_1824[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x1f, 0x47, 0x13, 0x04, 0x0b, 0xd1, 0x34, 0x5b, 0x08, 0x78, 0x00, 0x08, 0x0e, 0x90, 0x01, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x1d, 0x24, 0x13, 0x0f, 0xc8, 0x73, 0x2d, 0x9e, 0x76, 0xda, 0x40, 0x45, 0x93, 0x23, 0x04, 0x12, 0x7b, 0x24, 0x7f, 0xd2, 0xf0, 0x9f, 0x3e, 0xde, 0x0e, 0x5a, 0xee, 0x05, 0x81, 0xb8, 0x3c, 0xa5, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1824(ch_1824, ch_1824 + sizeof(ch_1824) -1);
CDataStream stream_1824(vch_1824, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1824;
stream_1824 >> txHist_1824;

if(block.vtx[0]->GetHash() == txHist_1824.GetHash() && nHeight == 1263391) {
return true;
}
unsigned char ch_1825[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x64, 0x47, 0x13, 0x04, 0x2b, 0xe5, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x0b, 0xab, 0xf8, 0x91, 0x37, 0xb6, 0x60, 0x7d, 0x25, 0xd6, 0x27, 0xda, 0x33, 0xfa, 0xf9, 0x3a, 0x54, 0xff, 0x92, 0x7c, 0xc4, 0x78, 0xca, 0x8a, 0x16, 0x3a, 0xe9, 0x23, 0x71, 0x07, 0x21, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0x84, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1825(ch_1825, ch_1825 + sizeof(ch_1825) -1);
CDataStream stream_1825(vch_1825, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1825;
stream_1825 >> txHist_1825;

if(block.vtx[0]->GetHash() == txHist_1825.GetHash() && nHeight == 1263460) {
return true;
}
unsigned char ch_1826[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x1a, 0x47, 0x13, 0x04, 0x1e, 0xce, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x49, 0x77, 0x1c, 0xe3, 0xf0, 0xa3, 0x8c, 0xcf, 0x34, 0x78, 0xfb, 0x91, 0x8c, 0xf9, 0x42, 0x36, 0xbd, 0x50, 0x16, 0x68, 0x9d, 0x14, 0x08, 0xb7, 0x97, 0x62, 0x3c, 0x21, 0x11, 0x63, 0x0c, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xfc, 0x55, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1826(ch_1826, ch_1826 + sizeof(ch_1826) -1);
CDataStream stream_1826(vch_1826, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1826;
stream_1826 >> txHist_1826;

if(block.vtx[0]->GetHash() == txHist_1826.GetHash() && nHeight == 1263386) {
return true;
}
unsigned char ch_1827[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x63, 0x47, 0x13, 0x04, 0x1e, 0xe5, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x59, 0xbc, 0x7c, 0xf7, 0x22, 0x18, 0x92, 0x87, 0x3f, 0x4e, 0xfc, 0xe0, 0xc1, 0xcc, 0x99, 0x13, 0x26, 0x9b, 0x83, 0x7c, 0x77, 0x63, 0xe7, 0xbf, 0x9e, 0x08, 0x9a, 0xb0, 0x0e, 0xbe, 0x4a, 0x7c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x02, 0xcf, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1827(ch_1827, ch_1827 + sizeof(ch_1827) -1);
CDataStream stream_1827(vch_1827, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1827;
stream_1827 >> txHist_1827;

if(block.vtx[0]->GetHash() == txHist_1827.GetHash() && nHeight == 1263459) {
return true;
}
unsigned char ch_1828[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x21, 0x47, 0x13, 0x04, 0x29, 0xd1, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa8, 0xfd, 0xae, 0x87, 0x45, 0xa5, 0x02, 0x0e, 0x4d, 0x1f, 0xda, 0x59, 0x51, 0x0b, 0x8e, 0xbc, 0x43, 0x74, 0xaf, 0x44, 0x88, 0x59, 0x25, 0x95, 0xfd, 0x70, 0x32, 0x80, 0xd6, 0xde, 0xb9, 0x22, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x6f, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1828(ch_1828, ch_1828 + sizeof(ch_1828) -1);
CDataStream stream_1828(vch_1828, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1828;
stream_1828 >> txHist_1828;

if(block.vtx[0]->GetHash() == txHist_1828.GetHash() && nHeight == 1263393) {
return true;
}
unsigned char ch_1829[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x19, 0x47, 0x13, 0x04, 0x19, 0xce, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x49, 0x77, 0x1c, 0xe3, 0xf0, 0xa3, 0x8c, 0xcf, 0x34, 0x78, 0xfb, 0x91, 0x8c, 0xf9, 0x42, 0x36, 0xbd, 0x50, 0x16, 0x68, 0x9d, 0x14, 0x08, 0xb7, 0x97, 0x62, 0x3c, 0x21, 0x11, 0x63, 0x0c, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xff, 0xb7, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x2b, 0xf3, 0x81, 0xd3, 0xb4, 0x22, 0x0f, 0xa1, 0x0d, 0x0d, 0x69, 0xc3, 0x4c, 0x22, 0x38, 0x8b, 0xb5, 0xec, 0x64, 0x0c, 0xab, 0x4b, 0xbd, 0x1e, 0x3d, 0xb7, 0x91, 0x8d, 0x40, 0x2b, 0x05, 0x03, 0xc8, 0xbe, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1829(ch_1829, ch_1829 + sizeof(ch_1829) -1);
CDataStream stream_1829(vch_1829, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1829;
stream_1829 >> txHist_1829;

if(block.vtx[0]->GetHash() == txHist_1829.GetHash() && nHeight == 1263385) {
return true;
}
unsigned char ch_1830[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x62, 0x47, 0x13, 0x04, 0xef, 0xe4, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x59, 0xbc, 0x7c, 0xf7, 0x22, 0x18, 0x92, 0x87, 0x3f, 0x4e, 0xfc, 0xe0, 0xc1, 0xcc, 0x99, 0x13, 0x26, 0x9b, 0x83, 0x7c, 0x77, 0x63, 0xe7, 0xbf, 0x9e, 0x08, 0x9a, 0xb0, 0x0e, 0xbe, 0x4a, 0x7c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x05, 0x1e, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x0c, 0x23, 0x4b, 0xb0, 0x75, 0x28, 0x9b, 0x21, 0x3e, 0x8d, 0x64, 0x3a, 0x6c, 0xe0, 0x91, 0x3b, 0x19, 0xfa, 0xbd, 0xa6, 0xfc, 0x48, 0x10, 0x60, 0x3a, 0x22, 0x5b, 0xac, 0x38, 0xb5, 0xe4, 0xf0, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1830(ch_1830, ch_1830 + sizeof(ch_1830) -1);
CDataStream stream_1830(vch_1830, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1830;
stream_1830 >> txHist_1830;

if(block.vtx[0]->GetHash() == txHist_1830.GetHash() && nHeight == 1263458) {
return true;
}
unsigned char ch_1831[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x1c, 0x47, 0x13, 0x04, 0xda, 0xce, 0x34, 0x5b, 0x08, 0x78, 0x00, 0x00, 0x01, 0x08, 0x0e, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x79, 0x91, 0xa4, 0x46, 0x4d, 0x21, 0x5c, 0xc8, 0x1e, 0xe9, 0x0d, 0xfb, 0x57, 0xbf, 0x24, 0x32, 0x73, 0x8e, 0x26, 0x8b, 0xad, 0x96, 0x59, 0x98, 0xa9, 0x9b, 0x26, 0xe5, 0xd2, 0xea, 0x31, 0x4c, 0x90, 0xbf, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1831(ch_1831, ch_1831 + sizeof(ch_1831) -1);
CDataStream stream_1831(vch_1831, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1831;
stream_1831 >> txHist_1831;

if(block.vtx[0]->GetHash() == txHist_1831.GetHash() && nHeight == 1263388) {
return true;
}
unsigned char ch_1832[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x18, 0x47, 0x13, 0x04, 0xfc, 0xcd, 0x34, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xf8, 0xa6, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x8e, 0x5b, 0x87, 0xbc, 0x85, 0x10, 0x5c, 0x26, 0xef, 0xec, 0xcc, 0x51, 0x27, 0x47, 0x0a, 0x19, 0x84, 0x5a, 0xe7, 0xf4, 0x30, 0xfa, 0x71, 0x01, 0xf0, 0x5b, 0x8e, 0x02, 0x7f, 0x4a, 0xe3, 0x46, 0x60, 0x57, 0x61, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1832(ch_1832, ch_1832 + sizeof(ch_1832) -1);
CDataStream stream_1832(vch_1832, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1832;
stream_1832 >> txHist_1832;

if(block.vtx[0]->GetHash() == txHist_1832.GetHash() && nHeight == 1263384) {
return true;
}
unsigned char ch_1833[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x61, 0x47, 0x13, 0x04, 0xb4, 0xe3, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x02, 0x31, 0x19, 0xd1, 0x37, 0xe7, 0x1e, 0x97, 0xd0, 0x7a, 0xe3, 0xa1, 0x91, 0x5e, 0xcc, 0x38, 0x4f, 0xa6, 0x15, 0x78, 0x63, 0x7b, 0xd5, 0xf7, 0x8b, 0x5a, 0xf4, 0xef, 0x50, 0xa5, 0xb4, 0x7c, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0xff, 0xfe, 0xfe, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1833(ch_1833, ch_1833 + sizeof(ch_1833) -1);
CDataStream stream_1833(vch_1833, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1833;
stream_1833 >> txHist_1833;

if(block.vtx[0]->GetHash() == txHist_1833.GetHash() && nHeight == 1263457) {
return true;
}
unsigned char ch_1834[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x17, 0x47, 0x13, 0x04, 0x14, 0xcd, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x3c, 0x9a, 0x51, 0xef, 0x75, 0x2a, 0x4c, 0x0a, 0x80, 0xe6, 0x00, 0xc5, 0x17, 0x48, 0x02, 0x99, 0xdb, 0x49, 0x72, 0xee, 0x07, 0xb1, 0xbc, 0xea, 0xdf, 0xc6, 0x5d, 0x5d, 0x73, 0x4d, 0xaf, 0xa1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x07, 0x0f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1834(ch_1834, ch_1834 + sizeof(ch_1834) -1);
CDataStream stream_1834(vch_1834, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1834;
stream_1834 >> txHist_1834;

if(block.vtx[0]->GetHash() == txHist_1834.GetHash() && nHeight == 1263383) {
return true;
}
unsigned char ch_1835[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x60, 0x47, 0x13, 0x04, 0xaf, 0xe3, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x87, 0x84, 0x6b, 0xa9, 0x29, 0xe0, 0x41, 0xf6, 0x4c, 0xce, 0x9d, 0x50, 0x90, 0x41, 0x9a, 0x4e, 0xbc, 0x7c, 0x77, 0x06, 0x86, 0x8e, 0x1d, 0x44, 0x5a, 0x65, 0x2c, 0x5e, 0x43, 0x7b, 0x26, 0xc1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x46, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1835(ch_1835, ch_1835 + sizeof(ch_1835) -1);
CDataStream stream_1835(vch_1835, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1835;
stream_1835 >> txHist_1835;

if(block.vtx[0]->GetHash() == txHist_1835.GetHash() && nHeight == 1263456) {
return true;
}
unsigned char ch_1836[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x15, 0x47, 0x13, 0x04, 0xb4, 0xcc, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9c, 0xb5, 0x0b, 0xff, 0xcc, 0x67, 0x0f, 0xcb, 0x47, 0x94, 0xf5, 0x0c, 0x68, 0x54, 0x27, 0x18, 0x5b, 0x18, 0x97, 0xd4, 0xa0, 0xf3, 0xe2, 0x7a, 0xa3, 0x2d, 0x29, 0xda, 0x68, 0xc0, 0xf1, 0x0b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x03, 0x20, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1836(ch_1836, ch_1836 + sizeof(ch_1836) -1);
CDataStream stream_1836(vch_1836, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1836;
stream_1836 >> txHist_1836;

if(block.vtx[0]->GetHash() == txHist_1836.GetHash() && nHeight == 1263381) {
return true;
}
unsigned char ch_1837[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x5f, 0x47, 0x13, 0x04, 0xa9, 0xe3, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x87, 0x84, 0x6b, 0xa9, 0x29, 0xe0, 0x41, 0xf6, 0x4c, 0xce, 0x9d, 0x50, 0x90, 0x41, 0x9a, 0x4e, 0xbc, 0x7c, 0x77, 0x06, 0x86, 0x8e, 0x1d, 0x44, 0x5a, 0x65, 0x2c, 0x5e, 0x43, 0x7b, 0x26, 0xc1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x11, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x2e, 0xa6, 0xad, 0x9f, 0xa2, 0x51, 0xd3, 0x73, 0xa3, 0x02, 0x97, 0x50, 0x40, 0x67, 0xfc, 0xf3, 0x26, 0x42, 0x80, 0x30, 0x1a, 0x5b, 0xc4, 0x4e, 0x93, 0x67, 0x30, 0xa7, 0xf4, 0x4e, 0xec, 0x45, 0xc9, 0x08, 0x18, 0xdb, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1837(ch_1837, ch_1837 + sizeof(ch_1837) -1);
CDataStream stream_1837(vch_1837, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1837;
stream_1837 >> txHist_1837;

if(block.vtx[0]->GetHash() == txHist_1837.GetHash() && nHeight == 1263455) {
return true;
}
unsigned char ch_1838[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x14, 0x47, 0x13, 0x04, 0xa6, 0xcc, 0x34, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xd5, 0xaf, 0x0c, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xef, 0x96, 0x68, 0x77, 0x62, 0x1d, 0xde, 0x95, 0x66, 0x6c, 0xcb, 0x78, 0x64, 0xfb, 0xf7, 0x50, 0xab, 0x07, 0x5e, 0x64, 0x11, 0xb6, 0x75, 0x89, 0xef, 0xb9, 0x11, 0xa6, 0x1d, 0x4a, 0xd7, 0x2a, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1838(ch_1838, ch_1838 + sizeof(ch_1838) -1);
CDataStream stream_1838(vch_1838, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1838;
stream_1838 >> txHist_1838;

if(block.vtx[0]->GetHash() == txHist_1838.GetHash() && nHeight == 1263380) {
return true;
}
unsigned char ch_1839[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x5e, 0x47, 0x13, 0x04, 0x4b, 0xe3, 0x34, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xd5, 0x0f, 0x0e, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1839(ch_1839, ch_1839 + sizeof(ch_1839) -1);
CDataStream stream_1839(vch_1839, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1839;
stream_1839 >> txHist_1839;

if(block.vtx[0]->GetHash() == txHist_1839.GetHash() && nHeight == 1263454) {
return true;
}
unsigned char ch_1840[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x13, 0x47, 0x13, 0x04, 0x23, 0xcc, 0x34, 0x5b, 0x08, 0x78, 0x00, 0x08, 0x0e, 0xc2, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x79, 0x99, 0xca, 0x58, 0x98, 0x88, 0xab, 0xc8, 0xea, 0x4a, 0x3d, 0x06, 0x75, 0x8b, 0x37, 0xb7, 0xff, 0xd6, 0x7b, 0x97, 0xe9, 0x24, 0x4b, 0x8a, 0x22, 0xf9, 0xbf, 0xda, 0xb1, 0x2d, 0xa7, 0xe6, 0x80, 0x35, 0x63, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1840(ch_1840, ch_1840 + sizeof(ch_1840) -1);
CDataStream stream_1840(vch_1840, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1840;
stream_1840 >> txHist_1840;

if(block.vtx[0]->GetHash() == txHist_1840.GetHash() && nHeight == 1263379) {
return true;
}
unsigned char ch_1841[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x12, 0x47, 0x13, 0x04, 0x51, 0xcb, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x53, 0xdb, 0xf3, 0x89, 0x21, 0xab, 0x20, 0xc5, 0x7b, 0x1e, 0xff, 0x88, 0xa7, 0x97, 0x69, 0xa4, 0x44, 0xbd, 0x1c, 0x91, 0x25, 0xa8, 0xc3, 0xa2, 0x80, 0x6b, 0x94, 0xce, 0x60, 0x4e, 0xfa, 0x53, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0x8d, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1841(ch_1841, ch_1841 + sizeof(ch_1841) -1);
CDataStream stream_1841(vch_1841, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1841;
stream_1841 >> txHist_1841;

if(block.vtx[0]->GetHash() == txHist_1841.GetHash() && nHeight == 1263378) {
return true;
}
unsigned char ch_1842[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x11, 0x47, 0x13, 0x04, 0x4d, 0xcb, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x53, 0xdb, 0xf3, 0x89, 0x21, 0xab, 0x20, 0xc5, 0x7b, 0x1e, 0xff, 0x88, 0xa7, 0x97, 0x69, 0xa4, 0x44, 0xbd, 0x1c, 0x91, 0x25, 0xa8, 0xc3, 0xa2, 0x80, 0x6b, 0x94, 0xce, 0x60, 0x4e, 0xfa, 0x53, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0x96, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1842(ch_1842, ch_1842 + sizeof(ch_1842) -1);
CDataStream stream_1842(vch_1842, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1842;
stream_1842 >> txHist_1842;

if(block.vtx[0]->GetHash() == txHist_1842.GetHash() && nHeight == 1263377) {
return true;
}
unsigned char ch_1843[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x10, 0x47, 0x13, 0x04, 0x35, 0xcb, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x53, 0xdb, 0xf3, 0x89, 0x21, 0xab, 0x20, 0xc5, 0x7b, 0x1e, 0xff, 0x88, 0xa7, 0x97, 0x69, 0xa4, 0x44, 0xbd, 0x1c, 0x91, 0x25, 0xa8, 0xc3, 0xa2, 0x80, 0x6b, 0x94, 0xce, 0x60, 0x4e, 0xfa, 0x53, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x01, 0x11, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1843(ch_1843, ch_1843 + sizeof(ch_1843) -1);
CDataStream stream_1843(vch_1843, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1843;
stream_1843 >> txHist_1843;

if(block.vtx[0]->GetHash() == txHist_1843.GetHash() && nHeight == 1263376) {
return true;
}
unsigned char ch_1844[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x0d, 0x47, 0x13, 0x04, 0xba, 0xca, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7c, 0x31, 0x17, 0x27, 0xd1, 0x1f, 0x30, 0xce, 0x50, 0x7c, 0xce, 0x12, 0x2d, 0xb8, 0xbe, 0x77, 0x2f, 0xa0, 0x70, 0xa7, 0x6c, 0x8c, 0x0a, 0x2a, 0xdf, 0x9e, 0xae, 0x56, 0xab, 0x26, 0xf3, 0x1b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xff, 0xff, 0x52, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1844(ch_1844, ch_1844 + sizeof(ch_1844) -1);
CDataStream stream_1844(vch_1844, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1844;
stream_1844 >> txHist_1844;

if(block.vtx[0]->GetHash() == txHist_1844.GetHash() && nHeight == 1263373) {
return true;
}
unsigned char ch_1845[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x5b, 0x47, 0x13, 0x04, 0x45, 0xe2, 0x34, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xff, 0xb3, 0x13, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1845(ch_1845, ch_1845 + sizeof(ch_1845) -1);
CDataStream stream_1845(vch_1845, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1845;
stream_1845 >> txHist_1845;

if(block.vtx[0]->GetHash() == txHist_1845.GetHash() && nHeight == 1263451) {
return true;
}
unsigned char ch_1846[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x4e, 0x47, 0x13, 0x04, 0xa3, 0xdc, 0x34, 0x5b, 0x08, 0x78, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1846(ch_1846, ch_1846 + sizeof(ch_1846) -1);
CDataStream stream_1846(vch_1846, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1846;
stream_1846 >> txHist_1846;

if(block.vtx[0]->GetHash() == txHist_1846.GetHash() && nHeight == 1263438) {
return true;
}
unsigned char ch_1847[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x0a, 0x47, 0x13, 0x04, 0x7d, 0xc8, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7c, 0xe8, 0xab, 0x28, 0xf1, 0x12, 0xee, 0x08, 0xec, 0xb6, 0xb5, 0xfa, 0x8b, 0xdf, 0x73, 0xa9, 0xc6, 0xb8, 0xd3, 0xfa, 0x0f, 0x80, 0x32, 0xdf, 0x06, 0xfb, 0xc9, 0x97, 0x52, 0x6c, 0x59, 0x97, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x03, 0x80, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1847(ch_1847, ch_1847 + sizeof(ch_1847) -1);
CDataStream stream_1847(vch_1847, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1847;
stream_1847 >> txHist_1847;

if(block.vtx[0]->GetHash() == txHist_1847.GetHash() && nHeight == 1263370) {
return true;
}
unsigned char ch_1848[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x09, 0x47, 0x13, 0x04, 0x7c, 0xc8, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7c, 0xe8, 0xab, 0x28, 0xf1, 0x12, 0xee, 0x08, 0xec, 0xb6, 0xb5, 0xfa, 0x8b, 0xdf, 0x73, 0xa9, 0xc6, 0xb8, 0xd3, 0xfa, 0x0f, 0x80, 0x32, 0xdf, 0x06, 0xfb, 0xc9, 0x97, 0x52, 0x6c, 0x59, 0x97, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x02, 0x19, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1848(ch_1848, ch_1848 + sizeof(ch_1848) -1);
CDataStream stream_1848(vch_1848, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1848;
stream_1848 >> txHist_1848;

if(block.vtx[0]->GetHash() == txHist_1848.GetHash() && nHeight == 1263369) {
return true;
}
unsigned char ch_1849[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x4a, 0x47, 0x13, 0x04, 0x5d, 0xdc, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xdb, 0x9d, 0x71, 0x22, 0xea, 0x56, 0x41, 0xfc, 0x2e, 0xeb, 0x54, 0xbc, 0x0e, 0xde, 0xd8, 0x0c, 0x10, 0x41, 0xfc, 0x3c, 0xdb, 0xdb, 0xd1, 0x94, 0x3e, 0x99, 0xde, 0x03, 0xac, 0xe9, 0xcc, 0x95, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xfc, 0x80, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1849(ch_1849, ch_1849 + sizeof(ch_1849) -1);
CDataStream stream_1849(vch_1849, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1849;
stream_1849 >> txHist_1849;

if(block.vtx[0]->GetHash() == txHist_1849.GetHash() && nHeight == 1263434) {
return true;
}
unsigned char ch_1850[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x48, 0x47, 0x13, 0x04, 0x21, 0xdc, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xc0, 0x5c, 0x13, 0xa8, 0xf4, 0x75, 0x9a, 0xbb, 0xaa, 0xbf, 0x8f, 0x5d, 0xac, 0x01, 0x90, 0x43, 0xb8, 0xdf, 0xdf, 0x5f, 0xaa, 0x7b, 0xe8, 0x82, 0x93, 0x09, 0x2c, 0x22, 0x9e, 0x60, 0x6c, 0xb4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x0b, 0x1b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1850(ch_1850, ch_1850 + sizeof(ch_1850) -1);
CDataStream stream_1850(vch_1850, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1850;
stream_1850 >> txHist_1850;

if(block.vtx[0]->GetHash() == txHist_1850.GetHash() && nHeight == 1263432) {
return true;
}
unsigned char ch_1851[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x46, 0x47, 0x13, 0x04, 0x73, 0xdb, 0x34, 0x5b, 0x08, 0x27, 0xff, 0xff, 0xff, 0x0e, 0x07, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1851(ch_1851, ch_1851 + sizeof(ch_1851) -1);
CDataStream stream_1851(vch_1851, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1851;
stream_1851 >> txHist_1851;

if(block.vtx[0]->GetHash() == txHist_1851.GetHash() && nHeight == 1263430) {
return true;
}
unsigned char ch_1852[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x42, 0x47, 0x13, 0x04, 0x83, 0xda, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xda, 0x2a, 0x17, 0xf1, 0x73, 0x29, 0x21, 0x52, 0x40, 0x21, 0x34, 0x36, 0xc4, 0x92, 0xe6, 0xd6, 0xc7, 0x63, 0x28, 0xf4, 0x50, 0x06, 0xd8, 0x9d, 0xbe, 0x56, 0x60, 0xf9, 0xd5, 0xf5, 0xd9, 0x26, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0x57, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1852(ch_1852, ch_1852 + sizeof(ch_1852) -1);
CDataStream stream_1852(vch_1852, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1852;
stream_1852 >> txHist_1852;

if(block.vtx[0]->GetHash() == txHist_1852.GetHash() && nHeight == 1263426) {
return true;
}
unsigned char ch_1853[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x37, 0x47, 0x13, 0x04, 0xf2, 0xd6, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xad, 0x07, 0x60, 0xde, 0x7f, 0xbe, 0xa3, 0x37, 0xc7, 0xad, 0xfb, 0x0c, 0x25, 0x00, 0xb0, 0x4a, 0x8c, 0x48, 0x61, 0x60, 0x42, 0x91, 0xd3, 0xf6, 0x38, 0x43, 0xda, 0x04, 0x38, 0xb6, 0x0e, 0x2f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xb0, 0xf7, 0xf8, 0x6d, 0x26, 0x40, 0x8f, 0x56, 0xde, 0xfa, 0x34, 0x20, 0x0d, 0x64, 0xa0, 0x27, 0xd1, 0xc2, 0x38, 0x35, 0x5a, 0x68, 0x7d, 0x7b, 0x0c, 0xc1, 0x50, 0xd0, 0xe0, 0xd4, 0x71, 0x4f, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1853(ch_1853, ch_1853 + sizeof(ch_1853) -1);
CDataStream stream_1853(vch_1853, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1853;
stream_1853 >> txHist_1853;

if(block.vtx[0]->GetHash() == txHist_1853.GetHash() && nHeight == 1263415) {
return true;
}
unsigned char ch_1854[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x33, 0x47, 0x13, 0x04, 0x0a, 0xd5, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xf8, 0x4d, 0x4f, 0xfe, 0x6c, 0x91, 0x0f, 0x8a, 0x2f, 0x30, 0xc6, 0x75, 0xa3, 0xbe, 0xf2, 0xc0, 0xe4, 0x38, 0x38, 0x52, 0x0c, 0xe9, 0x9c, 0x10, 0x8d, 0xdd, 0xe8, 0x02, 0x19, 0xd1, 0x16, 0x43, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0xff, 0xff, 0x0d, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1854(ch_1854, ch_1854 + sizeof(ch_1854) -1);
CDataStream stream_1854(vch_1854, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1854;
stream_1854 >> txHist_1854;

if(block.vtx[0]->GetHash() == txHist_1854.GetHash() && nHeight == 1263411) {
return true;
}
unsigned char ch_1855[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2f, 0x47, 0x13, 0x04, 0x2b, 0xd4, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x6b, 0x31, 0xcf, 0xbf, 0x4c, 0xd5, 0x99, 0x27, 0x7d, 0x24, 0xd6, 0x23, 0xbc, 0xac, 0xe2, 0xb9, 0xd1, 0x6b, 0x48, 0x30, 0x1a, 0xc2, 0x80, 0x04, 0x3c, 0xe1, 0xa4, 0xd5, 0x1d, 0xc0, 0xcd, 0x8a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1855(ch_1855, ch_1855 + sizeof(ch_1855) -1);
CDataStream stream_1855(vch_1855, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1855;
stream_1855 >> txHist_1855;

if(block.vtx[0]->GetHash() == txHist_1855.GetHash() && nHeight == 1263407) {
return true;
}
unsigned char ch_1856[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x2b, 0x47, 0x13, 0x04, 0x20, 0xd3, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x4d, 0x4c, 0x80, 0x90, 0xd3, 0xf7, 0x1a, 0x43, 0xad, 0x4f, 0x33, 0x5b, 0xac, 0x11, 0x8c, 0xfd, 0xe5, 0x99, 0x02, 0xe6, 0xb0, 0x3d, 0x1c, 0xfc, 0x30, 0x4b, 0xb2, 0x4e, 0xb8, 0x13, 0x65, 0x6e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x01, 0x12, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1856(ch_1856, ch_1856 + sizeof(ch_1856) -1);
CDataStream stream_1856(vch_1856, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1856;
stream_1856 >> txHist_1856;

if(block.vtx[0]->GetHash() == txHist_1856.GetHash() && nHeight == 1263403) {
return true;
}
unsigned char ch_1857[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x27, 0x47, 0x13, 0x04, 0x28, 0xd2, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa8, 0x6b, 0x53, 0xbf, 0x77, 0xe0, 0x83, 0x7f, 0xd4, 0x20, 0x4f, 0x78, 0xc4, 0x76, 0x07, 0x32, 0x52, 0xb7, 0x2a, 0x2b, 0x90, 0xc0, 0xb1, 0xc8, 0xab, 0x2b, 0xed, 0x0d, 0x5d, 0x7a, 0x57, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xfe, 0x99, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1857(ch_1857, ch_1857 + sizeof(ch_1857) -1);
CDataStream stream_1857(vch_1857, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1857;
stream_1857 >> txHist_1857;

if(block.vtx[0]->GetHash() == txHist_1857.GetHash() && nHeight == 1263399) {
return true;
}
unsigned char ch_1858[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x23, 0x47, 0x13, 0x04, 0x2c, 0xd1, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0xa8, 0xfd, 0xae, 0x87, 0x45, 0xa5, 0x02, 0x0e, 0x4d, 0x1f, 0xda, 0x59, 0x51, 0x0b, 0x8e, 0xbc, 0x43, 0x74, 0xaf, 0x44, 0x88, 0x59, 0x25, 0x95, 0xfd, 0x70, 0x32, 0x80, 0xd6, 0xde, 0xb9, 0x22, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0xff, 0xfe, 0x3b, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1858(ch_1858, ch_1858 + sizeof(ch_1858) -1);
CDataStream stream_1858(vch_1858, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1858;
stream_1858 >> txHist_1858;

if(block.vtx[0]->GetHash() == txHist_1858.GetHash() && nHeight == 1263395) {
return true;
}
unsigned char ch_1859[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x16, 0x47, 0x13, 0x04, 0xb7, 0xcc, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9c, 0xb5, 0x0b, 0xff, 0xcc, 0x67, 0x0f, 0xcb, 0x47, 0x94, 0xf5, 0x0c, 0x68, 0x54, 0x27, 0x18, 0x5b, 0x18, 0x97, 0xd4, 0xa0, 0xf3, 0xe2, 0x7a, 0xa3, 0x2d, 0x29, 0xda, 0x68, 0xc0, 0xf1, 0x0b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x02, 0x1d, 0x04, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1859(ch_1859, ch_1859 + sizeof(ch_1859) -1);
CDataStream stream_1859(vch_1859, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1859;
stream_1859 >> txHist_1859;

if(block.vtx[0]->GetHash() == txHist_1859.GetHash() && nHeight == 1263382) {
return true;
}
unsigned char ch_1860[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x0e, 0x47, 0x13, 0x04, 0xba, 0xca, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7c, 0x31, 0x17, 0x27, 0xd1, 0x1f, 0x30, 0xce, 0x50, 0x7c, 0xce, 0x12, 0x2d, 0xb8, 0xbe, 0x77, 0x2f, 0xa0, 0x70, 0xa7, 0x6c, 0x8c, 0x0a, 0x2a, 0xdf, 0x9e, 0xae, 0x56, 0xab, 0x26, 0xf3, 0x1b, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x11, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1860(ch_1860, ch_1860 + sizeof(ch_1860) -1);
CDataStream stream_1860(vch_1860, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1860;
stream_1860 >> txHist_1860;

if(block.vtx[0]->GetHash() == txHist_1860.GetHash() && nHeight == 1263374) {
return true;
}
unsigned char ch_1861[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x04, 0x47, 0x13, 0x04, 0x18, 0xc7, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x00, 0x00, 0x02, 0xfb, 0x28, 0xe0, 0x4e, 0x68, 0x00, 0x00, 0x02, 0xfb, 0x28, 0xe0, 0x4e, 0x58, 0x00, 0x00, 0x02, 0xfb, 0x28, 0xe0, 0x4e, 0x48, 0x00, 0x00, 0x02, 0xfb, 0x28, 0xe0, 0x4e, 0x38, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x04, 0x1f, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x80, 0xf4, 0xf2, 0x14, 0x6a, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xce, 0x05, 0xb7, 0xaa, 0x32, 0x30, 0x32, 0xb1, 0xb1, 0x84, 0xd3, 0x76, 0x4e, 0xbb, 0x2d, 0x51, 0xf9, 0x74, 0x4b, 0xc2, 0x88, 0xac, 0xc0, 0x59, 0xe7, 0x20, 0x01, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0xb3, 0xec, 0x79, 0x0a, 0x24, 0xcf, 0x6e, 0x0e, 0xae, 0x0f, 0x96, 0x16, 0x60, 0x79, 0x8e, 0x01, 0xec, 0x21, 0xd5, 0x12, 0x88, 0xac, 0xc0, 0xc0, 0x84, 0xa4, 0x05, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x55, 0x96, 0x49, 0x72, 0xc1, 0xf8, 0xc4, 0x7c, 0x5a, 0x47, 0xcf, 0xc6, 0xd2, 0x12, 0x74, 0x93, 0x03, 0xf6, 0x65, 0x6a, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1861(ch_1861, ch_1861 + sizeof(ch_1861) -1);
CDataStream stream_1861(vch_1861, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1861;
stream_1861 >> txHist_1861;

if(block.vtx[0]->GetHash() == txHist_1861.GetHash() && nHeight == 1263364) {
return true;
}
unsigned char ch_1862[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x03, 0x47, 0x13, 0x04, 0x23, 0xc7, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9a, 0x93, 0x54, 0xc3, 0xa8, 0xd9, 0x62, 0xd5, 0x2b, 0x34, 0x4b, 0x4f, 0x29, 0x2e, 0x35, 0x34, 0x8d, 0xab, 0x26, 0x12, 0x22, 0xb9, 0xbc, 0x41, 0x8d, 0xbe, 0xa4, 0x8d, 0xd1, 0x7d, 0x9f, 0xcb, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x0b, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1862(ch_1862, ch_1862 + sizeof(ch_1862) -1);
CDataStream stream_1862(vch_1862, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1862;
stream_1862 >> txHist_1862;

if(block.vtx[0]->GetHash() == txHist_1862.GetHash() && nHeight == 1263363) {
return true;
}
unsigned char ch_1863[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x02, 0x47, 0x13, 0x04, 0x21, 0xc7, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9a, 0x93, 0x54, 0xc3, 0xa8, 0xd9, 0x62, 0xd5, 0x2b, 0x34, 0x4b, 0x4f, 0x29, 0x2e, 0x35, 0x34, 0x8d, 0xab, 0x26, 0x12, 0x22, 0xb9, 0xbc, 0x41, 0x8d, 0xbe, 0xa4, 0x8d, 0xd1, 0x7d, 0x9f, 0xcb, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x1e, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1863(ch_1863, ch_1863 + sizeof(ch_1863) -1);
CDataStream stream_1863(vch_1863, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1863;
stream_1863 >> txHist_1863;

if(block.vtx[0]->GetHash() == txHist_1863.GetHash() && nHeight == 1263362) {
return true;
}
unsigned char ch_1864[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x01, 0x47, 0x13, 0x04, 0x1f, 0xc7, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x9a, 0x93, 0x54, 0xc3, 0xa8, 0xd9, 0x62, 0xd5, 0x2b, 0x34, 0x4b, 0x4f, 0x29, 0x2e, 0x35, 0x34, 0x8d, 0xab, 0x26, 0x12, 0x22, 0xb9, 0xbc, 0x41, 0x8d, 0xbe, 0xa4, 0x8d, 0xd1, 0x7d, 0x9f, 0xcb, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x01, 0xf8, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xc1, 0xfc, 0x7d, 0x59, 0xb0, 0x95, 0x0b, 0x8c, 0xd2, 0x9b, 0x41, 0x66, 0xe7, 0x3c, 0xb1, 0x81, 0x49, 0x4d, 0xc7, 0x3c, 0xce, 0x8f, 0xd8, 0x80, 0xc2, 0x4e, 0x3d, 0xed, 0x62, 0x97, 0x6b, 0x99, 0xf0, 0x01, 0x63, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1864(ch_1864, ch_1864 + sizeof(ch_1864) -1);
CDataStream stream_1864(vch_1864, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1864;
stream_1864 >> txHist_1864;

if(block.vtx[0]->GetHash() == txHist_1864.GetHash() && nHeight == 1263361) {
return true;
}
unsigned char ch_1865[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x00, 0x47, 0x13, 0x04, 0xeb, 0xc6, 0x34, 0x5b, 0x08, 0x78, 0x00, 0x00, 0x01, 0x31, 0x20, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1865(ch_1865, ch_1865 + sizeof(ch_1865) -1);
CDataStream stream_1865(vch_1865, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1865;
stream_1865 >> txHist_1865;

if(block.vtx[0]->GetHash() == txHist_1865.GetHash() && nHeight == 1263360) {
return true;
}
unsigned char ch_1866[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4c, 0x03, 0x08, 0x47, 0x13, 0x04, 0x73, 0xc8, 0x34, 0x5b, 0x08, 0xfa, 0xbe, 0x6d, 0x6d, 0x7c, 0xe8, 0xab, 0x28, 0xf1, 0x12, 0xee, 0x08, 0xec, 0xb6, 0xb5, 0xfa, 0x8b, 0xdf, 0x73, 0xa9, 0xc6, 0xb8, 0xd3, 0xfa, 0x0f, 0x80, 0x32, 0xdf, 0x06, 0xfb, 0xc9, 0x97, 0x52, 0x6c, 0x59, 0x97, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x83, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xe2, 0xf6, 0x1c, 0x3f, 0x71, 0xd1, 0xde, 0xfd, 0x3f, 0xa9, 0x99, 0xdf, 0xa3, 0x69, 0x53, 0x75, 0x5c, 0x69, 0x06, 0x89, 0x79, 0x99, 0x62, 0xb4, 0x8b, 0xeb, 0xd8, 0x36, 0x97, 0x4e, 0x8c, 0xf9, 0x00, 0x0f, 0x5f, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x51, 0x86, 0x98, 0x2b, 0x18, 0x7c, 0xc2, 0x6e, 0xf6, 0x33, 0xad, 0x08, 0xfc, 0xe8, 0xcb, 0x2a, 0x9a, 0x5b, 0x88, 0x86, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1866(ch_1866, ch_1866 + sizeof(ch_1866) -1);
CDataStream stream_1866(vch_1866, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1866;
stream_1866 >> txHist_1866;

if(block.vtx[0]->GetHash() == txHist_1866.GetHash() && nHeight == 1263368) {
return true;
}
unsigned char ch_1867[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x07, 0x47, 0x13, 0x04, 0x64, 0xc8, 0x34, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x05, 0x7b, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0xfc, 0x7b, 0x85, 0x19, 0x01, 0x6c, 0xb3, 0x87, 0x6c, 0xd2, 0x64, 0x71, 0x60, 0x0b, 0xb1, 0x1c, 0x1d, 0xd6, 0x2b, 0x40, 0x26, 0xe4, 0xbc, 0xa0, 0xc1, 0x9e, 0xc7, 0xd3, 0x21, 0x2c, 0x9c, 0x4c, 0x80, 0xa5, 0xf7, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1867(ch_1867, ch_1867 + sizeof(ch_1867) -1);
CDataStream stream_1867(vch_1867, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1867;
stream_1867 >> txHist_1867;

if(block.vtx[0]->GetHash() == txHist_1867.GetHash() && nHeight == 1263367) {
return true;
}
unsigned char ch_1868[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x06, 0x47, 0x13, 0x04, 0x93, 0xc7, 0x34, 0x5b, 0x08, 0x20, 0x00, 0x00, 0x0b, 0x1c, 0x00, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x53, 0x67, 0x91, 0x31, 0xd3, 0x6c, 0x26, 0xf0, 0x0a, 0x9b, 0x7f, 0x30, 0x37, 0xb7, 0xa6, 0x7a, 0x8b, 0x57, 0x2a, 0xba, 0x22, 0x31, 0xde, 0x85, 0x6e, 0x8e, 0xb5, 0x4a, 0x51, 0xad, 0xfa, 0xe4, 0xd0, 0xa6, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1868(ch_1868, ch_1868 + sizeof(ch_1868) -1);
CDataStream stream_1868(vch_1868, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1868;
stream_1868 >> txHist_1868;

if(block.vtx[0]->GetHash() == txHist_1868.GetHash() && nHeight == 1263366) {
return true;
}
unsigned char ch_1869[] = { 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x20, 0x03, 0x05, 0x47, 0x13, 0x04, 0x7d, 0xc7, 0x34, 0x5b, 0x08, 0x7f, 0xff, 0xff, 0xec, 0xf3, 0x07, 0x00, 0x00, 0x0d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x61, 0x74, 0x75, 0x6d, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x6a, 0x24, 0xaa, 0x21, 0xa9, 0xed, 0x64, 0x29, 0xa5, 0xb0, 0x15, 0xbd, 0x00, 0x2a, 0x7a, 0x14, 0x7b, 0xd5, 0x3e, 0x82, 0x5e, 0x71, 0x44, 0xfb, 0xbe, 0x96, 0xae, 0x31, 0xa5, 0x47, 0x54, 0x0b, 0xfb, 0x05, 0xa2, 0xf8, 0xe5, 0xd0, 0xf0, 0x5e, 0x60, 0xda, 0x70, 0x00, 0x00, 0x00, 0x19, 0x76, 0xa9, 0x14, 0x45, 0x50, 0xf5, 0x76, 0x21, 0x94, 0xc6, 0x92, 0x4c, 0xd0, 0x58, 0xce, 0x8a, 0x47, 0x11, 0xec, 0x6e, 0x9b, 0x4b, 0xea, 0x88, 0xac, 0x00, 0x00, 0x00, 0x00,  0x00};
std::vector<unsigned char> vch_1869(ch_1869, ch_1869 + sizeof(ch_1869) -1);
CDataStream stream_1869(vch_1869, SER_DISK, CLIENT_VERSION);
CMutableTransaction txHist_1869;
stream_1869 >> txHist_1869;

if(block.vtx[0]->GetHash() == txHist_1869.GetHash() && nHeight == 1263365) {
return true;
}


return false;
}


